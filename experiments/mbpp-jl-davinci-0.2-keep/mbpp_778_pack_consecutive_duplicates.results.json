{
  "name": "mbpp_778_pack_consecutive_duplicates",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_778_pack_consecutive_duplicates.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbzn4ik_c.jl:11\nin expression starting at /tmp/tmpbzn4ik_c.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists with consecutive duplicates packed into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Test Failed at /tmp/tmpykpzod1k.jl:27\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpykpzod1k.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpykpzod1k.jl:26\ntest set: Test Failed at /tmp/tmpykpzod1k.jl:28\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpykpzod1k.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpykpzod1k.jl:26\ntest set: Test Failed at /tmp/tmpykpzod1k.jl:29\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpykpzod1k.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpykpzod1k.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tfunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmp_5hvkopa.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_5hvkopa.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_5hvkopa.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_5hvkopa.jl:26\ntest set: Error During Test at /tmp/tmp_5hvkopa.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_5hvkopa.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_5hvkopa.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_5hvkopa.jl:26\ntest set: Error During Test at /tmp/tmp_5hvkopa.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp_5hvkopa.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp_5hvkopa.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpmw5gmug_.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmw5gmug_.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmw5gmug_.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmw5gmug_.jl:26\ntest set: Error During Test at /tmp/tmpmw5gmug_.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmw5gmug_.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmw5gmug_.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmw5gmug_.jl:26\ntest set: Error During Test at /tmp/tmpmw5gmug_.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpmw5gmug_.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmw5gmug_.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp7fwi54h2.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fwi54h2.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fwi54h2.jl:21\ntest set: Test Failed at /tmp/tmp7fwi54h2.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fwi54h2.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fwi54h2.jl:21\ntest set: Test Failed at /tmp/tmp7fwi54h2.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7fwi54h2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7fwi54h2.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7fwi54h2.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Test Failed at /tmp/tmp1fney5uu.jl:25\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fney5uu.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fney5uu.jl:24\ntest set: Test Failed at /tmp/tmp1fney5uu.jl:26\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fney5uu.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fney5uu.jl:24\ntest set: Test Failed at /tmp/tmp1fney5uu.jl:27\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fney5uu.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fney5uu.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1fney5uu.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = [list1[i]]\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpofn5asig.jl:23\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpofn5asig.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpofn5asig.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpofn5asig.jl:22\ntest set: Error During Test at /tmp/tmpofn5asig.jl:24\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpofn5asig.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpofn5asig.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpofn5asig.jl:22\ntest set: Error During Test at /tmp/tmpofn5asig.jl:25\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpofn5asig.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpofn5asig.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp8yu_iflh.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yu_iflh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmp0mtcmz_a.jl:27\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[4, 4], Any[5], Any[6, 6, 6], Any[6, 6, 6], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mtcmz_a.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mtcmz_a.jl:26\ntest set: Test Failed at /tmp/tmp0mtcmz_a.jl:28\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[18, 18], Any[17], Any[26, 26], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mtcmz_a.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mtcmz_a.jl:26\ntest set: Test Failed at /tmp/tmp0mtcmz_a.jl:29\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mtcmz_a.jl:29 [inlined]\n [3] macro",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmptcjx_2go.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpzjhu0e00.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjhu0e00.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjhu0e00.jl:23\ntest set: Test Failed at /tmp/tmpzjhu0e00.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjhu0e00.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjhu0e00.jl:23\ntest set: Test Failed at /tmp/tmpzjhu0e00.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjhu0e00.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist3 = [i]\n\t\t\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0z6v19uk.jl:11\nin expression starting at /tmp/tmp0z6v19uk.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists with consecutive duplicates packed into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmpqzzhaw_i.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpqzzhaw_i.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqzzhaw_i.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqzzhaw_i.jl:26\ntest set: Error During Test at /tmp/tmpqzzhaw_i.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpqzzhaw_i.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqzzhaw_i.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqzzhaw_i.jl:26\ntest set: Error During Test at /tmp/tmpqzzhaw_i.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpqzzhaw_i.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmpmunqblmj.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmunqblmj.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmunqblmj.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmunqblmj.jl:26\ntest set: Error During Test at /tmp/tmpmunqblmj.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmunqblmj.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmunqblmj.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmunqblmj.jl:26\ntest set: Error During Test at /tmp/tmpmunqblmj.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpmunqblmj.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmptcjx_2go.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\tlist3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpqhn36jmz.jl:27\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhn36jmz.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhn36jmz.jl:26\ntest set: Test Failed at /tmp/tmpqhn36jmz.jl:28\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhn36jmz.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhn36jmz.jl:26\ntest set: Test Failed at /tmp/tmpqhn36jmz.jl:29\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhn36jmz.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbzn4ik_c.jl:11\nin expression starting at /tmp/tmpbzn4ik_c.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tlist3[end] = list2\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tif list3 != []:\n\t\t\t\tlist2.append(list3)\n\t\t\tlist3 = [i]\n\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphaun2gu4.jl:11\nin expression starting at /tmp/tmphaun2gu4.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmpn_746eb5.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpn_746eb5.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn_746eb5.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn_746eb5.jl:26\ntest set: Error During Test at /tmp/tmpn_746eb5.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpn_746eb5.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn_746eb5.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn_746eb5.jl:26\ntest set: Error During Test at /tmp/tmpn_746eb5.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpn_746eb5.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = [i]\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmp5xro1854.jl:23\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], [0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xro1854.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xro1854.jl:22\ntest set: Test Failed at /tmp/tmp5xro1854.jl:24\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], [10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xro1854.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xro1854.jl:22\ntest set: Test Failed at /tmp/tmp5xro1854.jl:25\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], [\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xro1854.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xro1854.jl:22\nTest Summary: | Fail  Tota",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist3 = [i]\n\t\t\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl6uvk465.jl:11\nin expression starting at /tmp/tmpl6uvk465.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in range(length(list1)):\n\t\tif i == 0\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprtrfvsr_.jl:11\nin expression starting at /tmp/tmprtrfvsr_.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpzjhu0e00.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjhu0e00.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjhu0e00.jl:23\ntest set: Test Failed at /tmp/tmpzjhu0e00.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjhu0e00.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpzjhu0e00.jl:23\ntest set: Test Failed at /tmp/tmpzjhu0e00.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpzjhu0e00.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmpn_746eb5.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpn_746eb5.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn_746eb5.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn_746eb5.jl:26\ntest set: Error During Test at /tmp/tmpn_746eb5.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpn_746eb5.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpn_746eb5.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpn_746eb5.jl:26\ntest set: Error During Test at /tmp/tmpn_746eb5.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpn_746eb5.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2 = filter(x -> x != [], list2)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbzn4ik_c.jl:11\nin expression starting at /tmp/tmpbzn4ik_c.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Test Failed at /tmp/tmp1fney5uu.jl:25\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fney5uu.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fney5uu.jl:24\ntest set: Test Failed at /tmp/tmp1fney5uu.jl:26\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fney5uu.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fney5uu.jl:24\ntest set: Test Failed at /tmp/tmp1fney5uu.jl:27\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fney5uu.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fney5uu.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1fney5uu.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tif length(list3) > 0\n\t\t\t\tpush!(list2, list3)\n\t\t\t\tlist3 = []\n\t\t\tend\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmpjbu1ta5a.jl:29\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpjbu1ta5a.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjbu1ta5a.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjbu1ta5a.jl:28\ntest set: Error During Test at /tmp/tmpjbu1ta5a.jl:30\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpjbu1ta5a.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjbu1ta5a.jl:30 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjbu1ta5a.jl:28\ntest set: Error During Test at /tmp/tmpjbu1ta5a.jl:31\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpjbu1ta5a.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tpack_consecutive_duplicates(list1::Any)::Any\n\t\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] != list1[i-1]\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\tend\n\t\tpush!(list3, list1[i])\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmphqyq5mn3.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmphqyq5mn3.jl:13\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphqyq5mn3.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmphqyq5mn3.jl:26\ntest set: Error During Test at /tmp/tmphqyq5mn3.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmphqyq5mn3.jl:13\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphqyq5mn3.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmphqyq5mn3.jl:26\ntest set: Error During Test at /tmp/tmphqyq5mn3.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmphqyq5mn3.jl:13\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function packs consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmpmunqblmj.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmunqblmj.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmunqblmj.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmunqblmj.jl:26\ntest set: Error During Test at /tmp/tmpmunqblmj.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmunqblmj.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmunqblmj.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmunqblmj.jl:26\ntest set: Error During Test at /tmp/tmpmunqblmj.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpmunqblmj.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp8yu_iflh.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yu_iflh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp709xj4w0.jl:11\nin expression starting at /tmp/tmp709xj4w0.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist3 = [i]\n\t\t\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl6uvk465.jl:11\nin expression starting at /tmp/tmpl6uvk465.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpmw5gmug_.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmw5gmug_.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmw5gmug_.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmw5gmug_.jl:26\ntest set: Error During Test at /tmp/tmpmw5gmug_.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpmw5gmug_.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpmw5gmug_.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpmw5gmug_.jl:26\ntest set: Error During Test at /tmp/tmpmw5gmug_.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpmw5gmug_.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmw5gmug_.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmptcjx_2go.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmppam63fsu.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppam63fsu.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppam63fsu.jl:26\ntest set: Error During Test at /tmp/tmppam63fsu.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppam63fsu.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppam63fsu.jl:26\ntest set: Error During Test at /tmp/tmppam63fsu.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmp7ck9scfm.jl:25\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ck9scfm.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ck9scfm.jl:24\ntest set: Test Failed at /tmp/tmp7ck9scfm.jl:26\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ck9scfm.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ck9scfm.jl:24\ntest set: Test Failed at /tmp/tmp7ck9scfm.jl:27\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ck9scfm.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ck9scfm.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list2:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist2.append(i)\n\t\t\tlist3.append([i])\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123468,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpecmkhlat.jl:11\nin expression starting at /tmp/tmpecmkhlat.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists containing consecutive duplicates.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmp8eivii3k.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp8eivii3k.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8eivii3k.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8eivii3k.jl:26\ntest set: Error During Test at /tmp/tmp8eivii3k.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp8eivii3k.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8eivii3k.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8eivii3k.jl:26\ntest set: Error During Test at /tmp/tmp8eivii3k.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp8eivii3k.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\ttemp = []\n\tfor i in list1\n\t\tif i in temp\n\t\t\tcontinue\n\t\telse\n\t\t\ttemp.append(i)\n\t\t\tlist2.append(list1.count(i))\n\tend\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123468,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpugwoe0t_.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpugwoe0t_.jl:1\nin expression starting at /tmp/tmpugwoe0t_.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbzn4ik_c.jl:11\nin expression starting at /tmp/tmpbzn4ik_c.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists containing consecutive duplicates.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp7dt0ijiw.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp7dt0ijiw.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7dt0ijiw.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7dt0ijiw.jl:26\ntest set: Error During Test at /tmp/tmp7dt0ijiw.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp7dt0ijiw.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp7dt0ijiw.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp7dt0ijiw.jl:26\ntest set: Error During Test at /tmp/tmp7dt0ijiw.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp7dt0ijiw.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif length(list2) == 0\n\t\t\tpush!(list2, i)\n\t\telseif list2[end] == i\n\t\t\tpush!(list2, i)\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, i)\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123468,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list3:\n\t\t\tlist3.append(i)\n\t\t\tlist2.append([i])\n\t\telse:\n\t\t\tlist2[list3.index(i)].append(i)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp709xj4w0.jl:11\nin expression starting at /tmp/tmp709xj4w0.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmp7ck9scfm.jl:25\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ck9scfm.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ck9scfm.jl:24\ntest set: Test Failed at /tmp/tmp7ck9scfm.jl:26\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ck9scfm.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ck9scfm.jl:24\ntest set: Test Failed at /tmp/tmp7ck9scfm.jl:27\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ck9scfm.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ck9scfm.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp5tbv4me7.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5tbv4me7.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5tbv4me7.jl:26\ntest set: Error During Test at /tmp/tmp5tbv4me7.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5tbv4me7.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5tbv4me7.jl:26\ntest set: Error During Test at /tmp/tmp5tbv4me7.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tlist3 = append!(list3, i)\n\t\telse\n\t\t\tlist2 = append!(list2, i)\n\t\t\tlist3 = append!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Test Failed at /tmp/tmpc4v3611n.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4v3611n.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4v3611n.jl:21\ntest set: Test Failed at /tmp/tmpc4v3611n.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4v3611n.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4v3611n.jl:21\ntest set: Test Failed at /tmp/tmpc4v3611n.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4v3611n.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4v3611n.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp_rbigxl1.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_rbigxl1.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_rbigxl1.jl:23\ntest set: Error During Test at /tmp/tmp_rbigxl1.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_rbigxl1.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_rbigxl1.jl:23\ntest set: Error During Test at /tmp/tmp_rbigxl1.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list4, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list4, list3)\n\treturn list4\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Test Failed at /tmp/tmprugxdvc3.jl:26\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9, 4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprugxdvc3.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprugxdvc3.jl:25\ntest set: Test Failed at /tmp/tmprugxdvc3.jl:27\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26, 17, 18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprugxdvc3.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprugxdvc3.jl:25\ntest set: Test Failed at /tmp/tmprugxdvc3.jl:28\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprugxdvc3.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n  ",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in range(1,length(list1)):\n\t\tif list1[i] == list1[i-1]:\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpw27ijwqu.jl:11\nin expression starting at /tmp/tmpw27ijwqu.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tlist3 = [i]\n\t\t\tpush!(list2, list3)\n\t\telse\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123473,
      "stdout": "test set: Test Failed at /tmp/tmpip5z4o68.jl:25\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0, 1, 2, 3, 4], [4, 5, 6], [6], [6, 7, 8, 9, 4], [4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpip5z4o68.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpip5z4o68.jl:24\ntest set: Test Failed at /tmp/tmpip5z4o68.jl:26\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10, 15, 19, 18], [18, 17, 26], [26, 17, 18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpip5z4o68.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpip5z4o68.jl:24\ntest set: Test Failed at /tmp/tmpip5z4o68.jl:27\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\", \"b\", \"c\", \"d\"], [\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpip5z4o68.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpip5z4o68.jl:24\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tlist3 = append!(list3, i)\n\t\telse\n\t\t\tlist2 = append!(list2, list3)\n\t\t\tlist3 = [i]\n\t\tend\n\tend\n\tlist2 = append!(list2, list3)\n\tlist2 = list2[2:end]\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp9x1pg5ml.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x1pg5ml.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x1pg5ml.jl:23\ntest set: Test Failed at /tmp/tmp9x1pg5ml.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9x1pg5ml.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9x1pg5ml.jl:23\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tlist2.append(i)\n\t\telse\n\t\t\tlist3.append(list2)\n\t\t\tlist2 = []\n\t\t\tlist2.append(i)\n\t\tend\n\tend\n\tlist3.append(list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmprbsnv70t.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  type Array has no field append\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmprbsnv70t.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmprbsnv70t.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmprbsnv70t.jl:26\ntest set: Error During Test at /tmp/tmprbsnv70t.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  type Array has no field append\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmprbsnv70t.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmprbsnv70t.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmprbsnv70t.jl:26\ntest set: Error During Test at /tmp/tmprbsnv70t.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  type Array has no field append\n  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmprbsnv70t.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tm",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmprbsnv70t.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tlist3 = append!(list3, i)\n\t\telse\n\t\t\tlist2 = append!(list2, i)\n\t\t\tlist3 = append!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Test Failed at /tmp/tmpc4v3611n.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4v3611n.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4v3611n.jl:21\ntest set: Test Failed at /tmp/tmpc4v3611n.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4v3611n.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4v3611n.jl:21\ntest set: Test Failed at /tmp/tmpc4v3611n.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc4v3611n.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc4v3611n.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmp59c1090u.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp59c1090u.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp59c1090u.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp59c1090u.jl:26\ntest set: Error During Test at /tmp/tmp59c1090u.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp59c1090u.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp59c1090u.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp59c1090u.jl:26\ntest set: Error During Test at /tmp/tmp59c1090u.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp59c1090u.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp_rbigxl1.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_rbigxl1.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_rbigxl1.jl:23\ntest set: Error During Test at /tmp/tmp_rbigxl1.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_rbigxl1.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_rbigxl1.jl:23\ntest set: Error During Test at /tmp/tmp_rbigxl1.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists with consecutive duplicates\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmptmrft148.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmptmrft148.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmrft148.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmrft148.jl:26\ntest set: Error During Test at /tmp/tmptmrft148.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmptmrft148.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmptmrft148.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmptmrft148.jl:26\ntest set: Error During Test at /tmp/tmptmrft148.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmptmrft148.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2, i)\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, i)\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp0dzusznb.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dzusznb.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dzusznb.jl:23\ntest set: Test Failed at /tmp/tmp0dzusznb.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dzusznb.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dzusznb.jl:23\ntest set: Test Failed at /tmp/tmp0dzusznb.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dzusznb.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist3 = [i]\n\t\t\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl6uvk465.jl:11\nin expression starting at /tmp/tmpl6uvk465.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2,list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3,list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2,list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123466,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmpikkpha4x.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpikkpha4x.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpikkpha4x.jl:26\ntest set: Error During Test at /tmp/tmpikkpha4x.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpikkpha4x.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpikkpha4x.jl:26\ntest set: Error During Test at /tmp/tmpikkpha4x.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmpec1rnciz.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpec1rnciz.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpec1rnciz.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpec1rnciz.jl:26\ntest set: Error During Test at /tmp/tmpec1rnciz.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpec1rnciz.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpec1rnciz.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpec1rnciz.jl:26\ntest set: Error During Test at /tmp/tmpec1rnciz.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpec1rnciz.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp5tbv4me7.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5tbv4me7.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5tbv4me7.jl:26\ntest set: Error During Test at /tmp/tmp5tbv4me7.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5tbv4me7.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5tbv4me7.jl:26\ntest set: Error During Test at /tmp/tmp5tbv4me7.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif list3 == []\n\t\t\tpush!(list3,i)\n\t\telseif list3[end] == i\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp6xy92tk4.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6xy92tk4.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp6xy92tk4.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6xy92tk4.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif length(list3) == 0\n\t\t\tpush!(list3, i)\n\t\telseif list3[end] == i\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp6xy92tk4.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6xy92tk4.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in range(length(list1)):\n\t\tif i == 1\n\t\t\tlist3 = [list1[i]]\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = [list1[i]]\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1seb5ubh.jl:11\nin expression starting at /tmp/tmp1seb5ubh.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2=[]\n\tlist3=[]\n\tfor i in 1:length(list1)\n\t\tif list1[i]==list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3=[]\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmphrienyim.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmphrienyim.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphrienyim.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmphrienyim.jl:26\ntest set: Error During Test at /tmp/tmphrienyim.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmphrienyim.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphrienyim.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmphrienyim.jl:26\ntest set: Error During Test at /tmp/tmphrienyim.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmphrienyim.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist3 = [i]\n\t\t\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl6uvk465.jl:11\nin expression starting at /tmp/tmpl6uvk465.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmpjqfkw8ck.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpjqfkw8ck.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjqfkw8ck.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjqfkw8ck.jl:23\ntest set: Error During Test at /tmp/tmpjqfkw8ck.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpjqfkw8ck.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpjqfkw8ck.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpjqfkw8ck.jl:23\ntest set: Error During Test at /tmp/tmpjqfkw8ck.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpjqfkw8ck.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\telse\n\t\t\tpush!(list2,list1[i])\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123475,
      "stdout": "test set: Test Failed at /tmp/tmpfmgztjo9.jl:27\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0, 1], Any[0, 0, 1], Any[0, 0, 1], Any[2], Any[3], Any[4], Any[4, 5], Any[4, 5], Any[6], Any[6, 6, 7], Any[6, 6, 7], Any[6, 6, 7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmgztjo9.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmgztjo9.jl:26\ntest set: Test Failed at /tmp/tmpfmgztjo9.jl:28\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10, 15], Any[10, 10, 15], Any[10, 10, 15], Any[19], Any[18], Any[18, 17], Any[18, 17], Any[26], Any[26, 17], Any[26, 17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmgztjo9.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfmgztjo9.jl:26\ntest set: Test Failed at /tmp/tmpfmgztjo9.jl:29\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\", \"b\"], Any[\"a\", \"a\", \"b\"], Any[\"a\", \"a\", \"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfmg",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfmgztjo9.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp8yu_iflh.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yu_iflh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123475,
      "stdout": "test set: Test Failed at /tmp/tmptmbmsr8y.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptmbmsr8y.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptmbmsr8y.jl:23\ntest set: Test Failed at /tmp/tmptmbmsr8y.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptmbmsr8y.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptmbmsr8y.jl:23\ntest set: Test Failed at /tmp/tmptmbmsr8y.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptmbmsr8y.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptmbmsr8y.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmp0mtcmz_a.jl:27\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[4, 4], Any[5], Any[6, 6, 6], Any[6, 6, 6], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mtcmz_a.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mtcmz_a.jl:26\ntest set: Test Failed at /tmp/tmp0mtcmz_a.jl:28\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[18, 18], Any[17], Any[26, 26], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mtcmz_a.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0mtcmz_a.jl:26\ntest set: Test Failed at /tmp/tmp0mtcmz_a.jl:29\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0mtcmz_a.jl:29 [inlined]\n [3] macro",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif list3 == []\n\t\t\tpush!(list3, i)\n\t\telseif list3[end] == i\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp8yu_iflh.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yu_iflh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i in list3:\n\t\t\tlist3.append(i)\n\t\telse:\n\t\t\tlist3 = [i]\n\t\t\tlist2.append(list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123467,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl6uvk465.jl:11\nin expression starting at /tmp/tmpl6uvk465.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists containing consecutive duplicates.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmp8eivii3k.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp8eivii3k.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8eivii3k.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8eivii3k.jl:26\ntest set: Error During Test at /tmp/tmp8eivii3k.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp8eivii3k.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp8eivii3k.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp8eivii3k.jl:26\ntest set: Error During Test at /tmp/tmp8eivii3k.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp8eivii3k.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmptcjx_2go.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptcjx_2go.jl:23\ntest set: Test Failed at /tmp/tmptcjx_2go.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptcjx_2go.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in range(length(list1)):\n\t\tif i == 0\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp32kypgn6.jl:11\nin expression starting at /tmp/tmp32kypgn6.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123475,
      "stdout": "test set: Error During Test at /tmp/tmpzugf2obw.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpzugf2obw.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzugf2obw.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzugf2obw.jl:26\ntest set: Error During Test at /tmp/tmpzugf2obw.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpzugf2obw.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzugf2obw.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzugf2obw.jl:26\ntest set: Error During Test at /tmp/tmpzugf2obw.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpzugf2obw.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzugf2obw.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp6xy92tk4.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6xy92tk4.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123475,
      "stdout": "test set: Error During Test at /tmp/tmp15iwmb3g.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp15iwmb3g.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp15iwmb3g.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp15iwmb3g.jl:23\ntest set: Error During Test at /tmp/tmp15iwmb3g.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp15iwmb3g.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp15iwmb3g.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp15iwmb3g.jl:23\ntest set: Error During Test at /tmp/tmp15iwmb3g.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp15iwmb3g.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp15iwmb3g.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510443,
      "stdout": "test set: Error During Test at /tmp/tmpsft1738w.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpsft1738w.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpsft1738w.jl:23\ntest set: Error During Test at /tmp/tmpsft1738w.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpsft1738w.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpsft1738w.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmpikkpha4x.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpikkpha4x.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpikkpha4x.jl:26\ntest set: Error During Test at /tmp/tmpikkpha4x.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpikkpha4x.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpikkpha4x.jl:26\ntest set: Error During Test at /tmp/tmpikkpha4x.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list2:\n\t\t\tlist2.append(i)\n\t\t\tlist3.append([i])\n\t\telse:\n\t\t\tlist3[list2.index(i)].append(i)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm05llnqt.jl:11\nin expression starting at /tmp/tmpm05llnqt.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\t\tpush!(list3, list2)\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, i)\n\t\t\tpush!(list3, [i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp_hry2g6d.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\ntest set: Test Failed at /tmp/tmp_hry2g6d.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_hry2g6d.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_hry2g6d.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_hry2g6d.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2, i)\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, i)\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp0dzusznb.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dzusznb.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dzusznb.jl:23\ntest set: Test Failed at /tmp/tmp0dzusznb.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dzusznb.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0dzusznb.jl:23\ntest set: Test Failed at /tmp/tmp0dzusznb.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0dzusznb.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3, i)\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, i)\n\t\tend\n\tend\n\tpush!(list2, list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmpdbanzkdt.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdbanzkdt.jl:23\ntest set: Test Failed at /tmp/tmpdbanzkdt.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdbanzkdt.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdbanzkdt.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\tlist3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123476,
      "stdout": "test set: Error During Test at /tmp/tmp0zyjg6ct.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp0zyjg6ct.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0zyjg6ct.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0zyjg6ct.jl:26\ntest set: Error During Test at /tmp/tmp0zyjg6ct.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp0zyjg6ct.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp0zyjg6ct.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp0zyjg6ct.jl:26\ntest set: Error During Test at /tmp/tmp0zyjg6ct.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp0zyjg6ct.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0zyjg6ct.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list3, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tlist4 = []\n\tlist5 = []\n\tlist6 = []\n\tlist7 = []\n\tlist8 = []\n\tlist9 = []\n\tlist10 = []\n\tlist11 = []\n\tlist12 = []\n\tlist13 = []\n\tlist14 = []\n\tlist15 = []\n\tlist16 = []\n\tlist17 = []\n\tlist18 = []\n\tlist19 = []\n\tlist20 = []\n\tlist21 = []\n\tlist22 = []\n\tlist23 = []\n\tlist24 = []\n\tlist25 = []\n\tlist26 = []\n\tlist27 = []\n\tlist28 = []\n\tlist29 = []\n\tlist30 = []\n\tlist31 = []\n\tlist32 = []\n\tlist33 = []\n\tlist34 = []\n\tlist35 = []\n\tlist36 = []\n\tlist37 = []\n\tlist38 = []\n\tlist39 = []\n\tlist40 = []\n\tlist41 = []\n\tlist42 = []\n\tlist43 = []\n\tlist44 = []\n\tlist45 = []\n\tlist46 = []\n\tlist47 = []\n\tlist48 = []\n\tlist49 = []\n\tlist50 = []\n\tlist51 = []\n\tlist52 = []\n\tlist53 = []\n\tlist54 = []\n\tlist55 = []\n\tlist56 = []\n\tlist57 = []\n\tlist58 = []\n\tlist59 = []\n\tlist60 = []\n\tlist61 = []\n\tlist62 = []\n\tlist63 = []\n\tlist64 = []\n\tlist65 = []\n\tlist66 = []\n\tlist67 = []\n\tlist68 = []\n\tlist69 = []\n\tlist70 = []\n\tlist71 = []\n\tlist72 = []\n\tlist73 = []\n\tlist74 = []\n\tlist75 = []\n\tlist76 = []\n\tlist77 = []\n\tlist78 = []\n\tlist79 = []\n\tlist80 = []\n\tlist81 = []\n\tlist82 = []\n\tlist\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpux9vhlof.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpux9vhlof.jl:1\nin expression starting at /tmp/tmpux9vhlof.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp8yu_iflh.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yu_iflh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmppam63fsu.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppam63fsu.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppam63fsu.jl:26\ntest set: Error During Test at /tmp/tmppam63fsu.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppam63fsu.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppam63fsu.jl:26\ntest set: Error During Test at /tmp/tmppam63fsu.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif length(list2) == 0\n\t\t\tpush!(list2, i)\n\t\telseif list2[end] == i\n\t\t\tpush!(list2, i)\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, i)\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123468,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,i)\n\t\t\tpush!(list3,[i])\n\t\tend\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Test Failed at /tmp/tmp6xy92tk4.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[[0], 0, [1], [2], [3], [4], 4, [5], [6], 6, 6, [7], [8], [9], 4, 4] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[[10], 10, [15], [19], [18], 18, [17], [26], 26, 17, 18, 10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\ntest set: Test Failed at /tmp/tmp6xy92tk4.jl:24\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[[\"a\"], \"a\", [\"b\"], [\"c\"], [\"d\"], \"d\"] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6xy92tk4.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6xy92tk4.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6xy92tk4.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tif list1[i] == list1[i-1]\n\t\t\t\tpush!(list2, list1[i])\n\t\t\telse\n\t\t\t\tpush!(list3, list2)\n\t\t\t\tlist2 = []\n\t\t\t\tpush!(list2, list1[i])\n\t\t\tend\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "test set: Error During Test at /tmp/tmpikkpha4x.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpikkpha4x.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpikkpha4x.jl:26\ntest set: Error During Test at /tmp/tmpikkpha4x.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpikkpha4x.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpikkpha4x.jl:26\ntest set: Error During Test at /tmp/tmpikkpha4x.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpikkpha4x.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510440,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as input and returns a list of lists containing consecutive duplicates of the elements of the input list.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123476,
      "stdout": "test set: Error During Test at /tmp/tmpig8p8ov3.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpig8p8ov3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpig8p8ov3.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpig8p8ov3.jl:26\ntest set: Error During Test at /tmp/tmpig8p8ov3.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpig8p8ov3.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpig8p8ov3.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpig8p8ov3.jl:26\ntest set: Error During Test at /tmp/tmpig8p8ov3.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpig8p8ov3.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpig8p8ov3.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp_rbigxl1.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_rbigxl1.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_rbigxl1.jl:23\ntest set: Error During Test at /tmp/tmp_rbigxl1.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp_rbigxl1.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp_rbigxl1.jl:23\ntest set: Error During Test at /tmp/tmp_rbigxl1.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp_rbigxl1.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in list1:\n\t\tif i not in list2:\n\t\t\tlist2.append(i)\n\t\t\tlist3.append([i])\n\t\telse:\n\t\t\tlist3[list2.index(i)].append(i)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: line break in \":\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpm05llnqt.jl:11\nin expression starting at /tmp/tmpm05llnqt.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3, list1[i])\n\t\telse\n\t\t\tpush!(list2, list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3, list1[i])\n\t\tend\n\tend\n\tpush!(list2, list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123471,
      "stdout": "test set: Error During Test at /tmp/tmpfwcotfp9.jl:24\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:25\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpfwcotfp9.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpfwcotfp9.jl:23\ntest set: Error During Test at /tmp/tmpfwcotfp9.jl:26\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmpfwcotfp9.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2,list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2,list1[i])\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,list1[i])\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510441,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif i == 1\n\t\t\tpush!(list2, list1[i])\n\t\telseif list1[i] == list1[i-1]\n\t\t\tpush!(list2, list1[i])\n\t\telse\n\t\t\tpush!(list3, list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2, list1[i])\n\t\tend\n\tend\n\tpush!(list3, list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123474,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list2\n\t\t\tlist3 = [i]\n\t\t\tlist2 = list2 + list3\n\t\telse\n\t\t\tlist2 = [i]\n\t\tend\n\tend\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123478,
      "stdout": "test set: Test Failed at /tmp/tmpy1yi1k42.jl:22\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: [8] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1yi1k42.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1yi1k42.jl:21\ntest set: Test Failed at /tmp/tmpy1yi1k42.jl:23\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: [10] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy1yi1k42.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy1yi1k42.jl:21\ntest set: Error During Test at /tmp/tmpy1yi1k42.jl:24\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  MethodError: no method matching +(::String, ::String)\n  Closest candidates are:\n    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at /home/a.guha/.conda/envs/polyglot/share/julia/base/operators.jl:655\n  Stacktrace:\n    [1] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n    [2] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [3] getindex\n      @ ./broadcast.jl:597 [inlined]\n    [4] copy\n      @ ./broadcast.jl:899 [inlined]\n    [5] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [6] broadcast_preserving_zero_d\n      @ ./broadcast.jl:849 [inlined]\n    [7] +(A:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpy1yi1k42.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tThis function takes a list as an argument and returns a list of lists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Error During Test at /tmp/tmppam63fsu.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppam63fsu.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppam63fsu.jl:26\ntest set: Error During Test at /tmp/tmppam63fsu.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppam63fsu.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppam63fsu.jl:26\ntest set: Error During Test at /tmp/tmppam63fsu.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmppam63fsu.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tpush!(list3,i)\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,i)\n\t\tend\n\tend\n\tpush!(list2,list3)\n\tlist2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1665510442,
      "stdout": "test set: Test Failed at /tmp/tmp8yu_iflh.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[], Any[0, 0], Any[1], Any[2], Any[3], Any[4, 4], Any[5], Any[6, 6, 6], Any[7], Any[8], Any[9], Any[4, 4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[], Any[10, 10], Any[15], Any[19], Any[18, 18], Any[17], Any[26, 26], Any[17], Any[18], Any[10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8yu_iflh.jl:23\ntest set: Test Failed at /tmp/tmp8yu_iflh.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[], Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8yu_iflh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8yu_iflh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\t\"\"\"\n\tFunction to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\n\tlist2 = []\n\tlist3 = []\n\tfor i in 1:length(list1)\n\t\tif list1[i] == list1[i-1]\n\t\t\tpush!(list3,list1[i])\n\t\telse\n\t\t\tpush!(list2,list3)\n\t\t\tlist3 = []\n\t\t\tpush!(list3,list1[i])\n\t\tend\n\tend\n\tpush!(list2,list3)\n\treturn list2\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123472,
      "stdout": "test set: Error During Test at /tmp/tmp5tbv4me7.jl:27\n  Test threw exception\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n  BoundsError: attempt to access 16-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5tbv4me7.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5tbv4me7.jl:26\ntest set: Error During Test at /tmp/tmp5tbv4me7.jl:28\n  Test threw exception\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n  BoundsError: attempt to access 12-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{Int64})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5tbv4me7.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5tbv4me7.jl:26\ntest set: Error During Test at /tmp/tmp5tbv4me7.jl:29\n  Test threw exception\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n  BoundsError: attempt to access 6-element Vector{String} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] pack_consecutive_duplicates(list1::Vector{String})\n     @ Main /tmp/tmp5tbv4me7.jl:11\n   [3] macro expansion\n     @ /home/a.guh",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i == list1[1]\n\t\t\tpush!(list2,i)\n\t\telse\n\t\t\tpush!(list3,list2)\n\t\t\tlist2 = []\n\t\t\tpush!(list2,i)\n\t\tend\n\tend\n\tpush!(list3,list2)\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123469,
      "stdout": "test set: Test Failed at /tmp/tmpp1vqcnk2.jl:24\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[Any[0, 0], Any[1], Any[2], Any[3], Any[4], Any[4], Any[5], Any[6], Any[6], Any[6], Any[7], Any[8], Any[9], Any[4], Any[4]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:25\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[Any[10, 10], Any[15], Any[19], Any[18], Any[18], Any[17], Any[26], Any[26], Any[17], Any[18, 10]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp1vqcnk2.jl:23\ntest set: Test Failed at /tmp/tmpp1vqcnk2.jl:26\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[Any[\"a\", \"a\"], Any[\"b\"], Any[\"c\"], Any[\"d\"], Any[\"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp1vqcnk2.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inl",
      "stderr": "ERROR: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to pack consecutive duplicates of a given list elements into sublists.\n\t\"\"\"\nfunction pack_consecutive_duplicates(list1::Any)::Any \n\tlist2 = []\n\tlist3 = []\n\tfor i in list1\n\t\tif i in list3\n\t\t\tcontinue\n\t\tend\n\t\tfor j in list1\n\t\t\tif i == j\n\t\t\t\tpush!(list2,j)\n\t\t\tend\n\t\tend\n\t\tpush!(list3,i)\n\t\tpush!(list3,list2)\n\t\tlist2 = []\n\tend\n\treturn list3\nend\nusing Test\n\n@testset begin\n\ncandidate = pack_consecutive_duplicates;\n\t@test(candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]])\n\t@test(candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]])\n\t@test(candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]])\nend\n",
      "timestamp": 1666123477,
      "stdout": "test set: Test Failed at /tmp/tmp9gsgqlyy.jl:27\n  Expression: candidate([0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4]) == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\n   Evaluated: Any[0, Any[0, 0], 1, Any[1], 2, Any[2], 3, Any[3], 4, Any[4, 4, 4, 4], 5, Any[5], 6, Any[6, 6, 6], 7, Any[7], 8, Any[8], 9, Any[9]] == [[0, 0], [1], [2], [3], [4, 4], [5], [6, 6, 6], [7], [8], [9], [4, 4]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9gsgqlyy.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9gsgqlyy.jl:26\ntest set: Test Failed at /tmp/tmp9gsgqlyy.jl:28\n  Expression: candidate([10, 10, 15, 19, 18, 18, 17, 26, 26, 17, 18, 10]) == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\n   Evaluated: Any[10, Any[10, 10, 10], 15, Any[15], 19, Any[19], 18, Any[18, 18, 18], 17, Any[17, 17], 26, Any[26, 26]] == [[10, 10], [15], [19], [18, 18], [17], [26, 26], [17], [18], [10]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9gsgqlyy.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9gsgqlyy.jl:26\ntest set: Test Failed at /tmp/tmp9gsgqlyy.jl:29\n  Expression: candidate([\"a\", \"a\", \"b\", \"c\", \"d\", \"d\"]) == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\n   Evaluated: Any[\"a\", Any[\"a\", \"a\"], \"b\", Any[\"b\"], \"c\", Any[\"c\"], \"d\", Any[\"d\", \"d\"]] == [[\"a\", \"a\"], [\"b\"], [\"c\"], [\"d\", \"d\"]]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9gsgqlyy.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Te",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9gsgqlyy.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
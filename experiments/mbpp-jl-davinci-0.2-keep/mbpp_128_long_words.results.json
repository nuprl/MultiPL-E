{
  "name": "mbpp_128_long_words",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_128_long_words.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tresult = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(result, word)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFind words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFind words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(w -> length(w) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFind words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\t\tFunction to find words that are longer than n characters from a given list of words.\n\t\t\n\t\tParameters\n\t\t----------\n\t\tn : Int64\n\t\t\tThe number of characters.\n\t\tstr : String\n\t\t\tThe list of words.\n\t\t\n\t\tReturns\n\t\t-------\n\t\tVector{String}\n\t\t\tThe list of words that are longer than n characters.\n\t\"\"\"\n\t\n\twords = split(str)\n\t\n\twords_longer_than_n = []\n\t\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(words_longer_than_n, word)\n\t\tend\n\tend\n\t\n\treturn words_longer_than_n\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n    words = split(str)\n    long_words = []\n    for word in words\n        if length(word) > n\n            push!(long_words, word)\n        end\n    end\n    return long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = filter(x -> length(x) > n, words)\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t# Split the string into words\n\twords = split(str)\n\t# Filter out the words that are longer than n characters\n\tlong_words = filter(x -> length(x) > n, words)\n\t# Return the long words\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\twords_longer_than_n = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(words_longer_than_n, word)\n\t\tend\n\tend\n\treturn words_longer_than_n\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\treturn split(str) |> x -> filter(x -> length(x) > n, x)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFind words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str, \" \")\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tlong_words(n, str)\n\t\n\tFind words that are longer than n characters from a given list of words.\n\t\n\t# Arguments\n\t- `n::Int64`: Number of characters.\n\t- `str::String`: String of words.\n\t\n\t# Example\n\t```julia\n\tjulia> long_words(3, \"The quick brown fox jumps over the lazy dog\")\n\t4-element Array{String,1}:\n\t \"quick\"\n\t \"brown\"\n\t \"jumps\"\n\t \"over\"\n\t```\n\t\"\"\"\n\t\n\twords = split(str)\n\t\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tlong_words(n, str)\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptrt4x4ak.jl:1\nin expression starting at /tmp/tmptrt4x4ak.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tThis function takes a string and an integer as input and returns a vector of strings that are longer than n characters.\n\t\"\"\"\n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n    words = split(str)\n    return filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\tv = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(v, word)\n\t\tend\n\tend\n\treturn v\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t# split the string into words\n\twords = split(str)\n\t# filter the words that are longer than n characters\n\tfilter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t# split string into words\n\twords = split(str)\n\t# filter words that are longer than n characters\n\tlong_words = filter(x -> length(x) > n, words)\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tlong_words(n, str)\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptrt4x4ak.jl:1\nin expression starting at /tmp/tmptrt4x4ak.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFind words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n    words = split(str)\n    return filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124161,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\t\"\"\"\n\tFunction to find words that are longer than n characters from a given list of words.\n\t\"\"\"\n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x->length(x)>n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\tlong_words = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(long_words, word)\n\t\tend\n\tend\n\treturn long_words\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\twords_longer_than_n = []\n\tfor word in words\n\t\tif length(word) > n\n\t\t\tpush!(words_longer_than_n, word)\n\t\tend\n\tend\n\treturn words_longer_than_n\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn [word for word in words if length(word) > n]\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1666124160,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find words that are longer than n characters from a given list of words.\n\t\"\"\"\nfunction long_words(n::Int64, str::String)::Vector{String} \n\twords = split(str)\n\treturn filter(x -> length(x) > n, words)\nend\nusing Test\n\n@testset begin\n\ncandidate = long_words;\n\t@test(candidate(3, \"python is a programming language\") == [\"python\", \"programming\", \"language\"])\n\t@test(candidate(2, \"writing a program\") == [\"writing\", \"program\"])\n\t@test(candidate(5, \"sorting list\") == [\"sorting\"])\nend\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
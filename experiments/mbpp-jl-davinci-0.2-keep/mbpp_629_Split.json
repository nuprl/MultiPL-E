{
  "name": "mbpp_629_Split",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to find even numbers from a list of numbers.\n\t\"\"\"\nfunction Split(list::Vector{Int64})::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_629_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = Split;\n\t@test(candidate([1, 2, 3, 4, 5]) == [2, 4])\n\t@test(candidate([4, 5, 6, 7, 8, 0, 1]) == [4, 6, 8, 0])\n\t@test(candidate([8, 12, 15, 19]) == [8, 12])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\teven_list = []\n\tfor i in list\n\t\tif i%2 == 0\n\t\t\tpush!(even_list,i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\treturn filter(x->x%2==0,list)\nend",
    "    even_list = []\n    for i in list\n        if i % 2 == 0\n            push!(even_list, i)\n        end\n    end\n    return even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\t\"\"\"\n\tThis function takes a list of numbers and returns a list of even numbers.\n\t\"\"\"\n\teven_list = []\n\tfor i in list\n\t\tif i%2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\t\"\"\"\n\tThis function takes a list of numbers as input and returns a list of even numbers.\n\t\"\"\"\n\teven_list = []\n\tfor i in list\n\t\tif i%2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i%2 == 0\n\t\t\tpush!(even_list,i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_numbers = []\n\tfor i in list\n\t\tif i%2 == 0\n\t\t\tpush!(even_numbers,i)\n\t\tend\n\tend\n\treturn even_numbers\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend",
    "\tnew_list = []\n\tfor i in list\n\t\tif i%2 == 0\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\treturn new_list\nend",
    "\teven_list = []\n\tfor i in list\n\t\tif i % 2 == 0\n\t\t\tpush!(even_list, i)\n\t\tend\n\tend\n\treturn even_list\nend"
  ]
}
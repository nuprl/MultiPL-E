{
  "name": "mbpp_90_len_log",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to find the length of the longest word.\n\t\"\"\"\nfunction len_log(list1::Vector{String})::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_90_len_log.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = len_log;\n\t@test(candidate([\"python\", \"PHP\", \"bigdata\"]) == 7)\n\t@test(candidate([\"a\", \"ab\", \"abc\"]) == 3)\n\t@test(candidate([\"small\", \"big\", \"tall\"]) == 5)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tlen_max = 0\n\tfor i in 1:length(list1)\n\t\tif length(list1[i]) > len_max\n\t\t\tlen_max = length(list1[i])\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i) > len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i) > len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tmax_len = 0\n\tfor i in list1\n\t\tif length(i) > max_len\n\t\t\tmax_len = length(i)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax = 0\n\tfor i in list1\n\t\tif length(i) > max\n\t\t\tmax = length(i)\n\t\tend\n\tend\n\treturn max\nend",
    "\tmax_len = 0\n\tfor i in list1\n\t\tif length(i) > max_len\n\t\t\tmax_len = length(i)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i) > len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tmax_len = 0\n\tfor i in list1\n\t\tif length(i) > max_len\n\t\t\tmax_len = length(i)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tlen_log = 0\n\tfor i in list1\n\t\tif length(i) > len_log\n\t\t\tlen_log = length(i)\n\t\tend\n\tend\n\treturn len_log\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i)>len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tmax = 0\n\tfor i in list1\n\t\tif length(i) > max\n\t\t\tmax = length(i)\n\t\tend\n\tend\n\treturn max\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i) > len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i) > len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tlen_max = 0\n\tfor i in 1:length(list1)\n\t\tif length(list1[i]) > len_max\n\t\t\tlen_max = length(list1[i])\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tmax = 0\n\tfor i in list1\n\t\tif length(i) > max\n\t\t\tmax = length(i)\n\t\tend\n\tend\n\treturn max\nend",
    "\tmax_len=0\n\tfor i in list1\n\t\tif length(i)>max_len\n\t\t\tmax_len=length(i)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax=0\n\tfor i in list1\n\t\tif length(i)>max\n\t\t\tmax=length(i)\n\t\tend\n\tend\n\treturn max\nend",
    "\tlen_log = 0\n\tfor i in list1\n\t\tif length(i) > len_log\n\t\t\tlen_log = length(i)\n\t\tend\n\tend\n\treturn len_log\nend",
    "\tlen_max = 0\n\tfor i in list1\n\t\tif length(i) > len_max\n\t\t\tlen_max = length(i)\n\t\tend\n\tend\n\treturn len_max\nend",
    "\tlen = 0\n\tfor i in list1\n\t\tif length(i) > len\n\t\t\tlen = length(i)\n\t\tend\n\tend\n\treturn len\nend"
  ]
}
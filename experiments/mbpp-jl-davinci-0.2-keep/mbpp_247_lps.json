{
  "name": "mbpp_247_lps",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the length of the longest palindromic subsequence in the given string.\n\t\"\"\"\nfunction lps(str::String)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_247_lps.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = lps;\n\t@test(candidate(\"TENS FOR TENS\") == 5)\n\t@test(candidate(\"CARDIO FOR CARDS\") == 7)\n\t@test(candidate(\"PART OF THE JOURNEY IS PART\") == 9)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor k in 3:n\n\t\tfor i in 1:n-k+1\n\t\t\tj = i+k-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i = n-1:-1:1\n\t\tfor j = i+1:n\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor k in 3:n\n\t\tfor i in 1:n-k+1\n\t\t\tj = i+k-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64,n,n)\n\tfor i = 1:n\n\t\tl[i,i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i,j] = l[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tl[i,j] = max(l[i,j-1],l[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1,n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor k in 3:n\n\t\tfor i in 1:n-k+1\n\t\t\tj = i+k-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindromes of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# http://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/\n\t# cl is length of substring\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor k in 3:n\n\t\tfor i in 1:n-k+1\n\t\t\tj = i+k-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindromes of length 1\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# https://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/\n\t# cl is length of substring\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor len in 2:n\n\t\tfor i in 1:(n - len + 1)\n\t\t\tj = i + len - 1\n\t\t\tif str[i] == str[j] && len == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i + 1, j - 1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i + 1, j], dp[i, j - 1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i + l - 1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindromes of length 1\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i + l - 1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor len in 2:n\n\t\tfor i in 1:(n-len+1)\n\t\t\tj = i + len - 1\n\t\t\tif str[i] == str[j] && len == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i + l - 1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64,n,n)\n\tfor i in 1:n\n\t\tL[i,i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i,j] = L[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tL[i,j] = max(L[i,j-1], L[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1,n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64,n,n)\n\tfor i in 1:n\n\t\tL[i,i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i,j] = L[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tL[i,j] = max(L[i,j-1], L[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1,n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l = 2:n\n\t\tfor i = 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor len = 2:n\n\t\tfor i = 1:n-len+1\n\t\t\tj = i + len - 1\n\t\t\tif str[i] == str[j] && len == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\ttable = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\ttable[i, i] = 1\n\tend\n\tfor len in 2:n\n\t\tfor i in 1:(n-len+1)\n\t\t\tj = i+len-1\n\t\t\tif str[i] == str[j] && len == 2\n\t\t\t\ttable[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\ttable[i, j] = 2 + table[i+1, j-1]\n\t\t\telse\n\t\t\t\ttable[i, j] = max(table[i, j-1], table[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn table[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor i in 3:n\n\t\tfor j in 1:n-i+1\n\t\t\tk = j+i-1\n\t\t\tif str[j] == str[k]\n\t\t\t\tdp[j, k] = 2 + dp[j+1, k-1]\n\t\t\telse\n\t\t\t\tdp[j, k] = max(dp[j, k-1], dp[j+1, k])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i + l - 1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\t# Create a table to store results of subproblems\n\tL = zeros(Int64, n, n)",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor len in 2:n\n\t\tfor i in 1:(n-len+1)\n\t\t\tj = i + len - 1\n\t\t\tif str[i] == str[j] && len == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64,n,n)\n\tfor i = 1:n\n\t\tL[i,i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i,j] = L[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tL[i,j] = max(L[i,j-1],L[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1,n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i,i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i,j] = dp[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i,j] = max(dp[i,j-1], dp[i+1,j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1,n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l = 2:n\n\t\tfor i = 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindrome of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# https://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/\n\t# cl is length of substring\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\t# Create a table to store results of subproblems\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindrome of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# https://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/\n\t# cl is length of substring\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindromes of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# https://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/).\n\t# cl is length of substring\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindromes of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor len in 3:n\n\t\tfor i in 1:(n-len+1)\n\t\t\tj = i + len - 1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindromes of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# http://www.geeksforgeeks.org/archives/15553). cl is length of\n\t# substring\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\ttable = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\ttable[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\ttable[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\ttable[i, j] = table[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\ttable[i, j] = max(table[i, j-1], table[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn table[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i = 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor k = 3:n\n\t\tfor i = 1:n-k+1\n\t\t\tj = i+k-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor i in 3:n\n\t\tfor j in 1:n-i+1\n\t\t\tk = j+i-1\n\t\t\tif str[j] == str[k]\n\t\t\t\tdp[j, k] = 2 + dp[j+1, k-1]\n\t\t\telse\n\t\t\t\tdp[j, k] = max(dp[j+1, k], dp[j, k-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64,n,n)\n\tfor i = 1:n\n\t\tdp[i,i] = 1\n\tend\n\tfor l = 2:n\n\t\tfor i = 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i,j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i,j] = dp[i+1,j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i,j] = max(dp[i+1,j],dp[i,j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1,n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor i in 3:n\n\t\tfor j in 1:n-i+1\n\t\t\tk = j+i-1\n\t\t\tif str[j] == str[k]\n\t\t\t\tdp[j, k] = 2 + dp[j+1, k-1]\n\t\t\telse\n\t\t\t\tdp[j, k] = max(dp[j+1, k], dp[j, k-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor i in 3:n\n\t\tfor j in 1:n-i+1\n\t\t\tk = j+i-1\n\t\t\tif str[j] == str[k]\n\t\t\t\tdp[j, k] = 2 + dp[j+1, k-1]\n\t\t\telse\n\t\t\t\tdp[j, k] = max(dp[j+1, k], dp[j, k-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindrome of length 1\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# http://www.geeksforgeeks.org/archives/15553). cl is length of\n\t# substring\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j]);\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor i in 3:n\n\t\tfor j in 1:n-i+1\n\t\t\tif str[j] == str[j+i-1]\n\t\t\t\tdp[j, j+i-1] = 2 + dp[j+1, j+i-2]\n\t\t\telse\n\t\t\t\tdp[j, j+i-1] = max(dp[j, j+i-2], dp[j+1, j+i-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor l in 3:n\n\t\tfor i in 1:n-l+1\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i, j-1], dp[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\t# Create a table to store results of subproblems\n\tL = zeros(Int64, n, n)\n\t# Strings of length 1 are palindrome of length 1\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\t# Build the table. Note that the lower diagonal values of table are\n\t# useless and not filled in the process. The values are filled in a\n\t# manner similar to Matrix Chain Multiplication DP solution (See\n\t# https://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/\n\t# clap clap to the person who posted it)\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor k in 3:n\n\t\tfor i in 1:n-k+1\n\t\t\tj = i+k-1\n\t\t\tif str[i] == str[j]\n\t\t\t\tdp[i, j] = 2 + dp[i+1, j-1]\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tl = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tl[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n-cl+1)\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tl[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tl[i, j] = l[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tl[i, j] = max(l[i, j-1], l[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn l[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor i in 1:n-1\n\t\tif str[i] == str[i+1]\n\t\t\tdp[i, i+1] = 2\n\t\telse\n\t\t\tdp[i, i+1] = 1\n\t\tend\n\tend\n\tfor i in 3:n\n\t\tfor j in 1:n-i+1\n\t\t\tif str[j] == str[j+i-1]\n\t\t\t\tdp[j, j+i-1] = 2 + dp[j+1, j+i-2]\n\t\t\telse\n\t\t\t\tdp[j, j+i-1] = max(dp[j, j+i-2], dp[j+1, j+i-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tdp = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tdp[i, i] = 1\n\tend\n\tfor l in 2:n\n\t\tfor i in 1:(n-l+1)\n\t\t\tj = i+l-1\n\t\t\tif str[i] == str[j] && l == 2\n\t\t\t\tdp[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tdp[i, j] = dp[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tdp[i, j] = max(dp[i+1, j], dp[i, j-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i = 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl = 2:n\n\t\tfor i = 1:n-cl+1\n\t\t\tj = i+cl-1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i+1, j-1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j-1], L[i+1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend",
    "\tn = length(str)\n\tL = zeros(Int64, n, n)\n\tfor i in 1:n\n\t\tL[i, i] = 1\n\tend\n\tfor cl in 2:n\n\t\tfor i in 1:(n - cl + 1)\n\t\t\tj = i + cl - 1\n\t\t\tif str[i] == str[j] && cl == 2\n\t\t\t\tL[i, j] = 2\n\t\t\telseif str[i] == str[j]\n\t\t\t\tL[i, j] = L[i + 1, j - 1] + 2\n\t\t\telse\n\t\t\t\tL[i, j] = max(L[i, j - 1], L[i + 1, j])\n\t\t\tend\n\t\tend\n\tend\n\treturn L[1, n]\nend"
  ]
}
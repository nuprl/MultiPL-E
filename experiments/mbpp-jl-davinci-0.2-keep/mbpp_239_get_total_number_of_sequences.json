{
  "name": "mbpp_239_get_total_number_of_sequences",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that takes in positive integers m and n and finds the number of possible sequences of length n, such that each element is a positive integer and is greater than or equal to twice the previous element but less than or equal to m.\n\t\"\"\"\nfunction get_total_number_of_sequences(m::Int64, n::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_239_get_total_number_of_sequences.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = get_total_number_of_sequences;\n\t@test(candidate(10, 4) == 4)\n\t@test(candidate(5, 2) == 6)\n\t@test(candidate(16, 3) == 84)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn (m * (m + 1) / 2) * get_total_number_of_sequences(m, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum(get_total_number_of_sequences(m, i) for i in 2:n)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total\nend",
    "\tif n == 1 \n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m-1, n-1) + get_total_number_of_sequences(m-2, n-1))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m - n + 2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum(get_total_number_of_sequences(m, n-1) for i in 2:m)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) * (m - 2*n + 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*m\n\tend\n\tdp = zeros(Int64, n, m)\n\tdp[1, :] = 1\n\tdp[2, :] = m\n\tfor i in 3:n\n\t\tfor j in 1:m\n\t\t\tfor k in 2*j:m\n\t\t\t\tdp[i, j] += dp[i-1, k]\n\t\t\tend\n\t\tend\n\tend\n\treturn sum(dp[n, :])\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * (m - 2)^(n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m-n+2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1) + 1\n\tend\n\treturn get_total_number_of_sequences(m, n-1)*(m-2*n+4) + get_total_number_of_sequences(m, n-2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\t\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 39916800\n\tend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m < 2*n\n\t\treturn 0\n\tend\n\tif m == 2*n\n\t\treturn 1\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * get_total_number_of_sequences(m - 1, n - 1) + (m - 1) * get_total_number_of_sequences(m - 2, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n - 1)\nend",
    "    if n == 0\n        return 1\n    end\n    total = 0\n    for i in 2:m\n        total += get_total_number_of_sequences(i, n-1)\n    end\n    return total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m - 2*n + 2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn sum([get_total_number_of_sequences(i - 2, n - 1) for i in m:2:0])\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m + m*(m-1)\n\tend\n\treturn m + m*(m-1) + m*(m-1)*(m-2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m - n + 2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif m < 2*n\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telseif n == 2\n\t\treturn m * (m - 1)\n\telse\n\t\treturn m * (m - 1) * (m - 2) * (m - 3) * (m - 4) * (m - 5) * (m - 6) * (m - 7) * (m - 8) * (m - 9) * (m - 10) * (m - 11) * (m - 12) * (m - 13) * (m - 14) * (m - 15) * (m - 16) * (m - 17) * (m - 18) * (m - 19) * (m - 20) * (m - 21) * (m - 22) * (m - 23) * (m - 24) * (m - 25) * (m - 26) * (m - 27) * (m - 28) * (m - 29) * (m - 30) * (m - 31) * (m - 32) * (m - 33) * (m - 34) * (m - 35) * (m - 36) * (m - 37) * (m - 38) * (m - 39) * (m - 40) * (m - 41) * (m - 42) * (m - 43) * (m - 44) * (m - 45) * (m - 46) * (m - 47) * (m - 48) * (m - 49) * (m - 50) * (m - 51) * (m - 52) * (m - 53) * (m - 54) * (m - 55) * (m - 56) * (m - 57) * (m - 58) * (m - 59) * (m - 60) * (m - 61) * (m - 62) * (m - 63) * (m - 64) * (m - 65) * (m - 66) * (m - 67) * (m - 68) * (m - 69) * (m - 70) * (m - 71) * (m - 72) * (m - 73) * (m - 74) * (m - 75) * (m - 76) * (m - 77) * (m - 78) * (m - 79) *",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11)\n\tend\n\tif",
    "\t# Write your code here\n    if n == 1\n        return m\n    end\n    if n == 2\n        return m * (m - 1)\n    end\n    if n == 3\n        return m * (m - 1) * (m - 2)\n    end\n    return m * (m - 1) * (m - 2) * (m - 3)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0 \n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\telseif n == 1\n\t\treturn m\n\telse\n\t\ttotal_sequences = 0\n\t\tfor i in 2:m\n\t\t\ttotal_sequences += get_total_number_of_sequences(i, n-1)\n\t\tend\n\t\treturn total_sequences\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_sequences\nend",
    "\tif n == 0 \n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)*(m-2)^(n-2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\t\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\t\n\treturn total_sequences\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m - n + 2)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn m * get_total_number_of_sequences(m, n-1)\n\tend\nend",
    "\tif m == 0 || n == 0\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1) - (m-1) * get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * get_total_number_of_sequences(m, n - 1) + (m - 1) * get_total_number_of_sequences(m - 1, n - 1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\ttotal = 0\n\tfor i in (2*m):-1:2\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 0\n\t\treturn 1\n\tend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 1, n - 2))\nend",
    "\tif m < 2*n\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telseif n == 2\n\t\treturn m * m\n\telse\n\t\treturn m * m * get_total_number_of_sequences(m, n - 1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1 \n\t\treturn m\n\telse \n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1: return m\n\tif n == 2: return m*(m-1)\n\tif n == 3: return m*(m-1)*(m-2)\n\tif n == 4: return m*(m-1)*(m-2)*(m-3)\n\tif n == 5: return m*(m-1)*(m-2)*(m-3)*(m-4)\n\tif n == 6: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tif n == 7: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tif n == 8: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tif n == 9: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tif n == 10: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tif n == 11: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tif n == 12: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11)\n\tif n == 13: return m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1 \n\t\treturn m\n\tend\n\tif n == 2 \n\t\treturn m * (m - 1)\n\tend\n\tdp = zeros(Int64, n, m)\n\tfor i in 1:m \n\t\tdp[1, i] = 1\n\tend\n\tfor i in 2:n \n\t\tfor j in 2:m \n\t\t\tfor k in 1:j \n\t\t\t\tdp[i, j] += dp[i - 1, k]\n\t\t\tend\n\t\tend\n\tend\n\treturn sum(dp[n, :])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m, n-2)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "    if n == 1\n        return m\n    end\n    if n == 2\n        return m * (m + 1) / 2\n    end\n    return get_total_number_of_sequences(m, n - 1) * (m - n + 2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11)\n\tend\n\tif",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * get_total_number_of_sequences(m, n - 1) - (m - n + 1) * get_total_number_of_sequences(m, n - 2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m/2, n-1)\nend",
    "\t\"\"\"\n\tm: Int64\n\tn: Int64\n\t\"\"\"\n\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\tif n == 3\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\n\tif n == 4\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) / 24\n\tend\n\tif n == 5\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) / 120\n\tend\n\tif n == 6\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) / 720\n\tend\n\tif n == 7\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) / 5040\n\tend\n\tif n == 8\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) / 40320\n\tend\n\tif n == 9\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) / 362880\n\tend\n\tif n == 10\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) / 3628800\n\tend\n\tif n == 11\n\t\treturn m * (m + 1) * (m + 2) * (m + 3) * (m + 4) * (m + 5) * (m + 6) * (m + 7) * (m + 8) * (m + 9) * (m + 10) / 39916800\n\tend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in (2*m):m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 0:\n\t\treturn 1\n\tif n == 1:\n\t\treturn m\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\t\"\"\"\n\tm: positive integer\n\tn: positive integer\n\t\"\"\"\n\tif n == 1\n\t\treturn m\n\telse\n\t\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m - 1, n - 1)\nend",
    "\tif n == 0:\n\t\treturn 1\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) / 2 * (m + 2) / 3\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)\n\tend\n\tif n == 4\n\t\treturn m*(m+1)*(m+2)*(m+3)\n\tend\n\tif n == 5\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)\n\tend\n\tif n == 6\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)\n\tend\n\tif n == 7\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)\n\tend\n\tif n == 8\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)\n\tend\n\tif n == 9\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)\n\tend\n\tif n == 10\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)\n\tend\n\tif n == 11\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)\n\tend\n\tif n == 12\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)*(m+11)\n\tend\n\tif",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn (m-1)*(get_total_number_of_sequences(m-1, n-1) + get_total_number_of_sequences(m-2, n-1))\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "    if n == 1\n        return m\n    end\n    return get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\treturn m * get_total_number_of_sequences(m, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)/2\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)/6\n\tend\n\tif n == 4\n\t\treturn m*(m+1)*(m+2)*(m+3)/24\n\tend\n\tif n == 5\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)/120\n\tend\n\tif n == 6\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)/720\n\tend\n\tif n == 7\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)/5040\n\tend\n\tif n == 8\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)/40320\n\tend\n\tif n == 9\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)/362880\n\tend\n\tif n == 10\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)/3628800\n\tend\n\tif n == 11\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)/39916800\n\tend\n\tif n == 12\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n)\nend",
    "\tif m < 2*n\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\treturn m*(m-1)^(n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11)\n\tend\n\tif",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)\n\tend\n\treturn m*(m+1)*(m+2)^(n-2)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) * (m - 2*(n-1))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\t\n\treturn total_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11)\n\tend\n\tif",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn (m * (m + 1) / 2) * get_total_number_of_sequences(m, n - 1)\nend",
    "\tif n == 1\n\t\treturn m\n\telse\n\t\treturn get_total_number_of_sequences(m, n-1) * (m - 2*n + 2)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif m < 2*n\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1 \n\t\treturn m \n\tend \n\treturn (m-1)*get_total_number_of_sequences(m, n-1)\nend ",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m+1)/2\n\tend\n\tif n == 3\n\t\treturn m*(m+1)*(m+2)/6\n\tend\n\tif n == 4\n\t\treturn m*(m+1)*(m+2)*(m+3)/24\n\tend\n\tif n == 5\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)/120\n\tend\n\tif n == 6\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)/720\n\tend\n\tif n == 7\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)/5040\n\tend\n\tif n == 8\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)/40320\n\tend\n\tif n == 9\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)/362880\n\tend\n\tif n == 10\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)/3628800\n\tend\n\tif n == 11\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+9)*(m+10)/39916800\n\tend\n\tif n == 12\n\t\treturn m*(m+1)*(m+2)*(m+3)*(m+4)*(m+5)*(m+6)*(m+7)*(m+8)*(m+",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\telse\n\t\ttotal = 0\n\t\tfor i in 2:m\n\t\t\ttotal += get_total_number_of_sequences(i, n-1)\n\t\tend\n\t\treturn total\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n - 1)\n\tend\n\t\n\treturn total_number_of_sequences\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * (m - 2)^(n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n > 3\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn m * (m - 1) * (m - 2)^(n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * (m + 1) * (m + 2) / 6\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\t\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\t\"\"\"\n\t\tm: positive integer\n\t\tn: positive integer\n\t\treturns: number of possible sequences of length n\n\t\"\"\"\n\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\telseif n == 2\n\t\treturn m * (m + 1) / 2\n\telse\n\t\treturn m * (m + 1) * (m + 2) / 6\n\tend\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn sum([get_total_number_of_sequences(m, n-1) for i in 2:m])\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn get_total_number_of_sequences(m, n-1) + get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\treturn m * get_total_number_of_sequences(m, n-1) - (m-1) * get_total_number_of_sequences(m-1, n-1)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m + 1) / 2\n\tend\n\treturn m * get_total_number_of_sequences(m, n - 1) + get_total_number_of_sequences(m, n - 2)\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m*(m-1)\n\tend\n\tif n == 3\n\t\treturn m*(m-1)*(m-2)\n\tend\n\tif n == 4\n\t\treturn m*(m-1)*(m-2)*(m-3)\n\tend\n\tif n == 5\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)\n\tend\n\tif n == 6\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)\n\tend\n\tif n == 7\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)\n\tend\n\tif n == 8\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)\n\tend\n\tif n == 9\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)\n\tend\n\tif n == 10\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)\n\tend\n\tif n == 11\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)\n\tend\n\tif n == 12\n\t\treturn m*(m-1)*(m-2)*(m-3)*(m-4)*(m-5)*(m-6)*(m-7)*(m-8)*(m-9)*(m-10)*(m-11)\n\tend\n\tif",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif n == 1\n\t\treturn m\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1) + 1\n\tend\n\treturn (m - 1) * (get_total_number_of_sequences(m - 1, n - 1) + get_total_number_of_sequences(m - 2, n - 1))\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * get_total_number_of_sequences(m - 1, n - 1) + (m - 1) * get_total_number_of_sequences(m - 2, n - 1)\nend",
    "\tif n == 0 \n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n - 1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\tif n == 2\n\t\treturn m * (m - 1)\n\tend\n\treturn (m - 1) * get_total_number_of_sequences(m - 1, n - 1) + (m - 1) * get_total_number_of_sequences(m - 2, n - 1)\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\ttotal_number_of_sequences = 0\n\tfor i in 2:m\n\t\ttotal_number_of_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_number_of_sequences\nend",
    "\tif n == 0\n\t\treturn 1\n\tend\n\tif m == 0\n\t\treturn 0\n\tend\n\ttotal = 0\n\tfor i in 2:m\n\t\ttotal += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total\nend",
    "\tif n == 1\n\t\treturn m\n\tend\n\ttotal_sequences = 0\n\tfor i in 2:m\n\t\ttotal_sequences += get_total_number_of_sequences(i, n-1)\n\tend\n\treturn total_sequences\nend"
  ]
}
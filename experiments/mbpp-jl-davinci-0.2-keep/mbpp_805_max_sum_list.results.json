{
  "name": "mbpp_805_max_sum_list",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_805_max_sum_list.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor num in list\n\t\t\tsum += num\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\treturn lists[indmax([sum(list) for list in lists])]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122595,
      "stdout": "test set: Error During Test at /tmp/tmpu77dzjrr.jl:12\n  Test threw exception\n  Expression: candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12]\n  UndefVarError: indmax not defined\n  Stacktrace:\n   [1] max_sum_list(lists::Vector{Vector{Int64}})\n     @ Main /tmp/tmpu77dzjrr.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu77dzjrr.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu77dzjrr.jl:11\ntest set: Error During Test at /tmp/tmpu77dzjrr.jl:13\n  Test threw exception\n  Expression: candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10]\n  UndefVarError: indmax not defined\n  Stacktrace:\n   [1] max_sum_list(lists::Vector{Vector{Int64}})\n     @ Main /tmp/tmpu77dzjrr.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu77dzjrr.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu77dzjrr.jl:11\ntest set: Error During Test at /tmp/tmpu77dzjrr.jl:14\n  Test threw exception\n  Expression: candidate([[2, 3, 1]]) == [2, 3, 1]\n  UndefVarError: indmax not defined\n  Stacktrace:\n   [1] max_sum_list(lists::Vector{Vector{Int64}})\n     @ Main /tmp/tmpu77dzjrr.jl:5\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpu77dzjrr.jl:14 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpu77dzjrr.jl:11\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpu77dzjrr.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor i in list\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n    max_sum = 0\n    max_list = []\n    for list in lists\n        if sum(list) > max_sum\n            max_sum = sum(list)\n            max_list = list\n        end\n    end\n    return max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n    max_sum = 0\n    max_list = []\n    for list in lists\n        sum = 0\n        for element in list\n            sum += element\n        end\n        if sum > max_sum\n            max_sum = sum\n            max_list = list\n        end\n    end\n    return max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor number in list\n\t\t\tsum += number\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = Vector{Int64}()\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_index = 0\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_index = i\n\t\tend\n\tend\n\treturn lists[max_index]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_list = lists[i]\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor l in lists\n\t\tsum = 0\n\t\tfor i in l\n\t\t\tsum += i\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = l\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor num in list\n\t\t\tsum += num\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor num in list\n\t\t\tsum += num\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor num in list\n\t\t\tsum += num\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\treturn lists[argmax(sum.(lists, dims=2))]\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum = sum + element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_sum_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_sum_list = list\n\t\tend\n\tend\n\treturn max_sum_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor i in 1:length(lists)\n\t\tif sum(lists[i]) > max_sum\n\t\t\tmax_sum = sum(lists[i])\n\t\t\tmax_list = lists[i]\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1666122593,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tsum = 0\n\t\tfor element in list\n\t\t\tsum += element\n\t\tend\n\t\tif sum > max_sum\n\t\t\tmax_sum = sum\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function that returns the list in a list of lists whose sum of elements is the highest.\n\t\"\"\"\nfunction max_sum_list(lists::Vector{Vector{Int64}})::Vector{Int64} \n\tmax_sum = 0\n\tmax_list = []\n\tfor list in lists\n\t\tif sum(list) > max_sum\n\t\t\tmax_sum = sum(list)\n\t\t\tmax_list = list\n\t\tend\n\tend\n\treturn max_list\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sum_list;\n\t@test(candidate([[1, 2, 3], [4, 5, 6], [10, 11, 12], [7, 8, 9]]) == [10, 11, 12])\n\t@test(candidate([[3, 2, 1], [6, 5, 4], [12, 11, 10]]) == [12, 11, 10])\n\t@test(candidate([[2, 3, 1]]) == [2, 3, 1])\nend\n",
      "timestamp": 1665510067,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
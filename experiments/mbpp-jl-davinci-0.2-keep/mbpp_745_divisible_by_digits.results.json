{
  "name": "mbpp_745_divisible_by_digits",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif i % digits(i) == 0\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmp2130u9s0.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  MethodError: no method matching rem(::Int64, ::Vector{Int64})\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:81\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:82\n    ...\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmp2130u9s0.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2130u9s0.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2130u9s0.jl:20\ntest set: Error During Test at /tmp/tmp2130u9s0.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  MethodError: no method matching rem(::Int64, ::Vector{Int64})\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:81\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:82\n    ...\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmp2130u9s0.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2130u9s0.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp2130u9s0.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(mod(x, parse(Int64, string(y))) == 0 for y in string(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpqx5gum5e.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] #2\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [9] all\n      @ ./reduce.jl:1152 [inlined]\n   [10] all\n      @ ./reduce.jl:1070 [inlined]\n   [11] #1\n      @ /tmp/tmpqx5gum5e.jl:5 [inlined]\n   [12] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpqx5gum5e.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpqx5gum5e.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpqx5gum5e.jl:11\ntest set: Error During Test at /tmp/tmpqx5gum5e.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] #2\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [9] all\n      @ ./reduce.jl:1152 [inlined]\n   [10] all\n      @ ./reduce.jl:1070 [inlin",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqx5gum5e.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tReturns a vector of numbers from startnum to endnum that are divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpkwvk_x25.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpkwvk_x25.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpkwvk_x25.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpkwvk_x25.jl:14\ntest set: Error During Test at /tmp/tmpkwvk_x25.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkwvk_x25.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([y in digits(x) for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Test Failed at /tmp/tmp9ele_3fr.jl:15\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  \u2026  13, 14, 15, 16, 17, 18, 19, 20, 21, 22] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\ntest set: Test Failed at /tmp/tmp9ele_3fr.jl:16\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\ntest set: Test Failed at /tmp/tmp9ele_3fr.jl:17\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: [20, 21, 22, 23, 24, 25] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9ele_3fr.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tGiven a range of numbers, return a vector of numbers that are divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpi1iji3nw.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpi1iji3nw.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpi1iji3nw.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpi1iji3nw.jl:14\ntest set: Error During Test at /tmp/tmpi1iji3nw.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpi1iji3nw.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x%y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpmm0sw3be.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpmm0sw3be.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpmm0sw3be.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpmm0sw3be.jl:11\ntest set: Error During Test at /tmp/tmpmm0sw3be.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmm0sw3be.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x%y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmp17zjr3ox.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp17zjr3ox.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp17zjr3ox.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp17zjr3ox.jl:11\ntest set: Error During Test at /tmp/tmp17zjr3ox.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp17zjr3ox.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpy3ol33j_.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpy3ol33j_.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpy3ol33j_.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpy3ol33j_.jl:14\ntest set: Error During Test at /tmp/tmpy3ol33j_.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpy3ol33j_.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(y->x%y==0, digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmps35fjhln.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmps35fjhln.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmps35fjhln.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps35fjhln.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmps35fjhln.jl:12 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmps35fjhln.jl:11\ntest set: Error During Test at /tmp/tmps35fjhln.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmps35fjhln.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmps35fjhln.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps35fjhln.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmps35fjhln.jl:13 [inlined]\n   [11] macro expansion\n      @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps35fjhln.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x%y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmp17zjr3ox.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp17zjr3ox.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp17zjr3ox.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp17zjr3ox.jl:11\ntest set: Error During Test at /tmp/tmp17zjr3ox.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp17zjr3ox.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\t\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif i % digits(i) == 0\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps34q0c7q.jl:22\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  MethodError: no method matching rem(::Int64, ::Vector{Int64})\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:81\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:82\n    ...\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmps34q0c7q.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmps34q0c7q.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmps34q0c7q.jl:21\ntest set: Error During Test at /tmp/tmps34q0c7q.jl:23\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  MethodError: no method matching rem(::Int64, ::Vector{Int64})\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:81\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:82\n    ...\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmps34q0c7q.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmps34q0c7q.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Tes",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp48ko9ubo.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl:20\ntest set: Error During Test at /tmp/tmp48ko9ubo.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp48ko9ubo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp48ko9ubo.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl:20\ntest set: Error During Test at /tmp/tmp48ko9ubo.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp48ko9ubo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp96zkny06.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmp96zkny06.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp96zkny06.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp96zkny06.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp96zkny06.jl:11\ntest set: Error During Test at /tmp/tmp96zkny06.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmp96zkny06.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp96zkny06.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp96zkny06.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(x % digit(y) == 0 for y in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpy5hemqen.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: digit not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ /tmp/tmpy5hemqen.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpy5hemqen.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpy5hemqen.jl:12 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmpy5hemqen.jl:11\ntest set: Error During Test at /tmp/tmpy5hemqen.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: digit not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ /tmp/tmpy5hemqen.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpy5hemqen.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n  ",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpj3vx9hqw.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpj3vx9hqw.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpj3vx9hqw.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpj3vx9hqw.jl:14\ntest set: Error During Test at /tmp/tmpj3vx9hqw.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj3vx9hqw.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp48ko9ubo.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl:20\ntest set: Error During Test at /tmp/tmp48ko9ubo.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp48ko9ubo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([y in digits(x) for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Test Failed at /tmp/tmp9ele_3fr.jl:15\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  \u2026  13, 14, 15, 16, 17, 18, 19, 20, 21, 22] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\ntest set: Test Failed at /tmp/tmp9ele_3fr.jl:16\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\ntest set: Test Failed at /tmp/tmp9ele_3fr.jl:17\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: [20, 21, 22, 23, 24, 25] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9ele_3fr.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpy3ol33j_.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpy3ol33j_.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpy3ol33j_.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpy3ol33j_.jl:14\ntest set: Error During Test at /tmp/tmpy3ol33j_.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpy3ol33j_.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x -> all(x % y == 0 for y in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpb7xouxmi.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpb7xouxmi.jl:8 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpb7xouxmi.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpb7xouxmi.jl:15 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpb7xouxmi.jl:14\ntest set: Error During Test at /tmp/tmpb7xouxmi.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpb7xouxmi.jl:8 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpb7xouxmi.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpb7xouxmi.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(i) == 0 for i in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp6buueqkw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(i::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp6buueqkw.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp6buueqkw.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp6buueqkw.jl:11\ntest set: Error During Test at /tmp/tmp6buueqkw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(i::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpfik0zzi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpfik0zzi5.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpfik0zzi5.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpfik0zzi5.jl:11\ntest set: Error During Test at /tmp/tmpfik0zzi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpfik0zzi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpw_aj8fan.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpw_aj8fan.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpw_aj8fan.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpw_aj8fan.jl:20\ntest set: Error During Test at /tmp/tmpw_aj8fan.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpw_aj8fan.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpw_aj8fan.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpw_aj8fan.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpw_aj8fan.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\tresult = filter(x -> all(y -> x % y == 0, digits(x)), startnum:endnum)\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpfz0ldvv6.jl:13\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmpfz0ldvv6.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmpfz0ldvv6.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpfz0ldvv6.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpfz0ldvv6.jl:13 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmpfz0ldvv6.jl:12\ntest set: Error During Test at /tmp/tmpfz0ldvv6.jl:14\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmpfz0ldvv6.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmpfz0ldvv6.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpfz0ldvv6.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpfz0ldvv6.jl:14 [inlined]\n   [11] macro expansion\n      @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpfz0ldvv6.jl:10\n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [i for i in startnum:endnum if all([i%j == 0 for j in digits(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp77ca413z.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp77ca413z.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp77ca413z.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp77ca413z.jl:11\ntest set: Error During Test at /tmp/tmp77ca413z.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp77ca413z.jl:9\n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpz0wws0as.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpz0wws0as.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpz0wws0as.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpz0wws0as.jl:20\ntest set: Error During Test at /tmp/tmpz0wws0as.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpz0wws0as.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpz0wws0as.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpz0wws0as.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpz0wws0as.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp30lqjkal.jl:18\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp30lqjkal.jl:7\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp30lqjkal.jl:18 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp30lqjkal.jl:17\ntest set: Error During Test at /tmp/tmp30lqjkal.jl:19\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp30lqjkal.jl:7\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp30lqjkal.jl:19 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp30lqjkal.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp30lqjkal.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x->all(x%digits(x) .== 0), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpga82ya77.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  MethodError: no method matching rem(::Int64, ::Vector{Int64})\n  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:81\n    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at /home/a.guha/.conda/envs/polyglot/share/julia/base/div.jl:82\n    ...\n  Stacktrace:\n   [1] (::var\"#1#2\")(x::Int64)\n     @ Main /tmp/tmpga82ya77.jl:8\n   [2] filter(f::var\"#1#2\", a::UnitRange{Int64})\n     @ Base ./array.jl:2499\n   [3] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpga82ya77.jl:8\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpga82ya77.jl:15 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpga82ya77.jl:14\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\tresult = []\n\tfor i in startnum:endnum\n\t\tflag = true\n\t\tfor j in digits(i)\n\t\t\tif i%j != 0\n\t\t\t\tflag = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif flag == true\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmppie4ckpe.jl:25\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmppie4ckpe.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppie4ckpe.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppie4ckpe.jl:24\ntest set: Error During Test at /tmp/tmppie4ckpe.jl:26\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmppie4ckpe.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppie4ckpe.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppie4ckpe.jl:24\ntest set: Error During Test at /tmp/tmppie4ckpe.jl:27\n  Test threw exception\n  Expression: candidate(20, 25) == [22, 24]\n  DivideError: integer division error\n  Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmppie4ckpe.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppie4ckpe.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppie4ckpe.jl:2",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmppie4ckpe.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\t# create a vector of numbers from startnum to endnum\n\tnumbers = collect(startnum:endnum)\n\t# create a vector of numbers that are divisible by every digit it contains\n\tdivisible_numbers = filter(x -> all(x % int(y) == 0 for y in digits(x)), numbers)\n\treturn divisible_numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpbntsxc5t.jl:19\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ /tmp/tmpbntsxc5t.jl:11 [inlined]\n    [7] filter(f::var\"#1#3\", a::Vector{Int64})\n      @ Base ./array.jl:2484\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpbntsxc5t.jl:11\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpbntsxc5t.jl:19 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmpbntsxc5t.jl:18\ntest set: Error During Test at /tmp/tmpbntsxc5t.jl:20\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ /tmp/tmpbntsxc5t.jl:11 [inlined]\n    [7] filter(f::var\"#1#3\", a::Vector{Int64})\n      @ Base ./array.jl:2484\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpbntsxc5t.jl:11\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ ",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x%y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpt_2dvm47.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpt_2dvm47.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpt_2dvm47.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpt_2dvm47.jl:14\ntest set: Error During Test at /tmp/tmpt_2dvm47.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(y -> x % y == 0, digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpi6mqr0kg.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmpi6mqr0kg.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmpi6mqr0kg.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpi6mqr0kg.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpi6mqr0kg.jl:12 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmpi6mqr0kg.jl:11\ntest set: Error During Test at /tmp/tmpi6mqr0kg.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmpi6mqr0kg.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmpi6mqr0kg.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpi6mqr0kg.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpi6mqr0kg.jl:13 [inlined]\n   [11] macro expansion\n      @ /home/a.guh",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpi6mqr0kg.jl:9\n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [i for i in startnum:endnum if all([j in digits(i) for j in divisors(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpqq5fs2pm.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: divisors not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5] collect\n      @ ./array.jl:721 [inlined]\n    [6] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpqq5fs2pm.jl:5\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpqq5fs2pm.jl:12 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpqq5fs2pm.jl:11\ntest set: Error During Test at /tmp/tmpqq5fs2pm.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: divisors not defined\n  Stacktrace:\n    [1] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./iterators.jl:447 [inlined]\n    [3] iterate\n      @ ./generator.jl:44 [inlined]\n    [4] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [5] collect\n      @ ./array.jl:721 [inlined]\n    [6] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpqq5fs2pm.jl:5\n    [7] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [8] macro expansion\n      @ /tmp/tmpqq5fs2pm.jl:13 [inlined]\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [10] top-level scope\n      @ /tmp/tmpqq5fs2p",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tfor j in digits(i)\n\t\t\tif i % j != 0\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tpush!(divisible_by_digits, i)\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmprxrldvgs.jl:24\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmprxrldvgs.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmprxrldvgs.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmprxrldvgs.jl:23\ntest set: Error During Test at /tmp/tmprxrldvgs.jl:25\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmprxrldvgs.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmprxrldvgs.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmprxrldvgs.jl:23\ntest set: Error During Test at /tmp/tmprxrldvgs.jl:26\n  Test threw exception\n  Expression: candidate(20, 25) == [22, 24]\n  DivideError: integer division error\n  Stacktrace:\n   [1] rem\n     @ ./int.jl:285 [inlined]\n   [2] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmprxrldvgs.jl:11\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmprxrldvgs.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmprxrldvgs.j",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmprxrldvgs.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x%y==0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpovu64j8b.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpovu64j8b.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpovu64j8b.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpovu64j8b.jl:11\ntest set: Error During Test at /tmp/tmpovu64j8b.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpj3vx9hqw.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpj3vx9hqw.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpj3vx9hqw.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpj3vx9hqw.jl:14\ntest set: Error During Test at /tmp/tmpj3vx9hqw.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj3vx9hqw.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpkxtrplzv.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpkxtrplzv.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpkxtrplzv.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpkxtrplzv.jl:14\ntest set: Error During Test at /tmp/tmpkxtrplzv.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkxtrplzv.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tReturns a vector of numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [n for n in startnum:endnum if all([n % i == 0 for i in digits(n)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmp0a3e1aw4.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(n::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp0a3e1aw4.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp0a3e1aw4.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp0a3e1aw4.jl:14\ntest set: Error During Test at /tmp/tmp0a3e1aw4.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(n::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpvgwn9xw7.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvgwn9xw7.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpvgwn9xw7.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpvgwn9xw7.jl:14\ntest set: Error During Test at /tmp/tmpvgwn9xw7.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvgwn9xw7.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x%y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmp5cmhrk49.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp5cmhrk49.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmp5cmhrk49.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmp5cmhrk49.jl:14\ntest set: Error During Test at /tmp/tmp5cmhrk49.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\treturn [i for i in startnum:endnum if all([j in digits(i) for j in digits(i)])]\n\tend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Test Failed at /tmp/tmpta8erp49.jl:12\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  \u2026  13, 14, 15, 16, 17, 18, 19, 20, 21, 22] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpta8erp49.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpta8erp49.jl:11\ntest set: Test Failed at /tmp/tmpta8erp49.jl:13\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpta8erp49.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpta8erp49.jl:11\ntest set: Test Failed at /tmp/tmpta8erp49.jl:14\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: [20, 21, 22, 23, 24, 25] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpta8erp49.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpta8erp49.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpta8erp49.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tnumbers = []\n\tfor i in startnum:endnum\n\t\tif divisible_by_digits(i)\n\t\t\tpush!(numbers, i)\n\t\tend\n\tend\n\treturn numbers\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmptvruiep0.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  MethodError: no method matching divisible_by_digits(::Int64)\n  Closest candidates are:\n    divisible_by_digits(::Int64, !Matched::Int64) at /tmp/tmptvruiep0.jl:4\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmptvruiep0.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptvruiep0.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmptvruiep0.jl:20\ntest set: Error During Test at /tmp/tmptvruiep0.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  MethodError: no method matching divisible_by_digits(::Int64)\n  Closest candidates are:\n    divisible_by_digits(::Int64, !Matched::Int64) at /tmp/tmptvruiep0.jl:4\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmptvruiep0.jl:10\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptvruiep0.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmptvruiep0.jl:20\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([y in digits(x) for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Test Failed at /tmp/tmp9ele_3fr.jl:15\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  \u2026  13, 14, 15, 16, 17, 18, 19, 20, 21, 22] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\ntest set: Test Failed at /tmp/tmp9ele_3fr.jl:16\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\ntest set: Test Failed at /tmp/tmp9ele_3fr.jl:17\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: [20, 21, 22, 23, 24, 25] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp9ele_3fr.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp9ele_3fr.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp9ele_3fr.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in split(string(x)))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpcfp925qw.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::SubString{String})\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{Vector{SubString{String}}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate(::Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}})\n      @ Base.Iterators ./iterators.jl:447\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!\n      @ ./array.jl:797 [inlined]\n   [10] collect(itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:721\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpcfp925qw.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpcfp925qw.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpcfp925qw.jl:14\ntest set: Error During Test at /tmp/tmpcfp925qw.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::SubString{String})\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{Vector{SubString{String}}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate(::Base.Iterators.",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpf8j8rizs.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl:20\ntest set: Error During Test at /tmp/tmpf8j8rizs.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf8j8rizs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(mod.(x, digits(x)) .== 0), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmp4vomtj2x.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n    [7] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [8] _getindex\n      @ ./broadcast.jl:666 [inlined]\n    [9] _broadcast_getindex\n      @ ./broadcast.jl:642 [inlined]\n   [10] getindex\n      @ ./broadcast.jl:597 [inlined]\n   [11] macro expansion\n      @ ./broadcast.jl:961 [inlined]\n   [12] macro expansion\n      @ ./simdloop.jl:77 [inlined]\n   [13] copyto!\n      @ ./broadcast.jl:960 [inlined]\n   [14] copyto!\n      @ ./broadcast.jl:971 [inlined]\n   [15] copyto!\n      @ ./broadcast.jl:913 [inlined]\n   [16] copy\n      @ ./broadcast.jl:885 [inlined]\n   [17] materialize\n      @ ./broadcast.jl:860 [inlined]\n   [18] (::var\"#1#2\")(x::Int64)\n      @ Main /tmp/tmp4vomtj2x.jl:5\n   [19] filter(f::var\"#1#2\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n   [20] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp4vomtj2x.jl:5\n   [21] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [22] macro expansion\n      @ /tmp/tmp4vomtj2x.jl:12 [inlined]\n   [23] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [24] top-level scope\n      @ /tmp/tmp4vomtj2x.jl:11\ntest set: Error During Test at /tmp/tmp4vomtj2x.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inl",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([y in x for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Test Failed at /tmp/tmpuh1tgr_s.jl:15\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuh1tgr_s.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuh1tgr_s.jl:14\ntest set: Test Failed at /tmp/tmpuh1tgr_s.jl:16\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuh1tgr_s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuh1tgr_s.jl:14\ntest set: Test Failed at /tmp/tmpuh1tgr_s.jl:17\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: Int64[] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuh1tgr_s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuh1tgr_s.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuh1tgr_s.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpf8j8rizs.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl:20\ntest set: Error During Test at /tmp/tmpf8j8rizs.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf8j8rizs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\tresult = []\n\tfor i in startnum:endnum\n\t\tif isdivisible(i)\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmphe6b9fcv.jl:18\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: isdivisible not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmphe6b9fcv.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmphe6b9fcv.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmphe6b9fcv.jl:17\ntest set: Error During Test at /tmp/tmphe6b9fcv.jl:19\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: isdivisible not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmphe6b9fcv.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmphe6b9fcv.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmphe6b9fcv.jl:17\ntest set: Error During Test at /tmp/tmphe6b9fcv.jl:20\n  Test threw exception\n  Expression: candidate(20, 25) == [22, 24]\n  UndefVarError: isdivisible not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmphe6b9fcv.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmphe6b9fcv.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmphe6b9fcv.jl:17\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmphe6b9fcv.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmp1y7a2uy2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp1y7a2uy2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp1y7a2uy2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp1y7a2uy2.jl:14\ntest set: Error During Test at /tmp/tmp1y7a2uy2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tThis function returns a vector of numbers from startnum to endnum that are divisible by every digit it contains.\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif i % 10 == 0\n\t\t\tcontinue\n\t\tend\n\t\tdivisible = true\n\t\tfor j in digits(i)\n\t\t\tif i % j != 0\n\t\t\t\tdivisible = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif divisible\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122740,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmpyjxm164r.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpyjxm164r.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpyjxm164r.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpyjxm164r.jl:14\ntest set: Error During Test at /tmp/tmpyjxm164r.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(x % digit(x, i) == 0 for i in 1:length(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmpwlbc1m6o.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: digit not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(i::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all\n      @ ./reduce.jl:1156 [inlined]\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ /tmp/tmpwlbc1m6o.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpwlbc1m6o.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpwlbc1m6o.jl:12 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmpwlbc1m6o.jl:11\ntest set: Error During Test at /tmp/tmpwlbc1m6o.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: digit not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(i::Int64)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all\n      @ ./reduce.jl:1156 [inlined]\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ /tmp/tmpwlbc1m6o.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpwlbc1m6o.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmpwlbc1m6o.jl:13 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-l",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpkxtrplzv.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpkxtrplzv.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpkxtrplzv.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpkxtrplzv.jl:14\ntest set: Error During Test at /tmp/tmpkxtrplzv.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkxtrplzv.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\tresult = []\n\tfor i in startnum:endnum\n\t\tif isdivisible(i)\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmphe6b9fcv.jl:18\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: isdivisible not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmphe6b9fcv.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmphe6b9fcv.jl:18 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmphe6b9fcv.jl:17\ntest set: Error During Test at /tmp/tmphe6b9fcv.jl:19\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: isdivisible not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmphe6b9fcv.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmphe6b9fcv.jl:19 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmphe6b9fcv.jl:17\ntest set: Error During Test at /tmp/tmphe6b9fcv.jl:20\n  Test threw exception\n  Expression: candidate(20, 25) == [22, 24]\n  UndefVarError: isdivisible not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmphe6b9fcv.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmphe6b9fcv.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmphe6b9fcv.jl:17\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmphe6b9fcv.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(i->x%i==0, digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmp1ec9sojt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmp1ec9sojt.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmp1ec9sojt.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp1ec9sojt.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmp1ec9sojt.jl:12 [inlined]\n   [11] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [12] top-level scope\n      @ /tmp/tmp1ec9sojt.jl:11\ntest set: Error During Test at /tmp/tmp1ec9sojt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ /tmp/tmp1ec9sojt.jl:5 [inlined]\n    [3] _all(f::var\"#2#4\"{Int64}, itr::Vector{Int64}, #unused#::Colon)\n      @ Base ./reduce.jl:1157\n    [4] #all#757\n      @ ./reducedim.jl:902 [inlined]\n    [5] all\n      @ ./reducedim.jl:902 [inlined]\n    [6] #1\n      @ /tmp/tmp1ec9sojt.jl:5 [inlined]\n    [7] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [8] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp1ec9sojt.jl:5\n    [9] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [10] macro expansion\n      @ /tmp/tmp1ec9sojt.jl:13 [inlined]\n   [11] macro expansion\n      @ /home/a.guh",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tdigits = digits(i)\n\t\tif all(i % j == 0 for j in digits)\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmpcabs78y8.jl:20\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: digits not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpcabs78y8.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcabs78y8.jl:20 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcabs78y8.jl:19\ntest set: Error During Test at /tmp/tmpcabs78y8.jl:21\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: digits not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpcabs78y8.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcabs78y8.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcabs78y8.jl:19\ntest set: Error During Test at /tmp/tmpcabs78y8.jl:22\n  Test threw exception\n  Expression: candidate(20, 25) == [22, 24]\n  UndefVarError: digits not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpcabs78y8.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpcabs78y8.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpcabs78y8.jl:19\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x%Int64(y)==0 for y in split(string(x), \"\"))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmpjfvba937.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  MethodError: no method matching Int64(::SubString{String})\n  Closest candidates are:\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{Int32, Int64} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:51\n    (::Type{T})(!Matched::AbstractChar) where T<:Union{AbstractChar, Number} at /home/a.guha/.conda/envs/polyglot/share/julia/base/char.jl:50\n    (::Type{T})(!Matched::BigInt) where T<:Union{Int128, Int16, Int32, Int64, Int8} at /home/a.guha/.conda/envs/polyglot/share/julia/base/gmp.jl:357\n    ...\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::SubString{String})\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all\n      @ ./reduce.jl:1156 [inlined]\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpjfvba937.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpjfvba937.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpjfvba937.jl:11\n",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(x % y == 0 for y in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmpl2q5mjyj.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpl2q5mjyj.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpl2q5mjyj.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpl2q5mjyj.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpl2q5mjyj.jl:11\ntest set: Error During Test at /tmp/tmpl2q5mjyj.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpl2q5mjyj.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpl2q5mjyj.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpf8j8rizs.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl:20\ntest set: Error During Test at /tmp/tmpf8j8rizs.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf8j8rizs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif i % sum(digits(i)) == 0\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Test Failed at /tmp/tmpccxbcw8c.jl:18\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 18, 20, 21] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpccxbcw8c.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpccxbcw8c.jl:17\ntest set: Test Failed at /tmp/tmpccxbcw8c.jl:19\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpccxbcw8c.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpccxbcw8c.jl:17\ntest set: Test Failed at /tmp/tmpccxbcw8c.jl:20\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: [20, 21, 24] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpccxbcw8c.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpccxbcw8c.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpccxbcw8c.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x%y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpmm0sw3be.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpmm0sw3be.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpmm0sw3be.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpmm0sw3be.jl:11\ntest set: Error During Test at /tmp/tmpmm0sw3be.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmm0sw3be.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x -> all(x % y == 0 for y in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpb7xouxmi.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpb7xouxmi.jl:8 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpb7xouxmi.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpb7xouxmi.jl:15 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpb7xouxmi.jl:14\ntest set: Error During Test at /tmp/tmpb7xouxmi.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpb7xouxmi.jl:8 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpb7xouxmi.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpb7xouxmi.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(mod(x, parse(Int64, y)) == 0 for y in string(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpmtc984dk.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] #2\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [9] all\n      @ ./reduce.jl:1152 [inlined]\n   [10] all\n      @ ./reduce.jl:1070 [inlined]\n   [11] #1\n      @ /tmp/tmpmtc984dk.jl:5 [inlined]\n   [12] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpmtc984dk.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpmtc984dk.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpmtc984dk.jl:11\ntest set: Error During Test at /tmp/tmpmtc984dk.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] #2\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [9] all\n      @ ./reduce.jl:1152 [inlined]\n   [10] all\n      @ ./reduce.jl:1070 [inlin",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpmtc984dk.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x%int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "test set: Error During Test at /tmp/tmpnf1hww0t.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpnf1hww0t.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpnf1hww0t.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpnf1hww0t.jl:11\ntest set: Error During Test at /tmp/tmpnf1hww0t.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\t\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122745,
      "stdout": "test set: Error During Test at /tmp/tmpq8mjqcy5.jl:22\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpq8mjqcy5.jl:11\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpq8mjqcy5.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpq8mjqcy5.jl:21\ntest set: Error During Test at /tmp/tmpq8mjqcy5.jl:23\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpq8mjqcy5.jl:11\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpq8mjqcy5.jl:23 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpq8mjqcy5.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpq8mjqcy5.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tdivisible_by_digits(startnum, endnum)\n\t\n\tFind numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\t\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122746,
      "stdout": "test set: Error During Test at /tmp/tmpvl4dbk6y.jl:18\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvl4dbk6y.jl:11\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvl4dbk6y.jl:18 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvl4dbk6y.jl:17\ntest set: Error During Test at /tmp/tmpvl4dbk6y.jl:19\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvl4dbk6y.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tReturns a vector of numbers between startnum and endnum that are divisible by every digit it contains.\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122746,
      "stdout": "test set: Error During Test at /tmp/tmp2h5xabyl.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp2h5xabyl.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp2h5xabyl.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp2h5xabyl.jl:20\ntest set: Error During Test at /tmp/tmp2h5xabyl.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp2h5xabyl.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp2h5xabyl.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp2h5xabyl.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp2h5xabyl.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(x%y==0 for y in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122746,
      "stdout": "test set: Error During Test at /tmp/tmpuez5h6pa.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpuez5h6pa.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpuez5h6pa.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpuez5h6pa.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpuez5h6pa.jl:11\ntest set: Error During Test at /tmp/tmpuez5h6pa.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpuez5h6pa.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpuez5h6pa.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpuez5h6pa.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x%y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmp17zjr3ox.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp17zjr3ox.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp17zjr3ox.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp17zjr3ox.jl:11\ntest set: Error During Test at /tmp/tmp17zjr3ox.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp17zjr3ox.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all([i%j == 0 for j in digits(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122746,
      "stdout": "test set: Error During Test at /tmp/tmp0zdik7o4.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp0zdik7o4.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmp0zdik7o4.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmp0zdik7o4.jl:14\ntest set: Error During Test at /tmp/tmp0zdik7o4.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp0zdik7o4.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\t\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122745,
      "stdout": "test set: Error During Test at /tmp/tmpq8mjqcy5.jl:22\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpq8mjqcy5.jl:11\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpq8mjqcy5.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpq8mjqcy5.jl:21\ntest set: Error During Test at /tmp/tmpq8mjqcy5.jl:23\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpq8mjqcy5.jl:11\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpq8mjqcy5.jl:23 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpq8mjqcy5.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpq8mjqcy5.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t# startnum = Int64(readline())\n\t# endnum = Int64(readline())\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif i < 10\n\t\t\tpush!(divisible_by_digits, i)\n\t\telse\n\t\t\tdigits = digits(i)\n\t\t\tif all(i % j == 0 for j in digits)\n\t\t\t\tpush!(divisible_by_digits, i)\n\t\t\tend\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmpvojy2zbs.jl:25\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: digits not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpvojy2zbs.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvojy2zbs.jl:25 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvojy2zbs.jl:24\ntest set: Error During Test at /tmp/tmpvojy2zbs.jl:26\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: digits not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpvojy2zbs.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvojy2zbs.jl:26 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvojy2zbs.jl:24\ntest set: Error During Test at /tmp/tmpvojy2zbs.jl:27\n  Test threw exception\n  Expression: candidate(20, 25) == [22, 24]\n  UndefVarError: digits not defined\n  Stacktrace:\n   [1] divisible_by_digits(startnum::Int64, endnum::Int64)\n     @ Main /tmp/tmpvojy2zbs.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvojy2zbs.jl:27 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvojy2zbs.jl:24\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvojy2zbs.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpf7nzagxw.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf7nzagxw.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpf7nzagxw.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpf7nzagxw.jl:11\ntest set: Error During Test at /tmp/tmpf7nzagxw.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf7nzagxw.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmp48ko9ubo.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl:20\ntest set: Error During Test at /tmp/tmp48ko9ubo.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp48ko9ubo.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp48ko9ubo.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp48ko9ubo.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp48ko9ubo.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn filter(x->all(x%y==0 for y in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122746,
      "stdout": "test set: Error During Test at /tmp/tmpwq7wo4md.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpwq7wo4md.jl:8 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpwq7wo4md.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpwq7wo4md.jl:15 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpwq7wo4md.jl:14\ntest set: Error During Test at /tmp/tmpwq7wo4md.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpwq7wo4md.jl:8 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpwq7wo4md.jl:8\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpwq7wo4md.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpf8j8rizs.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl:20\ntest set: Error During Test at /tmp/tmpf8j8rizs.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf8j8rizs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x%int(y)==0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmpbd22na5n.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpbd22na5n.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpbd22na5n.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpbd22na5n.jl:11\ntest set: Error During Test at /tmp/tmpbd22na5n.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbd22na5n.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if sum([x % y == 0 for y in digits(x)]) == length(digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmpljbnzzaa.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] #1\n      @ ./none:0 [inlined]\n    [6] iterate(f::Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, state::Int64)\n      @ Base.Iterators ./iterators.jl:447\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!\n      @ ./array.jl:801 [inlined]\n   [10] collect(itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:721\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpljbnzzaa.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpljbnzzaa.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpljbnzzaa.jl:14\ntest set: Error During Test at /tmp/tmpljbnzzaa.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] #1\n      @ ./none:0 [inlined]\n    [6] iterate(f::Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, state::Int64)\n      @ Base.Iterators ./",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpljbnzzaa.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\t\n\tresult = []\n\tfor i in startnum:endnum\n\t\tif i % 10 == 0\n\t\t\tcontinue\n\t\tend\n\t\t\n\t\tdivisible = true\n\t\tfor j in digits(i)\n\t\t\tif i % j != 0\n\t\t\t\tdivisible = false\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\t\n\t\tif divisible\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\t\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122744,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [i for i in startnum:endnum if all(i % j == 0 for j in digits(i))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpkxtrplzv.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpkxtrplzv.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpkxtrplzv.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpkxtrplzv.jl:14\ntest set: Error During Test at /tmp/tmpkxtrplzv.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpkxtrplzv.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpeoze1_65.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpeoze1_65.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpeoze1_65.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpeoze1_65.jl:14\ntest set: Error During Test at /tmp/tmpeoze1_65.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpeoze1_65.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tFunction to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains.\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all([x % i == 0 for i in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmpj2oi9xbq.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpj2oi9xbq.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpj2oi9xbq.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpj2oi9xbq.jl:14\ntest set: Error During Test at /tmp/tmpj2oi9xbq.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj2oi9xbq.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(x % d == 0 for d in digits(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmp17thjcv2.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmp17thjcv2.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp17thjcv2.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmp17thjcv2.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmp17thjcv2.jl:11\ntest set: Error During Test at /tmp/tmp17thjcv2.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmp17thjcv2.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmp17thjcv2.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Te",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp17thjcv2.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % int(y) == 0 for y in string(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmps7pbdcnt.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmps7pbdcnt.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmps7pbdcnt.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmps7pbdcnt.jl:11\ntest set: Error During Test at /tmp/tmps7pbdcnt.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] collect(itr::Base.Generator{String, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [4] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [5] iterate\n      @ ./iterators.jl:447 [inlined]\n    [6] iterate\n      @ ./generator.jl:44 [inlined]\n    [7] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n    [8] collect\n      @ ./array.jl:721 [inlined]\n    [9] divisible_by_digits(startnum::Int64, endnum::I",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmps7pbdcnt.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509870,
      "stdout": "test set: Error During Test at /tmp/tmpvi_wxghp.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpvi_wxghp.jl:8\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpvi_wxghp.jl:15 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpvi_wxghp.jl:14\ntest set: Error During Test at /tmp/tmpvi_wxghp.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvi_wxghp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [i for i in startnum:endnum if all([j in digits(i) for j in digits(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122746,
      "stdout": "test set: Test Failed at /tmp/tmpehkk0kkc.jl:12\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10  \u2026  13, 14, 15, 16, 17, 18, 19, 20, 21, 22] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpehkk0kkc.jl:12 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpehkk0kkc.jl:11\ntest set: Test Failed at /tmp/tmpehkk0kkc.jl:13\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n   Evaluated: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpehkk0kkc.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpehkk0kkc.jl:11\ntest set: Test Failed at /tmp/tmpehkk0kkc.jl:14\n  Expression: candidate(20, 25) == [22, 24]\n   Evaluated: [20, 21, 22, 23, 24, 25] == [22, 24]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpehkk0kkc.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpehkk0kkc.jl:11\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpehkk0kkc.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\tdivisible_by_digits = []\n\tfor i in startnum:endnum\n\t\tif all(i % j == 0 for j in digits(i))\n\t\t\tpush!(divisible_by_digits, i)\n\t\tend\n\tend\n\treturn divisible_by_digits\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122743,
      "stdout": "test set: Error During Test at /tmp/tmpf8j8rizs.jl:21\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl:20\ntest set: Error During Test at /tmp/tmpf8j8rizs.jl:22\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #1\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#1#2\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpf8j8rizs.jl:10\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpf8j8rizs.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpf8j8rizs.jl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf8j8rizs.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x -> all(x % parse(Int64, y) == 0 for y in string(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmpv3mfuq73.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpv3mfuq73.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpv3mfuq73.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [11] macro expansion\n      @ /tmp/tmpv3mfuq73.jl:12 [inlined]\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [13] top-level scope\n      @ /tmp/tmpv3mfuq73.jl:11\ntest set: Error During Test at /tmp/tmpv3mfuq73.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ /tmp/tmpv3mfuq73.jl:5 [inlined]\n    [8] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n    [9] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpv3mfuq73.jl:5\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpv3mfuq73.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn filter(x->all(mod(x, parse(Int64, string(y))) == 0 for y in string(x)), startnum:endnum)\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpqx5gum5e.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] #2\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [9] all\n      @ ./reduce.jl:1152 [inlined]\n   [10] all\n      @ ./reduce.jl:1070 [inlined]\n   [11] #1\n      @ /tmp/tmpqx5gum5e.jl:5 [inlined]\n   [12] filter(f::var\"#1#3\", a::UnitRange{Int64})\n      @ Base ./array.jl:2499\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpqx5gum5e.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpqx5gum5e.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpqx5gum5e.jl:11\ntest set: Error During Test at /tmp/tmpqx5gum5e.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] div\n      @ ./int.jl:284 [inlined]\n    [2] div\n      @ ./div.jl:257 [inlined]\n    [3] div\n      @ ./div.jl:302 [inlined]\n    [4] fld\n      @ ./div.jl:268 [inlined]\n    [5] mod\n      @ ./int.jl:276 [inlined]\n    [6] #2\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./generator.jl:47 [inlined]\n    [8] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1164\n    [9] all\n      @ ./reduce.jl:1152 [inlined]\n   [10] all\n      @ ./reduce.jl:1070 [inlin",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqx5gum5e.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all(x % y == 0 for y in digits(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzuaf089s.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1152 [inlined]\n    [6] all\n      @ ./reduce.jl:1070 [inlined]\n    [7] #1\n      @ ./none:0 [inlined]\n    [8] iterate\n      @ ./iterators.jl:447 [inlined]\n    [9] iterate\n      @ ./generator.jl:44 [inlined]\n   [10] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n   [11] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [12] collect\n      @ ./array.jl:721 [inlined]\n   [13] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzuaf089s.jl:5\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [15] macro expansion\n      @ /tmp/tmpzuaf089s.jl:12 [inlined]\n   [16] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [17] top-level scope\n      @ /tmp/tmpzuaf089s.jl:11\ntest set: Error During Test at /tmp/tmpzuaf089s.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _all(f::typeof(identity), itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [5] all\n      @ ./reduce.jl:1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzuaf089s.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [i for i in startnum:endnum if all([i % j == 0 for j in digits(i)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122747,
      "stdout": "test set: Error During Test at /tmp/tmpht1ekw8v.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpht1ekw8v.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpht1ekw8v.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpht1ekw8v.jl:11\ntest set: Error During Test at /tmp/tmpht1ekw8v.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(i::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpht1ekw8v.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\t\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\n\treturn [x for x in startnum:endnum if all(x % int(y) == 0 for y in string(x))]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1666122738,
      "stdout": "test set: Error During Test at /tmp/tmpzckp9bk2.jl:15\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:797\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpzckp9bk2.jl:8\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpzckp9bk2.jl:15 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpzckp9bk2.jl:14\ntest set: Error During Test at /tmp/tmpzckp9bk2.jl:16\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  UndefVarError: int not defined\n  Stacktrace:\n    [1] (::var\"#2#4\"{Int64})(y::Char)\n      @ Main ./none:0\n    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _all(f::typeof(identity), itr::Base.Generator{String, var\"#2#4\"{Int64}}, #unused#::Colon)\n      @ Base ./reduce.jl:1156\n    [4] all\n      @ ./reduce.jl:1152 [inlined]\n    [5] all\n      @ ./reduce.jl:1070 [inlined]\n    [6] #1\n      @ ./none:0 [inlined]\n    [7] iterate\n      @ ./iterators.jl:447 [inlined]\n    [8] iterate\n      @ ./generator.jl:44 [inlined]\n    [9] grow_to!(dest::Vector{",
      "stderr": "ERROR: LoadError: ",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n\t\"\"\"\nfunction divisible_by_digits(startnum::Int64, endnum::Int64)::Vector{Int64} \n\treturn [x for x in startnum:endnum if all([x % y == 0 for y in digits(x)])]\nend\nusing Test\n\n@testset begin\n\ncandidate = divisible_by_digits;\n\t@test(candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\n\t@test(candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\n\t@test(candidate(20, 25) == [22, 24])\nend\n",
      "timestamp": 1665509871,
      "stdout": "test set: Error During Test at /tmp/tmpp82_tmi5.jl:12\n  Test threw exception\n  Expression: candidate(1, 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)}, st::Int64)\n      @ Base ./array.jl:828\n    [9] grow_to!(dest::Vector{Int64}, itr::Base.Generator{Base.Iterators.Filter{var\"#1#3\", UnitRange{Int64}}, typeof(identity)})\n      @ Base ./array.jl:801\n   [10] collect\n      @ ./array.jl:721 [inlined]\n   [11] divisible_by_digits(startnum::Int64, endnum::Int64)\n      @ Main /tmp/tmpp82_tmi5.jl:5\n   [12] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [13] macro expansion\n      @ /tmp/tmpp82_tmi5.jl:12 [inlined]\n   [14] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [15] top-level scope\n      @ /tmp/tmpp82_tmi5.jl:11\ntest set: Error During Test at /tmp/tmpp82_tmi5.jl:13\n  Test threw exception\n  Expression: candidate(1, 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15]\n  DivideError: integer division error\n  Stacktrace:\n    [1] rem\n      @ ./int.jl:285 [inlined]\n    [2] #2\n      @ ./none:0 [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] collect(itr::Base.Generator{Vector{Int64}, var\"#2#4\"{Int64}})\n      @ Base ./array.jl:724\n    [5] (::var\"#1#3\")(x::Int64)\n      @ Main ./none:0\n    [6] iterate\n      @ ./iterators.jl:447 [inlined]\n    [7] iterate\n      @ ./generator.jl:44 [inlined]\n    [8] grow_to!(dest::Vec",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpp82_tmi5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
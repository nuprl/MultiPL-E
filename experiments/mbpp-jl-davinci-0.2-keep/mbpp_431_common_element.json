{
  "name": "mbpp_431_common_element",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that takes two lists and returns true if they have at least one common element.\n\t\"\"\"\nfunction common_element(list1::Any, list2::Any)::Union{Bool, Nothing} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = common_element;\n\t@test(candidate([1, 2, 3, 4, 5], [5, 6, 7, 8, 9]) == true)\n\t@test(candidate([1, 2, 3, 4, 5], [6, 7, 8, 9]) == nothing)\n\t@test(candidate([\"a\", \"b\", \"c\"], [\"d\", \"b\", \"e\"]) == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tThis function takes two lists and returns true if they have at least one common element.\n\t\"\"\"\n\tif length(list1) == 0 || length(list2) == 0\n\t\treturn nothing\n\tend\n\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tWrite a function that takes two lists and returns true if they have at least one common element.\n\t\"\"\"\n\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tif length(list1) == 0 || length(list2) == 0\n\t\treturn nothing\n\tend\n\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend",
    "\tfor i in list1\n\t\tfor j in list2\n\t\t\tif i == j\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend"
  ]
}
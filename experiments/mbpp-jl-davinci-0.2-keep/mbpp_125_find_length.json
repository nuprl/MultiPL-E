{
  "name": "mbpp_125_find_length",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\nfunction find_length(string::String)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_125_find_length.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = find_length;\n\t@test(candidate(\"11000010001\") == 6)\n\t@test(candidate(\"10111\") == 1)\n\t@test(candidate(\"11011101100101\") == 2)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tn = length(string)\n\tmax_len = 0\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_len = max(max_len, j - i + 1)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tcount = 0\n\tmax_count = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount += 1\n\t\telse\n\t\t\tcount -= 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_count\n\t\t\tmax_count = count\n\t\tend\n\tend\n\treturn max_count\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tzeros += 1\n\t\telse\n\t\t\tones += 1\n\t\tend\n\t\tif zeros == ones\n\t\t\tmax_diff = max(max_diff, zeros + ones)\n\t\tend\n\tend\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tzeros -= 1\n\t\telse\n\t\t\tones -= 1\n\t\tend\n\t\tif zeros == ones\n\t\t\tmax_diff = max(max_diff, zeros + ones)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = zeros(Int64, n)\n\tzeros = zeros(Int64, n)\n\tif string[1] == '1'\n\t\tones[1] = 1\n\telse\n\t\tzeros[1] = 1\n\tend\n\tfor i in 2:n\n\t\tif string[i] == '1'\n\t\t\tones[i] = ones[i-1] + 1\n\t\t\tzeros[i] = zeros[i-1]\n\t\telse\n\t\t\tones[i] = ones[i-1]\n\t\t\tzeros[i] = zeros[i-1] + 1\n\t\tend\n\tend\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tif ones[j] - ones[i-1] == zeros[j] - zeros[i-1]\n\t\t\t\tmax_diff = max(max_diff, j - i + 1)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_len = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_len = max(max_len, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tdiff = count(x -> x == '0', sub_string) - count(x -> x == '1', sub_string)\n\t\t\tmax_diff = max(max_diff, abs(diff))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tdiff = count(x->x=='0',sub_string) - count(x->x=='1',sub_string)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tcount_0 = count(x -> x == '0', string[i:j])\n\t\t\tcount_1 = count(x -> x == '1', string[i:j])\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n \n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0+count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\tend\n\treturn abs(ones - zeros)\nend",
    "\tlen = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i = 1:len\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\tend\n\treturn ones - zeros\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\t\tif ones == zeros\n\t\t\tmax_diff = max(max_diff, ones*2)\n\t\tend\n\tend\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones -= 1\n\t\telse\n\t\t\tzeros -= 1\n\t\tend\n\t\tif ones == zeros\n\t\t\tmax_diff = max(max_diff, ones*2)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_diff = max(max_diff, j - i + 1)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount = 0\n\tmax_count = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount += 1\n\t\telse\n\t\t\tcount -= 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tmax_count = max(max_count, count)\n\tend\n\treturn max_count\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tzeros = 0\n\t\tones = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tzeros += 1\n\t\t\telse\n\t\t\t\tones += 1\n\t\t\tend\n\t\t\tif max_diff < abs(zeros - ones)\n\t\t\t\tmax_diff = abs(zeros - ones)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tcount_0 = 0\n\t\t\tcount_1 = 0\n\t\t\tfor k in i:j\n\t\t\t\tif string[k] == '0'\n\t\t\t\t\tcount_0 += 1\n\t\t\t\telse\n\t\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\t\"\"\"\n\tFind the maximum difference between the number of 0s and number of 1s in any sub-string of the given binary string.\n\t\"\"\"\n\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 -= 1\n\t\telse\n\t\t\tcount_1 -= 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\t\n\t# Initialize variables\n\tmax_diff = 0\n\tcurr_diff = 0\n\t\n\t# Iterate through the string\n\tfor i in 1:length(string)\n\t\t\n\t\t# If the character is a 1, increment the current difference\n\t\tif string[i] == '1'\n\t\t\tcurr_diff += 1\n\t\telse\n\t\t\tcurr_diff -= 1\n\t\tend\n\t\t\n\t\t# If the current difference is 0, reset the max difference\n\t\tif curr_diff == 0\n\t\t\tmax_diff = i\n\t\tend\n\tend\n\t\n\t# Return the max difference\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount = 0\n\tmax_count = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount -= 1\n\t\telse\n\t\t\tcount += 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_count\n\t\t\tmax_count = count\n\t\tend\n\tend\n\treturn max_count\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\t\tif ones == zeros\n\t\t\tmax_len = max(max_len, ones + zeros)\n\t\tend\n\tend\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones -= 1\n\t\telse\n\t\t\tzeros -= 1\n\t\tend\n\t\tif ones == zeros\n\t\t\tmax_len = max(max_len, ones + zeros)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tones = 0\n\tzeros = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tzeros += 1\n\t\telse\n\t\t\tones += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(ones-zeros))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tcount = 0\n\tmax_count = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount -= 1\n\t\telse\n\t\t\tcount += 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_count\n\t\t\tmax_count = count\n\t\tend\n\tend\n\treturn max_count\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_zero = 0\n\tcount_one = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tzeros = 0\n\tones = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tzeros += 1\n\t\telse\n\t\t\tones += 1\n\t\tend\n\t\tif zeros == ones\n\t\t\tmax_diff = max(max_diff, zeros*2)\n\t\tend\n\tend\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tzeros -= 1\n\t\telse\n\t\t\tones -= 1\n\t\tend\n\t\tif zeros == ones\n\t\t\tmax_diff = max(max_diff, zeros*2)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0+count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero*2)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tdiff = count(x->x=='1', sub_string) - count(x->x=='0', sub_string)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_1 = 0\n\tcount_0 = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_1 == count_0\n\t\t\tmax_len = max(max_len, 2*count_1)\n\t\t\tcount_1 = 0\n\t\t\tcount_0 = 0\n\t\tend\n\tend\n\tcount_1 = 0\n\tcount_0 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_1 == count_0 + 1\n\t\t\tmax_len = max(max_len, 2*count_0 + 1)\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = zeros(Int64, n)\n\tzeros = zeros(Int64, n)\n\tif string[1] == '1'\n\t\tones[1] = 1\n\telse\n\t\tzeros[1] = 1\n\tend\n\tfor i in 2:n\n\t\tif string[i] == '1'\n\t\t\tones[i] = ones[i-1] + 1\n\t\t\tzeros[i] = zeros[i-1]\n\t\telse\n\t\t\tones[i] = ones[i-1]\n\t\t\tzeros[i] = zeros[i-1] + 1\n\t\tend\n\tend\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tif max_diff < abs(ones[j] - zeros[j] + zeros[i-1] - ones[i-1])\n\t\t\t\tmax_diff = abs(ones[j] - zeros[j] + zeros[i-1] - ones[i-1])\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount = 0\n\tmax_count = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount += 1\n\t\telse\n\t\t\tcount -= 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_count\n\t\t\tmax_count = count\n\t\tend\n\tend\n\treturn max_count\nend",
    "\tn = length(string)\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_diff = max(max_diff, j - i + 1)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_str = string[i:j]\n\t\t\tzeros = count(x->x=='0',sub_str)\n\t\t\tones = count(x->x=='1',sub_str)\n\t\t\tdiff = abs(zeros-ones)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_len = max(max_len, 2*count_0)\n\t\tend\n\tend\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_len = max(max_len, 2*count_0)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\tend\n\treturn ones - zeros\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_len = max(max_len, 2*count_0)\n\t\tend\n\tend\n\tfor i in 1:n-1\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i+1:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_len = max(max_len, 2*count_0)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 - count_1 > max_diff\n\t\t\t\tmax_diff = count_0 - count_1\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tfor i=1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\tend\n\treturn abs(ones-zeros)\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0+count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tdiff = 0\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tdiff = max(diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_zero = 0\n\tcount_one = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\tend\n\treturn max(ones, zeros)\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0+count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tcount_0 = count(x -> x == '0', sub_string)\n\t\t\tcount_1 = count(x -> x == '1', sub_string)\n\t\t\tdiff = abs(count_0 - count_1)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i = 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tzeros = count(x->x=='0',sub_string)\n\t\t\tones = count(x->x=='1',sub_string)\n\t\t\tdiff = abs(zeros - ones)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_count = 0\n\tcount = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount += 1\n\t\telse\n\t\t\tcount -= 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tif count > max_count\n\t\t\tmax_count = count\n\t\tend\n\tend\n\treturn max_count\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0+count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tzeros = 0\n\tones = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tzeros += 1\n\t\telse\n\t\t\tones += 1\n\t\tend\n\tend\n\treturn abs(zeros - ones)\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount = 0\n\tmax_count = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount += 1\n\t\telse\n\t\t\tcount -= 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tmax_count = max(max_count, count)\n\tend\n\treturn max_count\nend",
    "\tnum_zeros = 0\n\tnum_ones = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tnum_zeros += 1\n\t\telse\n\t\t\tnum_ones += 1\n\t\tend\n\t\tif num_zeros == num_ones\n\t\t\tmax_diff = max(max_diff, num_zeros)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tzeros = 0\n\tones = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tzeros += 1\n\t\telse\n\t\t\tones += 1\n\t\tend\n\t\tif zeros == ones\n\t\t\tmax_diff = max(max_diff, zeros*2)\n\t\tend\n\tend\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tzeros -= 1\n\t\telse\n\t\t\tones -= 1\n\t\tend\n\t\tif zeros == ones\n\t\t\tmax_diff = max(max_diff, zeros*2)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = 0\n\tzeros = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tones += 1\n\t\telse\n\t\t\tzeros += 1\n\t\tend\n\tend\n\treturn max(ones, zeros)\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tfor j = i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tdiff = count(x -> x == '0', sub_string) - count(x -> x == '1', sub_string)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_1 = 0\n\tcount_0 = 0\n\tfor i in 1:n\n\t\tif string[i] == '1'\n\t\t\tcount_1 += 1\n\t\telse\n\t\t\tcount_0 += 1\n\t\tend\n\tend\n\treturn abs(count_1 - count_0)\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    max_diff = 0\n    n = length(string)\n    for i in 1:n\n        zeros = 0\n        ones = 0\n        for j in i:n\n            if string[j] == '0'\n                zeros += 1\n            else\n                ones += 1\n            end\n            max_diff = max(max_diff, abs(zeros - ones))\n        end\n    end\n    return max_diff\nend",
    "\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i = 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero*2)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount = 0\n\tmax_count = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount -= 1\n\t\telse\n\t\t\tcount += 1\n\t\tend\n\t\tif count < 0\n\t\t\tcount = 0\n\t\tend\n\t\tmax_count = max(max_count, count)\n\tend\n\treturn max_count\nend",
    "\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero != count_one\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, count_0 - count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\t# Initialize result \n\tresult = 0\n\t\n\t# Initialize left and right indexes \n\tleft, right = 0, 0\n\t\n\t# Count of zeroes and ones in current window \n\tzero_count, one_count = 0, 0\n\t\n\t# Traverse through the string \n\twhile right < length(string) \n\t\t# If 0 is found, increment zero_count. \n\t\tif string[right] == '0' \n\t\t\tzero_count += 1\n\t\telse # Else increment one_count \n\t\t\tone_count += 1\n\t\tend\n\t\t\n\t\t# If difference between zero_count and one_count is \n\t\t# more than 1, then decrement count of smaller element \n\t\twhile (zero_count > one_count) \n\t\t\t# If 0 is found, decrement zero_count. \n\t\t\tif string[left] == '0' \n\t\t\t\tzero_count -= 1\n\t\t\telse # Else decrement one_count \n\t\t\t\tone_count -= 1\n\t\t\tend\n\t\t\tleft += 1\n\t\tend\n\t\t\n\t\t# Update result if required \n\t\tresult = max(result, right - left + 1)\n\t\tright += 1\n\tend\n\t\n\tresult\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tones = zeros(Int64, n)\n\tzeros = zeros(Int64, n)\n\tif string[1] == '1'\n\t\tones[1] = 1\n\telse\n\t\tzeros[1] = 1\n\tend\n\tfor i in 2:n\n\t\tif string[i] == '1'\n\t\t\tones[i] = ones[i-1] + 1\n\t\t\tzeros[i] = zeros[i-1]\n\t\telse\n\t\t\tzeros[i] = zeros[i-1] + 1\n\t\t\tones[i] = ones[i-1]\n\t\tend\n\tend\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tif abs(ones[j] - zeros[j]) > max_diff\n\t\t\t\tmax_diff = abs(ones[j] - zeros[j])\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tif count_zero == count_one\n\t\t\t\tmax_diff = max(max_diff, j - i + 1)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tn = length(string)\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tdiff = count(x->x=='0', sub_string) - count(x->x=='1', sub_string)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_zero = 0\n\tcount_one = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_len = max(max_len, 2*count_0)\n\t\tend\n\tend\n\tfor i in 1:n-1\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i+1:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_len = max(max_len, 2*count_0)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tzeros = sum(sub_string .== '0')\n\t\t\tones = sum(sub_string .== '1')\n\t\t\tdiff = abs(zeros - ones)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_one == count_zero\n\t\t\tmax_diff = max(max_diff, count_one + count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_zero = 0\n\tcount_one = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero*2)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, count_zero - count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tlength = 0\n\tmax_length = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tlength += 1\n\t\telse\n\t\t\tlength -= 1\n\t\tend\n\t\tif length < 0\n\t\t\tlength = 0\n\t\tend\n\t\tif length > max_length\n\t\t\tmax_length = length\n\t\tend\n\tend\n\treturn max_length\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_0 - count_1))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i in 1:n\n\t\tfor j in i:n\n\t\t\tsub_string = string[i:j]\n\t\t\tcount_0 = count(isequal('0'), sub_string)\n\t\t\tcount_1 = count(isequal('1'), sub_string)\n\t\t\tdiff = abs(count_0 - count_1)\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    n = length(string)\n    max_diff = 0\n    for i in 1:n\n        zeros = 0\n        ones = 0\n        for j in i:n\n            if string[j] == '0'\n                zeros += 1\n            else\n                ones += 1\n            end\n            max_diff = max(max_diff, abs(zeros - ones))\n        end\n    end\n    return max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_len = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_len = max(max_len, 2*count_0)\n\t\tend\n\tend\n\tfor i in 1:n-1\n\t\tcount_0 = 0\n\t\tcount_1 = 0\n\t\tfor j in i+1:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_0 += 1\n\t\t\telse\n\t\t\t\tcount_1 += 1\n\t\t\tend\n\t\t\tif count_0 == count_1\n\t\t\t\tmax_len = max(max_len, 2*count_0)\n\t\t\tend\n\t\tend\n\tend\n\treturn max_len\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tnum_zeros = 0\n\tnum_ones = 0\n\tmax_diff = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tnum_zeros += 1\n\t\telse\n\t\t\tnum_ones += 1\n\t\tend\n\t\tif num_zeros == num_ones\n\t\t\tmax_diff = max(max_diff, num_zeros)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "    n = length(string)\n    max_len = 0\n    for i in 1:n\n        count_zero = 0\n        count_one = 0\n        for j in i:n\n            if string[j] == '0'\n                count_zero += 1\n            else\n                count_one += 1\n            end\n            if count_zero == count_one\n                max_len = max(max_len, j - i + 1)\n            end\n        end\n    end\n    return max_len\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tif count_zero == count_one\n\t\t\tmax_diff = max(max_diff, count_zero + count_one)\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tn = length(string)\n\tones = zeros(Int64, n)\n\tzeros = zeros(Int64, n)\n\tif string[1] == '1'\n\t\tones[1] = 1\n\telse\n\t\tzeros[1] = 1\n\tend\n\tfor i = 2:n\n\t\tif string[i] == '1'\n\t\t\tones[i] = ones[i-1] + 1\n\t\t\tzeros[i] = zeros[i-1]\n\t\telse\n\t\t\tzeros[i] = zeros[i-1] + 1\n\t\t\tones[i] = ones[i-1]\n\t\tend\n\tend\n\tmax_diff = 0\n\tfor i = 1:n\n\t\tfor j = i:n\n\t\t\tdiff = abs(ones[j] - ones[i-1]) - abs(zeros[j] - zeros[i-1])\n\t\t\tif diff > max_diff\n\t\t\t\tmax_diff = diff\n\t\t\tend\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tmax_diff = 0\n\tcount_zero = 0\n\tcount_one = 0\n\tfor i in 1:length(string)\n\t\tif string[i] == '0'\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tcount_one += 1\n\t\tend\n\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\tend\n\treturn abs(count_0 - count_1)\nend",
    "\tmax_diff = 0\n\tn = length(string)\n\tfor i = 1:n\n\t\tcount_zero = 0\n\t\tcount_one = 0\n\t\tfor j = i:n\n\t\t\tif string[j] == '0'\n\t\t\t\tcount_zero += 1\n\t\t\telse\n\t\t\t\tcount_one += 1\n\t\t\tend\n\t\t\tmax_diff = max(max_diff, abs(count_zero - count_one))\n\t\tend\n\tend\n\treturn max_diff\nend",
    "\tn = length(string)\n\tcount_0 = 0\n\tcount_1 = 0\n\tmax_diff = 0\n\tfor i in 1:n\n\t\tif string[i] == '0'\n\t\t\tcount_0 += 1\n\t\telse\n\t\t\tcount_1 += 1\n\t\tend\n\t\tif count_0 == count_1\n\t\t\tmax_diff = max(max_diff, count_0 + count_1)\n\t\tend\n\tend\n\treturn max_diff\nend"
  ]
}
{
  "name": "mbpp_559_max_sub_array_sum",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_559_max_sub_array_sum.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\t\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptu2hfole.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptu2hfole.jl:1\nin expression starting at /tmp/tmptu2hfole.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\tmax_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i = 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptu2hfole.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptu2hfole.jl:1\nin expression starting at /tmp/tmptu2hfole.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\telseif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i = 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n    max_so_far = 0\n    max_ending_here = 0\n    for i in 1:size\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0\n            max_ending_here = 0\n        end\n        if max_so_far < max_ending_here\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaoyem956.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaoyem956.jl:1\nin expression starting at /tmp/tmpaoyem956.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\t\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaoyem956.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaoyem956.jl:1\nin expression starting at /tmp/tmpaoyem956.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaoyem956.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaoyem956.jl:1\nin expression starting at /tmp/tmpaoyem956.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\t\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdra_pezj.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdra_pezj.jl:1\nin expression starting at /tmp/tmpdra_pezj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i = 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n    max_so_far = -Inf\n    max_ending_here = 0\n    start = 1\n    finish = 0\n    s = 1\n    for i in 1:size\n        max_ending_here = max_ending_here + a[i]\n        if max_so_far < max_ending_here\n            max_so_far = max_ending_here\n            start = s\n            finish = i\n        end\n        if max_ending_here < 0\n            max_ending_here = 0\n            s = i + 1\n        end\n    end\n    return max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptu2hfole.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptu2hfole.jl:1\nin expression starting at /tmp/tmptu2hfole.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i = 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n    max_so_far = a[1] \n    curr_max = a[1] \n    for i in 2:size \n        curr_max = max(a[i], curr_max + a[i]) \n        max_so_far = max(max_so_far, curr_max) \n    end\n    return max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\t\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdra_pezj.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdra_pezj.jl:1\nin expression starting at /tmp/tmpdra_pezj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n    max_so_far = 0\n    max_ending_here = 0\n    for i in 1:size\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0\n            max_ending_here = 0\n        end\n        if max_so_far < max_ending_here\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\t\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdra_pezj.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdra_pezj.jl:1\nin expression starting at /tmp/tmpdra_pezj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n    max_so_far = 0\n    max_ending_here = 0\n    for i in 1:size\n        max_ending_here = max_ending_here + a[i]\n        if max_ending_here < 0\n            max_ending_here = 0\n        end\n        if max_so_far < max_ending_here\n            max_so_far = max_ending_here\n        end\n    end\n    return max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\t\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpdra_pezj.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpdra_pezj.jl:1\nin expression starting at /tmp/tmpdra_pezj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = -Inf\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaoyem956.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaoyem956.jl:1\nin expression starting at /tmp/tmpaoyem956.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\t\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i = 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaoyem956.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaoyem956.jl:1\nin expression starting at /tmp/tmpaoyem956.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i = 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\tfor i in 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \n\t\n\tfor i = 2:size \n\t\tcurr_max = max(a[i], curr_max + a[i]) \n\t\tmax_so_far = max(max_so_far, curr_max) \n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1]\n\tcurr_max = a[1]\n\tfor i in 2:size\n\t\tcurr_max = max(a[i], curr_max + a[i])\n\t\tmax_so_far = max(max_so_far, curr_max)\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = 0\n\tmax_ending_here = 0\n\tfor i in 1:size\n\t\tmax_ending_here = max_ending_here + a[i]\n\t\tif max_ending_here < 0\n\t\t\tmax_ending_here = 0\n\t\tend\n\t\tif max_so_far < max_ending_here\n\t\t\tmax_so_far = max_ending_here\n\t\tend\n\tend\n\treturn max_so_far\nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1665510436,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n\tmax_so_far = a[1] \n\tcurr_max = a[1] \nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123184,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpaoyem956.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpaoyem956.jl:1\nin expression starting at /tmp/tmpaoyem956.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function to find the sum of the largest contiguous sublist in the given list.\n\t\"\"\"\nfunction max_sub_array_sum(a::Vector{Int64}, size::Int64)::Int64 \n    max_so_far = a[1] \n    curr_max = a[1] \n      \n    for i = 2:size \n        curr_max = max(a[i], curr_max + a[i]) \n        max_so_far = max(max_so_far, curr_max) \n    end\n    return max_so_far \nend\nusing Test\n\n@testset begin\n\ncandidate = max_sub_array_sum;\n\t@test(candidate([-2, -3, 4, -1, -2, 1, 5, -3], 8) == 7)\n\t@test(candidate([-3, -4, 5, -2, -3, 2, 6, -4], 8) == 8)\n\t@test(candidate([-4, -5, 6, -3, -4, 3, 7, -5], 8) == 10)\nend\n",
      "timestamp": 1666123183,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
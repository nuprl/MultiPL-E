{
  "name": "mbpp_632_move_zero",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_632_move_zero.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function takes a list of integers as input and returns a list with all zeros at the end.\n\t\"\"\"\n\t\n\t# Initialize a counter variable\n\tcounter = 0\n\t\n\t# Iterate through the list\n\tfor i in 1:length(num_list)\n\t\t\n\t\t# If the element is not zero, then replace the element at index 'counter' with this element\n\t\tif num_list[i] != 0\n\t\t\tnum_list[counter] = num_list[i]\n\t\t\tcounter += 1\n\t\tend\n\tend\n\t\n\t# Now all non-zero elements have been shifted to front and 'counter' is set as index of first 0.\n\t# Make all elements 0 from counter till end of list\n\twhile counter < length(num_list)\n\t\tnum_list[counter] = 0\n\t\tcounter += 1\n\tend\n\t\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmp4cf7t090.jl:36\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp4cf7t090.jl:17\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4cf7t090.jl:36 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4cf7t090.jl:35\ntest set: Error During Test at /tmp/tmp4cf7t090.jl:37\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp4cf7t090.jl:17\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4cf7t090.jl:37 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp4cf7t090.jl:35\ntest set: Error During Test at /tmp/tmp4cf7t090.jl:38\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp4cf7t090.jl:17\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp4cf7t090.jl:38 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp4cf7t090.jl:33\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tFunction to move all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize a new list\n\tnew_list = []\n\t# Initialize a counter\n\tcount = 0\n\t# Loop over the list\n\tfor i in num_list\n\t\t# If the element is not zero\n\t\tif i != 0\n\t\t\t# Append the element to the new list\n\t\t\tpush!(new_list, i)\n\t\telse\n\t\t\t# Increment the counter\n\t\t\tcount += 1\n\t\tend\n\tend\n\t# Append the zeroes to the new list\n\tfor i in 1:count\n\t\tpush!(new_list, 0)\n\tend\n\t# Return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_pos = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_pos, i)\n        end\n    end\n    for i in 1:length(zero_pos)\n        num_list[zero_pos[i]] = num_list[zero_pos[i]-i]\n        num_list[zero_pos[i]-i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Test Failed at /tmp/tmpoibts3vr.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 2, 1, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoibts3vr.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoibts3vr.jl:21\ntest set: Test Failed at /tmp/tmpoibts3vr.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 0, 0, 0, 4, 2, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpoibts3vr.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpoibts3vr.jl:21\ntest set: Error During Test at /tmp/tmpoibts3vr.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex(A::Vector{Int64}, i1::Int64)\n     @ Base ./array.jl:861\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpoibts3vr.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpoibts3vr.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpoibts3vr.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpoibts3vr.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t\n\t# Initialize a new list to store the result\n\tresult = []\n\t\n\t# Initialize a counter to store the number of zeros\n\tzero_counter = 0\n\t\n\t# Loop through the list\n\tfor i in num_list\n\t\t# If the element is not zero, append it to the result\n\t\tif i != 0\n\t\t\tpush!(result, i)\n\t\telse\n\t\t\t# If the element is zero, increment the counter\n\t\t\tzero_counter += 1\n\t\tend\n\tend\n\t\n\t# Append the zeros to the end of the result\n\tfor i in 1:zero_counter\n\t\tpush!(result, 0)\n\tend\n\t\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\n\t\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510505,
      "stdout": "test set: Test Failed at /tmp/tmprcnr0xdk.jl:14\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprcnr0xdk.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprcnr0xdk.jl:13\ntest set: Test Failed at /tmp/tmprcnr0xdk.jl:15\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprcnr0xdk.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprcnr0xdk.jl:13\ntest set: Test Failed at /tmp/tmprcnr0xdk.jl:16\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprcnr0xdk.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprcnr0xdk.jl:13\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprcnr0xdk.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i != 0\n\t\t\tpush!(non_zero_list, i)\n\t\telse\n\t\t\tpush!(zero_list, i)\n\t\tend\n\tend\n\treturn [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros to the end of the list.\n\t\"\"\"\n\tn = length(num_list)\n\tcount = 0\n\tfor i in 1:n\n\t\tif num_list[i] != 0\n\t\t\tnum_list[count] = num_list[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < n\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmp878rikyg.jl:27\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp878rikyg.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp878rikyg.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp878rikyg.jl:26\ntest set: Error During Test at /tmp/tmp878rikyg.jl:28\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp878rikyg.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp878rikyg.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp878rikyg.jl:26\ntest set: Error During Test at /tmp/tmp878rikyg.jl:29\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp878rikyg.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp878rikyg.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp878rikyg.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize a new list\n\tnew_list = []\n\t# Initialize a counter\n\tcounter = 0\n\t# Loop through the list\n\tfor i in num_list\n\t\t# If the number is not zero, append it to the new list\n\t\tif i != 0\n\t\t\tpush!(new_list, i)\n\t\telse\n\t\t\t# Increment the counter\n\t\t\tcounter += 1\n\t\tend\n\tend\n\t# Append the zeroes to the end of the new list\n\tfor i in 1:counter\n\t\tpush!(new_list, 0)\n\tend\n\t# Return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    j = length(num_list)\n    for i in 1:length(num_list)\n        if num_list[i] != 0\n            num_list[j] = num_list[i]\n            j -= 1\n        end\n    end\n    for i in 1:j\n        num_list[i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510505,
      "stdout": "test set: Test Failed at /tmp/tmpa9uxvlui.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 1, 2, 2, 1] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9uxvlui.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9uxvlui.jl:21\ntest set: Test Failed at /tmp/tmpa9uxvlui.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [0, 0, 2, 3, 2, 4, 2, 3, 2] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9uxvlui.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9uxvlui.jl:21\ntest set: Test Failed at /tmp/tmpa9uxvlui.jl:24\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 0, 1, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9uxvlui.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9uxvlui.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpa9uxvlui.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return non_zero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmpgohc539c.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpgohc539c.jl:20\ntest set: Error During Test at /tmp/tmpgohc539c.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpgohc539c.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize the output list\n\toutput_list = []\n\t# Initialize the count of zeroes\n\tcount_zero = 0\n\t# Loop through the given list\n\tfor i in num_list\n\t\t# If the element is not zero\n\t\tif i != 0\n\t\t\t# Append the element to the output list\n\t\t\tpush!(output_list, i)\n\t\telse\n\t\t\t# Increment the count of zeroes\n\t\t\tcount_zero += 1\n\t\tend\n\tend\n\t# Append zeroes to the output list\n\tfor i in 1:count_zero\n\t\tpush!(output_list, 0)\n\tend\n\t# Return the output list\n\treturn output_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    for i in count:n\n        num_list[i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpxt5kfoac.jl:23\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxt5kfoac.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt5kfoac.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxt5kfoac.jl:22\ntest set: Error During Test at /tmp/tmpxt5kfoac.jl:24\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxt5kfoac.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt5kfoac.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxt5kfoac.jl:22\ntest set: Error During Test at /tmp/tmpxt5kfoac.jl:25\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxt5kfoac.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt5kfoac.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxt5kfoac.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    j = 0\n    for i in 1:length(num_list)\n        if num_list[i] != 0\n            num_list[j] = num_list[i]\n            j += 1\n        end\n    end\n    for i in j:length(num_list)\n        num_list[i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmp3ejzn0gu.jl:22\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp3ejzn0gu.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3ejzn0gu.jl:22 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3ejzn0gu.jl:21\ntest set: Error During Test at /tmp/tmp3ejzn0gu.jl:23\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp3ejzn0gu.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3ejzn0gu.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3ejzn0gu.jl:21\ntest set: Error During Test at /tmp/tmp3ejzn0gu.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp3ejzn0gu.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3ejzn0gu.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3ejzn0gu.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[zero_index[i] - i]\n        num_list[zero_index[i] - i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Test Failed at /tmp/tmp2dbbdtin.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 2, 1, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dbbdtin.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dbbdtin.jl:21\ntest set: Test Failed at /tmp/tmp2dbbdtin.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 0, 0, 0, 4, 2, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2dbbdtin.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2dbbdtin.jl:21\ntest set: Error During Test at /tmp/tmp2dbbdtin.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex(A::Vector{Int64}, i1::Int64)\n     @ Base ./array.jl:861\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp2dbbdtin.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2dbbdtin.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2dbbdtin.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp2dbbdtin.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# Your code here\n\t\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpsggfezau.jl:14\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsggfezau.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsggfezau.jl:13\ntest set: Test Failed at /tmp/tmpsggfezau.jl:15\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsggfezau.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsggfezau.jl:13\ntest set: Test Failed at /tmp/tmpsggfezau.jl:16\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsggfezau.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsggfezau.jl:13\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsggfezau.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = filter(x->x!=0, num_list)\n    zero_list = filter(x->x==0, num_list)\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros to the end of the list.\n\t\"\"\"\n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# Write your code here\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpim24oi4w.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpim24oi4w.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpim24oi4w.jl:12\ntest set: Test Failed at /tmp/tmpim24oi4w.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpim24oi4w.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpim24oi4w.jl:12\ntest set: Test Failed at /tmp/tmpim24oi4w.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpim24oi4w.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpim24oi4w.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpim24oi4w.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function takes a list of integers as input and returns a list with all zeros at the end.\n\t\"\"\"\n\t\n\t# Initialize a counter variable to keep track of the number of zeros in the list.\n\tcount = 0\n\t\n\t# Iterate over the list and count the number of zeros.\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tcount += 1\n\t\tend\n\tend\n\t\n\t# Create a new list with the same length as the input list.\n\tnew_list = zeros(Int64, length(num_list))\n\t\n\t# Iterate over the input list and append the non-zero elements to the new list.\n\tfor i in num_list\n\t\tif i != 0\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\t\n\t# Append the required number of zeros to the end of the new list.\n\tfor i in 1:count\n\t\tpush!(new_list, 0)\n\tend\n\t\n\t# Return the new list.\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpjjlqog_4.jl:42\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 0, 0] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlqog_4.jl:42 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlqog_4.jl:41\ntest set: Test Failed at /tmp/tmpjjlqog_4.jl:43\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 2, 4, 5, 0, 0, 0, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlqog_4.jl:43 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlqog_4.jl:41\ntest set: Test Failed at /tmp/tmpjjlqog_4.jl:44\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 0, 0, 0, 0, 1, 1, 1, 0, 0] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpjjlqog_4.jl:44 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpjjlqog_4.jl:41\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpjjlqog_4.jl:39\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros to the end of the list.\n\t\"\"\"\n\t# Initialize the count variable.\n\tcount = 0\n\t# Iterate over the list.\n\tfor i in num_list\n\t\t# Check if the element is not zero.\n\t\tif i != 0\n\t\t\t# Swap the element with the count variable.\n\t\t\tnum_list[count] = i\n\t\t\tcount += 1\n\t\tend\n\tend\n\t# Iterate over the list.\n\tfor i in count:length(num_list)\n\t\t# Assign zero to the elements.\n\t\tnum_list[i] = 0\n\tend\n\t# Return the list.\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpzd42uy74.jl:32\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpzd42uy74.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzd42uy74.jl:32 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzd42uy74.jl:31\ntest set: Error During Test at /tmp/tmpzd42uy74.jl:33\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpzd42uy74.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzd42uy74.jl:33 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpzd42uy74.jl:31\ntest set: Error During Test at /tmp/tmpzd42uy74.jl:34\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpzd42uy74.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpzd42uy74.jl:34 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpzd42uy74.jl:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize the variables\n\ti = 1\n\tj = 1\n\t# Loop through the list\n\twhile i <= length(num_list)\n\t\t# If the element is not zero\n\t\tif num_list[i] != 0\n\t\t\t# Swap the elements\n\t\t\tnum_list[i], num_list[j] = num_list[j], num_list[i]\n\t\t\t# Increment the index\n\t\t\tj += 1\n\t\tend\n\t\t# Increment the index\n\t\ti += 1\n\tend\n\t# Return the list\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros of a list to the end of the list.\n\t\"\"\"\n\t# Initialize the list of non-zeros\n\tnon_zero_list = []\n\t# Initialize the list of zeros\n\tzero_list = []\n\t# Iterate over the list\n\tfor i in num_list\n\t\t# If the element is non-zero, append it to the non-zero list\n\t\tif i != 0\n\t\t\tpush!(non_zero_list, i)\n\t\telse\n\t\t\t# If the element is zero, append it to the zero list\n\t\t\tpush!(zero_list, i)\n\t\tend\n\tend\n\t# Concatenate the non-zero list with the zero list\n\treturn [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize the output list\n\tout_list = []\n\t# Initialize the count of zeroes\n\tcount_zero = 0\n\t# Loop over the input list\n\tfor i in num_list\n\t\t# If the element is non-zero\n\t\tif i != 0\n\t\t\t# Append the element to the output list\n\t\t\tpush!(out_list, i)\n\t\telse\n\t\t\t# Increment the count of zeroes\n\t\t\tcount_zero += 1\n\t\tend\n\tend\n\t# Append the zeroes to the output list\n\tfor i in 1:count_zero\n\t\tpush!(out_list, 0)\n\tend\n\t# Return the output list\n\treturn out_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmptuywff3z.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmptuywff3z.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmptuywff3z.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmptuywff3z.jl:11\ntest set: Error During Test at /tmp/tmptuywff3z.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmptuywff3z.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmptuywff3z.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    for i in count:n\n        num_list[i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpxt5kfoac.jl:23\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxt5kfoac.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt5kfoac.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxt5kfoac.jl:22\ntest set: Error During Test at /tmp/tmpxt5kfoac.jl:24\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxt5kfoac.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt5kfoac.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxt5kfoac.jl:22\ntest set: Error During Test at /tmp/tmpxt5kfoac.jl:25\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxt5kfoac.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxt5kfoac.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxt5kfoac.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmp56y8ky4h.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56y8ky4h.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56y8ky4h.jl:11\ntest set: Error During Test at /tmp/tmp56y8ky4h.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp56y8ky4h.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t\n\t# Initialize the counter\n\tcounter = 0\n\t\n\t# Iterate over the list\n\tfor i in 1:length(num_list)\n\t\t\n\t\t# If the element is not zero, swap it with the element at the counter\n\t\tif num_list[i] != 0\n\t\t\tnum_list[i], num_list[counter] = num_list[counter], num_list[i]\n\t\t\tcounter += 1\n\t\tend\n\tend\n\t\n\t# Return the list\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpxde_7_qe.jl:30\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxde_7_qe.jl:17\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxde_7_qe.jl:30 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxde_7_qe.jl:29\ntest set: Error During Test at /tmp/tmpxde_7_qe.jl:31\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxde_7_qe.jl:17\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxde_7_qe.jl:31 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpxde_7_qe.jl:29\ntest set: Error During Test at /tmp/tmpxde_7_qe.jl:32\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpxde_7_qe.jl:17\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpxde_7_qe.jl:32 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpxde_7_qe.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tj = 1\n\tfor i in 1:length(num_list)\n\t\tif num_list[i] != 0\n\t\t\tnum_list[j] = num_list[i]\n\t\t\tj += 1\n\t\tend\n\tend\n\tfor i in j:length(num_list)\n\t\tnum_list[i] = 0\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t# find the index of all zeros\n\tzero_index = findall(num_list .== 0)\n\t# find the index of all non-zeros\n\tnonzero_index = findall(num_list .!= 0)\n\t# create a new list with the non-zeros\n\tnew_list = num_list[nonzero_index]\n\t# append the zeros to the end of the new list\n\tnew_list = append!(new_list, num_list[zero_index])\n\t# return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = findall(num_list .== 0)\n    non_zero_index = findall(num_list .!= 0)\n    num_list[zero_index] = num_list[non_zero_index]\n    num_list[non_zero_index] = 0\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmpf8_j7af7.jl:16\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"tried to assign 4 elements to 2 destinations\")\n  Stacktrace:\n   [1] throw_setindex_mismatch(X::Vector{Int64}, I::Tuple{Int64})\n     @ Base ./indices.jl:191\n   [2] setindex_shape_check\n     @ ./indices.jl:245 [inlined]\n   [3] setindex!\n     @ ./array.jl:910 [inlined]\n   [4] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf8_j7af7.jl:7\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpf8_j7af7.jl:16 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpf8_j7af7.jl:15\ntest set: Error During Test at /tmp/tmpf8_j7af7.jl:17\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"tried to assign 5 elements to 4 destinations\")\n  Stacktrace:\n   [1] throw_setindex_mismatch(X::Vector{Int64}, I::Tuple{Int64})\n     @ Base ./indices.jl:191\n   [2] setindex_shape_check\n     @ ./indices.jl:245 [inlined]\n   [3] setindex!\n     @ ./array.jl:910 [inlined]\n   [4] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf8_j7af7.jl:7\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [6] macro expansion\n     @ /tmp/tmpf8_j7af7.jl:17 [inlined]\n   [7] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [8] top-level scope\n     @ /tmp/tmpf8_j7af7.jl:15\ntest set: Error During Test at /tmp/tmpf8_j7af7.jl:18\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  DimensionMismatch(\"tried to assign 3 elements to 2 destinations\")\n  Stacktrace:\n   [1] throw_setindex_mismatch(X::Vector{Int64}, I::Tuple{Int64})\n     @ Base ./indices",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf8_j7af7.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeroes to the end of the given list.\n\t\"\"\"\n\t\n\t# Initialize the list to be returned\n\tnew_list = []\n\t\n\t# Initialize the number of zeroes\n\tnum_zeroes = 0\n\t\n\t# Loop through the list\n\tfor i in 1:length(num_list)\n\t\t\n\t\t# If the number is not zero, append it to the new list\n\t\tif num_list[i] != 0\n\t\t\tpush!(new_list, num_list[i])\n\t\telse\n\t\t\t# If the number is zero, increment the number of zeroes\n\t\t\tnum_zeroes += 1\n\t\tend\n\tend\n\t\n\t# Append the zeroes to the end of the list\n\tfor i in 1:num_zeroes\n\t\tpush!(new_list, 0)\n\tend\n\t\n\t# Return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510503,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpfemxz9o7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\ntest set: Test Failed at /tmp/tmpfemxz9o7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\ntest set: Test Failed at /tmp/tmpfemxz9o7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfemxz9o7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros in a list to the end of the list.\n\t\"\"\"\n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[zero_index[i]-i]\n        num_list[zero_index[i]-i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "test set: Test Failed at /tmp/tmp5xqrhopi.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 2, 1, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Test Failed at /tmp/tmp5xqrhopi.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 0, 0, 0, 4, 2, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Error During Test at /tmp/tmp5xqrhopi.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex(A::Vector{Int64}, i1::Int64)\n     @ Base ./array.jl:861\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp5xqrhopi.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5xqrhopi.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5xqrhopi.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp5xqrhopi.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\n\t\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "test set: Error During Test at /tmp/tmprafd_sha.jl:13\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmprafd_sha.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmprafd_sha.jl:13 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmprafd_sha.jl:12\ntest set: Error During Test at /tmp/tmprafd_sha.jl:14\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmprafd_sha.jl:7\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmprafd_sha.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn non_zero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmp63czj0nb.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmp63czj0nb.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp63czj0nb.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp63czj0nb.jl:20\ntest set: Error During Test at /tmp/tmp63czj0nb.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmp63czj0nb.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp63czj0nb.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp63czj0nb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmp56y8ky4h.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56y8ky4h.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56y8ky4h.jl:11\ntest set: Error During Test at /tmp/tmp56y8ky4h.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp56y8ky4h.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpipej6_d7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpipej6_d7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t\n\t# Initialize a new list\n\tnew_list = []\n\t\n\t# Append all non-zero elements to the new list\n\tfor i in num_list\n\t\tif i != 0\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\t\n\t# Append all zeroes to the new list\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\t\n\t# Return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn non_zero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmp63czj0nb.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmp63czj0nb.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp63czj0nb.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmp63czj0nb.jl:20\ntest set: Error During Test at /tmp/tmp63czj0nb.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmp63czj0nb.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmp63czj0nb.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp63czj0nb.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    new_list = []\n    for i in num_list\n        if i != 0\n            push!(new_list, i)\n        end\n    end\n    for i in num_list\n        if i == 0\n            push!(new_list, i)\n        end\n    end\n    return new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# YOUR CODE HERE\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Test Failed at /tmp/tmpuymz1w0a.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuymz1w0a.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuymz1w0a.jl:12\ntest set: Test Failed at /tmp/tmpuymz1w0a.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuymz1w0a.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuymz1w0a.jl:12\ntest set: Test Failed at /tmp/tmpuymz1w0a.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuymz1w0a.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuymz1w0a.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuymz1w0a.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpipej6_d7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpipej6_d7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\n\t# Initialize an empty vector to store the non-zero elements\n\tnon_zero_vec = Int64[]\n\t\n\t# Initialize an empty vector to store the zero elements\n\tzero_vec = Int64[]\n\t\n\t# Loop through the input list\n\tfor i in num_list\n\t\t\n\t\t# If the element is non-zero, append it to the non-zero vector\n\t\tif i != 0\n\t\t\tpush!(non_zero_vec, i)\n\t\t\t\n\t\t# If the element is zero, append it to the zero vector\n\t\telse\n\t\t\tpush!(zero_vec, i)\n\t\tend\n\tend\n\t\n\t# Concatenate the non-zero vector and the zero vector\n\treturn vcat(non_zero_vec, zero_vec)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros to the end of the list.\n\t\"\"\"\n\t# Initialize a new list\n\tnew_list = []\n\t# Initialize a counter\n\tcount = 0\n\t# Loop through the list\n\tfor i in num_list\n\t\t# Check if the element is zero\n\t\tif i == 0\n\t\t\t# Increment the counter\n\t\t\tcount += 1\n\t\telse\n\t\t\t# Append the element to the new list\n\t\t\tpush!(new_list, i)\n\t\tend\n\tend\n\t# Append the zeros to the new list\n\tfor i in 1:count\n\t\tpush!(new_list, 0)\n\tend\n\t# Return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123949,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize the index of the first zero\n\tfirst_zero_index = 0\n\tfor i in 1:length(num_list)\n\t\tif num_list[i] != 0\n\t\t\tnum_list[first_zero_index] = num_list[i]\n\t\t\tfirst_zero_index += 1\n\t\tend\n\tend\n\tfor i in first_zero_index:length(num_list)\n\t\tnum_list[i] = 0\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "test set: Error During Test at /tmp/tmpozjxw8sg.jl:26\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpozjxw8sg.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpozjxw8sg.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpozjxw8sg.jl:25\ntest set: Error During Test at /tmp/tmpozjxw8sg.jl:27\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpozjxw8sg.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpozjxw8sg.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpozjxw8sg.jl:25\ntest set: Error During Test at /tmp/tmpozjxw8sg.jl:28\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpozjxw8sg.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpozjxw8sg.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpozjxw8sg.jl:23\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[zero_index[i]-i]\n        num_list[zero_index[i]-i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "test set: Test Failed at /tmp/tmp5xqrhopi.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 2, 1, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Test Failed at /tmp/tmp5xqrhopi.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 0, 0, 0, 4, 2, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Error During Test at /tmp/tmp5xqrhopi.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex(A::Vector{Int64}, i1::Int64)\n     @ Base ./array.jl:861\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp5xqrhopi.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5xqrhopi.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5xqrhopi.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp5xqrhopi.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return non_zero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmpgohc539c.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpgohc539c.jl:20\ntest set: Error During Test at /tmp/tmpgohc539c.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpgohc539c.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    Move all zeros to the end of the list.\n    \"\"\"\n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "test set: Error During Test at /tmp/tmppmufnoyq.jl:27\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmppmufnoyq.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppmufnoyq.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppmufnoyq.jl:26\ntest set: Error During Test at /tmp/tmppmufnoyq.jl:28\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmppmufnoyq.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppmufnoyq.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmppmufnoyq.jl:26\ntest set: Error During Test at /tmp/tmppmufnoyq.jl:29\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmppmufnoyq.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmppmufnoyq.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmppmufnoyq.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function takes a list of integers as input and returns a list with all zeros at the end.\n\t\"\"\"\n\t\n\t# Initialize a new list to store the result\n\tresult = []\n\t\n\t# Initialize a counter to count the number of zeros\n\tcount_zero = 0\n\t\n\t# Loop through the list\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tcount_zero += 1\n\t\telse\n\t\t\tpush!(result, i)\n\t\tend\n\tend\n\t\n\t# Append zeros to the result\n\tfor i in 1:count_zero\n\t\tpush!(result, 0)\n\tend\n\t\n\treturn result\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # your code goes here\n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy4qpyhr5.jl:1\nin expression starting at /tmp/tmpy4qpyhr5.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    nonzero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(nonzero_list, i)\n        end\n    end\n    return nonzero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Error During Test at /tmp/tmpvki9siki.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpvki9siki.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpvki9siki.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpvki9siki.jl:20\ntest set: Error During Test at /tmp/tmpvki9siki.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpvki9siki.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpvki9siki.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpvki9siki.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpipej6_d7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpipej6_d7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Error During Test at /tmp/tmp158g5dqd.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp158g5dqd.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp158g5dqd.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp158g5dqd.jl:11\ntest set: Error During Test at /tmp/tmp158g5dqd.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp158g5dqd.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp158g5dqd.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmp56y8ky4h.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56y8ky4h.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56y8ky4h.jl:11\ntest set: Error During Test at /tmp/tmp56y8ky4h.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp56y8ky4h.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tcount = 0\n\tfor i in 1:length(num_list)\n\t\tif num_list[i] != 0\n\t\t\tnum_list[count] = num_list[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < length(num_list)\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "test set: Error During Test at /tmp/tmphjjg38jo.jl:23\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmphjjg38jo.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphjjg38jo.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmphjjg38jo.jl:22\ntest set: Error During Test at /tmp/tmphjjg38jo.jl:24\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmphjjg38jo.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphjjg38jo.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmphjjg38jo.jl:22\ntest set: Error During Test at /tmp/tmphjjg38jo.jl:25\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmphjjg38jo.jl:8\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmphjjg38jo.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmphjjg38jo.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i != 0\n            push!(non_zero_list, i)\n        else\n            push!(zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeroes to the end of the given list.\n\t\"\"\"\n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_count = 0\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            zero_count += 1\n        else\n            num_list[i - zero_count] = num_list[i]\n        end\n    end\n    for i in 1:zero_count\n        num_list[end - i + 1] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all the zeros to the end of the list.\n\t\"\"\"\n\tj = 1\n\tfor i in 1:length(num_list)\n\t\tif num_list[i] != 0\n\t\t\tnum_list[j] = num_list[i]\n\t\t\tj += 1\n\t\tend\n\tend\n\tfor i in j:length(num_list)\n\t\tnum_list[i] = 0\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# Write your code here\n\t\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "test set: Test Failed at /tmp/tmpqq2swcqi.jl:14\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq2swcqi.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq2swcqi.jl:13\ntest set: Test Failed at /tmp/tmpqq2swcqi.jl:15\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq2swcqi.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq2swcqi.jl:13\ntest set: Test Failed at /tmp/tmpqq2swcqi.jl:16\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpqq2swcqi.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpqq2swcqi.jl:13\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpqq2swcqi.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "test set: Test Failed at /tmp/tmpfxl2ky1n.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfxl2ky1n.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfxl2ky1n.jl:12\ntest set: Test Failed at /tmp/tmpfxl2ky1n.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfxl2ky1n.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfxl2ky1n.jl:12\ntest set: Test Failed at /tmp/tmpfxl2ky1n.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfxl2ky1n.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfxl2ky1n.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfxl2ky1n.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    n = length(num_list)\n    count = 0\n    for i in 1:n\n        if num_list[i] != 0\n            num_list[count] = num_list[i]\n            count += 1\n        end\n    end\n    while count < n\n        num_list[count] = 0\n        count += 1\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Error During Test at /tmp/tmpf6alds5h.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpf6alds5h.jl:23\ntest set: Error During Test at /tmp/tmpf6alds5h.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpf6alds5h.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpf6alds5h.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpf6alds5h.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list..., zero_list...]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123948,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = filter(x -> x != 0, num_list)\n\tzero_list = filter(x -> x == 0, num_list)\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tj = 1\n\tfor i in 1:length(num_list)\n\t\tif num_list[i] != 0\n\t\t\tnum_list[j] = num_list[i]\n\t\t\tj += 1\n\t\tend\n\tend\n\tfor i in j:length(num_list)\n\t\tnum_list[i] = 0\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tFunction to move all zeroes to the end of the given list.\n\t\"\"\"\n\tnon_zero_list = filter(x -> x != 0, num_list)\n\tzero_list = fill(0, length(num_list) - length(non_zero_list))\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tMove all zeroes to the end of the given list.\n\t\"\"\"\n\t# Create a new list\n\tnew_list = []\n\t# Create a counter for the number of zeroes\n\tcounter = 0\n\t# Loop through the list\n\tfor i in num_list\n\t\t# If the number is not zero\n\t\tif i != 0\n\t\t\t# Append it to the new list\n\t\t\tpush!(new_list, i)\n\t\telse\n\t\t\t# Increment the counter\n\t\t\tcounter += 1\n\t\tend\n\tend\n\t# Append the zeroes to the end of the new list\n\tfor i in 1:counter\n\t\tpush!(new_list, 0)\n\tend\n\t# Return the new list\n\treturn new_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpipej6_d7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\ntest set: Test Failed at /tmp/tmpipej6_d7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpipej6_d7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpipej6_d7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpipej6_d7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    non_zero_list = []\n    zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# num_list = [0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\t# num_list = [10,20,30,40,50]\n\t# num_list = [0,0,0,10,20,30,40,50]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,20,30,40,50]\n\t# num_list = [10,20,30,40,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,20,30,40,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,20,30,40,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpufiikmqj.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpufiikmqj.jl:1\nin expression starting at /tmp/tmpufiikmqj.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function takes a list of integers as input and returns a list with all zeros at the end.\n\t\"\"\"\n\t\n\t# Initialize a counter to keep track of the number of zeros in the list\n\tcount = 0\n\t\n\t# Iterate over the list\n\tfor i in 1:length(num_list)\n\t\t# If the element is not zero, then swap it with the element at index 'count'\n\t\tif num_list[i] != 0\n\t\t\tnum_list[count] = num_list[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\t\n\t# After the loop, all non-zero elements have been shifted to the front\n\t# Make all remaining elements as 0\n\twhile count < length(num_list)\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\t\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Error During Test at /tmp/tmpwqt_hd0t.jl:35\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpwqt_hd0t.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwqt_hd0t.jl:35 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwqt_hd0t.jl:34\ntest set: Error During Test at /tmp/tmpwqt_hd0t.jl:36\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpwqt_hd0t.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwqt_hd0t.jl:36 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpwqt_hd0t.jl:34\ntest set: Error During Test at /tmp/tmpwqt_hd0t.jl:37\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpwqt_hd0t.jl:16\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpwqt_hd0t.jl:37 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpwqt_hd0t.jl:32\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    j = 1\n    for i in 1:length(num_list)\n        if num_list[i] != 0\n            num_list[j] = num_list[i]\n            j += 1\n        end\n    end\n    for i in j:length(num_list)\n        num_list[i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tn = length(num_list)\n\tcount = 0\n\tfor i in 1:n\n\t\tif num_list[i] != 0\n\t\t\tnum_list[count] = num_list[i]\n\t\t\tcount += 1\n\t\tend\n\tend\n\twhile count < n\n\t\tnum_list[count] = 0\n\t\tcount += 1\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Error During Test at /tmp/tmp3sxnssfx.jl:24\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp3sxnssfx.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3sxnssfx.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3sxnssfx.jl:23\ntest set: Error During Test at /tmp/tmp3sxnssfx.jl:25\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp3sxnssfx.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3sxnssfx.jl:25 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp3sxnssfx.jl:23\ntest set: Error During Test at /tmp/tmp3sxnssfx.jl:26\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp3sxnssfx.jl:9\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp3sxnssfx.jl:26 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp3sxnssfx.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor num in num_list\n\t\tif num == 0\n\t\t\tpush!(zero_list, num)\n\t\telse\n\t\t\tpush!(non_zero_list, num)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnum_list = filter(x -> x != 0, num_list)\n\tnum_list = append!(num_list, zeros(Int64, length(num_list) - length(num_list)))\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Test Failed at /tmp/tmp085xatlv.jl:14\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 2, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp085xatlv.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp085xatlv.jl:13\ntest set: Test Failed at /tmp/tmp085xatlv.jl:15\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 4, 5] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp085xatlv.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp085xatlv.jl:13\ntest set: Test Failed at /tmp/tmp085xatlv.jl:16\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [1, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp085xatlv.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp085xatlv.jl:13\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp085xatlv.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    num_list = filter(x -> x != 0, num_list)\n    num_list = append!(num_list, zeros(Int64, count(x -> x == 0, num_list)))\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Test Failed at /tmp/tmpd11bcucp.jl:14\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 2, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11bcucp.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11bcucp.jl:13\ntest set: Test Failed at /tmp/tmpd11bcucp.jl:15\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 4, 5] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11bcucp.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11bcucp.jl:13\ntest set: Test Failed at /tmp/tmpd11bcucp.jl:16\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [1, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd11bcucp.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd11bcucp.jl:13\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpd11bcucp.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return append!(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[zero_index[i]-i]\n        num_list[zero_index[i]-i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "test set: Test Failed at /tmp/tmp5xqrhopi.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 2, 1, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Test Failed at /tmp/tmp5xqrhopi.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 0, 0, 0, 4, 2, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Error During Test at /tmp/tmp5xqrhopi.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex(A::Vector{Int64}, i1::Int64)\n     @ Base ./array.jl:861\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp5xqrhopi.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5xqrhopi.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5xqrhopi.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp5xqrhopi.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function takes a vector of integers as input and returns a vector with all the zeros moved to the end.\n\t\"\"\"\n\t\n\t# Initialize the output vector\n\toutput = zeros(Int64, length(num_list))\n\t\n\t# Initialize the index of the output vector\n\tindex = 1\n\t\n\t# Loop over the input vector\n\tfor i = 1:length(num_list)\n\t\t\n\t\t# If the element is not zero\n\t\tif num_list[i] != 0\n\t\t\t\n\t\t\t# Add it to the output vector\n\t\t\toutput[index] = num_list[i]\n\t\t\t\n\t\t\t# Increment the index\n\t\t\tindex += 1\n\t\tend\n\tend\n\t\n\t# Return the output vector\n\treturn output\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in zero_index\n        deleteat!(num_list, i)\n        push!(num_list, 0)\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Test Failed at /tmp/tmp11fxmf8m.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 2, 0, 4, 0, 0] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp11fxmf8m.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp11fxmf8m.jl:21\ntest set: Test Failed at /tmp/tmp11fxmf8m.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 5, 0, 0, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp11fxmf8m.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp11fxmf8m.jl:21\ntest set: Test Failed at /tmp/tmp11fxmf8m.jl:24\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [1, 0, 1, 0, 0] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp11fxmf8m.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp11fxmf8m.jl:21\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp11fxmf8m.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeroes to the end of the given list.\n\t\"\"\"\n\tnon_zero_list = []\n\tzero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn [non_zero_list; zero_list]\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeros to the end of the list.\n\t\"\"\"\n\t# create a new list to store the non-zero elements\n\tnon_zero_list = []\n\t# iterate over the list\n\tfor i in num_list\n\t\t# check if the element is zero\n\t\tif i != 0\n\t\t\t# append the element to the list\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\t# append zeros to the list\n\tfor i in 1:length(num_list) - length(non_zero_list)\n\t\tpush!(non_zero_list, 0)\n\tend\n\t# return the list\n\treturn non_zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tzero_list = []\n\tnon_zero_list = []\n\tfor i in num_list\n\t\tif i == 0\n\t\t\tpush!(zero_list, i)\n\t\telse\n\t\t\tpush!(non_zero_list, i)\n\t\tend\n\tend\n\treturn vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# num_list = [0,1,2,10,4,1,0,56,2,0,1,3,0,56,0,4]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\t# num_list = [10,20,30,40,50]\n\t# num_list = [0,0,0,10,20,30,40,50]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,20,30,40,50]\n\t# num_list = [1,2,3,4,5,6,7,8,9,10]\n\t# num_list = [0,1,2,3,4,5,6,7,8,9,10]\n\t# num_list = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10]\n\t# num_list = [10,9,8,7,6,5,4,3,2,1,0]\n\t# num_list = [10,9,8,7,6,5,4,3,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp4_ng03km.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp4_ng03km.jl:1\nin expression starting at /tmp/tmp4_ng03km.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return non_zero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmpgohc539c.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpgohc539c.jl:20\ntest set: Error During Test at /tmp/tmpgohc539c.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpgohc539c.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[zero_index[i]-i]\n        num_list[zero_index[i]-i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123952,
      "stdout": "test set: Test Failed at /tmp/tmp5xqrhopi.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [0, 0, 2, 1, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Test Failed at /tmp/tmp5xqrhopi.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 0, 0, 0, 4, 2, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp5xqrhopi.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp5xqrhopi.jl:21\ntest set: Error During Test at /tmp/tmp5xqrhopi.jl:24\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex(A::Vector{Int64}, i1::Int64)\n     @ Base ./array.jl:861\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp5xqrhopi.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp5xqrhopi.jl:24 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp5xqrhopi.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp5xqrhopi.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# YOUR CODE HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmp56y8ky4h.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56y8ky4h.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56y8ky4h.jl:11\ntest set: Error During Test at /tmp/tmp56y8ky4h.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp56y8ky4h.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp56y8ky4h.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_count = 0\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            zero_count += 1\n        else\n            num_list[i - zero_count] = num_list[i]\n        end\n    end\n    for i in length(num_list) - zero_count + 1:length(num_list)\n        num_list[i] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function takes a list of integers as input and returns a list with all the zeros moved to the end.\n\tThe order of the non-zero elements should be same as the original list.\n\t\"\"\"\n\t# YOUR CODE HERE\n\t\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Test Failed at /tmp/tmpw8up1y8b.jl:18\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8up1y8b.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8up1y8b.jl:17\ntest set: Test Failed at /tmp/tmpw8up1y8b.jl:19\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8up1y8b.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8up1y8b.jl:17\ntest set: Test Failed at /tmp/tmpw8up1y8b.jl:20\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw8up1y8b.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw8up1y8b.jl:17\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw8up1y8b.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpfemxz9o7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\ntest set: Test Failed at /tmp/tmpfemxz9o7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\ntest set: Test Failed at /tmp/tmpfemxz9o7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfemxz9o7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123950,
      "stdout": "test set: Test Failed at /tmp/tmpfemxz9o7.jl:13\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 0, 2, 0, 3, 4] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:13 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\ntest set: Test Failed at /tmp/tmpfemxz9o7.jl:14\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 0, 4, 0, 5, 0] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\ntest set: Test Failed at /tmp/tmpfemxz9o7.jl:15\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [0, 1, 0, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfemxz9o7.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfemxz9o7.jl:12\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfemxz9o7.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index, i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[end]\n        pop!(num_list)\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123956,
      "stdout": "test set: Test Failed at /tmp/tmp77cgvuyj.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 4, 2, 3] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp77cgvuyj.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp77cgvuyj.jl:21\ntest set: Error During Test at /tmp/tmp77cgvuyj.jl:23\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [9]\n  Stacktrace:\n   [1] setindex!\n     @ ./array.jl:903 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp77cgvuyj.jl:12\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmp77cgvuyj.jl:23 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmp77cgvuyj.jl:21\ntest set: Test Failed at /tmp/tmp77cgvuyj.jl:24\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n   Evaluated: [1, 1, 1] == [1, 1, 1, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp77cgvuyj.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp77cgvuyj.jl:21\nTest Summary: | Fail  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp77cgvuyj.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\tj = 1\n\tfor i in 1:length(num_list)\n\t\tif num_list[i] != 0\n\t\t\tnum_list[j] = num_list[i]\n\t\t\tj += 1\n\t\tend\n\tend\n\tfor i in j:length(num_list)\n\t\tnum_list[i] = 0\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123947,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t\"\"\"\n\tThis function moves all zeroes to the end of the given list.\n\t\"\"\"\n\t# Initialize the count variable\n\tcount = 0\n\t# Iterate through the list\n\tfor i = 1:length(num_list)\n\t\t# Check if the number is not zero\n\t\tif num_list[i] != 0\n\t\t\t# Swap the number with the count variable\n\t\t\tnum_list[i], num_list[count] = num_list[count], num_list[i]\n\t\t\t# Increment the count variable\n\t\t\tcount += 1\n\t\tend\n\tend\n\treturn num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123955,
      "stdout": "test set: Error During Test at /tmp/tmpbc932xem.jl:27\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  BoundsError: attempt to access 6-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpbc932xem.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbc932xem.jl:27 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbc932xem.jl:26\ntest set: Error During Test at /tmp/tmpbc932xem.jl:28\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  BoundsError: attempt to access 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpbc932xem.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbc932xem.jl:28 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [6] top-level scope\n     @ /tmp/tmpbc932xem.jl:26\ntest set: Error During Test at /tmp/tmpbc932xem.jl:29\n  Test threw exception\n  Expression: candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0]\n  BoundsError: attempt to access 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n   [2] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpbc932xem.jl:15\n   [3] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [4] macro expansion\n     @ /tmp/tmpbc932xem.jl:29 [inlined]\n   [5] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpbc932xem.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return non_zero_list .* zero_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123951,
      "stdout": "test set: Error During Test at /tmp/tmpgohc539c.jl:21\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 4 and 2\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:21 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [11] top-level scope\n      @ /tmp/tmpgohc539c.jl:20\ntest set: Error During Test at /tmp/tmpgohc539c.jl:22\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  DimensionMismatch(\"arrays could not be broadcast to a common size; got a dimension with lengths 5 and 4\")\n  Stacktrace:\n    [1] _bcs1\n      @ ./broadcast.jl:516 [inlined]\n    [2] _bcs\n      @ ./broadcast.jl:510 [inlined]\n    [3] broadcast_shape\n      @ ./broadcast.jl:504 [inlined]\n    [4] combine_axes\n      @ ./broadcast.jl:499 [inlined]\n    [5] instantiate\n      @ ./broadcast.jl:281 [inlined]\n    [6] materialize\n      @ ./broadcast.jl:860 [inlined]\n    [7] move_zero(num_list::Vector{Int64})\n      @ Main /tmp/tmpgohc539c.jl:14\n    [8] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n    [9] macro expansion\n      @ /tmp/tmpgohc539c.jl:22 [inlined]\n   [10] macro expansion\n      @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpgohc539c.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_list = []\n    non_zero_list = []\n    for i in num_list\n        if i == 0\n            push!(zero_list, i)\n        else\n            push!(non_zero_list, i)\n        end\n    end\n    return vcat(non_zero_list, zero_list)\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510504,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index,i)\n        end\n    end\n    for i in 1:length(zero_index)\n        num_list[zero_index[i]] = num_list[length(num_list)-i+1]\n        num_list[length(num_list)-i+1] = 0\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123955,
      "stdout": "test set: Test Failed at /tmp/tmp0g5qn604.jl:22\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n   Evaluated: [1, 4, 2, 3, 0, 0] == [1, 2, 3, 4, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g5qn604.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g5qn604.jl:21\ntest set: Test Failed at /tmp/tmp0g5qn604.jl:23\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n   Evaluated: [2, 3, 2, 0, 5, 0, 0, 0, 4] == [2, 3, 2, 4, 5, 0, 0, 0, 0]\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g5qn604.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g5qn604.jl:21\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0g5qn604.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code goes here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123954,
      "stdout": "test set: Error During Test at /tmp/tmp158g5dqd.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp158g5dqd.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp158g5dqd.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp158g5dqd.jl:11\ntest set: Error During Test at /tmp/tmp158g5dqd.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmp158g5dqd.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp158g5dqd.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n\t# your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1665510506,
      "stdout": "test set: Error During Test at /tmp/tmpein1x7vh.jl:12\n  Test threw exception\n  Expression: candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpein1x7vh.jl:12 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpein1x7vh.jl:11\ntest set: Error During Test at /tmp/tmpein1x7vh.jl:13\n  Test threw exception\n  Expression: candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0]\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /home/a.guha/.conda/envs/polyglot/share/julia/base/array.jl:554\n    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /home/a.guha/.conda/envs/polyglot/share/julia/base/abstractarray.jl:16\n    ...\n  Stacktrace:\n   [1] move_zero(num_list::Vector{Int64})\n     @ Main /tmp/tmpein1x7vh.jl:6\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polygl",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpein1x7vh.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to move all zeroes to the end of the given list.\n\t\"\"\"\nfunction move_zero(num_list::Vector{Int64})::Vector{Int64} \n    # YOUR CODE HERE\n    zero_index = []\n    for i in 1:length(num_list)\n        if num_list[i] == 0\n            push!(zero_index,i)\n        end\n    end\n    for i in 1:length(zero_index)\n        deleteat!(num_list,zero_index[i]-i+1)\n        push!(num_list,0)\n    end\n    return num_list\nend\nusing Test\n\n@testset begin\n\ncandidate = move_zero;\n\t@test(candidate([1, 0, 2, 0, 3, 4]) == [1, 2, 3, 4, 0, 0])\n\t@test(candidate([2, 3, 2, 0, 0, 4, 0, 5, 0]) == [2, 3, 2, 4, 5, 0, 0, 0, 0])\n\t@test(candidate([0, 1, 0, 1, 1]) == [1, 1, 1, 0, 0])\nend\n",
      "timestamp": 1666123953,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
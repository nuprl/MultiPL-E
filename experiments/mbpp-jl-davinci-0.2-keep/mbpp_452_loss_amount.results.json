{
  "name": "mbpp_452_loss_amount",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_452_loss_amount.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif sale_amount < actual_cost\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmp1whdns0s.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1whdns0s.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif sale_amount < actual_cost\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmp1whdns0s.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1whdns0s.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n    if actual_cost > sale_amount\n        return actual_cost - sale_amount\n    else\n        return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmpl1tbp9mq.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl1tbp9mq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif sale_amount < actual_cost\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmp1whdns0s.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1whdns0s.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss_amount = actual_cost - sale_amount\n\tif loss_amount > 0\n\t\treturn loss_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmphe6ug1s9.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphe6ug1s9.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse \n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122639,
      "stdout": "test set: Test Failed at /tmp/tmp3crflq5_.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3crflq5_.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3crflq5_.jl:15\ntest set: Test Failed at /tmp/tmp3crflq5_.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3crflq5_.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3crflq5_.jl:15\ntest set: Test Failed at /tmp/tmp3crflq5_.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3crflq5_.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3crflq5_.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3crflq5_.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss_amount = actual_cost - sale_amount\n\tif loss_amount > 0\n\t\treturn loss_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmphe6ug1s9.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphe6ug1s9.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\tloss_amount = actual_cost - sale_amount\n\t\treturn loss_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpg_3o_784.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_3o_784.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_3o_784.jl:16\ntest set: Test Failed at /tmp/tmpg_3o_784.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_3o_784.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_3o_784.jl:16\ntest set: Test Failed at /tmp/tmpg_3o_784.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg_3o_784.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg_3o_784.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg_3o_784.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif sale_amount < actual_cost\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmp1whdns0s.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1whdns0s.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n    if actual_cost > sale_amount\n        return actual_cost - sale_amount\n    else\n        return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmpl1tbp9mq.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl1tbp9mq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss_amount = actual_cost - sale_amount\n\tif loss_amount > 0\n\t\treturn loss_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmphe6ug1s9.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphe6ug1s9.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss_amount = actual_cost - sale_amount\n\tif loss_amount > 0\n\t\treturn loss_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmphe6ug1s9.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\ntest set: Test Failed at /tmp/tmphe6ug1s9.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphe6ug1s9.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphe6ug1s9.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphe6ug1s9.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n    if actual_cost > sale_amount\n        return actual_cost - sale_amount\n    else\n        return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmpl1tbp9mq.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl1tbp9mq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif sale_amount < actual_cost\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmp1whdns0s.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1whdns0s.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif sale_amount < actual_cost\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmp1whdns0s.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\ntest set: Test Failed at /tmp/tmp1whdns0s.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1whdns0s.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1whdns0s.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1whdns0s.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tloss = actual_cost - sale_amount\n\tif loss > 0\n\t\treturn loss\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpy2tpptpz.jl:17\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:18\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\ntest set: Test Failed at /tmp/tmpy2tpptpz.jl:19\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpy2tpptpz.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpy2tpptpz.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpy2tpptpz.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n    if actual_cost > sale_amount\n        return actual_cost - sale_amount\n    else\n        return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1666122636,
      "stdout": "test set: Test Failed at /tmp/tmpl1tbp9mq.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\ntest set: Test Failed at /tmp/tmpl1tbp9mq.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl1tbp9mq.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl1tbp9mq.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl1tbp9mq.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a function that gives loss amount on a sale if the given amount has loss else return 0.\n\t\"\"\"\nfunction loss_amount(actual_cost::Int64, sale_amount::Int64)::Int64 \n\tif actual_cost > sale_amount\n\t\treturn actual_cost - sale_amount\n\telse\n\t\treturn 0\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = loss_amount;\n\t@test(candidate(1500, 1200) == 0)\n\t@test(candidate(100, 200) == 100)\n\t@test(candidate(2000, 5000) == 3000)\nend\n",
      "timestamp": 1665510179,
      "stdout": "test set: Test Failed at /tmp/tmpm6_03pnm.jl:16\n  Expression: candidate(1500, 1200) == 0\n   Evaluated: 300 == 0\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:17\n  Expression: candidate(100, 200) == 100\n   Evaluated: 0 == 100\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\ntest set: Test Failed at /tmp/tmpm6_03pnm.jl:18\n  Expression: candidate(2000, 5000) == 3000\n   Evaluated: 0 == 3000\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm6_03pnm.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm6_03pnm.jl:15\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm6_03pnm.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
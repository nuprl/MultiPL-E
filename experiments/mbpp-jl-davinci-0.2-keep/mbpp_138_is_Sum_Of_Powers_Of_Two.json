{
  "name": "mbpp_138_is_Sum_Of_Powers_Of_Two",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to check whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\nfunction is_Sum_Of_Powers_Of_Two(n::Int64)::Bool \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_138_is_Sum_Of_Powers_Of_Two.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_Sum_Of_Powers_Of_Two;\n\t@test(candidate(10) == true)\n\t@test(candidate(7) == false)\n\t@test(candidate(14) == true)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tThis function takes an integer as input and returns true if it can be represented as sum of non-zero powers of 2.\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tChecks whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tis_Sum_Of_Powers_Of_Two(n)",
    "\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tn: Int64\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n/2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tis_Sum_Of_Powers_Of_Two(n::Int64)\n\t\n\tThis function checks whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tis_Sum_Of_Powers_Of_Two(n::Int64)::Bool\n\t\n\tThis function checks whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n%2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n/2\n\tend\n\treturn true\nend",
    "    if n == 0\n        return false\n    end\n    while n != 1\n        if n % 2 != 0\n            return false\n        end\n        n = n / 2\n    end\n    return true\nend",
    "\t\"\"\"\n\tn: Int64\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tThis function takes an integer as input and returns true if the number can be represented as sum of non-zero powers of 2.\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t# n = number to check\n\t# return true if n can be represented as sum of non-zero powers of 2\n\t# return false otherwise\n\t\n\t# if n is zero, return false\n\tif n == 0\n\t\treturn false\n\tend\n\t\n\t# if n is a power of 2, return true\n\tif n & (n-1) == 0\n\t\treturn true\n\tend\n\t\n\t# if n is not a power of 2, check if it can be represented as sum of non-zero powers of 2\n\twhile n != 0\n\t\t# find the position of the rightmost set bit\n\t\tpos = find_first_set_bit(n)\n\t\t\n\t\t# unset the rightmost set bit\n\t\tn = n & (n-1)\n\t\t\n\t\t# if n becomes zero, return true\n\t\tif n == 0\n\t\t\treturn true\n\t\tend\n\t\t\n\t\t# if n is a power of 2, return true\n\t\tif n & (n-1) == 0\n\t\t\treturn true\n\t\tend\n\tend\n\t\n\t# if n cannot be represented as sum of non-zero powers of 2, return false\n\treturn false\nend",
    "\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tThis function takes an integer and returns True if it can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\telse\n\t\twhile n != 0\n\t\t\tif n%2 != 0\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tn = n/2\n\t\tend\n\t\treturn true\n\tend\nend",
    "\t\"\"\"\n\tis_Sum_Of_Powers_Of_Two(n) checks whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n\tif n == 1\n\t\treturn true\n\tend\n\tif n == 0\n\t\treturn false\n\tend\n\tif n%2 == 0\n\t\treturn is_Sum_Of_Powers_Of_Two(n/2)\n\tend\n\treturn false\nend",
    "\t\"\"\"\n\tis_Sum_Of_Powers_Of_Two(n)\n\t\n\tThis function checks whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\n\tExample\n\t\n\tjulia> is_Sum_Of_Powers_Of_Two(6)\n\ttrue\n\t\n\tjulia> is_Sum_Of_Powers_Of_Two(10)\n\tfalse\n\t\"\"\"\n\tif n == 0\n\t\treturn false\n\tend\n\twhile n != 1\n\t\tif n % 2 != 0\n\t\t\treturn false\n\t\tend\n\t\tn = n / 2\n\tend\n\treturn true\nend",
    "\t\"\"\"\n\tThis function checks whether the given number can be represented as sum of non-zero powers of 2 or not.\n\t\"\"\"\n\tif n == 1\n\t\treturn true\n\tend\n\tif n == 0\n\t\treturn false\n\tend\n\tif n%2 == 1\n\t\treturn false\n\tend\n\treturn is_Sum_Of_Powers_Of_Two(n/2)\nend"
  ]
}
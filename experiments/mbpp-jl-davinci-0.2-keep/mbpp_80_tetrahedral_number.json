{
  "name": "mbpp_80_tetrahedral_number",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the nth tetrahedral number.\n\t\"\"\"\nfunction tetrahedral_number(n::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_80_tetrahedral_number.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = tetrahedral_number;\n\t@test(candidate(5) == 35)\n\t@test(candidate(6) == 56)\n\t@test(candidate(7) == 84)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn n*(n+1)*(n+2)\u00f76\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn div(n*(n+1)*(n+2),6)\nend",
    "\treturn div(n*(n+1)*(n+2),6)\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn n*(n+1)*(n+2)\u00f76\nend",
    "\treturn div(n*(n+1)*(n+2),6)\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn (n*(n+1)*(n+2))/6\nend",
    "\treturn n*(n+1)*(n+2)//6\nend"
  ]
}
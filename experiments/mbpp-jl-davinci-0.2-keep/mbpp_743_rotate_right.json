{
  "name": "mbpp_743_rotate_right",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to rotate a given list by specified number of items to the right direction. https://www.geeksforgeeks.org/python-program-right-rotate-list-n/\n\t\"\"\"\nfunction rotate_right(list::Vector{Int64}, m::Int64)::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_743_rotate_right.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = rotate_right;\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3) == [8, 9, 10, 1, 2, 3, 4, 5, 6, 7])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2) == [9, 10, 1, 2, 3, 4, 5, 6, 7, 8])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5) == [6, 7, 8, 9, 10, 1, 2, 3, 4, 5])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i+m)%n+1] for i in 0:n-1]\nend",
    "    return [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[(i+m)%n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in mod.((length(list)-m+1):length(list), length(list))]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "    return [list[(i+m)%length(list)+1] for i in 0:length(list)-1]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[(i+m)%n+1] for i in 0:n-1]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[(i+m)%n+1] for i in 0:n-1]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tif m == 0\n\t\treturn list\n\tend\n\tn = length(list)\n\tm = mod(m, n)\n\treturn vcat(list[n-m+1:n], list[1:n-m])\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "    if m == 0\n        return list\n    end\n    return rotate_right(vcat(list[end-m+1:end], list[1:end-m]), m)\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\t\"\"\"\n\tFunction to rotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\tRotate a given list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(collect(n-m+1:n), n)]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "    m = mod(m, length(list))\n    return vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\tn = length(list)\n\tm = mod(m,n)\n\treturn [list[n-m+i] for i in 1:m] cat [list[i] for i in 1:n-m]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "    return [list[i] for i in mod1.((1:length(list)) .- m, length(list))]\nend",
    "    return [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 0:(n - 1)]\nend",
    "\tm = m % length(list)\n\treturn [list[i] for i in (length(list)-m+1):length(list)] .* [list[i] for i in 1:(length(list)-m)]\nend",
    "    return [list[i] for i in mod1.((m+1):length(list), length(list))]\nend",
    "    n = length(list)\n    m = mod(m, n)\n    return [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "    return [list[i] for i in mod1.(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)] .* [list[i] for i in 1:n - m]\nend",
    "    if m == 0\n        return list\n    end\n    m = mod(m, length(list))\n    return vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 0:n-1]\nend",
    "    return [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1.(m:m+length(list)-1, length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\treturn [list[(i + m) % length(list)] for i in 1:length(list)]\nend",
    "\t\"\"\"\n\trotate_right(list, m)\n\t\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i+m)%n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i + m) % n + 1] for i in 0:(n - 1)]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in (n-m+1):n] * [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)] .* [list[i] for i in 1:n - m]\nend",
    "\tif m == 0\n\t\treturn list\n\tend\n\tif m < 0\n\t\treturn rotate_left(list, -m)\n\tend\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i+m)%n+1] for i in 1:n]\nend",
    "\treturn [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n - m + 1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i + m) % n + 1] for i in 0:(n - 1)]\nend",
    "\treturn [list[i] for i in mod(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "    return [list[i] for i in mod1.((m+1):length(list), length(list))]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\tn = length(list)\n\tm %= n\n\treturn [list[i] for i in (n-m+1):n] * [list[i] for i in 1:(n-m)]\nend",
    "    m = mod(m, length(list))\n    return [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in (length(list)-m+1):length(list)] .* [list[i] for i in 1:length(list)-m]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 0:n-1]\nend",
    "\treturn [list[i] for i in mod1.((m+1):(length(list)+m), length(list))]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod.((n-m+1):n, n)] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m elements.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in (n-m+1):n] * [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tif m == 0\n\t\treturn list\n\telse\n\t\treturn [list[end-m+1:end]; list[1:end-m]]\n\tend\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[mod1(i-m, n)] for i in 1:n]\nend",
    "    m = m % length(list)\n    return [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n-m+1:n, n)] .* [list[i] for i in 1:n-m]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn vcat(list[n-m+1:n], list[1:n-m])\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod.((n-m+1):n, n)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "    m = mod(m, length(list))\n    return [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in (length(list)-m+1):length(list)]*[list[i] for i in 1:(length(list)-m)]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:n-m]\nend",
    "\tn = length(list)\n\tm = mod(m,n)\n\treturn [list[i] for i in mod1.(n-m+1:n,n)]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod.((n-m+1):n, n)]\nend",
    "\treturn [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m elements.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn vcat(list[n-m+1:n], list[1:n-m])\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[mod(i + m, n)] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i+m)%n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\t# m = m % length(list)\n\treturn [list[i] for i in (1:length(list))[mod.((1:length(list)) .- m, length(list)) .+ 1]]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "    if m == 0\n        return list\n    end\n    return [list[i] for i in (length(list) - m + 1):length(list)] * [list[i] for i in 1:(length(list) - m)]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "    return [list[i] for i in mod1.(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1.(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\tfor i in 1:m\n\t\tlast = list[end]\n\t\tfor j in 1:length(list)-1\n\t\t\tlist[end-j+1] = list[end-j]\n\t\tend\n\t\tlist[1] = last\n\tend\n\treturn list\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\tif m == 0\n\t\treturn list\n\tend\n\tif m > length(list)\n\t\tm = m % length(list)\n\tend\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in (n-m+1):n] * [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\tn = length(list)\n\tm = mod(m,n)\n\treturn [list[i] for i in mod1.(n-m+1:n,n)]\nend",
    "\tm = mod(m, length(list))\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.((n-m+1):n, n)]\nend",
    "\treturn [list[i] for i in mod1.((m+1):(m+length(list)), length(list))]\nend",
    "    return [list[i] for i in mod1.((1:length(list)) + m, length(list))]\nend",
    "    return [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tm = m % length(list)\n\treturn [list[i] for i in (length(list)-m+1):length(list)] * [list[i] for i in 1:(length(list)-m)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in 1:n-m]\nend",
    "    for i in 1:m\n        last = list[end]\n        for j in 1:length(list)-1\n            list[end-j+1] = list[end-j]\n        end\n        list[1] = last\n    end\n    return list\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "    m = mod(m, length(list))\n    return vcat(list[end-m+1:end], list[1:end-m])\nend",
    "    return [list[(i+m)%length(list)+1] for i in 1:length(list)]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[(i+m)%n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in (m+1:length(list))] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\tn = length(list)\n\tm = m % n\n\treturn [list[n-m+i] for i in 1:m] * [list[i] for i in 1:n-m]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list))]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod.((n-m+1):n, n)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tif m > length(list)\n\t\tm = m % length(list)\n\tend\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\treturn [list[i] for i in mod1.(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\treturn [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 0:n-1]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in (m+1:length(list))] .* [list[i] for i in 1:m]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list),length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tif m == 0\n\t\treturn list\n\telse\n\t\treturn [list[end-m+1:end]; list[1:end-m]]\n\tend\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)] .* [list[i] for i in 1:n - m]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\treturn [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tif m == 0\n\t\treturn list\n\telse\n\t\treturn rotate_right(vcat(list[end-m+1:end], list[1:end-m]), m-1)\n\tend\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\tm = m % length(list)\n\treturn [list[i] for i in (length(list)-m+1):length(list)] * [list[i] for i in 1:(length(list)-m)]\nend",
    "\t\"\"\"\n\tRotate a list to the right direction by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n - m + 1:n, n)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m elements.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in (n-m+1):n] .* [list[i] for i in 1:(n-m)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\t\"\"\"\n\trotate_right(list::Vector{Int64}, m::Int64)::Vector{Int64}\n\t\n\tRotate a given list by specified number of items to the right direction.\n\t\n\t# Arguments\n\t\tlist: a list of integers\n\t\tm: number of items to rotate\n\t\n\t# Returns\n\t\tA list of integers\n\t\"\"\"\n\t\n\t# rotate the list by m items to the right\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m elements.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in (length(list)-m+1):length(list)] * [list[i] for i in 1:(length(list)-m)]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tif m == 0\n\t\treturn list\n\tend\n\tif m > length(list)\n\t\tm = m % length(list)\n\tend\n\treturn vcat(list[end-m+1:end], list[1:end-m])\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 0:(n - 1)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m elements.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m:length(list)+m-1, length(list))]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n) cat mod1.(1:n-m)]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list),length(list))]\nend",
    "\treturn [list[i] for i in mod1.(m+1:length(list), length(list))]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod.((n-m+1):n, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "    return [list[i] for i in mod1.(m+1:m+length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in mod.((length(list)-m+1):length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list),length(list))]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m elements.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[mod1(i+m,n)] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)] .* [list[i] for i in 1:n - m]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[mod1(i-m, n)] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\t# if m is negative, rotate left\n\tif m < 0\n\t\trotate_left(list, -m)\n\tend\n\t\n\t# if m is zero, return the list\n\tif m == 0\n\t\treturn list\n\tend\n\t\n\t# if m is greater than the length of the list, reduce m\n\tif m > length(list)\n\t\tm = m % length(list)\n\tend\n\t\n\t# if m is equal to the length of the list, return the list\n\tif m == length(list)\n\t\treturn list\n\tend\n\t\n\t# if m is less than the length of the list, rotate right\n\treturn [list[i] for i in (length(list) - m + 1):length(list)] .* [list[i] for i in 1:(length(list) - m)]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n) cat mod1.(1:n-m)]\nend",
    "    return [list[i] for i in mod1.((m+1):length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list by m items to the right direction.\n\t\"\"\"\n\treturn [list[(i-m)%length(list)+1] for i in 1:length(list)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "    return [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m elements.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\treturn [list[(i+m)%length(list)] for i in 1:length(list)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in mod.(length(list)-m+1:length(list), length(list))]\nend",
    "    return [list[i] for i in (m+1):length(list)] .* [list[i] for i in 1:m]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .+ m, length(list))]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tm = mod(m, length(list))\n\treturn [list[i] for i in mod1.((length(list)-m+1):length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.((n-m+1):n, n)] .* [list[i] for i in 1:n-m]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in mod1(n-m+1:n, n)]\nend",
    "    n = length(list)\n    m = m % n\n    return [list[(i+m)%n+1] for i in 0:n-1]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\treturn [list[i] for i in mod1.((1:length(list)) .- m, length(list))]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m,n)\n\treturn vcat(list[n-m+1:n], list[1:n-m])\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)]\nend",
    "\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.((n-m+1):n, n)]\nend",
    "\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a given list by specified number of items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1.(n - m + 1:n, n)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\treturn [list[(i+m)%n+1] for i in 0:n-1]\nend",
    "    if m == 0\n        return list\n    end\n    return rotate_right(vcat(list[end-m+1:end], list[1:end-m]), m-1)\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n - m + 1:n, n)]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\treturn [list[i] for i in mod1(m+1:length(list), length(list))]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[(i + m) % n] for i in 1:n]\nend",
    "\t\"\"\"\n\tRotate a list by m items to the right direction.\n\t\"\"\"\n\tn = length(list)\n\tm = m % n\n\treturn [list[i] for i in mod1.(n-m+1:n, n)] .* [list[i] for i in mod1.(1:n-m, n)]\nend",
    "\tn = length(list)\n\treturn [list[(i + m) % n + 1] for i in 0:(n-1)]\nend",
    "\t\"\"\"\n\tRotate a list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod1(n-m+1:n, n)]\nend",
    "\t\"\"\"\n\tRotate the list to the right by m items.\n\t\"\"\"\n\tn = length(list)\n\tm = mod(m, n)\n\treturn [list[i] for i in mod.(n-m+1:n, n)]\nend"
  ]
}
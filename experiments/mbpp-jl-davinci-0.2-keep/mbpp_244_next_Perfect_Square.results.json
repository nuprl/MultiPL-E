{
  "name": "mbpp_244_next_Perfect_Square",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_244_next_Perfect_Square.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "results": [
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number whose next perfect square is to be found.\n\t\"\"\"\n\treturn ceil(Int64,sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpck4zs364.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpck4zs364.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpck4zs364.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpck4zs364.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number as an argument and returns the next perfect square greater than that number.\n\t\"\"\"\n\t# Initializing the variable to store the next perfect square.\n\tnext_perfect_square = 0\n\t# Initializing the variable to store the square root of the number.\n\tsquare_root = 0\n\t# Initializing the variable to store the square of the number.\n\tsquare = 0\n\t# Initializing the variable to store the next number.\n\tnext_number = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations = 0\n\t# Initializing the variable to store the number of iterations.\n\titerations =\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp36jhynwm.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp36jhynwm.jl:1\nin expression starting at /tmp/tmp36jhynwm.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tnext_Perfect_Square(N)\n\t\t\n\t\tFind the next perfect square greater than a given number.\n\t\t\n\t\t#Example\n\t\tjulia> next_Perfect_Square(10)\n\t\t16\n\t\"\"\"\n\t\n\t#Find the next perfect square greater than a given number.\n\t\n\t#Initialize the next perfect square to zero\n\tnext_perfect_square = 0\n\t\n\t#Initialize the square root of the given number to zero\n\tsquare_root = 0\n\t\n\t#Initialize the square of the square root of the given number to zero\n\tsquare_of_square_root = 0\n\t\n\t#Find the square root of the given number\n\tsquare_root = sqrt(N)\n\t\n\t#Find the square of the square root of the given number\n\tsquare_of_square_root = square_root^2\n\t\n\t#Check if the square of the square root of the given number is equal to the given number\n\tif square_of_square_root == N\n\t\t#Find the next perfect square greater than a given number\n\t\tnext_perfect_square = (square_root + 1)^2\n\telse\n\t\t#Find the next perfect square greater than a given number\n\t\tnext_perfect_square = (ceil(square_root))^2\n\tend\n\t\n\t#Return the next perfect square greater than a given number\n\treturn next_perfect_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510035,
      "stdout": "test set: Error During Test at /tmp/tmpvv7vb38w.jl:49\n  Test threw exception\n  Expression: candidate(35) == 36\n  InexactError: Int64(47.83215956619923)\n  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7 [inlined]\n   [3] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpvv7vb38w.jl:42\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvv7vb38w.jl:49 [inlined]\n   [6] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvv7vb38w.jl:48\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpvv7vb38w.jl:46\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number.\n\t\"\"\"\n\tif N<0\n\t\treturn \"N is not a positive number\"\n\tend\n\tif sqrt(N)%1==0\n\t\treturn N\n\tend\n\treturn next_Perfect_Square(N+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpdhaki873.jl:23\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdhaki873.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdhaki873.jl:20\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdhaki873.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Error: Input must be a positive integer.\"\n\tend\n\ti = 1\n\twhile i^2 <= N\n\t\ti += 1\n\tend\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number.\n\t\"\"\"\n\treturn ceil(Int64,sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpu5rphcbb.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpu5rphcbb.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpu5rphcbb.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpu5rphcbb.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"N must be a positive integer\"\n\tend\n\tif sqrt(N) == floor(sqrt(N))\n\t\treturn \"N is a perfect square\"\n\tend\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510035,
      "stdout": "test set: Error During Test at /tmp/tmp2p0n6lnz.jl:23\n  Test threw exception\n  Expression: candidate(9) == 16\n  MethodError: Cannot `convert` an object of type String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp2p0n6lnz.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp2p0n6lnz.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp2p0n6lnz.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp2p0n6lnz.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return -1\n    end\n    if N == 0\n        return 1\n    end\n    if N == 1\n        return 4\n    end\n    if N == 2\n        return 4\n    end\n    if N == 3\n        return 4\n    end\n    if N == 4\n        return 9\n    end\n    if N == 5\n        return 9\n    end\n    if N == 6\n        return 9\n    end\n    if N == 7\n        return 9\n    end\n    if N == 8\n        return 9\n    end\n    if N == 9\n        return 16\n    end\n    if N == 10\n        return 16\n    end\n    if N == 11\n        return 16\n    end\n    if N == 12\n        return 16\n    end\n    if N == 13\n        return 16\n    end\n    if N == 14\n        return 16\n    end\n    if N == 15\n        return 16\n    end\n    if N == 16\n        return 25\n    end\n    if N == 17\n        return 25\n    end\n    if N == 18\n        return 25\n    end\n    if N == 19\n        return 25\n    end\n    if N == 20\n        return 25\n    end\n    if N == 21\n        return 25\n    end\n    if N == 22\n        return 25\n    end\n    if N == 23\n        return 25\n    end\n    if N == 24\n        return 25\n    end\n    if N == 25\n        return 36\n    end\n    if N == 26\n        return 36\n    end\n    if N == 27\n        return 36\n    end\n    if N == 28\n        return 36\n    end\n    if N == 29\n        return 36\n    end\n    if N == 30\n        return 36\n    end\n    if N == 31\n        return 36\n    end\n    if N == 32\n        return 36\n    end\n    if N == 33\n        return 36\n    end\n    if N == 34\n        return 36\n    end\n    if N == 35\n        return 36\n    end\n    if N == 36\n        return 49\n    end\n    if N == 37\n        return 49\n    end\n    if N\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmabj9v49.jl:1\nin expression starting at /tmp/tmpmabj9v49.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer N and returns the next perfect square greater than N.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"N must be a positive integer.\")\n\telse\n\t\treturn ceil(Int64, sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpuyd5uzfh.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuyd5uzfh.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuyd5uzfh.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuyd5uzfh.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpbg1cwua7.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbg1cwua7.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbg1cwua7.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbg1cwua7.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5rneg1hy.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5rneg1hy.jl:1\nin expression starting at /tmp/tmp5rneg1hy.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    # N is the given number\n    # Your code here\n    # You can also define other functions\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510035,
      "stdout": "test set: Error During Test at /tmp/tmp37cu_yh_.jl:14\n  Test threw exception\n  Expression: candidate(35) == 36\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp37cu_yh_.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37cu_yh_.jl:14 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp37cu_yh_.jl:13\ntest set: Error During Test at /tmp/tmp37cu_yh_.jl:15\n  Test threw exception\n  Expression: candidate(6) == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp37cu_yh_.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp37cu_yh_.jl:15 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp37cu_yh_.jl:11\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmp6cis7om8.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cis7om8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cis7om8.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6cis7om8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i < N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpm7wkubyh.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7wkubyh.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7wkubyh.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm7wkubyh.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 9\n\tend\n\tif N == 3\n\t\treturn 16\n\tend\n\tif N == 4\n\t\treturn 25\n\tend\n\tif N == 5\n\t\treturn 36\n\tend\n\tif N == 6\n\t\treturn 49\n\tend\n\tif N == 7\n\t\treturn 64\n\tend\n\tif N == 8\n\t\treturn 81\n\tend\n\tif N == 9\n\t\treturn 100\n\tend\n\tif N == 10\n\t\treturn 121\n\tend\n\tif N == 11\n\t\treturn 144\n\tend\n\tif N == 12\n\t\treturn 169\n\tend\n\tif N == 13\n\t\treturn 196\n\tend\n\tif N == 14\n\t\treturn 225\n\tend\n\tif N == 15\n\t\treturn 256\n\tend\n\tif N == 16\n\t\treturn 289\n\tend\n\tif N == 17\n\t\treturn 324\n\tend\n\tif N == 18\n\t\treturn 361\n\tend\n\tif N == 19\n\t\treturn 400\n\tend\n\tif N == 20\n\t\treturn 441\n\tend\n\tif N == 21\n\t\treturn 484\n\tend\n\tif N == 22\n\t\treturn 529\n\tend\n\tif N == 23\n\t\treturn 576\n\tend\n\tif N == 24\n\t\treturn 625\n\tend\n\tif N == 25\n\t\treturn 676\n\tend\n\tif N == 26\n\t\treturn 729\n\tend\n\tif N == 27\n\t\treturn 784\n\tend\n\tif N == 28\n\t\treturn 841\n\tend\n\tif N == 29\n\t\treturn 900\n\tend\n\tif N == 30\n\t\treturn 961\n\tend\n\tif N == 31\n\t\treturn 1024\n\tend\n\tif N == 32\n\t\treturn 1089\n\tend\n\tif N == 33\n\t\treturn 1156\n\tend\n\tif N == 34\n\t\treturn 1225\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpivjikjet.jl:1\nin expression starting at /tmp/tmpivjikjet.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number whose next perfect square is to be found\n\t\"\"\"\n\treturn ceil(Int64,sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpuox8ce0f.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpuox8ce0f.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpuox8ce0f.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpuox8ce0f.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number\n\t\"\"\"\n\treturn ceil(Int64,sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpvjwanc8s.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvjwanc8s.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvjwanc8s.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvjwanc8s.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N)\n\t\n\tFind the next perfect square greater than a given number.\n\t\n\tParameters\n\t----------\n\tN : Int64\n\t\tThe number to find the next perfect square greater than.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tThe next perfect square greater than N.\n\t\"\"\"\n\t\n\t# Find the next perfect square greater than N.\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpm07xm23f.jl:31\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm07xm23f.jl:31 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm07xm23f.jl:28\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm07xm23f.jl:26\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    x = ceil(sqrt(N))\n    return x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpxynfe86x.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxynfe86x.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxynfe86x.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxynfe86x.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\"\"\"\n\t\n\t# Check if the input is an integer\n\tif typeof(N) != Int64\n\t\terror(\"Input is not an integer\")\n\tend\n\t\n\t# Check if the input is positive\n\tif N < 0\n\t\terror(\"Input is not positive\")\n\tend\n\t\n\t# Check if the input is a perfect square\n\tif is_Perfect_Square(N) == true\n\t\treturn N\n\tend\n\t\n\t# Check if the input is a perfect square\n\tif is_Perfect_Square(N) == false\n\t\treturn next_Perfect_Square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122779,
      "stdout": "test set: Error During Test at /tmp/tmprm7fl5xf.jl:34\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmprm7fl5xf.jl:20\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmprm7fl5xf.jl:34 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmprm7fl5xf.jl:33\ntest set: Error During Test at /tmp/tmprm7fl5xf.jl:35\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmprm7fl5xf.jl:20\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmprm7fl5xf.jl:35 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmprm7fl5xf.jl:33\ntest set: Error During Test at /tmp/tmprm7fl5xf.jl:36\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmprm7fl5xf.jl:20\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmprm7fl5xf.jl:36 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmprm7fl5xf.jl:33\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmprm7fl5xf.jl:31\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmp6cis7om8.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cis7om8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cis7om8.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6cis7om8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmptacnqd6n.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptacnqd6n.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptacnqd6n.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptacnqd6n.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmp7ydkqcxe.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ydkqcxe.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ydkqcxe.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7ydkqcxe.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 4\n\tend\n\tif N == 3\n\t\treturn 4\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\n\tend\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp9pjwvn38.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp9pjwvn38.jl:1\nin expression starting at /tmp/tmp9pjwvn38.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return \"N must be positive\"\n    else\n        return ceil(Int64, sqrt(N))^2\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmp1x7p764r.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1x7p764r.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1x7p764r.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1x7p764r.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number N and returns the next perfect square greater than N.\n\t\"\"\"\n\t# find the square root of N\n\tsqrt_N = sqrt(N)\n\t# find the next integer greater than sqrt_N\n\tnext_int = ceil(sqrt_N)\n\t# find the next perfect square greater than N\n\tnext_perfect_square = next_int^2\n\treturn next_perfect_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpfdeid5qj.jl:23\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpfdeid5qj.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpfdeid5qj.jl:20\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpfdeid5qj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return -1\n    end\n    i = 1\n    while i*i <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpvn_4he5r.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvn_4he5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvn_4he5r.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvn_4he5r.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: a positive integer\n\treturns the next perfect square greater than N\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmp83axj1h5.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp83axj1h5.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp83axj1h5.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp83axj1h5.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmp6cis7om8.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cis7om8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cis7om8.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6cis7om8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(Int64,sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnyhc2r6t.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnyhc2r6t.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnyhc2r6t.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnyhc2r6t.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number whose next perfect square is to be found.\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmp0g3stin3.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g3stin3.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g3stin3.jl:14\ntest set: Test Failed at /tmp/tmp0g3stin3.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0g3stin3.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0g3stin3.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0g3stin3.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tnext_Perfect_Square(N)\n\t\t\n\t\tFind the next perfect square greater than a given number.\n\t\t\n\t\t#Example\n\t\tjulia> next_Perfect_Square(15)\n\t\t16\n\t\"\"\"\n\t\n\tif sqrt(N)%1 == 0\n\t\treturn N\n\telse\n\t\treturn next_Perfect_Square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpx8_eistr.jl:28\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpx8_eistr.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpx8_eistr.jl:25\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpx8_eistr.jl:23\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFinds the next perfect square greater than a given number.\n\t\"\"\"\n\tif N<0\n\t\treturn -1\n\tend\n\tif N==0\n\t\treturn 1\n\tend\n\tif N==1\n\t\treturn 4\n\tend\n\tif N==2\n\t\treturn 4\n\tend\n\tif N==3\n\t\treturn 4\n\tend\n\tif N==4\n\t\treturn 9\n\tend\n\tif N==5\n\t\treturn 9\n\tend\n\tif N==6\n\t\treturn 9\n\tend\n\tif N==7\n\t\treturn 9\n\tend\n\tif N==8\n\t\treturn 9\n\tend\n\tif N==9\n\t\treturn 16\n\tend\n\tif N==10\n\t\treturn 16\n\tend\n\tif N==11\n\t\treturn 16\n\tend\n\tif N==12\n\t\treturn 16\n\tend\n\tif N==13\n\t\treturn 16\n\tend\n\tif N==14\n\t\treturn 16\n\tend\n\tif N==15\n\t\treturn 16\n\tend\n\tif N==16\n\t\treturn 25\n\tend\n\tif N==17\n\t\treturn 25\n\tend\n\tif N==18\n\t\treturn 25\n\tend\n\tif N==19\n\t\treturn 25\n\tend\n\tif N==20\n\t\treturn 25\n\tend\n\tif N==21\n\t\treturn 25\n\tend\n\tif N==22\n\t\treturn 25\n\tend\n\tif N==23\n\t\treturn 25\n\tend\n\tif N==24\n\t\treturn 25\n\tend\n\tif N==25\n\t\treturn 36\n\tend\n\tif N==26\n\t\treturn 36\n\tend\n\tif N==27\n\t\treturn 36\n\tend\n\tif N==28\n\t\treturn 36\n\tend\n\tif N==29\n\t\treturn 36\n\tend\n\tif N==30\n\t\treturn 36\n\tend\n\tif N==31\n\t\treturn 36\n\tend\n\tif N==32\n\t\treturn 36\n\tend\n\tif N==33\n\t\treturn 36\n\tend\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5fqkaz4g.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5fqkaz4g.jl:1\nin expression starting at /tmp/tmp5fqkaz4g.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif sqrt(N) % 1 == 0\n\t\treturn N\n\tend\n\treturn next_Perfect_Square(N+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpsrlrjlev.jl:23\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsrlrjlev.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsrlrjlev.jl:20\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsrlrjlev.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tNext perfect square greater than N\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmplp2d61de.jl:20\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmplp2d61de.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmplp2d61de.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmplp2d61de.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given by the user.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpmwwru2xn.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpmwwru2xn.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpmwwru2xn.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpmwwru2xn.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return -1\n    end\n    if N == 0\n        return 1\n    end\n    if N == 1\n        return 4\n    end\n    if N == 2\n        return 4\n    end\n    if N == 3\n        return 4\n    end\n    if N == 4\n        return 9\n    end\n    if N == 5\n        return 9\n    end\n    if N == 6\n        return 9\n    end\n    if N == 7\n        return 9\n    end\n    if N == 8\n        return 9\n    end\n    if N == 9\n        return 16\n    end\n    if N == 10\n        return 16\n    end\n    if N == 11\n        return 16\n    end\n    if N == 12\n        return 16\n    end\n    if N == 13\n        return 16\n    end\n    if N == 14\n        return 16\n    end\n    if N == 15\n        return 16\n    end\n    if N == 16\n        return 25\n    end\n    if N == 17\n        return 25\n    end\n    if N == 18\n        return 25\n    end\n    if N == 19\n        return 25\n    end\n    if N == 20\n        return 25\n    end\n    if N == 21\n        return 25\n    end\n    if N == 22\n        return 25\n    end\n    if N == 23\n        return 25\n    end\n    if N == 24\n        return 25\n    end\n    if N == 25\n        return 36\n    end\n    if N == 26\n        return 36\n    end\n    if N == 27\n        return 36\n    end\n    if N == 28\n        return 36\n    end\n    if N == 29\n        return 36\n    end\n    if N == 30\n        return 36\n    end\n    if N == 31\n        return 36\n    end\n    if N == 32\n        return 36\n    end\n    if N == 33\n        return 36\n    end\n    if N == 34\n        return 36\n    end\n    if N == 35\n        return 36\n    end\n    if N == 36\n        return 49\n    end\n    if N == 37\n        return 49\n    end\n    if N\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmabj9v49.jl:1\nin expression starting at /tmp/tmpmabj9v49.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn ceil(Int64, sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpd6p7pkr9.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpd6p7pkr9.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpd6p7pkr9.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpd6p7pkr9.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput : N (Integer)\n\tOutput : Next perfect square greater than N\n\t\"\"\"\n\t# Your code here\n\treturn 0\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpctqz3owj.jl:17\n  Expression: candidate(35) == 36\n   Evaluated: 0 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpctqz3owj.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpctqz3owj.jl:16\ntest set: Test Failed at /tmp/tmpctqz3owj.jl:18\n  Expression: candidate(6) == 9\n   Evaluated: 0 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpctqz3owj.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpctqz3owj.jl:16\ntest set: Test Failed at /tmp/tmpctqz3owj.jl:19\n  Expression: candidate(9) == 16\n   Evaluated: 0 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpctqz3owj.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpctqz3owj.jl:16\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpctqz3owj.jl:14\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given by the user.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"N must be a positive integer.\")\n\telse\n\t\ti = 1\n\t\twhile i < N\n\t\t\ti += 1\n\t\tend\n\t\tif i^2 > N\n\t\t\treturn i^2\n\t\telse\n\t\t\treturn (i+1)^2\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmp8ipy8a7d.jl:27\n  Expression: candidate(35) == 36\n   Evaluated: 1225 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ipy8a7d.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ipy8a7d.jl:26\ntest set: Test Failed at /tmp/tmp8ipy8a7d.jl:28\n  Expression: candidate(6) == 9\n   Evaluated: 36 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ipy8a7d.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ipy8a7d.jl:26\ntest set: Test Failed at /tmp/tmp8ipy8a7d.jl:29\n  Expression: candidate(9) == 16\n   Evaluated: 81 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8ipy8a7d.jl:29 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8ipy8a7d.jl:26\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8ipy8a7d.jl:24\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"N must be a positive integer\")\n\telse\n\t\treturn ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpl6xr63u8.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpl6xr63u8.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpl6xr63u8.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpl6xr63u8.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t#N is the given number\n\t#Function to find the next perfect square greater than a given number\n\t#Your code here\n\t#Using the formula of sum of first n odd numbers\n\t#n^2 = 1 + 3 + 5 + ... + (2n-1)\n\t#n^2 = n(n+1)\n\t#n^2 + 2n + 1 = (n+1)^2\n\t#n^2 + 2n + 1 - n^2 = (n+1)^2 - n^2\n\t#2n + 1 = (n+1)^2 - n^2\n\t#2n + 1 = n^2 + 2n + 1\n\t#2n + 1 = (n+1)^2\n\t#n = sqrt((2n+1)/2)\n\t#n = sqrt(N/2) + 1/2\n\tn = ceil(sqrt(N/2) + 1/2)\n\treturn n*n\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpdyi9jem6.jl:26\n  Expression: candidate(35) == 36\n   Evaluated: 25 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyi9jem6.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyi9jem6.jl:25\ntest set: Test Failed at /tmp/tmpdyi9jem6.jl:28\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdyi9jem6.jl:28 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdyi9jem6.jl:25\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdyi9jem6.jl:23\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t#N is the number given by the user\n\t#next_Perfect_Square is the next perfect square greater than N\n\t#Int64 is the type of the input and output\n\t\n\t#initialize the next_Perfect_Square\n\tnext_Perfect_Square = 0\n\t\n\t#loop to find the next perfect square\n\tfor i in 1:N\n\t\tif i^2 > N\n\t\t\tnext_Perfect_Square = i^2\n\t\t\tbreak\n\t\tend\n\tend\n\t\n\treturn next_Perfect_Square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpvn_4he5r.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvn_4he5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvn_4he5r.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvn_4he5r.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number N as input and returns the next perfect square greater than N.\n\t\"\"\"\n\t# Initialize the variable to store the next perfect square\n\tnext_perfect_square = 0\n\t# Initialize the variable to store the square root of N\n\tsqrt_N = sqrt(N)\n\t# If the square root of N is an integer\n\tif isinteger(sqrt_N)\n\t\t# The next perfect square is the square of the square root of N\n\t\tnext_perfect_square = sqrt_N^2\n\telse\n\t\t# The next perfect square is the square of the next integer greater than the square root of N\n\t\tnext_perfect_square = (ceil(sqrt_N))^2\n\tend\n\t# Return the next perfect square\n\treturn next_perfect_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122779,
      "stdout": "test set: Test Failed at /tmp/tmpon1etqwl.jl:30\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpon1etqwl.jl:30 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpon1etqwl.jl:27\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpon1etqwl.jl:25\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given by the user\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tnext_Perfect_Square(N)\n\t\t\n\t\tFind the next perfect square greater than a given number.\n\t\t\n\t\tExamples\n\t\t--------\n\t\t>>> next_Perfect_Square(10)\n\t\t16\n\t\t\n\t\t>>> next_Perfect_Square(25)\n\t\t36\n\t\t\n\t\t>>> next_Perfect_Square(37)\n\t\t49\n\t\t\n\t\t>>> next_Perfect_Square(1)\n\t\t4\n\t\"\"\"\n\t\n\tif N < 0\n\t\treturn \"N must be a positive integer\"\n\tend\n\t\n\tif N == 0\n\t\treturn 4\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 4\n\tend\n\t\n\tif N == 3\n\t\treturn 4\n\tend\n\t\n\tif N == 4\n\t\treturn 9\n\tend\n\t\n\tif N == 5\n\t\treturn 9\n\tend\n\t\n\tif N == 6\n\t\treturn 9\n\tend\n\t\n\tif N == 7\n\t\treturn 9\n\tend\n\t\n\tif N == 8\n\t\treturn 9\n\tend\n\t\n\tif N == 9\n\t\treturn 16\n\tend\n\t\n\tif N == 10\n\t\treturn 16\n\tend\n\t\n\tif N == 11\n\t\treturn 16\n\tend\n\t\n\tif N == 12\n\t\treturn 16\n\tend\n\t\n\tif N == 13\n\t\treturn 16\n\tend\n\t\n\tif N == 14\n\t\treturn 16\n\tend\n\t\n\tif N == 15\n\t\treturn 16\n\tend\n\t\n\tif N == 16\n\t\treturn 25\n\tend\n\t\n\tif N == 17\n\t\treturn 25\n\tend\n\t\n\tif N == 18\n\t\treturn 25\n\tend\n\t\n\tif N == 19\n\t\treturn 25\n\tend\n\t\n\tif N == 20\n\t\treturn 25\n\tend\n\t\n\tif N == 21\n\t\treturn 25\n\tend\n\t\n\tif N == 22\n\t\treturn 25\n\tend\n\t\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122779,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpa3ij29nk.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpa3ij29nk.jl:1\nin expression starting at /tmp/tmpa3ij29nk.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i^2 <= N\n        i += 1\n    end\n    return i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmprwuzldqz.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprwuzldqz.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprwuzldqz.jl:14\ntest set: Test Failed at /tmp/tmprwuzldqz.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprwuzldqz.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprwuzldqz.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprwuzldqz.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif is_perfect_square(N)\n\t\treturn N\n\tend\n\treturn next_Perfect_Square(N+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Error During Test at /tmp/tmpytmuv3zk.jl:21\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpytmuv3zk.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytmuv3zk.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytmuv3zk.jl:20\ntest set: Error During Test at /tmp/tmpytmuv3zk.jl:22\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpytmuv3zk.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytmuv3zk.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytmuv3zk.jl:20\ntest set: Error During Test at /tmp/tmpytmuv3zk.jl:23\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpytmuv3zk.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpytmuv3zk.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpytmuv3zk.jl:20\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpytmuv3zk.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number and returns the next perfect square greater than that number.\n\t\"\"\"\n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    # N is the given number\n    # Your code here\n    # You can also define other functions\n    return (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmpbmy2aod5.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbmy2aod5.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbmy2aod5.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbmy2aod5.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tThis function takes a number as input and returns the next perfect square greater than the given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as an argument and returns the next perfect square greater than the given number.\n\t\"\"\"\n\tif N<0\n\t\tprintln(\"Please enter a positive number\")\n\telse\n\t\tsqrt_N = sqrt(N)\n\t\tif sqrt_N == floor(sqrt_N)\n\t\t\treturn N\n\t\telse\n\t\t\treturn ceil(sqrt_N)^2\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp7odpdrfm.jl:26\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7odpdrfm.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7odpdrfm.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7odpdrfm.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tnext_Perfect_Square: Integer\n\t\"\"\"\n\tnext_Perfect_Square = ceil(Int64, sqrt(N))^2\n\treturn next_Perfect_Square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp8xa_7wer.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xa_7wer.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xa_7wer.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8xa_7wer.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    # N is the given number\n    # Your code here\n    # You can also define other functions\n    return (N+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp68ygqbhu.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 1296 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp68ygqbhu.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp68ygqbhu.jl:14\ntest set: Test Failed at /tmp/tmp68ygqbhu.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 49 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp68ygqbhu.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp68ygqbhu.jl:14\ntest set: Test Failed at /tmp/tmp68ygqbhu.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 100 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp68ygqbhu.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp68ygqbhu.jl:14\nTest Summary: | Fail  Total\ntest set      |    3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp68ygqbhu.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\tif N < 0\n\t\treturn \"N must be a positive integer\"\n\tend\n\t\n\tif sqrt(N) % 1 == 0\n\t\treturn N\n\telse\n\t\treturn next_Perfect_Square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp872vme_s.jl:25\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp872vme_s.jl:25 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp872vme_s.jl:22\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp872vme_s.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number and returns the next perfect square greater than the given number.\n\t\"\"\"\n\ti = 1\n\twhile (i*i <= N)\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\treturn ceil(Int64, sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp4411laka.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp4411laka.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp4411laka.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp4411laka.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is an integer\n\t\"\"\"\n\treturn ceil(Int64, sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmpdvi12lx6.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdvi12lx6.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdvi12lx6.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdvi12lx6.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    \"\"\"\n    This function takes a number and returns the next perfect square greater than the number\n    \"\"\"\n    for i in 1:N\n        if i^2 > N\n            return i^2\n        end\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122779,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number N and returns the next perfect square greater than N.\n\t\"\"\"\n\ti=1\n\twhile i*i<=N\n\t\ti+=1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function returns the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp06om159c.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp06om159c.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp06om159c.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp06om159c.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmpa_nia9g4.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpa_nia9g4.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpa_nia9g4.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpa_nia9g4.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given by the user.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tn = Int64(ceil(sqrt(N)))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmpcub1y9x9.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpcub1y9x9.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpcub1y9x9.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpcub1y9x9.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmpc12jjgy5.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc12jjgy5.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc12jjgy5.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpc12jjgy5.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti=1\n\twhile i*i<=N\n\t\ti+=1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122779,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number whose next perfect square is to be found\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmpsb3r7d3j.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsb3r7d3j.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsb3r7d3j.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsb3r7d3j.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)\n\t\n\tFind the next perfect square greater than a given number.\n\t\n\t# Example\n\t```julia\n\tjulia> next_Perfect_Square(5)\n\t9\n\t```\n\t\"\"\"\n\t\n\t# Initialize the variable\n\ti = 1\n\t\n\t# Loop\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\t\n\t# Return the result\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122779,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number for which the next perfect square is to be found.\n\t\"\"\"\n\treturn (ceil(Int,sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmpdzyb3tsp.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdzyb3tsp.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdzyb3tsp.jl:14\ntest set: Test Failed at /tmp/tmpdzyb3tsp.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpdzyb3tsp.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpdzyb3tsp.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpdzyb3tsp.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is an integer\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmphgg4_xcx.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphgg4_xcx.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphgg4_xcx.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphgg4_xcx.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t# N is the given number\n\t# return the next perfect square greater than N\n\t# if N is not a perfect square, return -1\n\t# if N is a perfect square, return the next perfect square\n\t# if N is negative, return -1\n\t# if N is zero, return 1\n\t\n\t# if N is negative, return -1\n\tif N < 0\n\t\treturn -1\n\tend\n\t\n\t# if N is zero, return 1\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\t# if N is a perfect square, return the next perfect square\n\tif is_Perfect_Square(N)\n\t\treturn N + 1\n\tend\n\t\n\t# if N is not a perfect square, return -1\n\tif !is_Perfect_Square(N)\n\t\treturn -1\n\tend\n\t\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "test set: Error During Test at /tmp/tmpj6xze9_q.jl:38\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpj6xze9_q.jl:23\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj6xze9_q.jl:38 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj6xze9_q.jl:37\ntest set: Error During Test at /tmp/tmpj6xze9_q.jl:39\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpj6xze9_q.jl:23\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj6xze9_q.jl:39 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj6xze9_q.jl:37\ntest set: Error During Test at /tmp/tmpj6xze9_q.jl:40\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpj6xze9_q.jl:23\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpj6xze9_q.jl:40 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpj6xze9_q.jl:37\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpj6xze9_q.jl:35\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tNext Perfect Square: Integer\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmp13gv4poy.jl:20\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp13gv4poy.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp13gv4poy.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp13gv4poy.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N::Int64)\n\t\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\t\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmp3tza_soi.jl:20\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3tza_soi.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3tza_soi.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3tza_soi.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\"\"\"\n\tif N<0\n\t\tprintln(\"Input must be a positive integer.\")\n\telse\n\t\tsqrt(N)%1 == 0 ? return N : return ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0m_jz86s.jl:12\nin expression starting at /tmp/tmp0m_jz86s.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number for which next perfect square is to be found\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number as input and returns the next perfect square greater than the given number.\n\t\"\"\"\n\ti = 1\n\twhile (i*i) <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number N and returns the next perfect square greater than N.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\telse\n\t\treturn ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "test set: Test Failed at /tmp/tmpg8dwzazz.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpg8dwzazz.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpg8dwzazz.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpg8dwzazz.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is a positive integer\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "test set: Test Failed at /tmp/tmpaohda1be.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpaohda1be.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpaohda1be.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpaohda1be.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if sqrt(N) == trunc(sqrt(N))\n        return N\n    else\n        return next_Perfect_Square(N+1)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "test set: Test Failed at /tmp/tmpsq0_935f.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsq0_935f.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsq0_935f.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsq0_935f.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Negative number\"\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 4\n\tend\n\tif N == 3\n\t\treturn 4\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjl3xc9zg.jl:1\nin expression starting at /tmp/tmpjl3xc9zg.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    \"\"\"\n    Find the next perfect square greater than a given number.\n    \"\"\"\n    if N < 0\n        return \"Error: Number should be positive\"\n    end\n    if sqrt(N) % 1 == 0\n        return \"Error: Number is already a perfect square\"\n    end\n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Error During Test at /tmp/tmp4epfrtx9.jl:23\n  Test threw exception\n  Expression: candidate(9) == 16\n  MethodError: Cannot `convert` an object of type String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp4epfrtx9.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4epfrtx9.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4epfrtx9.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmp4epfrtx9.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i < N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpm7wkubyh.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpm7wkubyh.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpm7wkubyh.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpm7wkubyh.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122783,
      "stdout": "test set: Test Failed at /tmp/tmphja9znuf.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphja9znuf.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphja9znuf.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphja9znuf.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer and returns the next perfect square greater than the given number.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"Please enter a positive integer.\")\n\telse\n\t\tN = ceil(sqrt(N))\n\t\treturn N^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122783,
      "stdout": "test set: Test Failed at /tmp/tmp8anz0f_3.jl:22\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8anz0f_3.jl:22 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8anz0f_3.jl:19\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8anz0f_3.jl:17\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is a positive integer\n\t\"\"\"\n\tif N < 0\n\t\treturn \"N is not a positive integer\"\n\tend\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Error: Input must be a positive number.\"\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 9\n\tend\n\t\n\tif N == 3\n\t\treturn 16\n\tend\n\t\n\tif N == 4\n\t\treturn 25\n\tend\n\t\n\tif N == 5\n\t\treturn 36\n\tend\n\t\n\tif N == 6\n\t\treturn 49\n\tend\n\t\n\tif N == 7\n\t\treturn 64\n\tend\n\t\n\tif N == 8\n\t\treturn 81\n\tend\n\t\n\tif N == 9\n\t\treturn 100\n\tend\n\t\n\tif N == 10\n\t\treturn 121\n\tend\n\t\n\tif N == 11\n\t\treturn 144\n\tend\n\t\n\tif N == 12\n\t\treturn 169\n\tend\n\t\n\tif N == 13\n\t\treturn 196\n\tend\n\t\n\tif N == 14\n\t\treturn 225\n\tend\n\t\n\tif N == 15\n\t\treturn 256\n\tend\n\t\n\tif N == 16\n\t\treturn 289\n\tend\n\t\n\tif N == 17\n\t\treturn 324\n\tend\n\t\n\tif N == 18\n\t\treturn 361\n\tend\n\t\n\tif N == 19\n\t\treturn 400\n\tend\n\t\n\tif N == 20\n\t\treturn 441\n\tend\n\t\n\tif N == 21\n\t\treturn 484\n\tend\n\t\n\tif N == 22\n\t\treturn 529\n\tend\n\t\n\tif N == 23\n\t\treturn 576\n\tend\n\t\n\tif N == 24\n\t\treturn 625\n\tend\n\t\n\tif N == 25\n\t\treturn 676\n\tend\n\t\n\tif N == 26\n\t\treturn 729\n\tend\n\t\n\tif N == 27\n\t\treturn 784\n\tend\n\t\n\tif N == 28\n\t\treturn 841\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_i6w_dqi.jl:1\nin expression starting at /tmp/tmp_i6w_dqi.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmp6cis7om8.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cis7om8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cis7om8.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6cis7om8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tnext_Perfect_Square: Integer\n\t\"\"\"\n\tnext_Perfect_Square = N + 1\n\twhile !is_Perfect_Square(next_Perfect_Square)\n\t\tnext_Perfect_Square += 1\n\tend\n\treturn next_Perfect_Square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Error During Test at /tmp/tmp8zy80sx8.jl:22\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp8zy80sx8.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zy80sx8.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zy80sx8.jl:21\ntest set: Error During Test at /tmp/tmp8zy80sx8.jl:23\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp8zy80sx8.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zy80sx8.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zy80sx8.jl:21\ntest set: Error During Test at /tmp/tmp8zy80sx8.jl:24\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp8zy80sx8.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp8zy80sx8.jl:24 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp8zy80sx8.jl:21\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp8zy80sx8.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number whose next perfect square is to be found.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122783,
      "stdout": "test set: Test Failed at /tmp/tmpolz6l_u5.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpolz6l_u5.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpolz6l_u5.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpolz6l_u5.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = Int64(ceil(sqrt(N)))\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122783,
      "stdout": "test set: Test Failed at /tmp/tmpiygrlu6p.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpiygrlu6p.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpiygrlu6p.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpiygrlu6p.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N)\n\t\n\tFind the next perfect square greater than a given number.\n\t\n\tExample\n\t-------\n\tjulia> next_Perfect_Square(10)\n\t16\n\t\n\t\"\"\"\n\t\n\tif N < 0\n\t\tprintln(\"Error: N must be a positive integer\")\n\t\treturn\n\tend\n\t\n\ti = 1\n\twhile i^2 <= N\n\t\ti += 1\n\tend\n\t\n\treturn i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the given number.\n\t\"\"\"\n\tif N<0\n\t\tprintln(\"Please enter a positive number.\")\n\telse\n\t\tsqrt(N)%1==0 ? return N : return ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: colon expected in \"?\" expression\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvm42dxts.jl:12\nin expression starting at /tmp/tmpvm42dxts.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function returns the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmptyzony_2.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptyzony_2.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptyzony_2.jl:14\ntest set: Test Failed at /tmp/tmptyzony_2.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptyzony_2.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptyzony_2.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptyzony_2.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    x = ceil(sqrt(N))\n    return x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpxynfe86x.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxynfe86x.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxynfe86x.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxynfe86x.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "test set: Test Failed at /tmp/tmpvn_4he5r.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvn_4he5r.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvn_4he5r.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvn_4he5r.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number to be checked\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti = i+1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmp7ydkqcxe.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7ydkqcxe.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7ydkqcxe.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7ydkqcxe.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpbg1cwua7.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpbg1cwua7.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpbg1cwua7.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpbg1cwua7.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is a positive integer\n\t\"\"\"\n\tif N < 0\n\t\terror(\"N must be a positive integer\")\n\tend\n\t\n\ti = N\n\twhile true\n\t\tif i % sqrt(i) == 0\n\t\t\treturn i\n\t\tend\n\t\ti += 1\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmpw16w43ye.jl:27\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw16w43ye.jl:27 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw16w43ye.jl:24\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw16w43ye.jl:22\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given by the user.\n\t\"\"\"\n\t\n\t#The next perfect square is the square of the next odd number.\n\t#The next odd number is the current odd number plus 2.\n\t#The current odd number is the current number plus 1.\n\t#The current number is the square root of the current number.\n\t\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmpypliwpkj.jl:23\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpypliwpkj.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpypliwpkj.jl:20\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpypliwpkj.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmprn1x98yi.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprn1x98yi.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprn1x98yi.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprn1x98yi.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122777,
      "stdout": "test set: Test Failed at /tmp/tmpnhu7tz0p.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpnhu7tz0p.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpnhu7tz0p.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpnhu7tz0p.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return -1\n    end\n    if N == 0\n        return 1\n    end\n    if N == 1\n        return 4\n    end\n    if N == 2\n        return 4\n    end\n    if N == 3\n        return 4\n    end\n    if N == 4\n        return 9\n    end\n    if N == 5\n        return 9\n    end\n    if N == 6\n        return 9\n    end\n    if N == 7\n        return 9\n    end\n    if N == 8\n        return 9\n    end\n    if N == 9\n        return 16\n    end\n    if N == 10\n        return 16\n    end\n    if N == 11\n        return 16\n    end\n    if N == 12\n        return 16\n    end\n    if N == 13\n        return 16\n    end\n    if N == 14\n        return 16\n    end\n    if N == 15\n        return 16\n    end\n    if N == 16\n        return 25\n    end\n    if N == 17\n        return 25\n    end\n    if N == 18\n        return 25\n    end\n    if N == 19\n        return 25\n    end\n    if N == 20\n        return 25\n    end\n    if N == 21\n        return 25\n    end\n    if N == 22\n        return 25\n    end\n    if N == 23\n        return 25\n    end\n    if N == 24\n        return 25\n    end\n    if N == 25\n        return 36\n    end\n    if N == 26\n        return 36\n    end\n    if N == 27\n        return 36\n    end\n    if N == 28\n        return 36\n    end\n    if N == 29\n        return 36\n    end\n    if N == 30\n        return 36\n    end\n    if N == 31\n        return 36\n    end\n    if N == 32\n        return 36\n    end\n    if N == 33\n        return 36\n    end\n    if N == 34\n        return 36\n    end\n    if N == 35\n        return 36\n    end\n    if N == 36\n        return 49\n    end\n    if N == 37\n        return 49\n    end\n    if N\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmabj9v49.jl:1\nin expression starting at /tmp/tmpmabj9v49.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tThis function will return the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif sqrt(N) % 1 == 0\n\t\treturn N\n\tend\n\treturn next_Perfect_Square(N + 1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp7kfg7k14.jl:23\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7kfg7k14.jl:23 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7kfg7k14.jl:20\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7kfg7k14.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmp6cis7om8.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cis7om8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cis7om8.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6cis7om8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\t# Initialize the variable\n\ti = 1\n\t# Loop to find the next perfect square\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer and returns the next perfect square greater than the given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Error: Number cannot be negative\"\n\tend\n\t\n\tif is_perfect_square(N)\n\t\treturn N\n\telse\n\t\treturn next_perfect_square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Error During Test at /tmp/tmp7g6fuxx0.jl:23\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp7g6fuxx0.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7g6fuxx0.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7g6fuxx0.jl:22\ntest set: Error During Test at /tmp/tmp7g6fuxx0.jl:24\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp7g6fuxx0.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7g6fuxx0.jl:24 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7g6fuxx0.jl:22\ntest set: Error During Test at /tmp/tmp7g6fuxx0.jl:25\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_perfect_square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp7g6fuxx0.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7g6fuxx0.jl:25 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7g6fuxx0.jl:22\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp7g6fuxx0.jl:20\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tnext_Perfect_Square: Integer\n\t\"\"\"\n\tnext_Perfect_Square = ceil(sqrt(N))^2\n\treturn next_Perfect_Square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp8imxluzw.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8imxluzw.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8imxluzw.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8imxluzw.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(Int64, sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp3yvfpal1.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yvfpal1.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yvfpal1.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3yvfpal1.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number for which we have to find the next perfect square.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122783,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\tReturns: Next Perfect Square\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp_m4u86v3.jl:16\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_m4u86v3.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_m4u86v3.jl:15\ntest set: Test Failed at /tmp/tmp_m4u86v3.jl:17\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_m4u86v3.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_m4u86v3.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_m4u86v3.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(Int64, sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp3yvfpal1.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yvfpal1.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yvfpal1.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3yvfpal1.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tnext_Perfect_Square(N)\n\t\n\tFind the next perfect square greater than a given number.\n\t\n\tParameters\n\t----------\n\tN : Int64\n\t\tThe given number.\n\t\n\tReturns\n\t-------\n\tInt64\n\t\tThe next perfect square greater than N.\n\t\"\"\"\n\t\n\tif N < 0\n\t\treturn -1\n\tend\n\t\n\tif N == 0\n\t\treturn 1\n\tend\n\t\n\tif N == 1\n\t\treturn 4\n\tend\n\t\n\tif N == 2\n\t\treturn 4\n\tend\n\t\n\tif N == 3\n\t\treturn 4\n\tend\n\t\n\tif N == 4\n\t\treturn 9\n\tend\n\t\n\tif N == 5\n\t\treturn 9\n\tend\n\t\n\tif N == 6\n\t\treturn 9\n\tend\n\t\n\tif N == 7\n\t\treturn 9\n\tend\n\t\n\tif N == 8\n\t\treturn 9\n\tend\n\t\n\tif N == 9\n\t\treturn 16\n\tend\n\t\n\tif N == 10\n\t\treturn 16\n\tend\n\t\n\tif N == 11\n\t\treturn 16\n\tend\n\t\n\tif N == 12\n\t\treturn 16\n\tend\n\t\n\tif N == 13\n\t\treturn 16\n\tend\n\t\n\tif N == 14\n\t\treturn 16\n\tend\n\t\n\tif N == 15\n\t\treturn 16\n\tend\n\t\n\tif N == 16\n\t\treturn 25\n\tend\n\t\n\tif N == 17\n\t\treturn 25\n\tend\n\t\n\tif N == 18\n\t\treturn 25\n\tend\n\t\n\tif N == 19\n\t\treturn 25\n\tend\n\t\n\tif N == 20\n\t\treturn 25\n\tend\n\t\n\tif N == 21\n\t\treturn 25\n\tend\n\t\n\tif N == 22\n\t\treturn 25\n\tend\n\t\n\tif N == 23\n\t\treturn 25\n\tend\n\t\n\tif N == 24\n\t\treturn 25\n\tend\n\t\n\tif N == 25\n\t\treturn 36\n\tend\n\t\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpta8rvftd.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpta8rvftd.jl:1\nin expression starting at /tmp/tmpta8rvftd.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 4\n\tend\n\tif N == 3\n\t\treturn 9\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\n\tend\n\tif\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmpz7ez0ig1.jl:113\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpz7ez0ig1.jl:114\nin expression starting at /tmp/tmpz7ez0ig1.jl:114\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number for which the next perfect square is to be found.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122783,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return -1\n    end\n    if N == 0\n        return 1\n    end\n    if N == 1\n        return 4\n    end\n    if N == 2\n        return 4\n    end\n    if N == 3\n        return 4\n    end\n    if N == 4\n        return 9\n    end\n    if N == 5\n        return 9\n    end\n    if N == 6\n        return 9\n    end\n    if N == 7\n        return 9\n    end\n    if N == 8\n        return 9\n    end\n    if N == 9\n        return 16\n    end\n    if N == 10\n        return 16\n    end\n    if N == 11\n        return 16\n    end\n    if N == 12\n        return 16\n    end\n    if N == 13\n        return 16\n    end\n    if N == 14\n        return 16\n    end\n    if N == 15\n        return 16\n    end\n    if N == 16\n        return 25\n    end\n    if N == 17\n        return 25\n    end\n    if N == 18\n        return 25\n    end\n    if N == 19\n        return 25\n    end\n    if N == 20\n        return 25\n    end\n    if N == 21\n        return 25\n    end\n    if N == 22\n        return 25\n    end\n    if N == 23\n        return 25\n    end\n    if N == 24\n        return 25\n    end\n    if N == 25\n        return 36\n    end\n    if N == 26\n        return 36\n    end\n    if N == 27\n        return 36\n    end\n    if N == 28\n        return 36\n    end\n    if N == 29\n        return 36\n    end\n    if N == 30\n        return 36\n    end\n    if N == 31\n        return 36\n    end\n    if N == 32\n        return 36\n    end\n    if N == 33\n        return 36\n    end\n    if N == 34\n        return 36\n    end\n    if N == 35\n        return 36\n    end\n    if N == 36\n        return 49\n    end\n    if N == 37\n        return 49\n    end\n    if N\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmabj9v49.jl:1\nin expression starting at /tmp/tmpmabj9v49.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\"\"\"\n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmp_387uksb.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp_387uksb.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp_387uksb.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp_387uksb.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    n = ceil(sqrt(N))\n    return n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmp67gkedcs.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp67gkedcs.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp67gkedcs.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp67gkedcs.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFind the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"Please enter a positive number\")\n\telse\n\t\treturn ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmp1p07pifj.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp1p07pifj.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp1p07pifj.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp1p07pifj.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while i*i <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122778,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is an integer\n\t\"\"\"\n\t\n\tif N < 0\n\t\treturn \"N is not a positive integer\"\n\tend\n\t\n\tif sqrt(N) % 1 == 0\n\t\treturn N\n\tend\n\t\n\ti = 1\n\twhile i < N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\t\ti += 1\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmp85b_zql2.jl:32\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp85b_zql2.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp85b_zql2.jl:29\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp85b_zql2.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Error: Input must be a positive integer.\"\n\tend\n\t\n\t# Find the next perfect square\n\tnext_square = ceil(sqrt(N))^2\n\t\n\treturn next_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmpe07tl6us.jl:24\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpe07tl6us.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpe07tl6us.jl:21\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpe07tl6us.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\tif N<0\n\t\treturn \"N must be a positive integer\"\n\telse\n\t\treturn ceil(sqrt(N))^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmp2f5nry2w.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp2f5nry2w.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp2f5nry2w.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp2f5nry2w.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122776,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N<0\n        return \"Invalid Input\"\n    end\n    if sqrt(N)%1==0\n        return N\n    end\n    return next_Perfect_Square(N+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmpftso8g4b.jl:20\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpftso8g4b.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpftso8g4b.jl:17\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpftso8g4b.jl:15\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given by the user.\n\t\"\"\"\n\tif N<0\n\t\treturn \"N is not a positive number\"\n\tend\n\ti=1\n\twhile i*i<N\n\t\ti+=1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "test set: Test Failed at /tmp/tmpp0voufwa.jl:24\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpp0voufwa.jl:24 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpp0voufwa.jl:21\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpp0voufwa.jl:19\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer N as input and returns the next perfect square greater than N.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Error: Input must be a positive integer.\"\n\tend\n\tif sqrt(N) % 1 == 0\n\t\treturn \"Error: Input must not be a perfect square.\"\n\tend\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Error During Test at /tmp/tmpw11ah0bf.jl:23\n  Test threw exception\n  Expression: candidate(9) == 16\n  MethodError: Cannot `convert` an object of type String to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpw11ah0bf.jl:12\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpw11ah0bf.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpw11ah0bf.jl:20\nTest Summary: | Pass  Error  Total\ntest set      |    2      1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 0 failed, 1 errored, 0 broken.\nin expression starting at /tmp/tmpw11ah0bf.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        println(\"N must be positive\")\n        return\n    end\n    i = 1\n    while i^2 <= N\n        i += 1\n    end\n    return i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5rneg1hy.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5rneg1hy.jl:1\nin expression starting at /tmp/tmp5rneg1hy.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is an integer\n\t\"\"\"\n\ti = 1\n\twhile (i*i) < N\n\t\ti = i + 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "test set: Test Failed at /tmp/tmpc6dbkm89.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpc6dbkm89.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpc6dbkm89.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpc6dbkm89.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square greater than the given number.\n\t\"\"\"\n\t# Initialize the variable to store the next perfect square.\n\tnext_perfect_square = 0\n\t# Initialize the variable to store the square root of the given number.\n\tsquare_root = 0\n\t# Initialize the variable to store the square of the square root.\n\tsquare_of_square_root = 0\n\t# Initialize the variable to store the difference between the given number and the square of the square root.\n\tdifference = 0\n\t# Initialize the variable to store the square of the square root plus one.\n\tsquare_of_square_root_plus_one = 0\n\t# Initialize the variable to store the square of the square root plus two.\n\tsquare_of_square_root_plus_two = 0\n\t# Initialize the variable to store the square of the square root plus three.\n\tsquare_of_square_root_plus_three = 0\n\t# Initialize the variable to store the square of the square root plus four.\n\tsquare_of_square_root_plus_four = 0\n\t# Initialize the variable to store the square of the square root plus five.\n\tsquare_of_square_root_plus_five = 0\n\t# Initialize the variable to store the square of the square root plus six.\n\tsquare_of_square_root_plus_six = 0\n\t# Initialize the variable to store the square of the square root plus seven.\n\tsquare_of_square_root_plus_seven = 0\n\t# Initialize the variable to store the square of the square root plus eight.\n\tsquare_of_square_root_plus_eight = 0\n\t# Initialize the variable to store the square of the square root plus nine.\n\tsquare_of_square_root_plus_nine = 0\n\t# Initialize the variable to store the square of the square root plus ten.\n\tsquare_of_square_root_plus_ten = 0\n\t# Initialize the variable to store the square of the square root plus eleven.\n\tsquare_of_square_root_plus_eleven = 0\n\t# Initialize the variable to store the square of the square root plus twelve.\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpr2i50cjd.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpr2i50cjd.jl:1\nin expression starting at /tmp/tmpr2i50cjd.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\t# Initialize the variable\n\tnext_perfect_square = 0\n\t# Check if the number is perfect square or not\n\tif is_Perfect_Square(N)\n\t\t# If the number is perfect square then find the next perfect square\n\t\tnext_perfect_square = N + 1\n\t\twhile !is_Perfect_Square(next_perfect_square)\n\t\t\tnext_perfect_square += 1\n\t\tend\n\telse\n\t\t# If the number is not perfect square then find the next perfect square\n\t\tnext_perfect_square = N + 1\n\t\twhile !is_Perfect_Square(next_perfect_square)\n\t\t\tnext_perfect_square += 1\n\t\tend\n\tend\n\t# Return the next perfect square\n\treturn next_perfect_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Error During Test at /tmp/tmpl2q2sakz.jl:32\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpl2q2sakz.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl2q2sakz.jl:32 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl2q2sakz.jl:31\ntest set: Error During Test at /tmp/tmpl2q2sakz.jl:33\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpl2q2sakz.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl2q2sakz.jl:33 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl2q2sakz.jl:31\ntest set: Error During Test at /tmp/tmpl2q2sakz.jl:34\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpl2q2sakz.jl:11\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpl2q2sakz.jl:34 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpl2q2sakz.jl:31\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpl2q2sakz.jl:29\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tnext_Perfect_Square: Integer\n\t\"\"\"\n\tnext_Perfect_Square = ceil(sqrt(N))^2\n\treturn next_Perfect_Square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp8imxluzw.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8imxluzw.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8imxluzw.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8imxluzw.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Int64\n\t\"\"\"\n\treturn (ceil(sqrt(N))+1)^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmprwuzldqz.jl:15\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprwuzldqz.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprwuzldqz.jl:14\ntest set: Test Failed at /tmp/tmprwuzldqz.jl:16\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmprwuzldqz.jl:16 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmprwuzldqz.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmprwuzldqz.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    x = ceil(sqrt(N))\n    return x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmpxynfe86x.jl:15\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpxynfe86x.jl:15 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpxynfe86x.jl:12\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpxynfe86x.jl:10\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number to find the next perfect square greater than.\n\t\"\"\"\n\tif N<0\n\t\tprintln(\"N must be a positive integer\")\n\t\treturn\n\tend\n\t\n\tif N==0\n\t\treturn 1\n\tend\n\t\n\tif N==1\n\t\treturn 4\n\tend\n\t\n\tif N==2\n\t\treturn 4\n\tend\n\t\n\tif N==3\n\t\treturn 4\n\tend\n\t\n\tif N==4\n\t\treturn 9\n\tend\n\t\n\tif N==5\n\t\treturn 9\n\tend\n\t\n\tif N==6\n\t\treturn 9\n\tend\n\t\n\tif N==7\n\t\treturn 9\n\tend\n\t\n\tif N==8\n\t\treturn 9\n\tend\n\t\n\tif N==9\n\t\treturn 16\n\tend\n\t\n\tif N==10\n\t\treturn 16\n\tend\n\t\n\tif N==11\n\t\treturn 16\n\tend\n\t\n\tif N==12\n\t\treturn 16\n\tend\n\t\n\tif N==13\n\t\treturn 16\n\tend\n\t\n\tif N==14\n\t\treturn 16\n\tend\n\t\n\tif N==15\n\t\treturn 16\n\tend\n\t\n\tif N==16\n\t\treturn 25\n\tend\n\t\n\tif N==17\n\t\treturn 25\n\tend\n\t\n\tif N==18\n\t\treturn 25\n\tend\n\t\n\tif N==19\n\t\treturn 25\n\tend\n\t\n\tif N==20\n\t\treturn 25\n\tend\n\t\n\tif N==21\n\t\treturn 25\n\tend\n\t\n\tif N==22\n\t\treturn 25\n\tend\n\t\n\tif N==23\n\t\treturn 25\n\tend\n\t\n\tif N==24\n\t\treturn 25\n\tend\n\t\n\tif N==25\n\t\treturn 36\n\tend\n\t\n\tif N==26\n\t\treturn 36\n\tend\n\t\n\tif N==27\n\t\treturn 36\n\tend\n\t\n\tif N==28\n\t\treturn 36\n\tend\n\t\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp0wovfezl.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp0wovfezl.jl:1\nin expression starting at /tmp/tmp0wovfezl.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if(N<0)\n        println(\"Please enter a positive number\")\n    else\n        sqrt(N)%1==0 ? println(N) : println(ceil(sqrt(N))^2)\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122788,
      "stdout": "36.0\ntest set: Error During Test at /tmp/tmp_9xhy_d6.jl:16\n  Test threw exception\n  Expression: candidate(35) == 36\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp_9xhy_d6.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_9xhy_d6.jl:16 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmp_9xhy_d6.jl:15\n9.0\ntest set: Error During Test at /tmp/tmp_9xhy_d6.jl:17\n  Test threw exception\n  Expression: candidate(6) == 9\n  MethodError: Cannot `convert` an object of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at /home/a.guha/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n    convert(::Type{T}, !Matched::T) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:6\n    convert(::Type{T}, !Matched::Number) where T<:Number at /home/a.guha/.conda/envs/polyglot/share/julia/base/number.jl:7\n    ...\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmp_9xhy_d6.jl:8\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmp_9xhy_d6.jl:17 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n   ",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmp_9xhy_d6.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tNext perfect square greater than N\n\t\"\"\"\n\tif N<0\n\t\treturn \"N should be greater than 0\"\n\tend\n\tif sqrt(N)%1==0\n\t\treturn N\n\tend\n\treturn next_Perfect_Square(N+1)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmpsgvcwkyh.jl:26\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpsgvcwkyh.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpsgvcwkyh.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpsgvcwkyh.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122782,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer N and returns the next perfect square greater than N.\n\t\"\"\"\n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is an integer\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122781,
      "stdout": "test set: Test Failed at /tmp/tmphgg4_xcx.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmphgg4_xcx.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmphgg4_xcx.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmphgg4_xcx.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN: Integer\n\t\"\"\"\n\tif N < 0\n\t\treturn -1\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 4\n\tend\n\tif N == 3\n\t\treturn 4\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\n\tend\n\tif N == 34\n\t\treturn\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122785,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg_pgq9xi.jl:1\nin expression starting at /tmp/tmpg_pgq9xi.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    \"\"\"\n    This function takes an integer N and returns the next perfect square greater than N.\n    \"\"\"\n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "test set: Test Failed at /tmp/tmpw9cuz351.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw9cuz351.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw9cuz351.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw9cuz351.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number\n\t\"\"\"\n\tx = ceil(sqrt(N))\n\treturn x^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmptg48p5ia.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmptg48p5ia.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmptg48p5ia.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmptg48p5ia.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    \"\"\"\n    Find the next perfect square greater than a given number.\n    \"\"\"\n    return ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmp7vdf20ry.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp7vdf20ry.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp7vdf20ry.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp7vdf20ry.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number and returns the next perfect square greater than the number.\n\t\"\"\"\n\tif N < 0\n\t\treturn 0\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 9\n\tend\n\tif N == 3\n\t\treturn 16\n\tend\n\tif N == 4\n\t\treturn 25\n\tend\n\tif N == 5\n\t\treturn 36\n\tend\n\tif N == 6\n\t\treturn 49\n\tend\n\tif N == 7\n\t\treturn 64\n\tend\n\tif N == 8\n\t\treturn 81\n\tend\n\tif N == 9\n\t\treturn 100\n\tend\n\tif N == 10\n\t\treturn 121\n\tend\n\tif N == 11\n\t\treturn 144\n\tend\n\tif N == 12\n\t\treturn 169\n\tend\n\tif N == 13\n\t\treturn 196\n\tend\n\tif N == 14\n\t\treturn 225\n\tend\n\tif N == 15\n\t\treturn 256\n\tend\n\tif N == 16\n\t\treturn 289\n\tend\n\tif N == 17\n\t\treturn 324\n\tend\n\tif N == 18\n\t\treturn 361\n\tend\n\tif N == 19\n\t\treturn 400\n\tend\n\tif N == 20\n\t\treturn 441\n\tend\n\tif N == 21\n\t\treturn 484\n\tend\n\tif N == 22\n\t\treturn 529\n\tend\n\tif N == 23\n\t\treturn 576\n\tend\n\tif N == 24\n\t\treturn 625\n\tend\n\tif N == 25\n\t\treturn 676\n\tend\n\tif N == 26\n\t\treturn 729\n\tend\n\tif N == 27\n\t\treturn 784\n\tend\n\tif N == 28\n\t\treturn 841\n\tend\n\tif N == 29\n\t\treturn 900\n\tend\n\tif N == 30\n\t\treturn 961\n\tend\n\tif N == 31\n\t\treturn 1024\n\tend\n\tif N == 32\n\t\treturn 1089\n\tend\n\tif\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: missing condition in \"if\" at /tmp/tmpy2w_e0x2.jl:110\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpy2w_e0x2.jl:111\nin expression starting at /tmp/tmpy2w_e0x2.jl:111\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tThis function takes a number N and returns the next perfect square greater than N.\n\t\t\n\t\tExample:\n\t\t\tnext_Perfect_Square(10)\n\t\t\t\t16\n\t\t\tnext_Perfect_Square(25)\n\t\t\t\t36\n\t\"\"\"\n\tif N<0\n\t\treturn \"Error: Please enter a positive number\"\n\tend\n\tif N==0\n\t\treturn 1\n\tend\n\tif N==1\n\t\treturn 4\n\tend\n\tif N==2\n\t\treturn 4\n\tend\n\tif N==3\n\t\treturn 4\n\tend\n\tif N==4\n\t\treturn 9\n\tend\n\tif N==5\n\t\treturn 9\n\tend\n\tif N==6\n\t\treturn 9\n\tend\n\tif N==7\n\t\treturn 9\n\tend\n\tif N==8\n\t\treturn 9\n\tend\n\tif N==9\n\t\treturn 16\n\tend\n\tif N==10\n\t\treturn 16\n\tend\n\tif N==11\n\t\treturn 16\n\tend\n\tif N==12\n\t\treturn 16\n\tend\n\tif N==13\n\t\treturn 16\n\tend\n\tif N==14\n\t\treturn 16\n\tend\n\tif N==15\n\t\treturn 16\n\tend\n\tif N==16\n\t\treturn 25\n\tend\n\tif N==17\n\t\treturn 25\n\tend\n\tif N==18\n\t\treturn 25\n\tend\n\tif N==19\n\t\treturn 25\n\tend\n\tif N==20\n\t\treturn 25\n\tend\n\tif N==21\n\t\treturn 25\n\tend\n\tif N==22\n\t\treturn 25\n\tend\n\tif N==23\n\t\treturn 25\n\tend\n\tif N==24\n\t\treturn 25\n\tend\n\tif N==25\n\t\treturn 36\n\tend\n\tif N==26\n\t\treturn 36\n\tend\n\tif N==27\n\t\treturn 36\n\tend\n\tif N==28\n\t\treturn 36\n\tend\n\tif N==29\n\t\treturn 36\n\tend\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpq8vc0tqi.jl:4 requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpq8vc0tqi.jl:1\nin expression starting at /tmp/tmpq8vc0tqi.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\tif N < 0\n\t\treturn \"Invalid Input\"\n\tend\n\tif N == 0\n\t\treturn 1\n\tend\n\tif N == 1\n\t\treturn 4\n\tend\n\tif N == 2\n\t\treturn 4\n\tend\n\tif N == 3\n\t\treturn 4\n\tend\n\tif N == 4\n\t\treturn 9\n\tend\n\tif N == 5\n\t\treturn 9\n\tend\n\tif N == 6\n\t\treturn 9\n\tend\n\tif N == 7\n\t\treturn 9\n\tend\n\tif N == 8\n\t\treturn 9\n\tend\n\tif N == 9\n\t\treturn 16\n\tend\n\tif N == 10\n\t\treturn 16\n\tend\n\tif N == 11\n\t\treturn 16\n\tend\n\tif N == 12\n\t\treturn 16\n\tend\n\tif N == 13\n\t\treturn 16\n\tend\n\tif N == 14\n\t\treturn 16\n\tend\n\tif N == 15\n\t\treturn 16\n\tend\n\tif N == 16\n\t\treturn 25\n\tend\n\tif N == 17\n\t\treturn 25\n\tend\n\tif N == 18\n\t\treturn 25\n\tend\n\tif N == 19\n\t\treturn 25\n\tend\n\tif N == 20\n\t\treturn 25\n\tend\n\tif N == 21\n\t\treturn 25\n\tend\n\tif N == 22\n\t\treturn 25\n\tend\n\tif N == 23\n\t\treturn 25\n\tend\n\tif N == 24\n\t\treturn 25\n\tend\n\tif N == 25\n\t\treturn 36\n\tend\n\tif N == 26\n\t\treturn 36\n\tend\n\tif N == 27\n\t\treturn 36\n\tend\n\tif N == 28\n\t\treturn 36\n\tend\n\tif N == 29\n\t\treturn 36\n\tend\n\tif N == 30\n\t\treturn 36\n\tend\n\tif N == 31\n\t\treturn 36\n\tend\n\tif N == 32\n\t\treturn 36\n\tend\n\tif N == 33\n\t\treturn 36\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpnvxj895m.jl:1\nin expression starting at /tmp/tmpnvxj895m.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is a positive integer.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmpotvvtm5y.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpotvvtm5y.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpotvvtm5y.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpotvvtm5y.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i < N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510034,
      "stdout": "test set: Test Failed at /tmp/tmp6cis7om8.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp6cis7om8.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp6cis7om8.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp6cis7om8.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number\n\t\"\"\"\n\treturn ceil(sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmpw0dtkwfl.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpw0dtkwfl.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpw0dtkwfl.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpw0dtkwfl.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\tn = ceil(sqrt(N))\n\treturn n^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmp0ns_bykp.jl:18\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp0ns_bykp.jl:18 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp0ns_bykp.jl:15\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp0ns_bykp.jl:13\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\t# Initialize the variable to store the next perfect square\n\tnext_perfect_square = 0\n\t# Initialize the variable to store the square root of the given number\n\tsqrt_N = sqrt(N)\n\t# Check if the square root of the given number is an integer\n\tif sqrt_N == floor(sqrt_N)\n\t\t# If the square root of the given number is an integer,\n\t\t# then the next perfect square is the square of the square root of the given number\n\t\tnext_perfect_square = sqrt_N^2\n\telse\n\t\t# If the square root of the given number is not an integer,\n\t\t# then the next perfect square is the square of the next integer greater than the square root of the given number\n\t\tnext_perfect_square = (floor(sqrt_N) + 1)^2\n\tend\n\t# Return the next perfect square\n\treturn next_perfect_square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmpos8z6gr0.jl:32\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpos8z6gr0.jl:32 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpos8z6gr0.jl:29\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpos8z6gr0.jl:27\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number and returns the next perfect square greater than the number.\n\t\"\"\"\n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the number given.\n\t\"\"\"\n\treturn (ceil(sqrt(N))^2)\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "test set: Test Failed at /tmp/tmpeyie_riu.jl:17\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpeyie_riu.jl:17 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpeyie_riu.jl:14\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpeyie_riu.jl:12\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tFunction to find the next perfect square greater than a given number.\n\t\"\"\"\n\t#Check if the number is a perfect square\n\tif is_Perfect_Square(N)\n\t\treturn N\n\telse\n\t\t#Find the next perfect square\n\t\treturn next_Perfect_Square(N+1)\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122788,
      "stdout": "test set: Error During Test at /tmp/tmpqszbyzwd.jl:21\n  Test threw exception\n  Expression: candidate(35) == 36\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpqszbyzwd.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqszbyzwd.jl:21 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqszbyzwd.jl:20\ntest set: Error During Test at /tmp/tmpqszbyzwd.jl:22\n  Test threw exception\n  Expression: candidate(6) == 9\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpqszbyzwd.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqszbyzwd.jl:22 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqszbyzwd.jl:20\ntest set: Error During Test at /tmp/tmpqszbyzwd.jl:23\n  Test threw exception\n  Expression: candidate(9) == 16\n  UndefVarError: is_Perfect_Square not defined\n  Stacktrace:\n   [1] next_Perfect_Square(N::Int64)\n     @ Main /tmp/tmpqszbyzwd.jl:9\n   [2] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqszbyzwd.jl:23 [inlined]\n   [4] macro expansion\n     @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqszbyzwd.jl:20\nTest Summary: | Error  Total\ntest set      |     3      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored, 0 broken.\nin expression starting at /tmp/tmpqszbyzwd.jl:18\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    if N < 0\n        return \"N must be a positive integer\"\n    end\n    i = 1\n    while i^2 <= N\n        i += 1\n    end\n    return i^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number.\n\t\"\"\"\n\tif N<0\n\t\treturn -1\n\tend\n\tif N==0\n\t\treturn 1\n\tend\n\tif N==1\n\t\treturn 4\n\tend\n\tif N==2\n\t\treturn 4\n\tend\n\tif N==3\n\t\treturn 4\n\tend\n\tif N==4\n\t\treturn 9\n\tend\n\tif N==5\n\t\treturn 9\n\tend\n\tif N==6\n\t\treturn 9\n\tend\n\tif N==7\n\t\treturn 9\n\tend\n\tif N==8\n\t\treturn 9\n\tend\n\tif N==9\n\t\treturn 16\n\tend\n\tif N==10\n\t\treturn 16\n\tend\n\tif N==11\n\t\treturn 16\n\tend\n\tif N==12\n\t\treturn 16\n\tend\n\tif N==13\n\t\treturn 16\n\tend\n\tif N==14\n\t\treturn 16\n\tend\n\tif N==15\n\t\treturn 16\n\tend\n\tif N==16\n\t\treturn 25\n\tend\n\tif N==17\n\t\treturn 25\n\tend\n\tif N==18\n\t\treturn 25\n\tend\n\tif N==19\n\t\treturn 25\n\tend\n\tif N==20\n\t\treturn 25\n\tend\n\tif N==21\n\t\treturn 25\n\tend\n\tif N==22\n\t\treturn 25\n\tend\n\tif N==23\n\t\treturn 25\n\tend\n\tif N==24\n\t\treturn 25\n\tend\n\tif N==25\n\t\treturn 36\n\tend\n\tif N==26\n\t\treturn 36\n\tend\n\tif N==27\n\t\treturn 36\n\tend\n\tif N==28\n\t\treturn 36\n\tend\n\tif N==29\n\t\treturn 36\n\tend\n\tif N==30\n\t\treturn 36\n\tend\n\tif N==31\n\t\treturn 36\n\tend\n\tif N==32\n\t\treturn 36\n\tend\n\tif N==33\n\t\treturn 36\n\tend\n\tif N==34\n\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvjw0jgwu.jl:1\nin expression starting at /tmp/tmpvjw0jgwu.jl:1\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes an integer as input and returns the next perfect square of the input number.\n\t\"\"\"\n\tif N < 0\n\t\tprintln(\"Please enter a positive number\")\n\telse\n\t\treturn (ceil(sqrt(N))+1)^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122788,
      "stdout": "test set: Test Failed at /tmp/tmpspk5_xwh.jl:19\n  Expression: candidate(35) == 36\n   Evaluated: 49 == 36\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpspk5_xwh.jl:19 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpspk5_xwh.jl:18\ntest set: Test Failed at /tmp/tmpspk5_xwh.jl:20\n  Expression: candidate(6) == 9\n   Evaluated: 16 == 9\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpspk5_xwh.jl:20 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpspk5_xwh.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    1     2      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 1 passed, 2 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpspk5_xwh.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tN is the given number.\n\t\"\"\"\n\t#find the square root of the given number\n\tsqrt_N = sqrt(N)\n\t#check if the square root is an integer\n\tif sqrt_N == trunc(sqrt_N)\n\t\t#if it is an integer, then the next perfect square is the square of the square root\n\t\treturn sqrt_N^2\n\telse\n\t\t#if it is not an integer, then the next perfect square is the square of the next integer\n\t\treturn (trunc(sqrt_N) + 1)^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122788,
      "stdout": "test set: Test Failed at /tmp/tmp3x2xn57_.jl:26\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3x2xn57_.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3x2xn57_.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3x2xn57_.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    return ceil(Int64, sqrt(N))^2\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122784,
      "stdout": "test set: Test Failed at /tmp/tmp3yvfpal1.jl:14\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp3yvfpal1.jl:14 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp3yvfpal1.jl:11\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp3yvfpal1.jl:9\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tInput:\n\t\tN: Integer\n\tOutput:\n\t\tnext_Perfect_Square: Integer\n\t\"\"\"\n\tnext_Perfect_Square = ceil(Int64, sqrt(N))^2\n\treturn next_Perfect_Square\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122780,
      "stdout": "test set: Test Failed at /tmp/tmp8xa_7wer.jl:21\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmp8xa_7wer.jl:21 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmp8xa_7wer.jl:18\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmp8xa_7wer.jl:16\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\ti = 1\n\twhile i*i <= N\n\t\ti += 1\n\tend\n\treturn i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1665510033,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\t\tThis function takes an integer as input and returns the next perfect square greater than the input.\n\t\t\n\t\tExample:\n\t\t\tnext_Perfect_Square(10)\n\t\t\t\t16\n\t\t\tnext_Perfect_Square(25)\n\t\t\t\t36\n\t\"\"\"\n\t\n\tfor i in 1:N\n\t\tif i*i > N\n\t\t\treturn i*i\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122786,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tReturn the next perfect square greater than a given number.\n\t\"\"\"\n\t\n\tif N < 0\n\t\treturn \"Error: N must be positive\"\n\tend\n\t\n\tif isqrt(N) == sqrt(N)\n\t\treturn N\n\telse\n\t\treturn (isqrt(N) + 1)^2\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122788,
      "stdout": "test set: Test Failed at /tmp/tmpgqh44tpy.jl:26\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpgqh44tpy.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpgqh44tpy.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpgqh44tpy.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n    i = 1\n    while (i*i) <= N\n        i += 1\n    end\n    return i*i\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122787,
      "stdout": "",
      "stderr": "Test Summary: | Pass  Total\ntest set      |    3      3\n",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\"\"\"\n\tWrite a python function to find the next perfect square greater than a given number.\n\t\"\"\"\nfunction next_Perfect_Square(N::Int64)::Int64 \n\t\"\"\"\n\tThis function takes a number N as input and returns the next perfect square greater than N.\n\t\"\"\"\n\tif N<0\n\t\tprintln(\"N must be a positive number\")\n\telse\n\t\tsqrt_N = sqrt(N)\n\t\tif sqrt_N%1 == 0\n\t\t\treturn N\n\t\telse\n\t\t\treturn ceil(sqrt_N)^2\n\t\tend\n\tend\nend\nusing Test\n\n@testset begin\n\ncandidate = next_Perfect_Square;\n\t@test(candidate(35) == 36)\n\t@test(candidate(6) == 9)\n\t@test(candidate(9) == 16)\nend\n",
      "timestamp": 1666122788,
      "stdout": "test set: Test Failed at /tmp/tmpvssm49le.jl:26\n  Expression: candidate(9) == 16\n   Evaluated: 9 == 16\nStacktrace:\n [1] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n [2] macro expansion\n   @ /tmp/tmpvssm49le.jl:26 [inlined]\n [3] macro expansion\n   @ /home/a.guha/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n [4] top-level scope\n   @ /tmp/tmpvssm49le.jl:23\nTest Summary: | Pass  Fail  Total\ntest set      |    2     1      3\n",
      "stderr": "ERROR: LoadError: Some tests did not pass: 2 passed, 1 failed, 0 errored, 0 broken.\nin expression starting at /tmp/tmpvssm49le.jl:21\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
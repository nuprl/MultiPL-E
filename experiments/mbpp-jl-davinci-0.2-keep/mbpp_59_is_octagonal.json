{
  "name": "mbpp_59_is_octagonal",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to find the nth octagonal number.\n\t\"\"\"\nfunction is_octagonal(n::Int64)::Int64 \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_59_is_octagonal.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = is_octagonal;\n\t@test(candidate(5) == 65)\n\t@test(candidate(10) == 280)\n\t@test(candidate(15) == 645)\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1) / 6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1) / 6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (((sqrt(24*n+1)+1)/6)%1 == 0) ? 1 : 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\tif (sqrt(24*n+1) + 1) % 6 == 0\n\t\treturn 1\n\telse\n\t\treturn 0\n\tend\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn n == (3*n^2 - 2*n - 1)/2\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\tif (sqrt(2*n + 1/4) + 1/2) % 1 == 0\n\t\treturn 1\n\telse\n\t\treturn 0\n\tend\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\tif (sqrt(24*n+1) + 1) % 6 == 0\n\t\treturn 1\n\telse\n\t\treturn 0\n\tend\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturn 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn is_square(8*n+1)",
    "\treturn (sqrt(1+24*n)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tCheck if a number is octagonal.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\tif n == 0\n\t\treturn 0\n\tend\n\tif n == 1\n\t\treturn 1\n\tend\n\tif n == 2\n\t\treturn 0\n\tend\n\tif n == 3\n\t\treturn 1\n\tend\n\tif n == 4\n\t\treturn 0\n\tend\n\tif n == 5\n\t\treturn 1\n\tend\n\tif n == 6\n\t\treturn 0\n\tend\n\tif n == 7\n\t\treturn 1\n\tend\n\tif n == 8\n\t\treturn 0\n\tend\n\tif n == 9\n\t\treturn 1\n\tend\n\tif n == 10\n\t\treturn 0\n\tend\n\tif n == 11\n\t\treturn 1\n\tend\n\tif n == 12\n\t\treturn 0\n\tend\n\tif n == 13\n\t\treturn 1\n\tend\n\tif n == 14\n\t\treturn 0\n\tend\n\tif n == 15\n\t\treturn 1\n\tend\n\tif n == 16\n\t\treturn 0\n\tend\n\tif n == 17\n\t\treturn 1\n\tend\n\tif n == 18\n\t\treturn 0\n\tend\n\tif n == 19\n\t\treturn 1\n\tend\n\tif n == 20\n\t\treturn 0\n\tend\n\tif n == 21\n\t\treturn 1\n\tend\n\tif n == 22\n\t\treturn 0\n\tend\n\tif n == 23\n\t\treturn 1\n\tend\n\tif n == 24\n\t\treturn 0\n\tend\n\tif n == 25\n\t\treturn 1\n\tend\n\tif n == 26\n\t\treturn 0\n\tend\n\tif n == 27\n\t\treturn 1\n\tend\n\tif n == 28\n\t\treturn 0\n\tend\n\tif n == 29\n\t\treturn 1\n\tend\n\tif n == 30\n\t\treturn 0\n\tend\n\tif n == 31\n\t\treturn 1\n\tend\n\tif n == 32\n\t\treturn 0\n\tend\n\tif n == 33\n\t\treturn 1\n\tend\n\tif n == 34\n\t\treturn 0\n\tend\n",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tCheck if a number is octagonal.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n) + 1) % 6 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number and 0 otherwise.\n\t\"\"\"\n\treturn (sqrt(1 + 24*n) + 1) % 6 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1) / 6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n + 1) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\t\"\"\"\n\tReturns 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn is_square(3*n + 1)",
    "\t\"\"\"\n\tReturn 1 if n is an octagonal number, 0 otherwise.\n\t\"\"\"\n\treturn (sqrt(24*n+1)+1)/6 % 1 == 0\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1+24*n)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend",
    "\treturn (sqrt(1 + 24*n) + 1)/6\nend",
    "\treturn (sqrt(24*n+1)+1)/6\nend"
  ]
}
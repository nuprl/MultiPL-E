{
  "name": "mbpp_619_move_num",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to move all the numbers to the end of the given string.\n\t\"\"\"\nfunction move_num(test_str::String)::String \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = move_num;\n\t@test(candidate(\"I1love143you55three3000thousand\") == \"Iloveyouthreethousand1143553000\")\n\t@test(candidate(\"Avengers124Assemble\") == \"AvengersAssemble124\")\n\t@test(candidate(\"Its11our12path13to14see15things16do17things\") == \"Itsourpathtoseethingsdothings11121314151617\")\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\ttest_str = test_str.replace(\" \",\"\")\n\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\ttest_str = replace(test_str, r\"[^0-9]\", \"\") * \" \" * replace(test_str, r\"[0-9]\", \"\")\n\treturn test_str\nend",
    "\t\"\"\"\n\tFunction to move all the numbers to the end of the given string.\n\t\"\"\"\n\tnumbers = \"0123456789\"\n\tnumbers_list = []\n\tfor i in test_str\n\t\tif i in numbers\n\t\t\tpush!(numbers_list, i)\n\t\tend\n\tend\n\tfor i in numbers_list\n\t\ttest_str = replace(test_str, i => \"\")\n\tend\n\treturn test_str * join(numbers_list)\nend",
    "\ttest_str = split(test_str)\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tpush!(test_str, i)\n\t\t\tdeleteat!(test_str, findfirst(test_str, i))\n\t\tend\n\tend\n\treturn join(test_str)\nend",
    "\t\"\"\"\n\tMove all the numbers to the end of the given string.\n\t\"\"\"\n\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\t\"\"\"\n\tMove all the numbers to the end of the given string.\n\t\"\"\"\n\t# initialize the output string\n\tout_str = \"\"\n\t# initialize the number string\n\tnum_str = \"\"\n\t# loop through the input string\n\tfor i in test_str\n\t\t# check if the character is a number\n\t\tif isdigit(i)\n\t\t\t# add the number to the number string\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\t# add the character to the output string\n\t\t\tout_str = out_str * i\n\t\tend\n\tend\n\t# add the number string to the end of the output string\n\tout_str = out_str * num_str\n\t# return the output string\n\treturn out_str\nend",
    "\t\"\"\"\n\tThis function moves all the numbers to the end of the given string.\n\t\"\"\"\n\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\ttest_str = replace(test_str, r\"[^0-9]\", \"\")\n\treturn test_str\nend",
    "\tnum = \"0123456789\"\n\tstr = \"\"\n\tnum_str = \"\"\n\tfor i in test_str\n\t\tif i in num\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tstr = str * i\n\tend\n\tstr = str * num_str\n\treturn str\nend",
    "\tnum_str = \"\"\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tnum_str = num_str * i\n\t\tend\n\tend\n\treturn test_str * num_str\nend",
    "\t\"\"\"\n\tMove all the numbers to the end of the given string.\n\t\"\"\"\n\tnum_str = \"\"\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tnum_str = num_str * i\n\t\tend\n\tend\n\treturn test_str[findfirst(test_str, r\"\\d\"):end] * num_str\nend",
    "\t\"\"\"\n\tMove all the numbers to the end of the given string.\n\t\"\"\"\n\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\t\"\"\"\n\tMove all the numbers to the end of the given string.\n\t\"\"\"\n\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\t\"\"\"\n\tMove all numbers to the end of the string.\n\t\"\"\"\n\tnum_str = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tnum_str = num_str * i\n\t\tend\n\tend\n\treturn test_str * num_str\nend",
    "\tstr = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tstr = str * i\n\t\tend\n\tend\n\treturn str\nend",
    "\t\"\"\"\n\tFunction to move all the numbers to the end of the given string.\n\t\"\"\"\n\tnum_str = \"\"\n\talpha_str = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\talpha_str = alpha_str * i\n\tend\n\treturn alpha_str * num_str\nend",
    "\t\"\"\"\n\tMove all the numbers to the end of the given string.\n\t\"\"\"\n\ttest_str = test_str.replace(\" \",\"\")\n\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\tnum_str = \"\"\n\tfor i in test_str\n\t\tif i in \"0123456789\"\n\t\t\tnum_str = num_str * i\n\t\tend\n\tend\n\treturn num_str\nend",
    "\tnum_str = \"\"\n\tchar_str = \"\"\n\tfor i in test_str\n\t\tif isdigit(i)\n\t\t\tnum_str = num_str * i\n\t\telse\n\t\t\tchar_str = char_str * i\n\tend\n\treturn char_str * num_str\nend",
    "\t# test_str = \"a1b2c3d4\"\n\t# test_str = \"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26\"\n\t# test_str = \"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26\"\n\t# test_str = \"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22W23X24Y25Z26\"\n\t# test_str = \"a1b2c3d4e5f6g7h8i9j10k11l12m13n14o15p16q17r18s19t20u21v22w23x24y25z26A1B2C3D4E5F6G7H8I9J10K11L12M13N14O15P16Q17R18S19T20U21V22"
  ]
}
{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "jl",
  "prompt": "\"\"\"\n\tWrite a function to sort a given list of strings of numbers numerically. https://www.geeksforgeeks.org/python-sort-numeric-strings-in-a-list/\n\t\"\"\"\nfunction sort_numeric_strings(nums_str::Vector{String})::Vector{Int64} \n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "verbatim",
  "tests": "using Test\n\n@testset begin\n\ncandidate = sort_numeric_strings;\n\t@test(candidate([\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\n\t@test(candidate([\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\n\t@test(candidate([\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])\nend\n",
  "stop_tokens": [
    "\nfunction",
    "\nmacro",
    "\n\n"
  ],
  "completions": [
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSorts a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, num) for num in nums_str]\n\treturn sort(nums)\nend",
    "\tnums = [parse(Int64, i) for i in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, num) for num in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSorts a vector of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, i) for i in nums_str]\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums = [parse(Int64, num) for num in nums_str]\n\tsort(nums)\nend",
    "    nums_int = Int64[]\n    for num in nums_str\n        push!(nums_int, parse(Int64, num))\n    end\n    sort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "    nums = [parse(Int64, num_str) for num_str in nums_str]\n    sort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tFunction to sort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "    nums_int = Int64[]\n    for num in nums_str\n        push!(nums_int, parse(Int64, num))\n    end\n    sort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\treturn sort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\treturn sort(nums)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSorts a vector of strings of numbers numerically.\n\t\"\"\"\n\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "    return sort(parse.(Int64, nums_str))\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\treturn sort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = [parse(Int64, num) for num in nums_str]\n\treturn sort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "    return sort(parse.(Int64, nums_str))\nend",
    "\tnums = map(x->parse(Int, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\t\"\"\"\n\tSort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums_int = [parse(Int64, num) for num in nums_str]\n\tsort!(nums_int)\n\treturn nums_int\nend",
    "\tnums = [parse(Int64, i) for i in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = Int64.(nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums_int, parse(Int64, num_str))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\t\"\"\"\n\tSorts a list of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, x) for x in nums_str]\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums_int = [parse(Int64, x) for x in nums_str]\n\tsort(nums_int)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "    # Convert strings to numbers\n    nums = parse.(Int64, nums_str)\n    # Sort numbers\n    sort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\t\"\"\"\n\tSorts a list of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, x) for x in nums_str]\n\treturn sort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\treturn sort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, num) for num in nums_str]\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, i) for i in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSorts a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\t\"\"\"\n\tSort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, num) for num in nums_str]\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_str = sort(nums_str, by = x -> parse(Int64, x))\n\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\treturn nums\nend",
    "\t\"\"\"\n\tThis function takes a vector of strings and returns a vector of integers.\n\t\"\"\"\n\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\treturn sort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "    nums = [parse(Int64, x) for x in nums_str]\n    sort(nums)\nend",
    "\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "    nums = Int64[]\n    for num_str in nums_str\n        push!(nums, parse(Int64, num_str))\n    end\n    return sort(nums)\nend",
    "\tnums = [parse(Int64, num) for num in nums_str]\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = [parse(Int64, num) for num in nums_str]\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int,parse(Int64,i))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\treturn sort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "    return sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = [parse(Int64, x) for x in nums_str]\n\tsort(nums_int)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = [parse(Int64, x) for x in nums_str]\n\tsort(nums_int)\nend",
    "\tnums_int = [parse(Int64, x) for x in nums_str]\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSorts a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, x) for x in nums_str]\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = [parse(Int64, num) for num in nums_str]\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort!(nums_int)\n\treturn nums_int\nend",
    "\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = map(x->parse(Int64, x), nums_str)\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\treturn sort(nums)\nend",
    "\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, i) for i in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort!(nums_int)\nend",
    "\tnums = map(x->parse(Int64,x),nums_str)\n\treturn sort(nums)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = [parse(Int64, i) for i in nums_str]\n\tsort(nums)\nend",
    "\t\"\"\"\n\tConvert the string vector to a vector of ints and sort\n\t\"\"\"\n\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\t\"\"\"\n\tConvert string to int and sort\n\t\"\"\"\n\tnums = [parse(Int64, x) for x in nums_str]\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64,x),nums_str)\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = [parse(Int64, x) for x in nums_str]\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums_int = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums_int, parse(Int64, num_str))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSorts a list of strings of numbers numerically.\n\t\"\"\"\n\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, s) for s in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\tsort(nums)\nend",
    "\t\"\"\"\n\tFunction to sort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums, parse(Int64, num))\n\tend\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, num_str) for num_str in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = map(x->parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "    nums_int = Int64[]\n    for num in nums_str\n        push!(nums_int, parse(Int64, num))\n    end\n    sort(nums_int)\nend",
    "\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSort numeric strings in a list.\n\t\"\"\"\n\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums, parse(Int64, i))\n\tend\n\tsort(nums)\nend",
    "\t\"\"\"\n\tConvert the strings to integers and sort them.\n\t\"\"\"\n\tnums = [parse(Int64, num) for num in nums_str]\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor i in nums_str\n\t\tpush!(nums_int, parse(Int64, i))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = [parse(Int64, num) for num in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor i = 1:length(nums_str)\n\t\tpush!(nums, parse(Int64, nums_str[i]))\n\tend\n\tsort(nums)\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\treturn sort(parse.(Int64, nums_str))\nend",
    "\tnums_int = Int64[]\n\tfor num in nums_str\n\t\tpush!(nums_int, parse(Int64, num))\n\tend\n\tsort(nums_int)\nend",
    "\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend",
    "\t# convert to ints\n\tnums = [parse(Int64, x) for x in nums_str]\n\t# sort\n\tsort!(nums)\n\treturn nums\nend",
    "\tnums = map(x -> parse(Int64, x), nums_str)\n\tsort(nums)\nend",
    "\tnums = [parse(Int64, x) for x in nums_str]\n\tsort(nums)\nend",
    "\tnums = Int64[]\n\tfor num_str in nums_str\n\t\tpush!(nums, parse(Int64, num_str))\n\tend\n\tsort(nums)\nend",
    "\t\"\"\"\n\tSort a given list of strings of numbers numerically.\n\t\"\"\"\n\tnums = parse.(Int64, nums_str)\n\tsort(nums)\nend"
  ]
}
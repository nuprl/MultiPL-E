---
name: HumanEval_64_vowels_count
language: lua
prompt: |
  -- Write a function vowels_count which takes a string representing
  -- a word as input and returns the number of vowels in the string.
  -- Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a
  -- vowel, but only when it is at the end of the given word.
  -- Example:
  -- >>> vowels_count('abcde')
  -- 2
  -- >>> vowels_count('ACEDY')
  -- 3
  local function vowels_count(s)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = vowels_count
      lu.assertEquals(candidate('abcde'), 2)
      lu.assertEquals(candidate('Alone'), 3)
      lu.assertEquals(candidate('key'), 2)
      lu.assertEquals(candidate('bye'), 1)
      lu.assertEquals(candidate('keY'), 2)
      lu.assertEquals(candidate('bYe'), 1)
      lu.assertEquals(candidate('ACEDY'), 3)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local vowels = {'a', 'e', 'i', 'o', 'u'}
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'y' and i == #s then
        count = count + 1
      elseif table.contains(vowels, c) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    local last_char = string.sub(s, -1)
    for i = 1, #s do
      local char = string.sub(s, i, i)
      if char == 'a' or char == 'e' or char == 'i' or char == 'o' or char == 'u' then
        count = count + 1
      end
    end
    if last_char == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, c) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local last_char = string.sub(s, -1)
    for i = 1, #s do
      local c = string.sub(s, i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
        count = count + 1
      end
    end
    if last_char == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
        (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
        count = count + 1
      end
    end
    if s:sub(-1, -1) == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
      local vowels = {a = true, e = true, i = true, o = true, u = true}
      local count = 0
      for i = 1, #s do
          if vowels[s:sub(i, i)] then
              count = count + 1
          end
      end
      if s:sub(-1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, c) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif in_table(c, vowels) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
        count = count + 1
      elseif c == 'y' and i == #s then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local vowels = {a = true, e = true, i = true, o = true, u = true}
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if vowels[c:lower()] then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local vowels = {a = true, e = true, i = true, o = true, u = true}
    for i = 1, #s do
      if vowels[s:sub(i, i)] then
        count = count + 1
      end
    end
    if s:sub(-1) == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, c) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
        (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    -- TODO: Implement the function.
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
        count = count + 1
      elseif c == 'y' and i == #s then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local vowels = {a = true, e = true, i = true, o = true, u = true}
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if vowels[c:lower()] then
        count = count + 1
      end
    end
    if s:sub(-1) == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
                  (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, c) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local vowels = {'a', 'e', 'i', 'o', 'u'}
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'y' and i == #s then
        count = count + 1
      elseif table.contains(vowels, c) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      if s:sub(#s, #s) == 'y' then
          count = count - 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      if s:sub(#s, #s) == 'y' then
          count = count - 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      if s:sub(#s, #s) == 'y' then
          count = count - 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      local last_char = s:sub(-1)
      for i = 1, #s do
          local char = s:sub(i, i)
          for _, v in ipairs(vowels) do
              if char == v then
                  count = count + 1
              end
          end
      end
      if last_char == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
                  (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
        count = count + 1
      end
    end
    if s:sub(-1) == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif c == 'y' then
              -- do nothing
          elseif table.contains(vowels, c) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- "\tlocal count = 0\n\tfor i = 1, string.len(s) do\n\t\tif string.sub(s, i, i) ==
  'a' or string.sub(s, i, i) == 'e' or string.sub(s, i, i) == 'i' or string.sub(s,
  i, i) == 'o' or string.sub(s, i, i) == 'u' or string.sub(s, i, i) == 'y' then\n\t\t\tcount
  = count + 1\n\t\tend\n\tend\n\treturn count\nend"
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local vowels = {a = true, e = true, i = true, o = true, u = true}
    local count = 0
    for i = 1, #s do
      if vowels[s:sub(i, i)] then
        count = count + 1
      end
    end
    if s:sub(-1) == 'y' then
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' then
              count = count + 1
          end
      end
      if s:sub(-1, -1) == 'y' then
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          for j = 1, #vowels do
              if c == vowels[j] then
                  count = count + 1
              end
          end
      end
      return count
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local count = 0
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      for i = 1, #s do
          if s:sub(i, i) == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, s:sub(i, i)) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
         (c == 'y' and i == #s) then
        count = count + 1
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    for i = 1, #s do
      if string.find('aeiouy', string.lower(s:sub(i, i))) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or (s:sub(i, i) == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u'}
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'y' and i == #s then
              count = count + 1
          elseif table.contains(vowels, c) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          if s:sub(i, i) == 'a' or s:sub(i, i) == 'e' or s:sub(i, i) == 'i' or s:sub(i, i) == 'o' or s:sub(i, i) == 'u' or s:sub(i, i) == 'y' then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then
              count = count + 1
          elseif c == 'y' and i == #s then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
              (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local vowels = {'a', 'e', 'i', 'o', 'u'}
    local count = 0
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == 'y' and i == #s then
        count = count + 1
      elseif table.contains(vowels, c) then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' or
             (c == 'y' and i == #s) then
              count = count + 1
          end
      end
      return count
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

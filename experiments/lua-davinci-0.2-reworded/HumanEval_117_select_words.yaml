name: HumanEval_117_select_words
language: lua
prompt: "-- Given a string s and a natural number n, you have been tasked to implement\
  \ \n-- a function that returns a table of all words from string s that contain exactly\
  \ \n-- n consonants, in order these words appear in the string s.\n-- If the string\
  \ s is empty then the function should return an empty table.\n-- Note: you may assume\
  \ the input string contains only letters and spaces.\n-- Examples:\n-- >>> select_words('Mary\
  \ had a little lamb', 4)\n-- {'little'}\n-- >>> select_words('Mary had a little\
  \ lamb', 3)\n-- {'Mary', 'lamb'}\n-- >>> select_words('simple white space', 2)\n\
  -- {}\n-- >>> select_words('Hello world', 4)\n-- {'world'}\n-- >>> select_words('Uncle\
  \ sam', 3)\n-- {'Uncle'}\nlocal function select_words(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = select_words\n\
  \    lu.assertEquals(candidate('Mary had a little lamb', 4), {'little'})\n    lu.assertEquals(candidate('Mary\
  \ had a little lamb', 3), {'Mary', 'lamb'})\n    lu.assertEquals(candidate('simple\
  \ white space', 2), {})\n    lu.assertEquals(candidate('Hello world', 4), {'world'})\n\
  \    lu.assertEquals(candidate('Uncle sam', 3), {'Uncle'})\n    lu.assertEquals(candidate('',\
  \ 4), {})\n    lu.assertEquals(candidate('a b c d e f', 1), {'b', 'c', 'd', 'f'})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local words = {}\n    local word = \"\"\n    local consonants =\
    \ 0\n    for c in s:gmatch(\".\") do\n        if c == \" \" then\n           \
    \ if consonants == n then\n                table.insert(words, word)\n       \
    \     end\n            word = \"\"\n            consonants = 0\n        else\n\
    \            word = word .. c\n            if not c:match(\"[aeiou]\") then\n\
    \                consonants = consonants + 1\n            end\n        end\n \
    \   end\n    if consonants == n then\n        table.insert(words, word)\n    end\n\
    \    return words\nend", "    local t = {}\n    for word in s:gmatch(\"%w+\")\
    \ do\n        local count = 0\n        for c in word:gmatch(\"[^aeiou]\") do\n\
    \            count = count + 1\n        end\n        if count == n then\n    \
    \        table.insert(t, word)\n        end\n    end\n    return t\nend", "  \
    \  local words = {}\n    for word in s:gmatch('%S+') do\n        local consonants\
    \ = 0\n        for letter in word:gmatch('%a') do\n            if not is_vowel(letter)\
    \ then\n                consonants = consonants + 1\n            end\n       \
    \ end\n        if consonants == n then\n            table.insert(words, word)\n\
    \        end\n    end\n    return words\nend", "    local words = {}\n    for\
    \ word in s:gmatch('%w+') do\n        if count_consonants(word) == n then\n  \
    \          table.insert(words, word)\n        end\n    end\n    return words\n\
    end", "    local words = {}\n    local word = {}\n    local consonants = {'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'z'}\n    local count = 0\n    for i = 1, #s do\n        if s:sub(i,\
    \ i) == ' ' then\n            if count == n then\n                words[#words\
    \ + 1] = table.concat(word)\n            end\n            word = {}\n        \
    \    count = 0\n        else\n            word[#word + 1] = s:sub(i, i)\n    \
    \        for j = 1, #consonants do\n                if s:sub(i, i) == consonants[j]\
    \ then\n                    count = count + 1\n                end\n         \
    \   end\n        end\n    end\n    if count == n then\n        words[#words +\
    \ 1] = table.concat(word)\n    end\n    return words\nend", "    local t = {}\n\
    \    for w in s:gmatch('%w+') do\n        if count_consonants(w) == n then\n \
    \           t[#t + 1] = w\n        end\n    end\n    return t\nend", "\tlocal\
    \ words = {}\n\tfor word in s:gmatch(\"%w+\") do\n\t\tlocal count = 0\n\t\tfor\
    \ char in word:gmatch(\"[^aeiouAEIOU]\") do\n\t\t\tcount = count + 1\n\t\tend\n\
    \t\tif count == n then\n\t\t\ttable.insert(words, word)\n\t\tend\n\tend\n\treturn\
    \ words\nend", "    local words = {}\n    for word in s:gmatch('%w+') do\n   \
    \     if count_consonants(word) == n then\n            table.insert(words, word)\n\
    \        end\n    end\n    return words\nend", "    local words = {}\n    for\
    \ word in s:gmatch('%w+') do\n        if count_consonants(word) == n then\n  \
    \          table.insert(words, word)\n        end\n    end\n    return words\n\
    end", "    local words = {}\n    local word = \"\"\n    local consonants = 0\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c == \" \" then\n\
    \            if consonants == n then\n                table.insert(words, word)\n\
    \            end\n            word = \"\"\n            consonants = 0\n      \
    \  else\n            word = word .. c\n            if not c:match(\"[aeiou]\"\
    ) then\n                consonants = consonants + 1\n            end\n       \
    \ end\n    end\n    if consonants == n then\n        table.insert(words, word)\n\
    \    end\n    return words\nend", "    local words = {}\n    for w in s:gmatch('%w+')\
    \ do\n        if #w == n then\n            table.insert(words, w)\n        end\n\
    \    end\n    return words\nend", "    local words = {}\n    local word = ''\n\
    \    local consonants = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        if c == ' ' then\n            if consonants == n then\n             \
    \   table.insert(words, word)\n            end\n            word = ''\n      \
    \      consonants = 0\n        else\n            word = word .. c\n          \
    \  if not c:match('[aeiou]') then\n                consonants = consonants + 1\n\
    \            end\n        end\n    end\n    if consonants == n then\n        table.insert(words,\
    \ word)\n    end\n    return words\nend", "  local words = {}\n  local word =\
    \ ''\n  local consonants = 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n\
    \    if c == ' ' then\n      if consonants == n then\n        table.insert(words,\
    \ word)\n      end\n      word = ''\n      consonants = 0\n    else\n      word\
    \ = word .. c\n      if not c:match('[aeiouAEIOU]') then\n        consonants =\
    \ consonants + 1\n      end\n    end\n  end\n  if consonants == n then\n    table.insert(words,\
    \ word)\n  end\n  return words\nend", "    local words = {}\n    for word in s:gmatch('%w+')\
    \ do\n        if word:gsub('[aeiou]', ''):len() == n then\n            table.insert(words,\
    \ word)\n        end\n    end\n    return words\nend", "    local words = {}\n\
    \    for word in s:gmatch('%w+') do\n        if count_consonants(word) == n then\n\
    \            table.insert(words, word)\n        end\n    end\n    return words\n\
    end", "    local words = {}\n    for word in s:gmatch('%w+') do\n        local\
    \ consonants = 0\n        for letter in word:gmatch('[^aeiouAEIOU]') do\n    \
    \        consonants = consonants + 1\n        end\n        if consonants == n\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    for word in s:gmatch('%w+') do\n   \
    \     local consonants = 0\n        for char in word:gmatch('[^aeiou]') do\n \
    \           consonants = consonants + 1\n        end\n        if consonants ==\
    \ n then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    for word in s:gmatch('%w+') do\n   \
    \     if count_consonants(word) == n then\n            table.insert(words, word)\n\
    \        end\n    end\n    return words\nend", "    local words = {}\n    local\
    \ word = ''\n    local consonants = 0\n    for i = 1, #s do\n        local c =\
    \ s:sub(i, i)\n        if c == ' ' then\n            if consonants == n then\n\
    \                table.insert(words, word)\n            end\n            word\
    \ = ''\n            consonants = 0\n        else\n            word = word .. c\n\
    \            if not is_vowel(c) then\n                consonants = consonants\
    \ + 1\n            end\n        end\n    end\n    if consonants == n then\n  \
    \      table.insert(words, word)\n    end\n    return words\nend", "  local words\
    \ = {}\n  for word in s:gmatch('%w+') do\n    local count = 0\n    for letter\
    \ in word:gmatch('[^aeiou]') do\n      count = count + 1\n    end\n    if count\
    \ == n then\n      table.insert(words, word)\n    end\n  end\n  return words\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

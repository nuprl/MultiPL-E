name: HumanEval_58_common
language: lua
prompt: "-- Return sorted unique common elements for two tables.\n-- >>> common({1,\
  \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
  \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
  \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}),\
  \ {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2, 3})\n \
  \   lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4,\
  \ 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "    local res = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ sort(res)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local t = {}\n  for k, v in pairs(l1) do\n    if l2[v] then\n\
    \      t[v] = true\n    end\n  end\n  local r = {}\n  for k, v in pairs(t) do\n\
    \    r[#r + 1] = k\n  end\n  table.sort(r)\n  return r\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend", "    local t = {}\n  \
    \  for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for k, v in pairs(l1) do\n\
    \    if l2[v] then\n      t[v] = true\n    end\n  end\n  local r = {}\n  for k,\
    \ v in pairs(t) do\n    table.insert(r, k)\n  end\n  table.sort(r)\n  return r\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t + 1] = v\n    end\n  end\n  return sorted(t)\nend", "    local t =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "   \
    \ local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \ local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n   \
    \   t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    sort(t)\n    return t\nend", "  local t\
    \ = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t +\
    \ 1] = v\n    end\n  end\n  return sort(t)\nend", "  local t = {}\n  for _, v\
    \ in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t, v)\n  \
    \  end\n  end\n  return sorted(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return\
    \ sorted(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            table.insert(t, v)\n        end\n    end\n\
    \    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n   \
    \ end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sorted(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            table.insert(t, v)\n        end\n    end\n    return unique(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            table.insert(t, v)\n        end\n    end\n    return sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      t[#t + 1] = v\n    end\n  end\n  return set(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local r = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            r[#r + 1] = v\n        end\n\
    \    end\n    return sort(r)\nend", "    local res = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return sort(res)\nend", "    local t = {}\n    for _, v\
    \ in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1] = v\n\
    \        end\n    end\n    return sort(t)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1] =\
    \ v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for _,\
    \ v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n\
    \  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for k, v in pairs(l1) do\n        if l2[v]\
    \ then\n            t[v] = true\n        end\n    end\n    local l = {}\n    for\
    \ k, v in pairs(t) do\n        l[#l + 1] = k\n    end\n    table.sort(l)\n   \
    \ return l\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            insert(t, v)\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    local r = {}\n    for _, v in ipairs(l1)\
    \ do\n        t[v] = true\n    end\n    for _, v in ipairs(l2) do\n        if\
    \ t[v] then\n            table.insert(r, v)\n        end\n    end\n    table.sort(r)\n\
    \    return r\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n      \
    \  if contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n\
    \    return sort(t)\nend", "    local t = {}\n    for i = 1, #l1 do\n        local\
    \ v = l1[i]\n        if contains(l2, v) then\n            t[#t + 1] = v\n    \
    \    end\n    end\n    return sorted(t)\nend", "  local t = {}\n  for k, v in\
    \ pairs(l1) do\n    if l2[v] then\n      t[v] = true\n    end\n  end\n  return\
    \ sorted_keys(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n   \
    \     if contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n\
    \    return sort(t)\nend", "    local ret = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            ret[#ret + 1] = v\n        end\n\
    \    end\n    return sort(ret)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         table.insert(t, v)\n        end\n    end\n    return unique(t)\nend",
  "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local s = {}\n    for _, v in ipairs(l1) do\n        s[v] = true\n    end\n\
    \    local r = {}\n    for _, v in ipairs(l2) do\n        if s[v] then\n     \
    \       r[#r+1] = v\n        end\n    end\n    return r\nend", "    local t =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "   \
    \ local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local res = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v)\
    \ then\n            table.insert(res, v)\n        end\n    end\n    return sort(res)\n\
    end", "    local t = {}\n    for k, v in pairs(l1) do\n        if l2[v] then\n\
    \            t[v] = true\n        end\n    end\n    local r = {}\n    for k, v\
    \ in pairs(t) do\n        table.insert(r, k)\n    end\n    table.sort(r)\n   \
    \ return r\nend", "    local t = {}\n    for k, v in pairs(l1) do\n        if\
    \ l2[v] then\n            t[v] = true\n        end\n    end\n    local r = {}\n\
    \    for k, v in pairs(t) do\n        table.insert(r, k)\n    end\n    table.sort(r)\n\
    \    return r\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n      \
    \  if contains(l2, v) then\n            table.insert(t, v)\n        end\n    end\n\
    \    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n   \
    \ end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n\
    \    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return sort(t)\n\
    end", "  local res = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n\
    \      res[#res + 1] = v\n    end\n  end\n  return sort(res)\nend", "  local t\
    \ = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t +\
    \ 1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1] =\
    \ v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for _,\
    \ v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n\
    \  end\n  return sorted(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n\
    \    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\n\
    end", "    local r = {}\n    for k, v in pairs(l1) do\n        if l2[v] then\n\
    \            r[v] = true\n        end\n    end\n    return sorted(r)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            table.insert(t, v)\n        end\n    end\n    return sorted(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    return sort(t)\n\
    end", "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t + 1] = v\n        end\n    end\n    table.sort(t)\n\
    \    return t\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n      \
    \  if contains(l2, v) then\n            table.insert(t, v)\n        end\n    end\n\
    \    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n\
    \        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n   \
    \ end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n\
    \    if contains(l2, v) then\n      table.insert(t, v)\n    end\n  end\n  return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "   \
    \ local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sorted(t)\nend",
  "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \ local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n   \
    \   t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for i, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local r = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            r[#r\
    \ + 1] = v\n        end\n    end\n    return sort(r)\nend", "  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      res[#res + 1]\
    \ = v\n    end\n  end\n  return sort(res)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1] =\
    \ v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n\
    \  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "    local res = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            res[#res + 1] = v\n        end\n    end\n\
    \    return sort(res)\nend", "    local t = {}\n    local r = {}\n    for _, v\
    \ in ipairs(l1) do\n        t[v] = true\n    end\n    for _, v in ipairs(l2) do\n\
    \        if t[v] then\n            table.insert(r, v)\n        end\n    end\n\
    \    table.sort(r)\n    return r\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sorted(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            table.insert(t, v)\n      \
    \  end\n    end\n    return unique(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t+1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local res = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      res[#res + 1] = v\n    end\n  end\n  return sort(res)\nend",
  "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n    \
    \  t[#t+1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n  \
    \  for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local ret = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(ret,\
    \ v)\n        end\n    end\n    return sorted(ret)\nend", "    local res = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            res[#res\
    \ + 1] = v\n        end\n    end\n    return sort(res)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend", "    local t = {}\n  \
    \  for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for k, v in pairs(l1) do\n\
    \    t[v] = true\n  end\n  for k, v in pairs(l2) do\n    if t[v] then\n      t[v]\
    \ = nil\n      t[#t + 1] = v\n    end\n  end\n  return t\nend", "\tlocal t = {}\n\
    \tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t + 1] = v\n\
    \t\tend\n\tend\n\treturn unique(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sorted(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "  local res = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      res[#res + 1] = v\n    end\n  end\n  return sort(res)\nend",
  "    local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \ local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n   \
    \   t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sorted(t)\nend", "  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return sorted(res)\nend", "    local t = {}\n    for _,\
    \ v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1] =\
    \ v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local r = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            r[#r\
    \ + 1] = v\n        end\n    end\n    return sort(r)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local res = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return sort(res)\nend", "    local t = {}\n  \
    \  for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n  for\
    \ _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n  \
    \  end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "  local\
    \ t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t+1]\
    \ = v\n    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v\
    \ in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1] = v\n\
    \        end\n    end\n    return sorted(t)\nend", "    local t = {}\n    for\
    \ _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t + 1]\
    \ = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n   \
    \ for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend", "  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1)\
    \ do\n        if contains(l2, v) then\n            t[#t + 1] = v\n        end\n\
    \    end\n    return sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1)\
    \ do\n    if contains(l2, v) then\n      t[#t + 1] = v\n    end\n  end\n  return\
    \ sort(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sorted(t)\nend", "    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            t[#t + 1] = v\n        end\n    end\n    return\
    \ sort(t)\nend", "  local t = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      t[#t + 1] = v\n    end\n  end\n  return sort(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", "   \
    \ local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n\
    \            t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend", " \
    \   local t = {}\n    for k, v in pairs(l1) do\n        if l2[v] then\n      \
    \      t[v] = true\n        end\n    end\n    return keys(t)\nend", "    local\
    \ t = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n   \
    \         t[#t + 1] = v\n        end\n    end\n    return sort(t)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

---
name: HumanEval_14_all_prefixes
language: lua
prompt: |
  -- Return table of all prefixes from shortest to longest of the input string
  -- >>> all_prefixes('abc')
  -- {'a', 'ab', 'abc'}
  local function all_prefixes(string)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = all_prefixes
      lu.assertEquals(candidate(''), {})
      lu.assertEquals(candidate('asdfgh'), {'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'})
      lu.assertEquals(candidate('WWW'), {'W', 'WW', 'WWW'})
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- "\tlocal prefixes = {}\n\tfor i = 1, #string do\n\t\tprefixes[#prefixes + 1] = string:sub(1,
  i)\n\tend\n\treturn prefixes\nend"
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- "\tlocal prefixes = {}\n\tfor i = 1, #string do\n\t\ttable.insert(prefixes, string:sub(1,
  i))\n\tend\n\treturn prefixes\nend"
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      table.insert(result, string:sub(1, i))
    end
    return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      table.insert(result, string:sub(1, i))
    end
    return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local t = {}
      for i = 1, #string do
          t[#t + 1] = string:sub(1, i)
      end
      return t
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local t = {}
      for i = 1, #string do
          t[#t + 1] = string:sub(1, i)
      end
      return t
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      table.insert(prefixes, string:sub(1, i))
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
    local result = {}
    for i = 1, #string do
      table.insert(result, string:sub(1, i))
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
    local prefixes = {}
    for i = 1, #string do
      prefixes[#prefixes + 1] = string:sub(1, i)
    end
    return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local result = {}
    for i = 1, #string do
      result[i] = string:sub(1, i)
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
    local result = {}
    for i = 1, #string do
      table.insert(result, string:sub(1, i))
    end
    return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          prefixes[#prefixes + 1] = string:sub(1, i)
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
      local result = {}
      for i = 1, #string do
          result[#result + 1] = string:sub(1, i)
      end
      return result
  end
- |2-
      local result = {}
      for i = 1, #string do
          table.insert(result, string:sub(1, i))
      end
      return result
  end
- |2-
      local prefixes = {}
      for i = 1, #string do
          table.insert(prefixes, string:sub(1, i))
      end
      return prefixes
  end
- |2-
    local t = {}
    for i = 1, #string do
      t[#t+1] = string:sub(1, i)
    end
    return t
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

---
name: HumanEval_74_total_match
language: lua
prompt: "-- Write a function that accepts two tables of strings and returns the table
  that has \n-- total number of chars in the all strings of the table less than the
  other table.\n-- if the two tables have the same number of chars, return the first
  table.\n-- Examples\n-- >>> total_match({}, {})\n-- {}\n-- >>> total_match({'hi',
  'admin'}, {'hI', 'Hi'})\n-- {'hI', 'Hi'}\n-- >>> total_match({'hi', 'admin'}, {'hi',
  'hi', 'admin', 'project'})\n-- {'hi', 'admin'}\n-- >>> total_match({'hi', 'admin'},
  {'hI', 'hi', 'hi'})\n-- {'hI', 'hi', 'hi'}\n-- >>> total_match({'4'}, {'1', '2',
  '3', '4', '5'})\n-- {'4'}\nlocal function total_match(lst1, lst2)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = total_match
      lu.assertEquals(candidate({}, {}), {})
      lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})
      lu.assertEquals(candidate({'hi', 'admin'}, {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})
      lu.assertEquals(candidate({'4'}, {'1', '2', '3', '4', '5'}), {'4'})
      lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'Hi'}), {'hI', 'Hi'})
      lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hi'}), {'hI', 'hi', 'hi'})
      lu.assertEquals(candidate({'hi', 'admin'}, {'hI', 'hi', 'hii'}), {'hi', 'admin'})
      lu.assertEquals(candidate({}, {'this'}), {})
      lu.assertEquals(candidate({'this'}, {}), {})
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    local total1 = 0
    local total2 = 0
    for _, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for _, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local function sum(lst)
      local total = 0
      for _, v in ipairs(lst) do
        total = total + #v
      end
      return total
    end
    if sum(lst1) < sum(lst2) then
      return lst1
    else
      return lst2
    end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1
  + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local sum1 = 0
      local sum2 = 0
      for _, v in ipairs(lst1) do
          sum1 = sum1 + #v
      end
      for _, v in ipairs(lst2) do
          sum2 = sum2 + #v
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, str in ipairs(lst1) do
          total1 = total1 + #str
      end
      for _, str in ipairs(lst2) do
          total2 = total2 + #str
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1
  + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for i, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for i, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    -- body
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + string.len(lst1[i])
    end
    for i = 1, #lst2 do
      total2 = total2 + string.len(lst2[i])
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal lst1_total = 0\n\tlocal lst2_total = 0\n\tfor i = 1, #lst1 do\n\t\tlst1_total
  = lst1_total + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\tlst2_total = lst2_total
  + #lst2[i]\n\tend\n\tif lst1_total <= lst2_total then\n\t\treturn lst1\n\telse\n\t\treturn
  lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local sum1 = 0
    local sum2 = 0
    for i = 1, #lst1 do
      sum1 = sum1 + #lst1[i]
    end
    for i = 1, #lst2 do
      sum2 = sum2 + #lst2[i]
    end
    if sum1 < sum2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    -- your code here
    local sum1 = 0
    local sum2 = 0
    for i, v in ipairs(lst1) do
      sum1 = sum1 + string.len(v)
    end
    for i, v in ipairs(lst2) do
      sum2 = sum2 + string.len(v)
    end
    if sum1 < sum2 then
      return lst1
    else
      return lst2
    end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1
  + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total_chars1 = 0
      local total_chars2 = 0
      for i = 1, #lst1 do
          total_chars1 = total_chars1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total_chars2 = total_chars2 + #lst2[i]
      end
      if total_chars1 < total_chars2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    -- your code here
    local total1 = 0
    local total2 = 0
    for i, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for i, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local sum1 = 0
      local sum2 = 0
      for i = 1, #lst1 do
          sum1 = sum1 + #lst1[i]
      end
      for i = 1, #lst2 do
          sum2 = sum2 + #lst2[i]
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1
  + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor _, v in ipairs(lst1) do\n\t\ttotal1
  = total1 + #v\n\tend\n\tfor _, v in ipairs(lst2) do\n\t\ttotal2 = total2 + #v\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
    local sum1 = 0
    local sum2 = 0
    for i = 1, #lst1 do
      sum1 = sum1 + #lst1[i]
    end
    for i = 1, #lst2 do
      sum2 = sum2 + #lst2[i]
    end
    if sum1 < sum2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local sum1 = 0
    local sum2 = 0
    for i = 1, #lst1 do
      sum1 = sum1 + #lst1[i]
    end
    for i = 1, #lst2 do
      sum2 = sum2 + #lst2[i]
    end
    if sum1 < sum2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      if #lst1 == 0 then
          return lst1
      elseif #lst2 == 0 then
          return lst2
      else
          local total1 = 0
          local total2 = 0
          for i = 1, #lst1 do
              total1 = total1 + #lst1[i]
          end
          for i = 1, #lst2 do
              total2 = total2 + #lst2[i]
          end
          if total1 < total2 then
              return lst1
          else
              return lst2
          end
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      -- your code here
      local sum1 = 0
      local sum2 = 0
      for i = 1, #lst1 do
          sum1 = sum1 + #lst1[i]
      end
      for i = 1, #lst2 do
          sum2 = sum2 + #lst2[i]
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor _, v in ipairs(lst1) do\n\t\ttotal1
  = total1 + #v\n\tend\n\tfor _, v in ipairs(lst2) do\n\t\ttotal2 = total2 + #v\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for k, v in pairs(lst1) do
          total1 = total1 + #v
      end
      for k, v in pairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    -- your code here
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    -- your code here
    local sum1 = 0
    local sum2 = 0
    for i, v in ipairs(lst1) do
      sum1 = sum1 + string.len(v)
    end
    for i, v in ipairs(lst2) do
      sum2 = sum2 + string.len(v)
    end
    if sum1 < sum2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, str in ipairs(lst1) do
          total1 = total1 + #str
      end
      for _, str in ipairs(lst2) do
          total2 = total2 + #str
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal sum1 = 0\n\tlocal sum2 = 0\n\tfor i = 1, #lst1 do\n\t\tsum1 = sum1 + #lst1[i]\n\tend\n\tfor
  i = 1, #lst2 do\n\t\tsum2 = sum2 + #lst2[i]\n\tend\n\tif sum1 < sum2 then\n\t\treturn
  lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1
  + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local sum1 = 0
      local sum2 = 0
      for i = 1, #lst1 do
          sum1 = sum1 + #lst1[i]
      end
      for i = 1, #lst2 do
          sum2 = sum2 + #lst2[i]
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local sum1 = 0
      local sum2 = 0
      for _, v in ipairs(lst1) do
          sum1 = sum1 + #v
      end
      for _, v in ipairs(lst2) do
          sum2 = sum2 + #v
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for _, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for _, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local sum1 = 0
      local sum2 = 0
      for i = 1, #lst1 do
          sum1 = sum1 + #lst1[i]
      end
      for i = 1, #lst2 do
          sum2 = sum2 + #lst2[i]
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i = 1, #lst1 do\n\t\ttotal1 = total1
  + #lst1[i]\n\tend\n\tfor i = 1, #lst2 do\n\t\ttotal2 = total2 + #lst2[i]\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local sum1 = 0
    local sum2 = 0
    for i = 1, #lst1 do
      sum1 = sum1 + #lst1[i]
    end
    for i = 1, #lst2 do
      sum2 = sum2 + #lst2[i]
    end
    if sum1 < sum2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for i, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local sum1 = 0
      local sum2 = 0
      for i = 1, #lst1 do
          sum1 = sum1 + #lst1[i]
      end
      for i = 1, #lst2 do
          sum2 = sum2 + #lst2[i]
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- "\tlocal total1 = 0\n\tlocal total2 = 0\n\tfor i, v in ipairs(lst1) do\n\t\ttotal1
  = total1 + #v\n\tend\n\tfor i, v in ipairs(lst2) do\n\t\ttotal2 = total2 + #v\n\tend\n\tif
  total1 < total2 then\n\t\treturn lst1\n\telse\n\t\treturn lst2\n\tend\nend"
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, str in ipairs(lst1) do
          total1 = total1 + #str
      end
      for _, str in ipairs(lst2) do
          total2 = total2 + #str
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for i = 1, #lst1 do
      total1 = total1 + #lst1[i]
    end
    for i = 1, #lst2 do
      total2 = total2 + #lst2[i]
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
    local total1 = 0
    local total2 = 0
    for _, v in ipairs(lst1) do
      total1 = total1 + #v
    end
    for _, v in ipairs(lst2) do
      total2 = total2 + #v
    end
    if total1 < total2 then
      return lst1
    else
      return lst2
    end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i = 1, #lst1 do
          total1 = total1 + #lst1[i]
      end
      for i = 1, #lst2 do
          total2 = total2 + #lst2[i]
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for _, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for _, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local sum1 = 0
      local sum2 = 0
      for i = 1, #lst1 do
          sum1 = sum1 + #lst1[i]
      end
      for i = 1, #lst2 do
          sum2 = sum2 + #lst2[i]
      end
      if sum1 < sum2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + #v
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + #v
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
- |2-
      local total1 = 0
      local total2 = 0
      for i, v in ipairs(lst1) do
          total1 = total1 + string.len(v)
      end
      for i, v in ipairs(lst2) do
          total2 = total2 + string.len(v)
      end
      if total1 < total2 then
          return lst1
      else
          return lst2
      end
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

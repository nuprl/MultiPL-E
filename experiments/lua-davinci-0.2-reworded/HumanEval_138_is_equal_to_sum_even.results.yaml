name: HumanEval_138_is_equal_to_sum_even
language: lua
results:
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqpepjow0.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpqpepjow0.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local count = 0\n    for i = 2, n - 2, 2 do\n        for\
    \ j = 2, n - i - 2, 2 do\n            for k = 2, n - i - j - 2, 2 do\n       \
    \         for l = 2, n - i - j - k - 2, 2 do\n                    if i + j + k\
    \ + l == n then\n                        count = count + 1\n                 \
    \   end\n                end\n            end\n        end\n    end\n    return\
    \ count == 1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt1g9fm03.lua:33:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpt1g9fm03.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            sum = sum + i\n        end\n        if sum == n then\n \
    \           return true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqvpb_0xm.lua:29:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpqvpb_0xm.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local sum = 0\n  for i = 1, n do\n \
    \   if i % 2 == 0 then\n      sum = sum + i\n    end\n    if sum == n then\n \
    \     return true\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq8r7awt0.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpq8r7awt0.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7n30966_.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7n30966_.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqdpd8feg.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpqdpd8feg.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            sum = sum + i\n        end\n        if sum == n then\n \
    \           return true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvvbydozy.lua:29:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpvvbydozy.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwjing6lp.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpwjing6lp.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphm_xv174.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmphm_xv174.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp7zyhxdk.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpp7zyhxdk.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement this function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21w7e0np.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp21w7e0np.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while sum < n do\n        sum = sum + i\n        count =\
    \ count + 1\n        i = i + 2\n    end\n    return sum == n and count == 4\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpixov3__v.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpixov3__v.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local count = 0\n    for i = 1, n\
    \ do\n        if n % i == 0 and i % 2 == 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count == 4\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmput0ovpqu.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmput0ovpqu.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            sum = sum + i\n        end\n        if sum == n then\n \
    \           return true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvrs2usf_.lua:29:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpvrs2usf_.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while sum < n do\n        sum = sum + i\n        count =\
    \ count + 1\n        i = i + 2\n    end\n    return sum == n and count == 4\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpezlpkd77.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpezlpkd77.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxtf3v5ba.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxtf3v5ba.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_inv4xl0.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp_inv4xl0.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8wv18wz.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpp8wv18wz.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkih5u4dg.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpkih5u4dg.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq1e5gmi3.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpq1e5gmi3.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfdp_5exo.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpfdp_5exo.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps4of4yax.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmps4of4yax.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n < 4 then\n        return false\n\
    \    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum + i\n \
    \       if sum == n then\n            return true\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp858q01n0.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp858q01n0.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0ouv5_z.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpk0ouv5_z.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_ryg6_38.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_ryg6_38.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement the function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvpy7gpb.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpnvpy7gpb.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpip6ciz9t.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpip6ciz9t.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw092ql1p.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpw092ql1p.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy3gepx50.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpy3gepx50.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local a = n / 4\n    local b = n / 2\n    local c = n /\
    \ 4 * 3\n    local d = n\n    if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d %\
    \ 2 == 1 then\n        return false\n    end\n    return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpshezqu6k.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpshezqu6k.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while sum < n do\n        sum = sum + i\n        count =\
    \ count + 1\n        i = i + 2\n    end\n    return sum == n and count == 4\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3il2rjwg.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp3il2rjwg.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmponkm3rze.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmponkm3rze.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxzv8_1d6.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxzv8_1d6.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9xwl6v8g.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp9xwl6v8g.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    for i = 2, n/2 do\n        if is_equal_to_sum_even(n - i)\
    \ then\n            return true\n        end\n    end\n    return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpktdnhh7r.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpktdnhh7r.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6fx0d06s.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp6fx0d06s.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n do\n        if i % 2 == 0 then\n            sum = sum + i\n\
    \            count = count + 1\n            if sum == n and count == 4 then\n\
    \                return true\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxr05w440.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpxr05w440.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ a, b, c, d)\n        if n == 0 then\n            return true\n        elseif\
    \ n < 0 then\n            return false\n        elseif a > n then\n          \
    \  return false\n        elseif b > n then\n            return is_equal_to_sum_even_helper(n,\
    \ a + 2, a + 2, a + 2, a + 2)\n        elseif c > n then\n            return is_equal_to_sum_even_helper(n,\
    \ a, a + 2, a + 2, a + 2)\n        elseif d > n then\n            return is_equal_to_sum_even_helper(n,\
    \ a, b, a + 2, a + 2)\n        else\n            return is_equal_to_sum_even_helper(n,\
    \ a, b, c, a + 2) or is_equal_to_sum_even_helper(n - a, a, b, c, d) or is_equal_to_sum_even_helper(n\
    \ - b, a, b, c, d) or is_equal_to_sum_even_helper(n - c, a, b, c, d) or is_equal_to_sum_even_helper(n\
    \ - d, a, b, c, d)\n        end\n    end\n    return is_equal_to_sum_even_helper(n,\
    \ 2, 2, 2, 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj8cn6gna.lua:24:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmpj8cn6gna.lua:24: in upvalue 'is_equal_to_sum_even_helper'\n\
    \t/tmp/tmpj8cn6gna.lua:24: in upvalue 'is_equal_to_sum_even_helper'\n\t/tmp/tmpj8cn6gna.lua:24:\
    \ in upvalue 'is_equal_to_sum_even_helper'\n\t/tmp/tmpj8cn6gna.lua:24: in upvalue\
    \ 'is_equal_to_sum_even_helper'\n\t/tmp/tmpj8cn6gna.lua:24: in upvalue 'is_equal_to_sum_even_helper'\n\
    \t/tmp/tmpj8cn6gna.lua:24: in upvalue 'is_equal_to_sum_even_helper'\n\t/tmp/tmpj8cn6gna.lua:24:\
    \ in upvalue 'is_equal_to_sum_even_helper'\n\t/tmp/tmpj8cn6gna.lua:24: in upvalue\
    \ 'is_equal_to_sum_even_helper'\n\t/tmp/tmpj8cn6gna.lua:24: in upvalue 'is_equal_to_sum_even_helper'\n\
    \t...\n\t/tmp/tmpj8cn6gna.lua:24: in function </tmp/tmpj8cn6gna.lua:10>\n\t(...tail\
    \ calls...)\n\t/tmp/tmpj8cn6gna.lua:33: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.100 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_y0ayg1a.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp_y0ayg1a.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    return is_equal_to_sum(n, 4, is_even)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy0v4sqse.lua:10:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmpy0v4sqse.lua:10: in local 'candidate'\n\t/tmp/tmpy0v4sqse.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp36ssfldb.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp36ssfldb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum + i\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd5lu1m1h.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpd5lu1m1h.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    return is_equal_to_sum(n, 4, is_even)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjx8l_lx8.lua:10:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmpjx8l_lx8.lua:10: in local 'candidate'\n\t/tmp/tmpjx8l_lx8.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3urg10do.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp3urg10do.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tlocal count = 0\n\t\
    for i = 2, n, 2 do\n\t\tsum = sum + i\n\t\tcount = count + 1\n\t\tif sum == n\
    \ and count == 4 then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgj4namnk.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpgj4namnk.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptz3ek146.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptz3ek146.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpig0uhx01.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpig0uhx01.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local function is_equal_to_sum_even_helper(n,\
    \ a, b, c, d)\n    if n == 0 then\n      return true\n    elseif n < 0 then\n\
    \      return false\n    else\n      return is_equal_to_sum_even_helper(n - a,\
    \ a, b, c, d) or\n             is_equal_to_sum_even_helper(n - b, a, b, c, d)\
    \ or\n             is_equal_to_sum_even_helper(n - c, a, b, c, d) or\n       \
    \      is_equal_to_sum_even_helper(n - d, a, b, c, d)\n    end\n  end\n  return\
    \ is_equal_to_sum_even_helper(n, 2, 4, 6, 8)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppwoxlx0p.lua:28:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmppwoxlx0p.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    if n == 4 then\n        return false\n    end\n    return\
    \ true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgchucctq.lua:23:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgchucctq.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx85d8dhv.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpx85d8dhv.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp23oukg1p.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp23oukg1p.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ k)\n        if n == 0 and k == 0 then\n            return true\n        elseif\
    \ n > 0 and k > 0 then\n            return is_equal_to_sum_even_helper(n - 2,\
    \ k - 1) or is_equal_to_sum_even_helper(n, k - 1)\n        else\n            return\
    \ false\n        end\n    end\n    return is_equal_to_sum_even_helper(n, 4)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpot9fl80w.lua:25:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpot9fl80w.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    return n % 2 == 0 and n % 4 ~= 0\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprs096y68.lua:17:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmprs096y68.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp88o8gogd.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp88o8gogd.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while i <= n do\n        if i % 2 == 0 then\n          \
    \  sum = sum + i\n            count = count + 1\n        end\n        if sum ==\
    \ n and count == 4 then\n            return true\n        end\n        i = i +\
    \ 1\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7o4o9its.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7o4o9its.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while sum < n do\n        sum = sum + i\n        i = i +\
    \ 2\n        count = count + 1\n    end\n    if sum == n and count == 4 then\n\
    \        return true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpacims9x_.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpacims9x_.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local sum = 0\n  local count = 0\n \
    \ for i = 1, n do\n    if i % 2 == 0 then\n      sum = sum + i\n      count =\
    \ count + 1\n    end\n    if sum == n and count == 4 then\n      return true\n\
    \    end\n  end\n  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplqmlvdaa.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmplqmlvdaa.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgihfizib.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpgihfizib.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while i <= n do\n        if i % 2 == 0 then\n          \
    \  sum = sum + i\n            count = count + 1\n        end\n        if sum ==\
    \ n and count == 4 then\n            return true\n        end\n        i = i +\
    \ 1\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpltooj9_7.lua:31:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpltooj9_7.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    return is_equal_to_sum(n, 4, function(x)\
    \ return x % 2 == 0 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppj2hq4oz.lua:10:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmppj2hq4oz.lua:10: in local 'candidate'\n\t/tmp/tmppj2hq4oz.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu2he029o.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpu2he029o.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- YOUR CODE HERE\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcrw3z3iy.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpcrw3z3iy.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n < 4 then\n        return false\n\
    \    end\n    local i = 2\n    local sum = 0\n    while i <= n do\n        sum\
    \ = sum + i\n        if sum == n then\n            return true\n        end\n\
    \        i = i + 2\n    end\n    return false\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmx8oro14.lua:29:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpmx8oro14.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- YOUR CODE HERE\n    if n == 0 then\n\
    \        return true\n    elseif n < 0 then\n        return false\n    else\n\
    \        return is_equal_to_sum_even(n - 2)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfkjww4kn.lua:23:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpfkjww4kn.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo0_vrgjx.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpo0_vrgjx.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuvqe7lau.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpuvqe7lau.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxjfppb3e.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpxjfppb3e.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_dw8wzr1.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp_dw8wzr1.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    if n == 4 then\n        return false\n    end\n    if n\
    \ == 6 then\n        return false\n    end\n    if n == 8 then\n        return\
    \ true\n    end\n    return is_equal_to_sum_even(n - 2)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement here\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpubkusfyy.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpubkusfyy.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tlocal count = 0\n\t\
    for i = 1, n do\n\t\tif i % 2 == 0 then\n\t\t\tsum = sum + i\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\t\tif sum == n and count == 4 then\n\t\t\treturn true\n\t\tend\n\
    \tend\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdqf17sy1.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdqf17sy1.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppsez4mgb.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmppsez4mgb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local sum = 0\n  for i = 1, n do\n \
    \   if i % 2 == 0 then\n      sum = sum + i\n    end\n    if sum == n then\n \
    \     return true\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv5ywf3hl.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpv5ywf3hl.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9jau_8ex.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp9jau_8ex.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local a = 1\n    local b = 1\n    local c = 1\n    local\
    \ d = 1\n    while a <= n do\n        while b <= n do\n            while c <=\
    \ n do\n                while d <= n do\n                    if a + b + c + d\
    \ == n then\n                        return true\n                    end\n  \
    \                  d = d + 2\n                end\n                c = c + 2\n\
    \                d = 1\n            end\n            b = b + 2\n            c\
    \ = 1\n        end\n        a = a + 2\n        b = 1\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdeeda4sl.lua:41:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdeeda4sl.lua:41:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    return n % 2 == 0 and n % 4 ~= 0\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_lk9erlv.lua:17:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp_lk9erlv.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local count = 0\n    local sum = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprt4yfcu0.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmprt4yfcu0.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n\
    \  end\n  local sum = 0\n  for i = 2, n, 2 do\n    sum = sum + i\n    if sum ==\
    \ n then\n      return true\n    end\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfvbwldoi.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpfvbwldoi.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local n = n / 2\n    local a = n - 3\n    local b = n -\
    \ 2\n    local c = n - 1\n    local d = n\n    if a % 2 == 1 or b % 2 == 1 or\
    \ c % 2 == 1 or d % 2 == 1 then\n        return false\n    end\n    return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ue3oen6.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2ue3oen6.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp03977mj0.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp03977mj0.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 1, n / 2 do\n        if n % i\
    \ == 0 then\n            sum = sum + i\n        end\n    end\n    return sum ==\
    \ n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoiju2jym.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpoiju2jym.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  return n % 2 == 0 and n >= 8\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbmfmwr7g.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpbmfmwr7g.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7l8pv_0u.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7l8pv_0u.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    \    local sum = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n        \
    \    sum = sum + i\n        end\n    end\n    if sum == n then\n        return\
    \ true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3je6hjfd.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp3je6hjfd.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    for i = 1, n do\n        for j = 1,\
    \ n do\n            for k = 1, n do\n                for l = 1, n do\n       \
    \             if i + j + k + l == n and i % 2 == 0 and j % 2 == 0 and k % 2 ==\
    \ 0 and l % 2 == 0 then\n                        return true\n               \
    \     end\n                end\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n < 4 then\n        return false\n\
    \    end\n    local sum = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n\
    \            sum = sum + i\n        end\n        if sum > n then\n           \
    \ return false\n        end\n        if sum == n then\n            return true\n\
    \        end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_tfehea8.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp_tfehea8.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp86jmh4dz.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp86jmh4dz.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement the function\n\
    \    local sum = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n        \
    \    sum = sum + i\n        end\n    end\n    if sum == n then\n        return\
    \ true\n    else\n        return false\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkbjvly5p.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpkbjvly5p.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tlocal count = 0\n\t\
    for i = 2, n do\n\t\tif i % 2 == 0 then\n\t\t\tsum = sum + i\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\t\tif sum == n and count == 4 then\n\t\t\treturn true\n\t\tend\n\
    \tend\n\treturn false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpszj1sgqr.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpszj1sgqr.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n < 4 then\n        return false\n\
    \    end\n    if n % 2 == 1 then\n        return false\n    end\n    local sum\
    \ = 0\n    for i = 2, n, 2 do\n        sum = sum + i\n        if sum == n then\n\
    \            return true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmlz9pejn.lua:30:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpmlz9pejn.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbun0ermj.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbun0ermj.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n <= 0 then\n        return false\n\
    \    end\n    if n % 2 == 1 then\n        return false\n    end\n    local sum\
    \ = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n            sum = sum\
    \ + i\n        end\n        if sum == n then\n            return true\n      \
    \  end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxgrh_pba.lua:32:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxgrh_pba.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local result = false\n    for i =\
    \ 1, n/2 do\n        for j = 1, n/2 do\n            for k = 1, n/2 do\n      \
    \          for l = 1, n/2 do\n                    if i + j + k + l == n then\n\
    \                        result = true\n                    end\n            \
    \    end\n            end\n        end\n    end\n    return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvfwq_5_x.lua:28:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpvfwq_5_x.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n < 4 then\n        return false\n\
    \    end\n    if n % 2 == 1 then\n        return false\n    end\n    local sum\
    \ = 0\n    for i = 2, n - 2, 2 do\n        sum = sum + i\n        if sum == n\
    \ then\n            return true\n        end\n    end\n    return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps21_5yl9.lua:30:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmps21_5yl9.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- your code here\n    local sum =\
    \ 0\n    local count = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          sum = sum + i\n            count = count + 1\n        end\n       \
    \ if sum == n and count == 4 then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmamwl2kq.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmamwl2kq.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ count)\n        if n == 0 and count == 4 then\n            return true\n   \
    \     elseif n == 0 or count == 4 then\n            return false\n        else\n\
    \            return is_equal_to_sum_even_helper(n - 2, count + 1)\n        end\n\
    \    end\n    return is_equal_to_sum_even_helper(n, 0)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmple228f7h.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmple228f7h.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local i = 0\n    local j = 0\n   \
    \ local k = 0\n    local l = 0\n    for i = 0, n do\n        for j = 0, n do\n\
    \            for k = 0, n do\n                for l = 0, n do\n              \
    \      if i + j + k + l == n and i % 2 == 0 and j % 2 == 0 and k % 2 == 0 and\
    \ l % 2 == 0 then\n                        return true\n                    end\n\
    \                end\n            end\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmsr8gtfv.lua:31:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpmsr8gtfv.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- Write your code here\n    local\
    \ sum = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n            sum =\
    \ sum + i\n        end\n    end\n    if sum == n then\n        return true\n \
    \   else\n        return false\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmperdto1z1.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmperdto1z1.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpob19oanv.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpob19oanv.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21o25t_7.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp21o25t_7.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n\
    \  end\n  if n == 4 then\n    return false\n  end\n  if n == 6 then\n    return\
    \ false\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi2frf1hu.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpi2frf1hu.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn0u5uccy.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpn0u5uccy.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxmpm4dvh.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpxmpm4dvh.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    local count = 0\n    for i = 2, n, 2\
    \ do\n        sum = sum + i\n        count = count + 1\n        if sum == n then\n\
    \            if count == 4 then\n                return true\n            else\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiw0a__3_.lua:34:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpiw0a__3_.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn79k8mfy.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpn79k8mfy.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptympoao_.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptympoao_.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local function is_equal_to_sum_even_helper(n,\
    \ sum, count)\n    if count == 4 then\n      return sum == n\n    else\n     \
    \ for i = 2, n - sum, 2 do\n        if is_equal_to_sum_even_helper(n, sum + i,\
    \ count + 1) then\n          return true\n        end\n      end\n      return\
    \ false\n    end\n  end\n  return is_equal_to_sum_even_helper(n, 0, 0)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ count)\n        if n == 0 and count == 4 then\n            return true\n   \
    \     elseif n < 0 or count > 4 then\n            return false\n        else\n\
    \            return is_equal_to_sum_even_helper(n - 2, count + 1)\n        end\n\
    \    end\n    return is_equal_to_sum_even_helper(n, 0)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5va_2ji1.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5va_2ji1.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9i_0vee_.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp9i_0vee_.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: Implement this function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4df122w9.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp4df122w9.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpywazobbp.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpywazobbp.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7y0cudkj.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp7y0cudkj.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while i <= n do\n        sum = sum + i\n        count =\
    \ count + 1\n        if sum == n and count == 4 then\n            return true\n\
    \        end\n        i = i + 2\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp25pr6tb1.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp25pr6tb1.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz9kztfpl.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpz9kztfpl.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n\
    \  end\n  local count = 0\n  for i = 2, n, 2 do\n    count = count + 1\n    if\
    \ count == 4 then\n      return true\n    end\n  end\n  return false\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc2e8iu0p.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpc2e8iu0p.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps30l0_3g.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmps30l0_3g.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp04ba42_s.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp04ba42_s.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpusj4020x.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpusj4020x.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcs99hthy.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpcs99hthy.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- your code here\n    if n % 2 ==\
    \ 0 then\n        return true\n    else\n        return false\n    end\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp71r5mc0j.lua:21:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp71r5mc0j.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_iwmboq.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpr_iwmboq.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    for i = 2, n / 2 do\n        if is_equal_to_sum_even(n -\
    \ i) then\n            return true\n        end\n    end\n    return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp80ii096s.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp80ii096s.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            sum = sum + i\n        end\n        if sum == n then\n \
    \           return true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp83zzul71.lua:29:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp83zzul71.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz31f2ocp.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpz31f2ocp.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement this function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps9oz2y_h.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmps9oz2y_h.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    for i = 2, n - 6, 2 do\n        for j = i + 2, n - 4, 2\
    \ do\n            for k = j + 2, n - 2, 2 do\n                for l = k + 2, n,\
    \ 2 do\n                    if i + j + k + l == n then\n                     \
    \   return true\n                    end\n                end\n            end\n\
    \        end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq9e7fh6p.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpq9e7fh6p.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvpfbsfgz.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpvpfbsfgz.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo5z3wvcl.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpo5z3wvcl.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsmf0mel1.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsmf0mel1.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptr7u8sxr.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmptr7u8sxr.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement this function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkk3zf8gk.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpkk3zf8gk.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 2, n, 2\
    \ do\n        sum = sum + i\n        if sum == n then\n            return true\n\
    \        end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpunvy5h_v.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpunvy5h_v.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ num_evens)\n        if n == 0 then\n            return num_evens == 4\n    \
    \    elseif n < 0 then\n            return false\n        else\n            return\
    \ is_equal_to_sum_even_helper(n - 2, num_evens + 1)\n        end\n    end\n  \
    \  return is_equal_to_sum_even_helper(n, 0)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsw7fgnuc.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsw7fgnuc.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement the function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgt0jptqx.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpgt0jptqx.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4wz73v86.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp4wz73v86.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0km50c2o.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp0km50c2o.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps8l5th6r.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmps8l5th6r.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n == 0 then\n        return true\n\
    \    elseif n < 0 then\n        return false\n    else\n        return is_equal_to_sum_even(n\
    \ - 2)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfn719o6b.lua:22:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpfn719o6b.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3m9i3tzg.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp3m9i3tzg.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement the function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5q1ks1ku.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5q1ks1ku.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ovhgoby.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp6ovhgoby.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpox82xykb.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpox82xykb.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3do9l81w.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp3do9l81w.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp20eiol5w.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp20eiol5w.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppd7s_y14.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmppd7s_y14.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement the function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbdm2kogu.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpbdm2kogu.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ec8l4ud.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp6ec8l4ud.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local a = n / 4\n    local b = n / 2\n    local c = n /\
    \ 4 * 3\n    local d = n\n    if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d %\
    \ 2 == 1 then\n        return false\n    end\n    return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpprj297xy.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpprj297xy.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local count = 0\n    for i = 2, n,\
    \ 2 do\n        count = count + 1\n        if count == 4 then\n            return\
    \ true\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgannzvh1.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpgannzvh1.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement the function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmnqeo46c.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpmnqeo46c.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  if n % 2 == 1 then\n    return false\n\
    \  end\n  local a = n / 4\n  local b = n / 2\n  local c = n / 4 * 3\n  local d\
    \ = n\n  return is_equal_to_sum(a, b, c, d)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph7didu7q.lua:17:\
    \ attempt to call a nil value (global 'is_equal_to_sum')\nstack traceback:\n\t\
    /tmp/tmph7didu7q.lua:17: in local 'candidate'\n\t/tmp/tmph7didu7q.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptoibutx9.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmptoibutx9.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpemkcke52.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpemkcke52.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    local sum = 0\n    local count = 0\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            sum = sum + i\n            count = count + 1\n      \
    \  end\n        if sum == n and count == 4 then\n            return true\n   \
    \     end\n    end\n    return false\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu5m15eum.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpu5m15eum.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpefjrbnto.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpefjrbnto.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpos0twtpb.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpos0twtpb.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpevw_a111.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpevw_a111.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6arxfxhx.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp6arxfxhx.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 1, n do\n        if i % 2 == 0 then\n            sum = sum + i\n\
    \            count = count + 1\n        end\n        if sum == n and count ==\
    \ 4 then\n            return true\n        end\n    end\n    return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz7e9r0b7.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpz7e9r0b7.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppg_srpkn.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmppg_srpkn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2w9lwaz3.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp2w9lwaz3.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8kegck9l.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp8kegck9l.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzn559xs_.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpzn559xs_.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement me\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpniq3kyxe.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpniq3kyxe.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn0y4_bev.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpn0y4_bev.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf1g8l0ix.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpf1g8l0ix.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement the function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqj52y_wv.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpqj52y_wv.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdlji7eqk.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpdlji7eqk.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local a = n / 4\n    local b = n / 2\n    local c = n /\
    \ 4 * 3\n    local d = n\n    if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d %\
    \ 2 == 1 then\n        return false\n    end\n    return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgkfgyr0v.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpgkfgyr0v.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local sum = 0\n  local count = 0\n \
    \ local i = 2\n  while sum < n do\n    sum = sum + i\n    i = i + 2\n    count\
    \ = count + 1\n  end\n  if sum == n and count == 4 then\n    return true\n  else\n\
    \    return false\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm5ryvrdw.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpm5ryvrdw.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppenp1g51.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmppenp1g51.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  -- TODO: implement this function\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8ldl0iom.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmp8ldl0iom.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    for i = 2, n, 2 do\n        sum = sum\
    \ + i\n        if sum == n then\n            return true\n        end\n    end\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9_zk6_6c.lua:27:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp9_zk6_6c.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ count)\n        if count == 0 then\n            return n == 0\n        else\n\
    \            for i = 2, n, 2 do\n                if is_equal_to_sum_even_helper(n\
    \ - i, count - 1) then\n                    return true\n                end\n\
    \            end\n            return false\n        end\n    end\n    return is_equal_to_sum_even_helper(n,\
    \ 4)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmk1jtcvc.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpmk1jtcvc.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj38glfwr.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpj38glfwr.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n\tlocal sum = 0\n\tfor i = 1, n do\n\t\
    \tif i % 2 == 0 then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn sum == n\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqgbhh2k3.lua:24:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpqgbhh2k3.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjnw0sltc.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpjnw0sltc.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaev_fq3a.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpaev_fq3a.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 2, n, 2 do\n        sum = sum + i\n        count = count + 1\n  \
    \      if sum == n and count == 4 then\n            return true\n        end\n\
    \    end\n    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmpwnyro_.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmpwnyro_.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpze_pzbf8.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpze_pzbf8.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: Implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp33sv9n88.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp33sv9n88.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy6itff1d.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpy6itff1d.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local function is_equal_to_sum_even_helper(n,\
    \ count)\n        if count == 0 then\n            return n == 0\n        else\n\
    \            for i = 2, n, 2 do\n                if is_equal_to_sum_even_helper(n\
    \ - i, count - 1) then\n                    return true\n                end\n\
    \            end\n            return false\n        end\n    end\n    return is_equal_to_sum_even_helper(n,\
    \ 4)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6),\
    \ false)\n    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10),\
    \ true)\n    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: ".\nRan 1 tests in 0.000 seconds, 1 success, 0 failures\nOK\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4qzu1_tc.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp4qzu1_tc.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement the function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwu7r5ix.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpiwu7r5ix.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    for i = 1, n do\n        if i % 2 == 0 then\n            sum = sum + i\n\
    \            count = count + 1\n        end\n        if sum == n and count ==\
    \ 4 then\n            return true\n        end\n    end\n    return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptdg3hxju.lua:29:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptdg3hxju.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    for i = 1, n do\n\
    \        if i % 2 == 0 then\n            sum = sum + i\n        end\n        if\
    \ sum == n then\n            return true\n        end\n    end\n    return false\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd2slfsoz.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpd2slfsoz.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp72447210.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp72447210.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    if n % 2 == 1 then\n        return\
    \ false\n    end\n    local sum = 0\n    local count = 0\n    for i = 2, n, 2\
    \ do\n        sum = sum + i\n        count = count + 1\n        if sum == n then\n\
    \            return true\n        end\n        if sum > n then\n            return\
    \ false\n        end\n    end\n    return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4),\
    \ false)\n    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8),\
    \ true)\n    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi7kladt0.lua:32:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpi7kladt0.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    local sum = 0\n    local count = 0\n\
    \    local i = 2\n    while sum < n do\n        sum = sum + i\n        count =\
    \ count + 1\n        i = i + 2\n    end\n    return sum == n and count == 4\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm84q3cde.lua:26:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpm84q3cde.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptb_mikex.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptb_mikex.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement the function\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw8cez36_.lua:16:\
    \ expected: false, actual: nil\nstack traceback:\n\t/tmp/tmpw8cez36_.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl8uh_vx0.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpl8uh_vx0.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n  local sum = 0\n  local count = 0\n \
    \ for i = 2, n, 2 do\n    sum = sum + i\n    count = count + 1\n    if sum ==\
    \ n and count == 4 then\n      return true\n    end\n  end\n  return false\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
    \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
    \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
    \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12),\
    \ true)\n    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16),\
    \ true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_tush7nr.lua:27:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_tush7nr.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzmp_5rq.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfzmp_5rq.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Evaluate whether the given number n can be written as the sum of exactly\
    \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
    -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
    local function is_equal_to_sum_even(n)\n    -- TODO: implement this function\n\
    \    return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = is_equal_to_sum_even\n    lu.assertEquals(candidate(4), false)\n\
    \    lu.assertEquals(candidate(6), false)\n    lu.assertEquals(candidate(8), true)\n\
    \    lu.assertEquals(candidate(10), true)\n    lu.assertEquals(candidate(11),\
    \ false)\n    lu.assertEquals(candidate(12), true)\n    lu.assertEquals(candidate(13),\
    \ false)\n    lu.assertEquals(candidate(16), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr7d62oim.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpr7d62oim.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  stderr: ''
  exit_code: 1
  status: Exception

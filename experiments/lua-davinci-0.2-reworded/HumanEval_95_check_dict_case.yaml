name: HumanEval_95_check_dict_case
language: lua
prompt: "-- Given a table, return true if all keys are strings in lower \n-- case\
  \ or all keys are strings in upper case, else return false.\n-- The function should\
  \ return false is the given table is empty.\n-- Examples:\n-- >>> check_dict_case({['a']\
  \ = 'apple', ['b'] = 'banana'})\n-- true\n-- >>> check_dict_case({['a'] = 'apple',\
  \ ['A'] = 'banana', ['B'] = 'banana'})\n-- false\n-- >>> check_dict_case({['a']\
  \ = 'apple', [8] = 'banana', ['a'] = 'apple'})\n-- false\n-- >>> check_dict_case({['Name']\
  \ = 'John', ['Age'] = '36', ['City'] = 'Houston'})\n-- false\n-- >>> check_dict_case({['STATE']\
  \ = 'NC', ['ZIP'] = '12345'})\n-- true\nlocal function check_dict_case(dict)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = check_dict_case\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['b'] = 'banana'}), true)\n\
  \    lu.assertEquals(candidate({['p'] = 'pineapple', ['A'] = 'banana', ['B'] = 'banana'}),\
  \ false)\n    lu.assertEquals(candidate({['p'] = 'pineapple', ['5'] = 'banana',\
  \ ['a'] = 'apple'}), false)\n    lu.assertEquals(candidate({['Name'] = 'John', ['Age']\
  \ = '36', ['City'] = 'Houston'}), false)\n    lu.assertEquals(candidate({['STATE']\
  \ = 'NC', ['ZIP'] = '12345'}), true)\n    lu.assertEquals(candidate({['fruit'] =\
  \ 'Orange', ['taste'] = 'Sweet'}), true)\n    lu.assertEquals(candidate({}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local lower_case = true\n    local upper_case = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) == 'string' then\n            if k:match('%u')\
    \ then\n                lower_case = false\n            else\n               \
    \ upper_case = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    -- TODO:\
    \ Implement this function\n    return false\nend", "    local lower = true\n \
    \   local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if lower and k ~= k:lower() then\n              \
    \  lower = false\n            end\n            if upper and k ~= k:upper() then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k ~= k:lower() then\n                lower\
    \ = false\n            end\n            if k ~= k:upper() then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:lower() ~= k then\n                lower = false\n\
    \            end\n            if k:upper() ~= k then\n                upper =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if lower and not k:lower() == k then\n                lower\
    \ = false\n            end\n            if upper and not k:upper() == k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for key, value in pairs(dict) do\n     \
    \   if type(key) == 'string' then\n            if key:lower() ~= key then\n  \
    \              lower = false\n            end\n            if key:upper() ~= key\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:lower() ~= k then\n   \
    \             lower = false\n            end\n            if k:upper() ~= k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if k:lower() ~= k then\n         \
    \       lower_case = false\n            end\n            if k:upper() ~= k then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:lower()\
    \ ~= k then\n                lower_case = false\n            end\n           \
    \ if k:upper() ~= k then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    if #dict == 0 then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:match('%u') then\n    \
    \            lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     lower = lower and k == string.lower(k)\n            upper = upper and k\
    \ == string.upper(k)\n        else\n            return false\n        end\n  \
    \  end\n    return lower or upper\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower_case = false\n\
    \            end\n            if k:upper() ~= k then\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower_case = true\n\
    \    local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if lower_case then\n                lower_case\
    \ = lower_case and k == string.lower(k)\n            end\n            if upper_case\
    \ then\n                upper_case = upper_case and k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower = false\n  \
    \          end\n            if k:upper() ~= k then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    -- TODO: Implement this function\nend",
  "    if #dict == 0 then\n        return false\n    end\n    local lowercase = true\n\
    \    local uppercase = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ ~= 'string' then\n            return false\n        end\n        if lowercase\
    \ then\n            lowercase = k == k:lower()\n        end\n        if uppercase\
    \ then\n            uppercase = k == k:upper()\n        end\n    end\n    return\
    \ lowercase or uppercase\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if lower_case then\n                lower_case = k == string.lower(k)\n\
    \            end\n            if upper_case then\n                upper_case =\
    \ k == string.upper(k)\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() ~= k then\n                lower\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:lower() ~= k then\n                lower = false\n\
    \            end\n            if k:upper() ~= k then\n                upper =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    if not dict then\n        return\
    \ false\n    end\n    local is_lower = false\n    local is_upper = false\n   \
    \ for k, v in pairs(dict) do\n        if type(k) == 'string' then\n          \
    \  if k:lower() == k then\n                is_lower = true\n            elseif\
    \ k:upper() == k then\n                is_upper = true\n            else\n   \
    \             return false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return is_lower or is_upper\nend", "    local\
    \ lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower_case = false\n            end\n            if k\
    \ ~= string.upper(k) then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ k:lower() ~= k then\n                lower = false\n            end\n      \
    \      if k:upper() ~= k then\n                upper = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k ~= string.lower(k) then\n                lower_case = false\n     \
    \       end\n            if k ~= string.upper(k) then\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:lower() ~= k then\n                lower = false\n\
    \            end\n            if k:upper() ~= k then\n                upper =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            lower_case = lower_case and k == string.lower(k)\n       \
    \     upper_case = upper_case and k == string.upper(k)\n        else\n       \
    \     return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:lower() ~= k then\n\
    \                lower = false\n            end\n            if k:upper() ~= k\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower_case = false\n            end\n            if k\
    \ ~= string.upper(k) then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "  local lower = true\n  local upper = true\n  for k, v\
    \ in pairs(dict) do\n    if type(k) == 'string' then\n      if not k:match('^%l+$')\
    \ then\n        lower = false\n      end\n      if not k:match('^%u+$') then\n\
    \        upper = false\n      end\n    else\n      return false\n    end\n  end\n\
    \  return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k ~= k:lower() then\n                lower = false\n            end\n\
    \            if k ~= k:upper() then\n                upper = false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower_case then\n                lower_case = k == string.lower(k)\n\
    \            end\n            if upper_case then\n                upper_case =\
    \ k == string.upper(k)\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if lower and k ~= k:lower() then\n           \
    \     lower = false\n            end\n            if upper and k ~= k:upper()\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:lower() ~= k then\n   \
    \             lower = false\n            end\n            if k:upper() ~= k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if k ~= string.lower(k) then\n   \
    \             lower_case = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper_case = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if not string.match(k,\
    \ '^%l+$') then\n                lower_case = false\n            end\n       \
    \     if not string.match(k, '^%u+$') then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if not k:match('^%u+$') then\n                upper = false\n\
    \            end\n            if not k:match('^%l+$') then\n                lower\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:match('%u') then\n                lower = false\n   \
    \         else\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if lower and k ~= k:lower()\
    \ then\n                lower = false\n            end\n            if upper and\
    \ k ~= k:upper() then\n                upper = false\n            end\n      \
    \  else\n            return false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower = true\n    local upper = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) == 'string' then\n            if key ~= string.lower(key)\
    \ then\n                lower = false\n            end\n            if key ~=\
    \ string.upper(key) then\n                upper = false\n            end\n   \
    \     else\n            return false\n        end\n    end\n    return lower or\
    \ upper\nend", "    local lower = 0\n    local upper = 0\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if string.lower(k) == k\
    \ then\n                lower = lower + 1\n            elseif string.upper(k)\
    \ == k then\n                upper = upper + 1\n            end\n        end\n\
    \    end\n    if lower == 0 and upper == 0 then\n        return false\n    elseif\
    \ lower == 0 and upper > 0 then\n        return true\n    elseif lower > 0 and\
    \ upper == 0 then\n        return true\n    else\n        return false\n    end\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:lower() ~= k then\n\
    \                lower = false\n            end\n            if k:upper() ~= k\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \ local lower = true\n  local upper = true\n  for k, v in pairs(dict) do\n   \
    \ if type(k) == 'string' then\n      lower = lower and k == string.lower(k)\n\
    \      upper = upper and k == string.upper(k)\n    else\n      return false\n\
    \    end\n  end\n  return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower = false\n  \
    \          end\n            if k:upper() ~= k then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     lower = lower and k == string.lower(k)\n            upper = upper and k\
    \ == string.upper(k)\n        else\n            return false\n        end\n  \
    \  end\n    return lower or upper\nend", "    if type(dict) ~= 'table' then\n\
    \        return false\n    end\n    if #dict == 0 then\n        return false\n\
    \    end\n    local lower_case = true\n    local upper_case = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) ~= 'string' then\n            return\
    \ false\n        end\n        if k ~= k:lower() then\n            lower_case =\
    \ false\n        end\n        if k ~= k:upper() then\n            upper_case =\
    \ false\n        end\n    end\n    return lower_case or upper_case\nend", "  \
    \  local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if lower_case then\n  \
    \              lower_case = k == string.lower(k)\n            end\n          \
    \  if upper_case then\n                upper_case = k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    -- TODO: Implement this function\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k ~= string.lower(k) then\n\
    \                lower = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    if lower or upper then\n       \
    \ return true\n    else\n        return false\n    end\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() ~= k then\n                lower\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    if next(dict) == nil\
    \ then\n        return false\n    end\n    local lower = true\n    local upper\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if string.lower(k) ~= k then\n                lower = false\n   \
    \         end\n            if string.upper(k) ~= k then\n                upper\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k ~= k:lower() then\n                lower = false\n  \
    \          end\n            if k ~= k:upper() then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if k ~= string.lower(k) then\n                lower_case = false\n\
    \            end\n            if k ~= string.upper(k) then\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            lower = lower and k == string.lower(k)\n        \
    \    upper = upper and k == string.upper(k)\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if not string.match(k, '^%l+$') then\n       \
    \         lower = false\n            end\n            if not string.match(k, '^%u+$')\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   if #dict == 0 then\n        return false\n    end\n    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if not k:match('^%l+$') then\n                lower\
    \ = false\n            end\n            if not k:match('^%u+$') then\n       \
    \         upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k ~= k:lower() then\n                lower = false\n\
    \            end\n            if k ~= k:upper() then\n                upper =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower = false\n  \
    \          end\n            if k:upper() ~= k then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:lower() ~= k then\n                lower = false\n            end\n\
    \            if k:upper() ~= k then\n                upper = false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ lower and k ~= k:lower() then\n                lower = false\n            end\n\
    \            if upper and k ~= k:upper() then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k ~= k:lower() then\n   \
    \             lower = false\n            end\n            if k ~= k:upper() then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() ~= k then\n                lower\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower_case =\
    \ true\n    local upper_case = true\n    for k, v in pairs(dict) do\n        if\
    \ type(k) == 'string' then\n            if lower_case then\n                lower_case\
    \ = lower_case and k == string.lower(k)\n            end\n            if upper_case\
    \ then\n                upper_case = upper_case and k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    -- TODO: Implement this function.\n\
    \    local lower = true\n    local upper = true\n    for key, value in pairs(dict)\
    \ do\n        if type(key) == 'string' then\n            if string.lower(key)\
    \ ~= key then\n                lower = false\n            end\n            if\
    \ string.upper(key) ~= key then\n                upper = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    if lower or\
    \ upper then\n        return true\n    else\n        return false\n    end\nend",
  "    if #dict == 0 then\n        return false\n    end\n    local is_lower = false\n\
    \    local is_upper = false\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() == k then\n                is_lower\
    \ = true\n            elseif k:upper() == k then\n                is_upper = true\n\
    \            else\n                return false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_lower or is_upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if lower_case\
    \ then\n                lower_case = lower_case and k == string.lower(k)\n   \
    \         end\n            if upper_case then\n                upper_case = upper_case\
    \ and k == string.upper(k)\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower_case or upper_case\nend", "  \
    \  if #dict == 0 then\n        return false\n    end\n    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:match('%u') then\n                lower = false\n\
    \            else\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if not k:match('^%u+$')\
    \ then\n                upper_case = false\n            end\n            if not\
    \ k:match('^%l+$') then\n                lower_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "  local lower = true\n  local upper = true\n  for k, _\
    \ in pairs(dict) do\n    if type(k) == 'string' then\n      if k:match('%u') then\n\
    \        lower = false\n      else\n        upper = false\n      end\n    else\n\
    \      return false\n    end\n  end\n  return lower or upper\nend", "  -- TODO:\
    \ Implement this function\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower and string.match(k, '[A-Z]') then\n                lower = false\n\
    \            end\n            if upper and string.match(k, '[a-z]') then\n   \
    \             upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() ~= k then\n                lower\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    -- TODO: Implement\
    \ this function.\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:lower()\
    \ ~= k then\n                lower = false\n            end\n            if k:upper()\
    \ ~= k then\n                upper = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:match('%u') then\n    \
    \            lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:lower() ~= k then\n                lower = false\n            end\n\
    \            if k:upper() ~= k then\n                upper = false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k ~= string.lower(k) then\n                lower_case = false\n     \
    \       end\n            if k ~= string.upper(k) then\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower, upper =\
    \ true, true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if k:lower() ~= k then\n                lower = false\n         \
    \   end\n            if k:upper() ~= k then\n                upper = false\n \
    \           end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local is_upper = true\n    local is_lower\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if k:match('%u') then\n                is_lower = false\n       \
    \     else\n                is_upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return is_upper or is_lower\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if not k:match('^%u+$')\
    \ then\n                upper = false\n            end\n            if not k:match('^%l+$')\
    \ then\n                lower = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:lower() ~= k then\n   \
    \             lower = false\n            end\n            if k:upper() ~= k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    if dict ==\
    \ nil or next(dict) == nil then\n        return false\n    end\n    local is_lower\
    \ = false\n    local is_upper = false\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if k:lower() == k then\n         \
    \       is_lower = true\n            elseif k:upper() == k then\n            \
    \    is_upper = true\n            else\n                return false\n       \
    \     end\n        else\n            return false\n        end\n    end\n    return\
    \ is_lower or is_upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower and not k:lower() == k then\n                lower = false\n  \
    \          end\n            if upper and not k:upper() == k then\n           \
    \     upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "  local lower = true\n\
    \  local upper = true\n  for k, v in pairs(dict) do\n    if type(k) == 'string'\
    \ then\n      if lower and k ~= k:lower() then\n        lower = false\n      end\n\
    \      if upper and k ~= k:upper() then\n        upper = false\n      end\n  \
    \  else\n      return false\n    end\n  end\n  return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if lower and not k:lower() ==\
    \ k then\n                lower = false\n            end\n            if upper\
    \ and not k:upper() == k then\n                upper = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower = true\n    local upper = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) == 'string' then\n            if lower\
    \ then\n                lower = k == string.lower(k)\n            end\n      \
    \      if upper then\n                upper = k == string.upper(k)\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ lower and not k:lower() == k then\n                lower = false\n         \
    \   end\n            if upper and not k:upper() == k then\n                upper\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if lower_case then\n                lower_case = k == string.lower(k)\n\
    \            end\n            if upper_case then\n                upper_case =\
    \ k == string.upper(k)\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if lower and not k:lower() == k then\n       \
    \         lower = false\n            end\n            if upper and not k:upper()\
    \ == k then\n                upper = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower, upper = true, true\n    for k, v in pairs(dict) do\n        if\
    \ type(k) == 'string' then\n            if k ~= k:lower() then\n             \
    \   lower = false\n            end\n            if k ~= k:upper() then\n     \
    \           upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "    local is_lower =\
    \ false\n    local is_upper = false\n    for k, v in pairs(dict) do\n        if\
    \ type(k) == 'string' then\n            if k:lower() == k then\n             \
    \   is_lower = true\n            elseif k:upper() == k then\n                is_upper\
    \ = true\n            else\n                return false\n            end\n  \
    \      else\n            return false\n        end\n    end\n    return is_lower\
    \ or is_upper\nend", "    if next(dict) == nil then\n        return false\n  \
    \  end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:lower() ~= k then\n   \
    \             lower = false\n            end\n            if k:upper() ~= k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    if #dict\
    \ == 0 then return false end\n    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) ~= 'string' then return false\
    \ end\n        if k:match('%u') then\n            lower = false\n        else\n\
    \            upper = false\n        end\n    end\n    return lower or upper\n\
    end", "    if #dict == 0 then\n        return false\n    end\n    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k ~= string.lower(k) then\n               \
    \ lower = false\n            end\n            if k ~= string.upper(k) then\n \
    \               upper = false\n            end\n        else\n            lower\
    \ = false\n            upper = false\n        end\n    end\n    return lower or\
    \ upper\nend", "    local lower_case = true\n    local upper_case = true\n   \
    \ for k, v in pairs(dict) do\n        if type(k) == 'string' then\n          \
    \  if k ~= string.lower(k) then\n                lower_case = false\n        \
    \    end\n            if k ~= string.upper(k) then\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    local lower_case = true\n\
    \    local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k ~= string.lower(k) then\n               \
    \ lower_case = false\n            end\n            if k ~= string.upper(k) then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k ~=\
    \ string.lower(k) then\n                lower_case = false\n            end\n\
    \            if k ~= string.upper(k) then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower_case = true\n   \
    \ local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k ~= string.lower(k) then\n               \
    \ lower_case = false\n            end\n            if k ~= string.upper(k) then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k ~=\
    \ string.lower(k) then\n                lower_case = false\n            end\n\
    \            if k ~= string.upper(k) then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, _ in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower = false\n  \
    \          end\n            if k:upper() ~= k then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    if type(dict) ~= 'table' then\n       \
    \ return false\n    end\n    if #dict == 0 then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) ~= 'string' then\n            return false\n        end\n\
    \        if k:lower() ~= k then\n            lower = false\n        end\n    \
    \    if k:upper() ~= k then\n            upper = false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:lower() ~= k then\n                lower = false\n            end\n\
    \            if k:upper() ~= k then\n                upper = false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    if #dict == 0 then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if not k:match('^%l+$') then\n\
    \                lower = false\n            end\n            if not k:match('^%u+$')\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if lower_case then\n  \
    \              lower_case = k == string.lower(k)\n            end\n          \
    \  if upper_case then\n                upper_case = k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower_case = true\n   \
    \ local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() ~= k then\n                lower_case\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   upper_case = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "  local lower_case\
    \ = true\n  local upper_case = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ == 'string' then\n      if k:lower() ~= k then\n        lower_case = false\n\
    \      end\n      if k:upper() ~= k then\n        upper_case = false\n      end\n\
    \    else\n      return false\n    end\n  end\n  return lower_case or upper_case\n\
    end", "  local lower_case = true\n  local upper_case = true\n  for k, v in pairs(dict)\
    \ do\n    if type(k) == 'string' then\n      if k:lower() ~= k then\n        lower_case\
    \ = false\n      end\n      if k:upper() ~= k then\n        upper_case = false\n\
    \      end\n    else\n      return false\n    end\n  end\n  return lower_case\
    \ or upper_case\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:lower() ~= k then\n                lower_case = false\n           \
    \ end\n            if k:upper() ~= k then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:lower()\
    \ ~= k then\n                lower = false\n            end\n            if k:upper()\
    \ ~= k then\n                upper = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:lower() ~= k then\n\
    \                lower_case = false\n            end\n            if k:upper()\
    \ ~= k then\n                upper_case = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:match('%u') then\n\
    \                lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if not string.match(k, '^%l+$') then\n                lower_case\
    \ = false\n            end\n            if not string.match(k, '^%u+$') then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    -- TODO: implement this function\nend", "    local lower_case = true\n\
    \    local upper_case = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if not string.match(k, '^%l+$') then\n       \
    \         lower_case = false\n            end\n            if not string.match(k,\
    \ '^%u+$') then\n                upper_case = false\n            end\n       \
    \ else\n            lower_case = false\n            upper_case = false\n     \
    \   end\n    end\n    return lower_case or upper_case\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if k ~= string.lower(k) then\n   \
    \             lower_case = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper_case = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k ~=\
    \ string.lower(k) then\n                lower_case = false\n            end\n\
    \            if k ~= string.upper(k) then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    if next(dict) == nil then\n \
    \       return false\n    end\n    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k ~= string.lower(k) then\n                lower = false\n          \
    \  end\n            if k ~= string.upper(k) then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    -- TODO: Implement this function\n    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) == 'string' then\n            if k ~= string.lower(k) then\n  \
    \              lower = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    if lower or upper then\n       \
    \ return true\n    else\n        return false\n    end\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if not string.match(k, '^%l+$') then\n\
    \                lower_case = false\n            end\n            if not string.match(k,\
    \ '^%u+$') then\n                upper_case = false\n            end\n       \
    \ else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:match('%u') then\n                lower_case = false\n            else\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    if next(dict) == nil then\n        return false\n    end\n    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) == 'string' then\n            if k:match('%u') then\n         \
    \       lower = false\n            else\n                upper = false\n     \
    \       end\n        else\n            return false\n        end\n    end\n  \
    \  return lower or upper\nend", "  local lower_case = true\n  local upper_case\
    \ = true\n  for k, v in pairs(dict) do\n    if type(k) == 'string' then\n    \
    \  if k:match('%u') then\n        lower_case = false\n      else\n        upper_case\
    \ = false\n      end\n    else\n      return false\n    end\n  end\n  return lower_case\
    \ or upper_case\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:lower() ~= k then\n                lower_case = false\n           \
    \ end\n            if k:upper() ~= k then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower = false\n  \
    \          end\n            if k:upper() ~= k then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    if next(dict) == nil then\n        return\
    \ false\n    end\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:match('%u')\
    \ then\n                lower = false\n            else\n                upper\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() ~= k then\n                lower_case = false\n\
    \            end\n            if k:upper() ~= k then\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "  local lower = true\n \
    \ local upper = true\n  for k,v in pairs(dict) do\n    if type(k) == 'string'\
    \ then\n      if k:lower() ~= k then\n        lower = false\n      end\n     \
    \ if k:upper() ~= k then\n        upper = false\n      end\n    else\n      return\
    \ false\n    end\n  end\n  return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if not k:match('^%l+$') then\n                lower\
    \ = false\n            end\n            if not k:match('^%u+$') then\n       \
    \         upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "  local lower_case =\
    \ true\n  local upper_case = true\n  for k, v in pairs(dict) do\n    if type(k)\
    \ == 'string' then\n      if k:lower() ~= k then\n        lower_case = false\n\
    \      end\n      if k:upper() ~= k then\n        upper_case = false\n      end\n\
    \    else\n      return false\n    end\n  end\n  return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:match('%u')\
    \ then\n                lower_case = false\n            else\n               \
    \ upper_case = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "\tlocal lower_case\
    \ = true\n\tlocal upper_case = true\n\tfor k, v in pairs(dict) do\n\t\tif type(k)\
    \ == 'string' then\n\t\t\tif k ~= k:lower() then\n\t\t\t\tlower_case = false\n\
    \t\t\tend\n\t\t\tif k ~= k:upper() then\n\t\t\t\tupper_case = false\n\t\t\tend\n\
    \t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\treturn lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if lower_case\
    \ and not string.match(k, '^%l+$') then\n                lower_case = false\n\
    \            end\n            if upper_case and not string.match(k, '^%u+$') then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if not k:match('^%l+$')\
    \ then\n                lower = false\n            end\n            if not k:match('^%u+$')\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   -- TODO: Implement this function\n    local lower = true\n    local upper\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if k:lower() ~= k then\n                lower = false\n         \
    \   end\n            if k:upper() ~= k then\n                upper = false\n \
    \           end\n        else\n            return false\n        end\n    end\n\
    \    if lower or upper then\n        return true\n    else\n        return false\n\
    \    end\nend", "    if next(dict) == nil then\n        return false\n    end\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:lower() ~= k then\n   \
    \             lower = false\n            end\n            if k:upper() ~= k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k ~= k:lower() then\n                lower\
    \ = false\n            end\n            if k ~= k:upper() then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k ~= k:lower() then\n                lower = false\n\
    \            end\n            if k ~= k:upper() then\n                upper =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower = true\n    local\
    \ upper = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k ~= k:lower() then\n                lower = false\n  \
    \          end\n            if k ~= k:upper() then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k:lower() ~= k then\n                lower = false\n            end\n\
    \            if k:upper() ~= k then\n                upper = false\n         \
    \   end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ lower then\n                lower = k == string.lower(k)\n            end\n\
    \            if upper then\n                upper = k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower_case = true\n    local upper_case\
    \ = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n\
    \            if k:match('%l') then\n                upper_case = false\n     \
    \       elseif k:match('%u') then\n                lower_case = false\n      \
    \      end\n        else\n            return false\n        end\n    end\n   \
    \ return lower_case or upper_case\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k ~= string.lower(k) then\n                lower_case =\
    \ false\n            end\n            if k ~= string.upper(k) then\n         \
    \       upper_case = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower_case or upper_case\nend", "  \
    \  local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:match('%u') then\n    \
    \            lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if string.lower(k) ~= k\
    \ then\n                lower = false\n            end\n            if string.upper(k)\
    \ ~= k then\n                upper = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower_case = false\n            end\n            if k\
    \ ~= string.upper(k) then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower_case and k ~= k:lower() then\n                lower_case = false\n\
    \            end\n            if upper_case and k ~= k:upper() then\n        \
    \        upper_case = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower_case or upper_case\nend", "  \
    \  local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if lower_case then\n  \
    \              lower_case = k == string.lower(k)\n            end\n          \
    \  if upper_case then\n                upper_case = k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:match('%u')\
    \ then\n                lower = false\n            else\n                upper\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:match('%u') then\n                lower_case = false\n\
    \            else\n                upper_case = false\n            end\n     \
    \   else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ k ~= k:lower() then\n                lower = false\n            end\n      \
    \      if k ~= k:upper() then\n                upper = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower = true\n    local upper = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) == 'string' then\n            if lower\
    \ and k:lower() ~= k then\n                lower = false\n            end\n  \
    \          if upper and k:upper() ~= k then\n                upper = false\n \
    \           end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    if #dict == 0 then\n        return false\n\
    \    end\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:match('%u') then\n\
    \                lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower and k ~= k:lower() then\n                lower = false\n      \
    \      end\n            if upper and k ~= k:upper() then\n                upper\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    -- TODO: Implement this function\n\
    \    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k ~= string.lower(k) then\n\
    \                lower = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    if lower or upper then\n       \
    \ return true\n    else\n        return false\n    end\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:match('%u') then\n                lower =\
    \ false\n            else\n                upper = false\n            end\n  \
    \      else\n            return false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower = true\n    local upper = true\n    for k,\
    \ v in pairs(dict) do\n        if type(k) == 'string' then\n            if not\
    \ k:match('^%l+$') then\n                lower = false\n            end\n    \
    \        if not k:match('^%u+$') then\n                upper = false\n       \
    \     end\n        else\n            return false\n        end\n    end\n    return\
    \ lower or upper\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ k:match('%u') then\n                lower = false\n            else\n      \
    \          upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:match('%u') then\n                lower = false\n\
    \            else\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:match('%u') then\n    \
    \            lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, _ in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower and k ~= k:lower() then\n                lower = false\n      \
    \      end\n            if upper and k ~= k:upper() then\n                upper\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    local lower_case = true\n    local\
    \ upper_case = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k ~= string.lower(k) then\n                lower_case =\
    \ false\n            end\n            if k ~= string.upper(k) then\n         \
    \       upper_case = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower_case or upper_case\nend", "  \
    \  if #dict == 0 then\n        return false\n    end\n    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if not string.match(k, '^%l+$') then\n          \
    \      lower = false\n            end\n            if not string.match(k, '^%u+$')\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   if #dict == 0 then\n        return false\n    end\n    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:match('%u') then\n                lower = false\n\
    \            else\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k ~= k:lower() then\n   \
    \             lower = false\n            end\n            if k ~= k:upper() then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if k:lower() ~= k then\n         \
    \       lower_case = false\n            end\n            if k:upper() ~= k then\n\
    \                upper_case = false\n            end\n        else\n         \
    \   return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:match('%u') then\n\
    \                lower = false\n            else\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower and not k:match('^%l+$') then\n                lower = false\n\
    \            end\n            if upper and not k:match('^%u+$') then\n       \
    \         upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:match('%u') then\n                lower = false\n\
    \            else\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend",
  "    -- TODO: Implement this function\n    local count = 0\n    local count1 = 0\n\
    \    for k,v in pairs(dict) do\n        if type(k) == \"string\" then\n      \
    \      if k == string.lower(k) then\n                count = count + 1\n     \
    \       elseif k == string.upper(k) then\n                count1 = count1 + 1\n\
    \            end\n        end\n    end\n    if count == 0 and count1 == 0 then\n\
    \        return false\n    elseif count == 0 and count1 ~= 0 then\n        return\
    \ true\n    elseif count ~= 0 and count1 == 0 then\n        return true\n    else\n\
    \        return false\n    end\nend", "    -- TODO: implement this function\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k ~=\
    \ string.lower(k) then\n                lower_case = false\n            end\n\
    \            if k ~= string.upper(k) then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    -- your code here\n    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) == 'string' then\n            if not string.match(k, '^%l+$') then\n\
    \                lower = false\n            end\n            if not string.match(k,\
    \ '^%u+$') then\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    if lower or upper then\n\
    \        return true\n    else\n        return false\n    end\nend", "    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) == 'string' then\n            if k ~= k:lower() then\n        \
    \        lower = false\n            end\n            if k ~= k:upper() then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if k:lower() ~= k then\n                lower\
    \ = false\n            end\n            if k:upper() ~= k then\n             \
    \   upper = false\n            end\n        else\n            return false\n \
    \       end\n    end\n    return lower or upper\nend", "    local lower_case =\
    \ true\n    local upper_case = true\n    for k, v in pairs(dict) do\n        if\
    \ type(k) == 'string' then\n            if k:match('%u') then\n              \
    \  lower_case = false\n            else\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    if #dict == 0 then\n        return\
    \ false\n    end\n    local lower = true\n    local upper = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:lower()\
    \ ~= k then\n                lower = false\n            end\n            if k:upper()\
    \ ~= k then\n                upper = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower_case = false\n            end\n            if k\
    \ ~= string.upper(k) then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ k ~= k:lower() then\n                lower = false\n            end\n      \
    \      if k ~= k:upper() then\n                upper = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower = true\n    local upper = true\n    for k,\
    \ _ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:lower()\
    \ ~= k then\n                lower = false\n            end\n            if k:upper()\
    \ ~= k then\n                upper = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:lower() ~= k then\n\
    \                lower_case = false\n            end\n            if k:upper()\
    \ ~= k then\n                upper_case = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= k:lower() then\n\
    \                lower = false\n            end\n            if k ~= k:upper()\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    return lower or upper\nend", " \
    \   local lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n\
    \        if type(k) == 'string' then\n            if k:lower() ~= k then\n   \
    \             lower = false\n            end\n            if k:upper() ~= k then\n\
    \                upper = false\n            end\n        else\n            return\
    \ false\n        end\n    end\n    return lower or upper\nend", "    local lower\
    \ = true\n    local upper = true\n    for k, v in pairs(dict) do\n        if type(k)\
    \ == 'string' then\n            if not k:find('^%l+$') then\n                lower\
    \ = false\n            end\n            if not k:find('^%u+$') then\n        \
    \        upper = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower or upper\nend", "    local lower = true\n\
    \    local upper = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if k:lower() ~= k then\n                lower = false\n\
    \            end\n            if k:upper() ~= k then\n                upper =\
    \ false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower or upper\nend", "    if next(dict) == nil then\n  \
    \      return false\n    end\n    local lower = true\n    local upper = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if k ~= string.lower(k) then\n                lower = false\n          \
    \  end\n            if k ~= string.upper(k) then\n                upper = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower or upper\nend", "    local lower_case_keys = true\n    local\
    \ upper_case_keys = true\n    for k, v in pairs(dict) do\n        if type(k) ==\
    \ 'string' then\n            if lower_case_keys then\n                lower_case_keys\
    \ = string.lower(k) == k\n            end\n            if upper_case_keys then\n\
    \                upper_case_keys = string.upper(k) == k\n            end\n   \
    \     else\n            return false\n        end\n    end\n    return lower_case_keys\
    \ or upper_case_keys\nend", "    -- TODO: Implement this function\n    local count\
    \ = 0\n    local count2 = 0\n    for k,v in pairs(dict) do\n        if type(k)\
    \ == \"string\" then\n            if k == string.lower(k) then\n             \
    \   count = count + 1\n            elseif k == string.upper(k) then\n        \
    \        count2 = count2 + 1\n            end\n        end\n    end\n    if count\
    \ == 0 and count2 == 0 then\n        return false\n    elseif count == 0 and count2\
    \ ~= 0 then\n        return true\n    elseif count ~= 0 and count2 == 0 then\n\
    \        return true\n    else\n        return false\n    end\nend", "    local\
    \ lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k:match('%u') then\n\
    \                lower_case = false\n            else\n                upper_case\
    \ = false\n            end\n        else\n            return false\n        end\n\
    \    end\n    return lower_case or upper_case\nend", "    -- TODO: Implement this\
    \ function\n    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower = false\n            end\n            if k ~= string.upper(k)\
    \ then\n                upper = false\n            end\n        else\n       \
    \     return false\n        end\n    end\n    if lower or upper then\n       \
    \ return true\n    else\n        return false\n    end\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if lower_case and string.upper(k)\
    \ == k then\n                lower_case = false\n            end\n           \
    \ if upper_case and string.lower(k) == k then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local upper = true\n    local\
    \ lower = true\n    for k, v in pairs(dict) do\n        if type(k) == 'string'\
    \ then\n            if k:lower() == k then\n                upper = false\n  \
    \          elseif k:upper() == k then\n                lower = false\n       \
    \     else\n                return false\n            end\n        else\n    \
    \        return false\n        end\n    end\n    return upper or lower\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if lower_case then\n  \
    \              lower_case = k == string.lower(k)\n            end\n          \
    \  if upper_case then\n                upper_case = k == string.upper(k)\n   \
    \         end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    -- YOUR CODE HERE\n    local\
    \ lower = true\n    local upper = true\n    for k, v in pairs(dict) do\n     \
    \   if type(k) == 'string' then\n            if not string.match(k, '^%l+$') then\n\
    \                lower = false\n            end\n            if not string.match(k,\
    \ '^%u+$') then\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend",
  "    local lower_case = true\n    local upper_case = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if k ~= string.lower(k)\
    \ then\n                lower_case = false\n            end\n            if k\
    \ ~= string.upper(k) then\n                upper_case = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower_case\
    \ or upper_case\nend", "    local lower = true\n    local upper = true\n    for\
    \ k, v in pairs(dict) do\n        if type(k) == 'string' then\n            if\
    \ k ~= k:lower() then\n                lower = false\n            end\n      \
    \      if k ~= k:upper() then\n                upper = false\n            end\n\
    \        else\n            return false\n        end\n    end\n    return lower\
    \ or upper\nend", "    local lower_case = true\n    local upper_case = true\n\
    \    for k, v in pairs(dict) do\n        if type(k) == 'string' then\n       \
    \     if lower_case and string.upper(k) == k then\n                lower_case\
    \ = false\n            end\n            if upper_case and string.lower(k) == k\
    \ then\n                upper_case = false\n            end\n        else\n  \
    \          return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower = true\n    local upper = true\n    for k, v in pairs(dict)\
    \ do\n        if type(k) == 'string' then\n            if lower and k ~= k:lower()\
    \ then\n                lower = false\n            end\n            if upper and\
    \ k ~= k:upper() then\n                upper = false\n            end\n      \
    \  else\n            return false\n        end\n    end\n    return lower or upper\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k:match('^%u')\
    \ then\n                lower_case = false\n            else\n               \
    \ upper_case = false\n            end\n        else\n            return false\n\
    \        end\n    end\n    return lower_case or upper_case\nend", "    local lower_case\
    \ = true\n    local upper_case = true\n    for k, v in pairs(dict) do\n      \
    \  if type(k) == 'string' then\n            if string.lower(k) ~= k then\n   \
    \             lower_case = false\n            end\n            if string.upper(k)\
    \ ~= k then\n                upper_case = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower_case or upper_case\n\
    end", "    local lower_case = true\n    local upper_case = true\n    for k, v\
    \ in pairs(dict) do\n        if type(k) == 'string' then\n            if k ~=\
    \ string.lower(k) then\n                lower_case = false\n            end\n\
    \            if k ~= string.upper(k) then\n                upper_case = false\n\
    \            end\n        else\n            return false\n        end\n    end\n\
    \    return lower_case or upper_case\nend", "    local lower = true\n    local\
    \ upper = true\n    for key, value in pairs(dict) do\n        if type(key) ==\
    \ 'string' then\n            if not string.match(key, '^%l+$') then\n        \
    \        lower = false\n            end\n            if not string.match(key,\
    \ '^%u+$') then\n                upper = false\n            end\n        else\n\
    \            return false\n        end\n    end\n    return lower or upper\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

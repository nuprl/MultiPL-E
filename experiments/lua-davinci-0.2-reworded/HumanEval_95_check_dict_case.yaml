---
name: HumanEval_95_check_dict_case
language: lua
prompt: "-- Given a table, return true if all keys are strings in lower \n-- case
  or all keys are strings in upper case, else return false.\n-- The function should
  return false is the given table is empty.\n-- Examples:\n-- >>> check_dict_case({['a']
  = 'apple', ['b'] = 'banana'})\n-- true\n-- >>> check_dict_case({['a'] = 'apple',
  ['A'] = 'banana', ['B'] = 'banana'})\n-- false\n-- >>> check_dict_case({['a'] =
  'apple', [8] = 'banana', ['a'] = 'apple'})\n-- false\n-- >>> check_dict_case({['Name']
  = 'John', ['Age'] = '36', ['City'] = 'Houston'})\n-- false\n-- >>> check_dict_case({['STATE']
  = 'NC', ['ZIP'] = '12345'})\n-- true\nlocal function check_dict_case(dict)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = check_dict_case
      lu.assertEquals(candidate({['p'] = 'pineapple', ['b'] = 'banana'}), true)
      lu.assertEquals(candidate({['p'] = 'pineapple', ['A'] = 'banana', ['B'] = 'banana'}), false)
      lu.assertEquals(candidate({['p'] = 'pineapple', ['5'] = 'banana', ['a'] = 'apple'}), false)
      lu.assertEquals(candidate({['Name'] = 'John', ['Age'] = '36', ['City'] = 'Houston'}), false)
      lu.assertEquals(candidate({['STATE'] = 'NC', ['ZIP'] = '12345'}), true)
      lu.assertEquals(candidate({['fruit'] = 'Orange', ['taste'] = 'Sweet'}), true)
      lu.assertEquals(candidate({}), false)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and not k:lower() == k then
                  lower = false
              end
              if upper and not k:upper() == k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for key, value in pairs(dict) do
          if type(key) == 'string' then
              if key:lower() ~= key then
                  lower = false
              end
              if key:upper() ~= key then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              lower = lower and k == string.lower(k)
              upper = upper and k == string.upper(k)
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = lower_case and k == string.lower(k)
              end
              if upper_case then
                  upper_case = upper_case and k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lowercase = true
      local uppercase = true
      for k, v in pairs(dict) do
          if type(k) ~= 'string' then
              return false
          end
          if lowercase then
              lowercase = k == k:lower()
          end
          if uppercase then
              uppercase = k == k:upper()
          end
      end
      return lowercase or uppercase
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if not dict then
          return false
      end
      local is_lower = false
      local is_upper = false
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() == k then
                  is_lower = true
              elseif k:upper() == k then
                  is_upper = true
              else
                  return false
              end
          else
              return false
          end
      end
      return is_lower or is_upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              lower_case = lower_case and k == string.lower(k)
              upper_case = upper_case and k == string.upper(k)
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
    local lower = true
    local upper = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        if not k:match('^%l+$') then
          lower = false
        end
        if not k:match('^%u+$') then
          upper = false
        end
      else
        return false
      end
    end
    return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower_case = false
              end
              if not string.match(k, '^%u+$') then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%u+$') then
                  upper = false
              end
              if not k:match('^%l+$') then
                  lower = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for key, value in pairs(dict) do
          if type(key) == 'string' then
              if key ~= string.lower(key) then
                  lower = false
              end
              if key ~= string.upper(key) then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = 0
      local upper = 0
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if string.lower(k) == k then
                  lower = lower + 1
              elseif string.upper(k) == k then
                  upper = upper + 1
              end
          end
      end
      if lower == 0 and upper == 0 then
          return false
      elseif lower == 0 and upper > 0 then
          return true
      elseif lower > 0 and upper == 0 then
          return true
      else
          return false
      end
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
    local lower = true
    local upper = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        lower = lower and k == string.lower(k)
        upper = upper and k == string.upper(k)
      else
        return false
      end
    end
    return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              lower = lower and k == string.lower(k)
              upper = upper and k == string.upper(k)
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if type(dict) ~= 'table' then
          return false
      end
      if #dict == 0 then
          return false
      end
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) ~= 'string' then
              return false
          end
          if k ~= k:lower() then
              lower_case = false
          end
          if k ~= k:upper() then
              upper_case = false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- TODO: Implement this function
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if string.lower(k) ~= k then
                  lower = false
              end
              if string.upper(k) ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              lower = lower and k == string.lower(k)
              upper = upper and k == string.upper(k)
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower = false
              end
              if not string.match(k, '^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%l+$') then
                  lower = false
              end
              if not k:match('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = lower_case and k == string.lower(k)
              end
              if upper_case then
                  upper_case = upper_case and k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- TODO: Implement this function.
      local lower = true
      local upper = true
      for key, value in pairs(dict) do
          if type(key) == 'string' then
              if string.lower(key) ~= key then
                  lower = false
              end
              if string.upper(key) ~= key then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      if #dict == 0 then
          return false
      end
      local is_lower = false
      local is_upper = false
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() == k then
                  is_lower = true
              elseif k:upper() == k then
                  is_upper = true
              else
                  return false
              end
          else
              return false
          end
      end
      return is_lower or is_upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = lower_case and k == string.lower(k)
              end
              if upper_case then
                  upper_case = upper_case and k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%u+$') then
                  upper_case = false
              end
              if not k:match('^%l+$') then
                  lower_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
    local lower = true
    local upper = true
    for k, _ in pairs(dict) do
      if type(k) == 'string' then
        if k:match('%u') then
          lower = false
        else
          upper = false
        end
      else
        return false
      end
    end
    return lower or upper
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and string.match(k, '[A-Z]') then
                  lower = false
              end
              if upper and string.match(k, '[a-z]') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      -- TODO: Implement this function.
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower, upper = true, true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local is_upper = true
      local is_lower = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  is_lower = false
              else
                  is_upper = false
              end
          else
              return false
          end
      end
      return is_upper or is_lower
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%u+$') then
                  upper = false
              end
              if not k:match('^%l+$') then
                  lower = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if dict == nil or next(dict) == nil then
          return false
      end
      local is_lower = false
      local is_upper = false
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() == k then
                  is_lower = true
              elseif k:upper() == k then
                  is_upper = true
              else
                  return false
              end
          else
              return false
          end
      end
      return is_lower or is_upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and not k:lower() == k then
                  lower = false
              end
              if upper and not k:upper() == k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
    local lower = true
    local upper = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        if lower and k ~= k:lower() then
          lower = false
        end
        if upper and k ~= k:upper() then
          upper = false
        end
      else
        return false
      end
    end
    return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and not k:lower() == k then
                  lower = false
              end
              if upper and not k:upper() == k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower then
                  lower = k == string.lower(k)
              end
              if upper then
                  upper = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and not k:lower() == k then
                  lower = false
              end
              if upper and not k:upper() == k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and not k:lower() == k then
                  lower = false
              end
              if upper and not k:upper() == k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower, upper = true, true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local is_lower = false
      local is_upper = false
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() == k then
                  is_lower = true
              elseif k:upper() == k then
                  is_upper = true
              else
                  return false
              end
          else
              return false
          end
      end
      return is_lower or is_upper
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then return false end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) ~= 'string' then return false end
          if k:match('%u') then
              lower = false
          else
              upper = false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              lower = false
              upper = false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, _ in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if type(dict) ~= 'table' then
          return false
      end
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) ~= 'string' then
              return false
          end
          if k:lower() ~= k then
              lower = false
          end
          if k:upper() ~= k then
              upper = false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%l+$') then
                  lower = false
              end
              if not k:match('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
    local lower_case = true
    local upper_case = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        if k:lower() ~= k then
          lower_case = false
        end
        if k:upper() ~= k then
          upper_case = false
        end
      else
        return false
      end
    end
    return lower_case or upper_case
  end
- |2-
    local lower_case = true
    local upper_case = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        if k:lower() ~= k then
          lower_case = false
        end
        if k:upper() ~= k then
          upper_case = false
        end
      else
        return false
      end
    end
    return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower_case = false
              end
              if not string.match(k, '^%u+$') then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower_case = false
              end
              if not string.match(k, '^%u+$') then
                  upper_case = false
              end
          else
              lower_case = false
              upper_case = false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      -- TODO: Implement this function
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower_case = false
              end
              if not string.match(k, '^%u+$') then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
    local lower_case = true
    local upper_case = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        if k:match('%u') then
          lower_case = false
        else
          upper_case = false
        end
      else
        return false
      end
    end
    return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
    local lower = true
    local upper = true
    for k,v in pairs(dict) do
      if type(k) == 'string' then
        if k:lower() ~= k then
          lower = false
        end
        if k:upper() ~= k then
          upper = false
        end
      else
        return false
      end
    end
    return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%l+$') then
                  lower = false
              end
              if not k:match('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
    local lower_case = true
    local upper_case = true
    for k, v in pairs(dict) do
      if type(k) == 'string' then
        if k:lower() ~= k then
          lower_case = false
        end
        if k:upper() ~= k then
          upper_case = false
        end
      else
        return false
      end
    end
    return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- "\tlocal lower_case = true\n\tlocal upper_case = true\n\tfor k, v in pairs(dict)
  do\n\t\tif type(k) == 'string' then\n\t\t\tif k ~= k:lower() then\n\t\t\t\tlower_case
  = false\n\t\t\tend\n\t\t\tif k ~= k:upper() then\n\t\t\t\tupper_case = false\n\t\t\tend\n\t\telse\n\t\t\treturn
  false\n\t\tend\n\tend\n\treturn lower_case or upper_case\nend"
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case and not string.match(k, '^%l+$') then
                  lower_case = false
              end
              if upper_case and not string.match(k, '^%u+$') then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%l+$') then
                  lower = false
              end
              if not k:match('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      -- TODO: Implement this function
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower then
                  lower = k == string.lower(k)
              end
              if upper then
                  upper = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%l') then
                  upper_case = false
              elseif k:match('%u') then
                  lower_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if string.lower(k) ~= k then
                  lower = false
              end
              if string.upper(k) ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case and k ~= k:lower() then
                  lower_case = false
              end
              if upper_case and k ~= k:upper() then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k:lower() ~= k then
                  lower = false
              end
              if upper and k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      -- TODO: Implement this function
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:match('^%l+$') then
                  lower = false
              end
              if not k:match('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, _ in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower = false
              end
              if not string.match(k, '^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and not k:match('^%l+$') then
                  lower = false
              end
              if upper and not k:match('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower = false
              else
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      -- TODO: Implement this function
      local count = 0
      local count1 = 0
      for k,v in pairs(dict) do
          if type(k) == "string" then
              if k == string.lower(k) then
                  count = count + 1
              elseif k == string.upper(k) then
                  count1 = count1 + 1
              end
          end
      end
      if count == 0 and count1 == 0 then
          return false
      elseif count == 0 and count1 ~= 0 then
          return true
      elseif count ~= 0 and count1 == 0 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- your code here
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower = false
              end
              if not string.match(k, '^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      if #dict == 0 then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, _ in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower_case = false
              end
              if k:upper() ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not k:find('^%l+$') then
                  lower = false
              end
              if not k:find('^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() ~= k then
                  lower = false
              end
              if k:upper() ~= k then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      if next(dict) == nil then
          return false
      end
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case_keys = true
      local upper_case_keys = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case_keys then
                  lower_case_keys = string.lower(k) == k
              end
              if upper_case_keys then
                  upper_case_keys = string.upper(k) == k
              end
          else
              return false
          end
      end
      return lower_case_keys or upper_case_keys
  end
- |2-
      -- TODO: Implement this function
      local count = 0
      local count2 = 0
      for k,v in pairs(dict) do
          if type(k) == "string" then
              if k == string.lower(k) then
                  count = count + 1
              elseif k == string.upper(k) then
                  count2 = count2 + 1
              end
          end
      end
      if count == 0 and count2 == 0 then
          return false
      elseif count == 0 and count2 ~= 0 then
          return true
      elseif count ~= 0 and count2 == 0 then
          return true
      else
          return false
      end
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- TODO: Implement this function
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower = false
              end
              if k ~= string.upper(k) then
                  upper = false
              end
          else
              return false
          end
      end
      if lower or upper then
          return true
      else
          return false
      end
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case and string.upper(k) == k then
                  lower_case = false
              end
              if upper_case and string.lower(k) == k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local upper = true
      local lower = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:lower() == k then
                  upper = false
              elseif k:upper() == k then
                  lower = false
              else
                  return false
              end
          else
              return false
          end
      end
      return upper or lower
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case then
                  lower_case = k == string.lower(k)
              end
              if upper_case then
                  upper_case = k == string.upper(k)
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      -- YOUR CODE HERE
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if not string.match(k, '^%l+$') then
                  lower = false
              end
              if not string.match(k, '^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= k:lower() then
                  lower = false
              end
              if k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower_case and string.upper(k) == k then
                  lower_case = false
              end
              if upper_case and string.lower(k) == k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if lower and k ~= k:lower() then
                  lower = false
              end
              if upper and k ~= k:upper() then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k:match('^%u') then
                  lower_case = false
              else
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if string.lower(k) ~= k then
                  lower_case = false
              end
              if string.upper(k) ~= k then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower_case = true
      local upper_case = true
      for k, v in pairs(dict) do
          if type(k) == 'string' then
              if k ~= string.lower(k) then
                  lower_case = false
              end
              if k ~= string.upper(k) then
                  upper_case = false
              end
          else
              return false
          end
      end
      return lower_case or upper_case
  end
- |2-
      local lower = true
      local upper = true
      for key, value in pairs(dict) do
          if type(key) == 'string' then
              if not string.match(key, '^%l+$') then
                  lower = false
              end
              if not string.match(key, '^%u+$') then
                  upper = false
              end
          else
              return false
          end
      end
      return lower or upper
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

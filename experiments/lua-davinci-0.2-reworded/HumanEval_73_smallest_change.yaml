name: HumanEval_73_smallest_change
language: lua
prompt: "-- Given a table arr of integers, find the minimum number of elements that\n\
  -- need to be changed to make the table palindromic. A palindromic table is a table\
  \ that\n-- is read the same backwards and forwards. In one change, you can change\
  \ one element to any other element.\n-- For example:\n-- >>> smallest_change({1,\
  \ 2, 3, 5, 4, 7, 9, 6})\n-- 4\n-- >>> smallest_change({1, 2, 3, 4, 3, 2, 2})\n--\
  \ 1\n-- >>> smallest_change({1, 2, 3, 2, 1})\n-- 0\nlocal function smallest_change(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = smallest_change\n\
  \    lu.assertEquals(candidate({1, 2, 3, 5, 4, 7, 9, 6}), 4)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4, 3, 2, 2}), 1)\n    lu.assertEquals(candidate({1, 4, 2}), 1)\n    lu.assertEquals(candidate({1,\
  \ 4, 4, 2}), 1)\n    lu.assertEquals(candidate({1, 2, 3, 2, 1}), 0)\n    lu.assertEquals(candidate({3,\
  \ 1, 1, 3}), 0)\n    lu.assertEquals(candidate({1}), 0)\n    lu.assertEquals(candidate({0,\
  \ 1}), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local n = #arr\n    local dp = {}\n    for i = 1, n do\n      \
    \  dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n\
    \    end\n    for i = 1, n do\n        for j = 1, n - i do\n            if i ==\
    \ 1 then\n                dp[j][j + i] = 0\n            elseif i == 2 then\n \
    \               dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n\
    \                if arr[j] == arr[j + i] then\n                    dp[j][j + i]\
    \ = dp[j + 1][j + i - 1]\n                else\n                    dp[j][j +\
    \ i] = math.min(dp[j + 1][j + i], dp[j][j + i - 1]) + 1\n                end\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i\
    \ + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for len = 3, n do\n   \
    \     for i = 1, n - len + 1 do\n            local j = i + len - 1\n         \
    \   dp[i][j] = arr[i] == arr[j] and dp[i + 1][j - 1] or (dp[i + 1][j] + 1 < dp[i][j\
    \ - 1] + 1 and dp[i + 1][j] + 1 or dp[i][j - 1] + 1)\n        end\n    end\n \
    \   return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n\
    \ do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n\
    \  for i = 1, n do\n    for j = 1, n - i do\n      if i == 1 then\n        dp[j][j\
    \ + i] = 0\n      elseif i == 2 then\n        dp[j][j + i] = arr[j] == arr[j +\
    \ i] and 0 or 1\n      else\n        dp[j][j + i] = math.min(dp[j + 1][j + i]\
    \ + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j + i] and\
    \ 0 or 1))\n      end\n    end\n  end\n  return dp[1][n]\nend", "  local n = #arr\n\
    \  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n   \
    \   dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n\
    \  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n \
    \ end\n  for l = 3, n do\n    for i = 1, n - l + 1 do\n      local j = i + l -\
    \ 1\n      if arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j - 1]\n   \
    \   else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n      end\n\
    \    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp =\
    \ {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n     \
    \       dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i]\
    \ = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i\
    \ + 1] and 0 or 1\n    end\n    for i = n - 1, 1, -1 do\n        for j = i + 2,\
    \ n do\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i\
    \ + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j],\
    \ dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for l = 3, n do\n        for i = 1, n - l + 1 do\n            local\
    \ j = i + l - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n - i do\n         \
    \   local k = j + i\n            if i == 1 then\n                dp[j][k] = 0\n\
    \            elseif i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and\
    \ 1 or 0\n            else\n                dp[j][k] = math.min(dp[j + 1][k] +\
    \ (arr[j] ~= arr[k]), dp[j][k - 1] + (arr[j] ~= arr[k]))\n            end\n  \
    \      end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i]\
    \ == arr[i + 1] and 0 or 1\n    end\n    for i = n - 1, 1, -1 do\n        for\
    \ j = i + 2, n do\n            dp[i][j] = arr[i] == arr[j] and dp[i + 1][j - 1]\
    \ or (dp[i + 1][j] + 1 < dp[i][j - 1] + 1 and dp[i + 1][j] + 1 or dp[i][j - 1]\
    \ + 1)\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n do\n            if i == j then\n                dp[i][j]\
    \ = 0\n            elseif i == j - 1 then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or\
    \ 1))\n            end\n        end\n    end\n    return dp[1][n]\nend", "  local\
    \ n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1,\
    \ n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] =\
    \ 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and\
    \ 1 or 0\n  end\n  for k = 3, n do\n    for i = 1, n - k + 1 do\n      local j\
    \ = i + k - 1\n      if arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j\
    \ - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) +\
    \ 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1]\
    \ = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3, n do\n        for\
    \ i = 1, n - l + 1 do\n            local j = i + l - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n - i do\n            if i == 1 then\n                dp[j][j\
    \ + i] = 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j]\
    \ == arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i + 1 == j then\n        dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n      else\n\
    \        dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j -\
    \ 1] + (arr[i] ~= arr[j] and 1 or 0))\n      end\n    end\n  end\n  return dp[1][n]\n\
    end", "    local len = #arr\n    local dp = {}\n    for i = 1, len do\n      \
    \  dp[i] = {}\n        for j = 1, len do\n            dp[i][j] = 0\n        end\n\
    \    end\n    for i = 1, len do\n        for j = 1, len do\n            if i ==\
    \ j then\n                dp[i][j] = 0\n            elseif i > j then\n      \
    \          dp[i][j] = dp[j][i]\n            else\n                if arr[i] ==\
    \ arr[j] then\n                    dp[i][j] = dp[i + 1][j - 1]\n             \
    \   else\n                    dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1])\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ dp[1][len]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ l = 2, n do\n        for i = 1, n - l + 1 do\n            local j = i + l -\
    \ 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j\
    \ - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "  local len = #arr\n  local dp = {}\n  for i = 1, len do\n    dp[i] = {}\n    for\
    \ j = 1, len do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, len do\n   \
    \ for j = 1, len do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i == j - 1 then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n      else\n\
    \        dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j -\
    \ 1] + (arr[i] == arr[j] and 0 or 1))\n      end\n    end\n  end\n  return dp[1][len]\n\
    end", "    local len = #arr\n    local dp = {}\n    for i = 1, len do\n      \
    \  dp[i] = {}\n        for j = 1, len do\n            dp[i][j] = 0\n        end\n\
    \    end\n    for i = 1, len do\n        for j = 1, len do\n            if i ==\
    \ j then\n                dp[i][j] = 0\n            elseif i + 1 == j then\n \
    \               dp[i][j] = arr[i] == arr[j] and 0 or 1\n            else\n   \
    \             dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j\
    \ - 1] + (arr[i] == arr[j] and 0 or 1))\n            end\n        end\n    end\n\
    \    return dp[1][len]\nend", "    local n = #arr\n    local dp = {}\n    for\
    \ i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n\
    \    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or\
    \ 1\n    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n         \
    \   local j = i + k - 1\n            if arr[i] == arr[j] then\n              \
    \  dp[i][j] = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n            dp[i][i +\
    \ 1] = 1\n        end\n    end\n    for k = 3, n do\n        for i = 1, n - k\
    \ + 1 do\n            local j = i + k - 1\n            if arr[i] == arr[j] then\n\
    \                dp[i][j] = dp[i + 1][j - 1]\n            else\n             \
    \   dp[i][j] = 1 + math.min(dp[i + 1][j], dp[i][j - 1])\n            end\n   \
    \     end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n - i do\n            if i == 1 then\n                dp[j][j + i]\
    \ = 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j] ==\
    \ arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for i =\
    \ n - 1, 1, -1 do\n        for j = i + 2, n do\n            if arr[i] == arr[j]\
    \ then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n      \
    \          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 0, n do\n        dp[i] = {}\n        for j = 0, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n - i + 1 do\n            local k = j + i - 1\n            if i ==\
    \ 1 then\n                dp[j][k] = 0\n            elseif i == 2 then\n     \
    \           dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n            else\n       \
    \         dp[j][k] = math.min(dp[j + 1][k] + (arr[j] ~= arr[k] and 1 or 0), dp[j][k\
    \ - 1] + (arr[j] ~= arr[k] and 1 or 0))\n            end\n        end\n    end\n\
    \    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i\
    \ = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n\
    \    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or\
    \ 1\n    end\n    for i = 3, n do\n        for j = 1, n - i + 1 do\n         \
    \   local k = j + i - 1\n            if arr[j] == arr[k] then\n              \
    \  dp[j][k] = dp[j + 1][k - 1]\n            else\n                dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n            dp[i][i +\
    \ 1] = 1\n        end\n    end\n    for l = 3, n do\n        for i = 1, n - l\
    \ + 1 do\n            local j = i + l - 1\n            if arr[i] == arr[j] then\n\
    \                dp[i][j] = dp[i + 1][j - 1]\n            else\n             \
    \   dp[i][j] = 1 + math.min(dp[i + 1][j], dp[i][j - 1])\n            end\n   \
    \     end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n - 1 do\n   \
    \     dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n    end\n    for k = 3,\
    \ n do\n        for i = 1, n - k + 1 do\n            local j = i + k - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n            local\
    \ j = i + k - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i\
    \ + 1][j], dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i > j then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j]\
    \ then\n          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for\
    \ i = 0, n do\n        dp[i] = {}\n        for j = 0, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        for j = 1, n do\n  \
    \          if i == j then\n                dp[i][j] = 0\n            elseif i\
    \ == j + 1 then\n                dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n    \
    \        else\n                dp[i][j] = math.min(\n                    dp[i\
    \ - 1][j] + (arr[i] ~= arr[i - 1] and 1 or 0),\n                    dp[i][j -\
    \ 1] + (arr[j] ~= arr[j - 1] and 1 or 0),\n                    dp[i - 1][j - 1]\
    \ + (arr[i] ~= arr[j] and 1 or 0)\n                )\n            end\n      \
    \  end\n    end\n    return dp[n][n]\nend", "    local n = #arr\n    local dp\
    \ = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n   \
    \         dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        for\
    \ j = 1, n - i do\n            if i == 1 then\n                dp[j][j + i] =\
    \ 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j] ==\
    \ arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        for j = 1, n - i do\n            if i == 1 then\n\
    \                dp[j][j + i] = 0\n            elseif i == 2 then\n          \
    \      dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n    \
    \            if arr[j] == arr[j + i] then\n                    dp[j][j + i] =\
    \ dp[j + 1][j + i - 1]\n                else\n                    dp[j][j + i]\
    \ = math.min(dp[j + 1][j + i], dp[j][j + i - 1]) + 1\n                end\n  \
    \          end\n        end\n    end\n    return dp[1][n]\nend", "    local n\
    \ = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n       \
    \ for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i =\
    \ 1, n do\n        for j = 1, n do\n            if i == j then\n             \
    \   dp[i][j] = 0\n            elseif i > j then\n                dp[i][j] = dp[j][i]\n\
    \            else\n                if arr[i] == arr[j] then\n                \
    \    dp[i][j] = dp[i + 1][j - 1]\n                else\n                    dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n                end\n          \
    \  end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        if arr[i] ~=\
    \ arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n    end\n    for\
    \ l = 3, n do\n        for i = 1, n - l + 1 do\n            local j = i + l -\
    \ 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j\
    \ - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n\
    \        for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i + 1 do\n            if i == 1 then\n\
    \                dp[j][j + i - 1] = 0\n            elseif i == 2 then\n      \
    \          dp[j][j + i - 1] = arr[j] == arr[j + i - 1] and 0 or 1\n          \
    \  else\n                if arr[j] == arr[j + i - 1] then\n                  \
    \  dp[j][j + i - 1] = dp[j + 1][j + i - 2]\n                else\n           \
    \         dp[j][j + i - 1] = math.min(dp[j + 1][j + i - 1], dp[j][j + i - 2])\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n    \
    \  elseif i == j - 1 then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n  \
    \    else\n        dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i\
    \ + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n      end\n    end\n  end\n  return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = math.huge\n    end\n  end\n  for\
    \ i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1]\
    \ = arr[i] == arr[i + 1] and 0 or 1\n  end\n  for l = 3, n do\n    for i = 1,\
    \ n - l + 1 do\n      local j = i + l - 1\n      if arr[i] == arr[j] then\n  \
    \      dp[i][j] = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n do\n            if i == j then\n     \
    \           dp[i][j] = 0\n            elseif j == i + 1 then\n               \
    \ dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n            else\n                dp[i][j]\
    \ = math.min(dp[i + 1][j] + (arr[i] ~= arr[j]), dp[i][j - 1] + (arr[i] ~= arr[j]))\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        if\
    \ arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n    end\n\
    \    for k = 3, n do\n        for i = 1, n - k + 1 do\n            local j = i\
    \ + k - 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i\
    \ + 1][j - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i\
    \ + 1][j], dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for i = 3, n do\n        for j = 1, n - i + 1 do\n            local\
    \ k = j + i - 1\n            if arr[j] == arr[k] then\n                dp[j][k]\
    \ = dp[j + 1][k - 1]\n            else\n                dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 2, n do\n        for j = 1, n - i + 1 do\n            local k = j + i -\
    \ 1\n            if arr[j] == arr[k] then\n                dp[j][k] = dp[j + 1][k\
    \ - 1]\n            else\n                dp[j][k] = math.min(dp[j + 1][k], dp[j][k\
    \ - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local len = #arr\n    local dp = {}\n    for i = 0, len do\n        dp[i] =\
    \ {}\n        for j = 0, len do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, len do\n        for j = 1, len - i + 1 do\n            local k\
    \ = j + i - 1\n            if j == k then\n                dp[j][k] = 0\n    \
    \        elseif j + 1 == k then\n                dp[j][k] = arr[j] == arr[k] and\
    \ 0 or 1\n            else\n                if arr[j] == arr[k] then\n       \
    \             dp[j][k] = dp[j + 1][k - 1]\n                else\n            \
    \        dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n               \
    \ end\n            end\n        end\n    end\n    return dp[1][len]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3,\
    \ n do\n        for i = 1, n - l + 1 do\n            local j = i + l - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n\
    \        for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i + 1 do\n            if i == 1 then\n\
    \                dp[j][j + i - 1] = 0\n            elseif i == 2 then\n      \
    \          dp[j][j + i - 1] = arr[j] == arr[j + i - 1] and 0 or 1\n          \
    \  else\n                if arr[j] == arr[j + i - 1] then\n                  \
    \  dp[j][j + i - 1] = dp[j + 1][j + i - 2]\n                else\n           \
    \         dp[j][j + i - 1] = math.min(dp[j + 1][j + i - 1], dp[j][j + i - 2])\
    \ + 1\n                end\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n  \
    \  end\n    for l = 3, n do\n        for i = 1, n - l + 1 do\n            local\
    \ j = i + l - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 0, n do\n    dp[i]\
    \ = {}\n    for j = 0, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n    \
    \  elseif i == j - 1 then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n  \
    \    else\n        dp[i][j] = math.min(dp[i + 1][j - 1] + (arr[i] == arr[j] and\
    \ 0 or 2), dp[i + 1][j] + 1, dp[i][j - 1] + 1)\n      end\n    end\n  end\n  return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n\
    \        dp[i] = {}\n        for j = 0, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  \
    \  end\n    for i = 3, n do\n        for j = 1, n - i + 1 do\n            local\
    \ k = j + i - 1\n            dp[j][k] = math.min(dp[j + 1][k] + (arr[j] ~= arr[k]\
    \ and 1 or 0),\n                                dp[j][k - 1] + (arr[j] ~= arr[k]\
    \ and 1 or 0))\n        end\n    end\n    return dp[1][n]\nend", "    local n\
    \ = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n       \
    \ for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n    for l =\
    \ 1, n do\n        for i = 1, n - l + 1 do\n            local j = i + l - 1\n\
    \            if i == j then\n                dp[i][j] = 0\n            elseif\
    \ arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n       \
    \     else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) +\
    \ 1\n            end\n        end\n    end\n    return dp[1][n]\nend", "  local\
    \ n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1,\
    \ n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] =\
    \ 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and\
    \ 1 or 0\n  end\n  for i = 3, n do\n    for j = 1, n - i + 1 do\n      local k\
    \ = j + i - 1\n      dp[j][k] = math.min(\n        dp[j + 1][k] + (arr[j] ~= arr[k]\
    \ and 1 or 0),\n        dp[j][k - 1] + (arr[j] ~= arr[k] and 1 or 0)\n      )\n\
    \    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp =\
    \ {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n     \
    \       dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i]\
    \ = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i\
    \ + 1] and 0 or 1\n    end\n    for i = n - 1, 1, -1 do\n        for j = i + 2,\
    \ n do\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i\
    \ + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j],\
    \ dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        for j = 1, n do\n            if i == j then\n  \
    \              dp[i][j] = 0\n            elseif i + 1 == j then\n            \
    \    dp[i][j] = arr[i] == arr[j] and 0 or 1\n            else\n              \
    \  dp[i][j] = math.min(dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 2),\n   \
    \                                 dp[i + 1][j] + 1,\n                        \
    \            dp[i][j - 1] + 1)\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n  \
    \  end\n    for i = n - 1, 1, -1 do\n        for j = i + 2, n do\n           \
    \ if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n    \
    \        else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1])\
    \ + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", "   \
    \ local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for l = 2, n do\n      \
    \  for i = 1, n - l + 1 do\n            local j = i + l - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = 1 + math.min(dp[i + 1][j], dp[i][j - 1])\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n do\n            if i == j then\n                dp[i][j]\
    \ = 0\n            elseif j == i + 1 then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i][j\
    \ - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "  local n\
    \ = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n\
    \ do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    for j = 1, n\
    \ do\n      if i == j then\n        dp[i][j] = 0\n      elseif i + 1 == j then\n\
    \        dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n      else\n        dp[i][j]\
    \ = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] ~=\
    \ arr[j] and 1 or 0))\n      end\n    end\n  end\n  return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i do\n            if i == 1 then\n \
    \               dp[j][j + i] = 0\n            elseif i == 2 then\n           \
    \     dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n     \
    \           dp[j][j + i] = math.min(dp[j + 1][j + i - 1] + (arr[j] == arr[j +\
    \ i] and 0 or 2),\n                                        dp[j + 1][j + i] +\
    \ 1,\n                                        dp[j][j + i - 1] + 1)\n        \
    \    end\n        end\n    end\n    return dp[1][n]\nend", "  local n = #arr\n\
    \  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n   \
    \   dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n\
    \  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n \
    \ end\n  for k = 3, n do\n    for i = 1, n - k + 1 do\n      local j = i + k -\
    \ 1\n      if arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j - 1]\n   \
    \   else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n      end\n\
    \    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp =\
    \ {}\n    for i = 0, n do\n        dp[i] = {}\n        for j = 0, n do\n     \
    \       dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        for j\
    \ = 1, n - i + 1 do\n            local k = j + i - 1\n            if i == 1 then\n\
    \                dp[j][k] = 0\n            elseif i == 2 then\n              \
    \  dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n            else\n                if\
    \ arr[j] == arr[k] then\n                    dp[j][k] = dp[j + 1][k - 1]\n   \
    \             else\n                    dp[j][k] = math.min(dp[j + 1][k], dp[j][k\
    \ - 1]) + 1\n                end\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n            dp[i][i +\
    \ 1] = 1\n        end\n    end\n    for k = 3, n do\n        for i = 1, n - k\
    \ + 1 do\n            local j = i + k - 1\n            if arr[i] == arr[j] then\n\
    \                dp[i][j] = dp[i + 1][j - 1]\n            else\n             \
    \   dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n   \
    \     end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i]\
    \ == arr[i + 1] and 0 or 1\n    end\n    for i = 3, n do\n        for j = 1, n\
    \ - i + 1 do\n            local k = j + i - 1\n            if arr[j] == arr[k]\
    \ then\n                dp[j][k] = dp[j + 1][k - 1]\n            else\n      \
    \          dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local len = #arr\n    local\
    \ dp = {}\n    for i = 1, len do\n        dp[i] = {}\n        for j = 1, len do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, len do\n     \
    \   for j = 1, len do\n            if i == j then\n                dp[i][j] =\
    \ 0\n            elseif i + 1 == j then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i][j\
    \ - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n\
    \            end\n        end\n    end\n    return dp[1][len]\nend", "    local\
    \ len = #arr\n    local min = len\n    for i = 1, len do\n        local change\
    \ = 0\n        for j = 1, len do\n            if arr[j] ~= arr[len - j + 1] then\n\
    \                change = change + 1\n            end\n        end\n        if\
    \ change < min then\n            min = change\n        end\n        table.insert(arr,\
    \ 1, table.remove(arr))\n    end\n    return min\nend", "  local n = #arr\n  local\
    \ dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j]\
    \ = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1,\
    \ n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for i\
    \ = n - 2, 1, -1 do\n    for j = i + 2, n do\n      dp[i][j] = math.min(dp[i +\
    \ 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n\
    \    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp =\
    \ {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n     \
    \       dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        for j\
    \ = 1, n do\n            if i == j then\n                dp[i][j] = 0\n      \
    \      elseif i + 1 == j then\n                dp[i][j] = arr[i] == arr[j] and\
    \ 0 or 1\n            else\n                dp[i][j] = math.min(dp[i + 1][j] +\
    \ 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n   \
    \         end\n        end\n    end\n    return dp[1][n]\nend", "    local n =\
    \ #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for\
    \ j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1,\
    \ n do\n        for j = 1, n do\n            if i == j then\n                dp[i][j]\
    \ = 0\n            elseif j == i + 1 then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or\
    \ 1))\n            end\n        end\n    end\n    return dp[1][n]\nend", "   \
    \ local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i do\n            if i == 1 then\n \
    \               dp[j][j + i] = 0\n            elseif i == 2 then\n           \
    \     dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n     \
    \           dp[j][j + i] = math.min(dp[j + 1][j + i] + 1, dp[j][j + i - 1] + 1,\
    \ dp[j + 1][j + i - 1] + (arr[j] == arr[j + i] and 0 or 1))\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local len = #arr\n    local\
    \ dp = {}\n    for i = 1, len do\n        dp[i] = {}\n        for j = 1, len do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, len do\n     \
    \   for j = 1, len do\n            if i == j then\n                dp[i][j] =\
    \ 0\n            elseif i > j then\n                dp[i][j] = dp[j][i]\n    \
    \        else\n                dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j]\
    \ + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n            end\n  \
    \      end\n    end\n    return dp[1][len]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n - i do\n            local k = j + i\n            if i == 1 then\n\
    \                dp[j][k] = 0\n            elseif i == 2 then\n              \
    \  dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n            else\n                dp[j][k]\
    \ = math.min(dp[j + 1][k] + 1, dp[j][k - 1] + 1, dp[j + 1][k - 1] + (arr[j] ~=\
    \ arr[k] and 1 or 0))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l =\
    \ 3, n do\n        for i = 1, n - l + 1 do\n            local j = i + l - 1\n\
    \            if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j\
    \ - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i do\n            if i == 1 then\n \
    \               dp[j][j + i] = 0\n            elseif i == 2 then\n           \
    \     dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n     \
    \           if arr[j] == arr[j + i] then\n                    dp[j][j + i] = dp[j\
    \ + 1][j + i - 1]\n                else\n                    dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i], dp[j][j + i - 1]) + 1\n                end\n            end\n \
    \       end\n    end\n    return dp[1][n]\nend", "    local len = #arr\n    local\
    \ dp = {}\n    for i = 0, len do\n        dp[i] = {}\n        for j = 0, len do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, len do\n     \
    \   for j = 1, len do\n            if i == j then\n                dp[i][j] =\
    \ 0\n            elseif i == j - 1 then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = arr[i] == arr[j]\
    \ and dp[i + 1][j - 1] or math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n         \
    \   end\n        end\n    end\n    return dp[1][len]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n        for j = 0,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n do\n            if i == j then\n                dp[i][j]\
    \ = 0\n            elseif i == j - 1 then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i][j\
    \ - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n     \
    \   for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n - i + 1 do\n            local k = j + i - 1\n\
    \            if i == 1 then\n                dp[j][k] = 0\n            elseif\
    \ i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n      \
    \      else\n                dp[j][k] = math.min(dp[j + 1][k] + 1, dp[j][k - 1]\
    \ + 1, dp[j + 1][k - 1] + (arr[j] ~= arr[k] and 1 or 0))\n            end\n  \
    \      end\n    end\n    return dp[1][n]\nend", "  local n = #arr\n  local dp\
    \ = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j]\
    \ = 0\n    end\n  end\n  for i = 1, n do\n    for j = 1, n do\n      if i == j\
    \ then\n        dp[i][j] = 0\n      elseif i > j then\n        dp[i][j] = dp[j][i]\n\
    \      else\n        if arr[i] == arr[j] then\n          dp[i][j] = dp[i + 1][j\
    \ - 1]\n        else\n          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1])\
    \ + 1\n        end\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n do\n            if i == j then\n           \
    \     dp[i][j] = 0\n            elseif i + 1 == j then\n                dp[i][j]\
    \ = arr[i] == arr[j] and 0 or 1\n            else\n                dp[i][j] =\
    \ arr[i] == arr[j] and dp[i + 1][j - 1] or 1 + math.min(dp[i + 1][j], dp[i][j\
    \ - 1])\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3,\
    \ n do\n        for i = 1, n - l + 1 do\n            local j = i + l - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for i = 3, n do\n        for j = 1, n - i + 1 do\n            local\
    \ k = j + i - 1\n            if arr[j] == arr[k] then\n                dp[j][k]\
    \ = dp[j + 1][k - 1]\n            else\n                dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n  \
    \  end\n    for i = n - 1, 1, -1 do\n        for j = i + 2, n do\n           \
    \ if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n    \
    \        else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1])\
    \ + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", "   \
    \ local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3,\
    \ n do\n        for i = 1, n - l + 1 do\n            local j = i + l - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \ local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for\
    \ j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    for\
    \ j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif i + 1\
    \ == j then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n      else\n    \
    \    dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1]\
    \ + (arr[i] == arr[j] and 0 or 1))\n      end\n    end\n  end\n  return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i]\
    \ = {}\n        for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        for j = 1, n - i + 1 do\n            local k = j\
    \ + i - 1\n            if i == 1 then\n                dp[j][k] = 0\n        \
    \    elseif i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or\
    \ 0\n            else\n                dp[j][k] = math.min(dp[j + 1][k] + 1, dp[j][k\
    \ - 1] + 1, dp[j + 1][k - 1] + (arr[j] ~= arr[k] and 1 or 0))\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "  local n = #arr\n  local dp\
    \ = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j]\
    \ = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1,\
    \ n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for i\
    \ = 3, n do\n    for j = 1, n - i + 1 do\n      local k = j + i - 1\n      if\
    \ arr[j] == arr[k] then\n        dp[j][k] = dp[j + 1][k - 1]\n      else\n   \
    \     dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "    -- TODO: implement this function\n    return\
    \ 0\nend", "  local len = #arr\n  local dp = {}\n  for i = 0, len do\n    dp[i]\
    \ = {}\n    for j = 0, len do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ len do\n    for j = 1, len - i + 1 do\n      local k = j + i - 1\n      if i\
    \ == 1 then\n        dp[j][k] = 0\n      elseif i == 2 then\n        dp[j][k]\
    \ = arr[j] ~= arr[k] and 1 or 0\n      else\n        if arr[j] == arr[k] then\n\
    \          dp[j][k] = dp[j + 1][k - 1]\n        else\n          dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n        end\n      end\n    end\n  end\n  return\
    \ dp[1][len]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for\
    \ i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n  \
    \  end\n    for i = 3, n do\n        for j = 1, n - i + 1 do\n            local\
    \ k = j + i - 1\n            if arr[j] == arr[k] then\n                dp[j][k]\
    \ = dp[j + 1][k - 1]\n            else\n                dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n\
    \        dp[i] = {}\n        for j = 0, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n - i + 1 do\n     \
    \       local k = j + i - 1\n            if i == 1 then\n                dp[j][k]\
    \ = 0\n            elseif i == 2 then\n                dp[j][k] = arr[j] ~= arr[k]\
    \ and 1 or 0\n            else\n                dp[j][k] = math.min(dp[j + 1][k],\
    \ dp[j][k - 1]) + (arr[j] ~= arr[k] and 1 or 0)\n            end\n        end\n\
    \    end\n    return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for\
    \ i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n\
    \  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or\
    \ 0\n  end\n  for k = 3, n do\n    for i = 1, n - k + 1 do\n      local j = i\
    \ + k - 1\n      if arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j - 1]\n\
    \      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n   \
    \   end\n    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i]\
    \ == arr[i + 1] and 0 or 1\n    end\n    for l = 3, n do\n        for i = 1, n\
    \ - l + 1 do\n            local j = i + l - 1\n            if arr[i] == arr[j]\
    \ then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n      \
    \          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n - 1 do\n   \
    \     dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n    end\n    for k = 3,\
    \ n do\n        for i = 1, n - k + 1 do\n            local j = i + k - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local len = #arr\n    local dp = {}\n    for i = 1, len do\n        dp[i]\
    \ = {}\n        for j = 1, len do\n            dp[i][j] = 0\n        end\n   \
    \ end\n    for i = 1, len do\n        dp[i][i] = 0\n    end\n    for i = 1, len\
    \ - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n  \
    \  for i = 3, len do\n        for j = 1, len - i + 1 do\n            local k =\
    \ j + i - 1\n            if arr[j] == arr[k] then\n                dp[j][k] =\
    \ dp[j + 1][k - 1]\n            else\n                dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][len]\nend", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n\
    \        dp[i] = {}\n        for j = 0, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n - i + 1 do\n     \
    \       local k = j + i - 1\n            if j == k then\n                dp[j][k]\
    \ = 0\n            elseif j + 1 == k then\n                dp[j][k] = arr[j] ==\
    \ arr[k] and 0 or 1\n            else\n                dp[j][k] = math.min(dp[j][k\
    \ - 1] + 1, dp[j + 1][k] + 1, dp[j + 1][k - 1] + (arr[j] == arr[k] and 0 or 1))\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n     \
    \   for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n do\n            if i == j then\n           \
    \     dp[i][j] = 0\n            elseif i == j - 1 then\n                dp[i][j]\
    \ = arr[i] == arr[j] and 0 or 1\n            else\n                dp[i][j] =\
    \ math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j]\
    \ and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3,\
    \ n do\n        for i = 1, n - l + 1 do\n            local j = i + l - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i do\n            local k = j + i\n\
    \            if i == 1 then\n                dp[j][k] = 0\n            elseif\
    \ i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n      \
    \      else\n                dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) +\
    \ (arr[j] ~= arr[k] and 1 or 0)\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n\
    \        dp[i] = {}\n        for j = 0, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n do\n            if\
    \ i == j then\n                dp[i][j] = 0\n            elseif i == j - 1 then\n\
    \                dp[i][j] = arr[i] == arr[j] and 0 or 1\n            else\n  \
    \              dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i +\
    \ 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n            end\n        end\n \
    \   end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n \
    \   for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n           \
    \ dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] =\
    \ 0\n    end\n    for i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n\
    \            dp[i][i + 1] = 1\n        end\n    end\n    for l = 3, n do\n   \
    \     for i = 1, n - l + 1 do\n            local j = i + l - 1\n            if\
    \ arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n       \
    \     else\n                dp[i][j] = 1 + math.min(dp[i + 1][j], dp[i][j - 1])\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n do\n            if i == j then\n           \
    \     dp[i][j] = 0\n            elseif i + 1 == j then\n                dp[i][j]\
    \ = arr[i] ~= arr[j] and 1 or 0\n            else\n                dp[i][j] =\
    \ math.min(dp[i + 1][j] + (arr[i] ~= arr[i + 1] and 1 or 0),\n               \
    \                     dp[i][j - 1] + (arr[j] ~= arr[j - 1] and 1 or 0))\n    \
    \        end\n        end\n    end\n    return dp[1][n]\nend", "    local n =\
    \ #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for\
    \ j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1,\
    \ n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        if arr[i]\
    \ ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n    end\n   \
    \ for l = 3, n do\n        for i = 1, n - l + 1 do\n            local j = i +\
    \ l - 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i\
    \ + 1][j - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i\
    \ + 1][j], dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i > j then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j]\
    \ then\n          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "    local len = #arr\n    local min_changes\
    \ = 0\n    for i = 1, len / 2 do\n        if arr[i] ~= arr[len - i + 1] then\n\
    \            min_changes = min_changes + 1\n        end\n    end\n    return min_changes\n\
    end", "  local len = #arr\n  local i = 1\n  local j = len\n  local count = 0\n\
    \  while i < j do\n    if arr[i] ~= arr[j] then\n      count = count + 1\n   \
    \ end\n    i = i + 1\n    j = j - 1\n  end\n  return count\nend", "    local n\
    \ = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n       \
    \ for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n    for i =\
    \ 1, n do\n        for j = 1, n - i + 1 do\n            local k = j + i - 1\n\
    \            if i == 1 then\n                dp[j][k] = 0\n            elseif\
    \ i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n      \
    \      else\n                dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) +\
    \ (arr[j] ~= arr[k] and 1 or 0)\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local len = #arr\n    local dp = {}\n    for i = 1, len\
    \ do\n        dp[i] = {}\n        for j = 1, len do\n            dp[i][j] = 0\n\
    \        end\n    end\n    for i = 1, len do\n        dp[i][i] = 0\n    end\n\
    \    for i = 1, len - 1 do\n        if arr[i] ~= arr[i + 1] then\n           \
    \ dp[i][i + 1] = 1\n        end\n    end\n    for i = 3, len do\n        for j\
    \ = 1, len - i + 1 do\n            local k = j + i - 1\n            if arr[j]\
    \ == arr[k] then\n                dp[j][k] = dp[j + 1][k - 1]\n            else\n\
    \                dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][len]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1]\
    \ = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for i = n - 1, 1, -1 do\n  \
    \      for j = i + 2, n do\n            if arr[i] == arr[j] then\n           \
    \     dp[i][j] = dp[i + 1][j - 1]\n            else\n                dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n \
    \   end\n    return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for\
    \ i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n\
    \  end\n  for i = 1, n do\n    for j = 1, n do\n      if i == j then\n       \
    \ dp[i][j] = 0\n      elseif i + 1 == j then\n        dp[i][j] = arr[i] ~= arr[j]\
    \ and 1 or 0\n      else\n        dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j\
    \ - 1] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n      end\n   \
    \ end\n  end\n  return dp[1][n]\nend", "    local len = #arr\n    local dp = {}\n\
    \    for i = 1, len do\n        dp[i] = {}\n        for j = 1, len do\n      \
    \      dp[i][j] = 0\n        end\n    end\n    for i = 1, len do\n        for\
    \ j = 1, len do\n            if i == j then\n                dp[i][j] = 0\n  \
    \          elseif j == i + 1 then\n                dp[i][j] = arr[i] == arr[j]\
    \ and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i][j -\
    \ 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n\
    \            end\n        end\n    end\n    return dp[1][len]\nend", "  local\
    \ n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1,\
    \ n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] =\
    \ 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and\
    \ 1 or 0\n  end\n  for k = 3, n do\n    for i = 1, n - k + 1 do\n      local j\
    \ = i + k - 1\n      if arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j\
    \ - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) +\
    \ 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n - i do\n            if i == 1 then\n                dp[j][j\
    \ + i] = 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j]\
    \ == arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for l = 3, n do\n        for i = 1, n - l + 1 do\n            local\
    \ j = i + l - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i\
    \ + 1][j], dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 0, n do\n    dp[i] = {}\n\
    \    for j = 0, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i == j - 1 then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n      else\n\
    \        dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j -\
    \ 1] + (arr[i] == arr[j] and 0 or 1))\n      end\n    end\n  end\n  return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 0, n do\n    dp[i] = {}\n\
    \    for j = 0, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i > j then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j]\
    \ then\n          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i =\
    \ 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n\
    \  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n  \
    \  dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for k = 3, n do\n\
    \    for i = 1, n - k + 1 do\n      local j = i + k - 1\n      if arr[i] == arr[j]\
    \ then\n        dp[i][j] = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n            local\
    \ j = i + k - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i]\
    \ ~= arr[i + 1] and 1 or 0\n  end\n  for l = 3, n do\n    for i = 1, n - l + 1\
    \ do\n      local j = i + l - 1\n      if arr[i] == arr[j] then\n        dp[i][j]\
    \ = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "  local n =\
    \ #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n\
    \      dp[i][j] = math.huge\n    end\n  end\n  for i = 1, n do\n    dp[i][i] =\
    \ 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] == arr[i + 1] and\
    \ 0 or 1\n  end\n  for l = 3, n do\n    for i = 1, n - l + 1 do\n      local j\
    \ = i + l - 1\n      if arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j\
    \ - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) +\
    \ 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1]\
    \ = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for k = 3, n do\n        for\
    \ i = 1, n - k + 1 do\n            local j = i + k - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "  local len = #arr\n\
    \  local dp = {}\n  for i = 1, len do\n    dp[i] = {}\n    for j = 1, len do\n\
    \      dp[i][j] = 0\n    end\n  end\n  for i = 1, len do\n    dp[i][i] = 0\n \
    \ end\n  for i = 1, len - 1 do\n    if arr[i] ~= arr[i + 1] then\n      dp[i][i\
    \ + 1] = 1\n    end\n  end\n  for l = 3, len do\n    for i = 1, len - l + 1 do\n\
    \      local j = i + l - 1\n      if arr[i] == arr[j] then\n        dp[i][j] =\
    \ dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n      end\n    end\n  end\n  return dp[1][len]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n     \
    \   for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n - i + 1 do\n            local k = j + i - 1\n\
    \            if i == 1 then\n                dp[j][k] = 0\n            elseif\
    \ i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n      \
    \      else\n                dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) +\
    \ (arr[j] ~= arr[k] and 1 or 0)\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n do\n            if\
    \ i == j then\n                dp[i][j] = 0\n            elseif j == i + 1 then\n\
    \                dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n            else\n  \
    \              dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i +\
    \ 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n            end\n        end\n \
    \   end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n \
    \   for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n           \
    \ dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] =\
    \ 0\n    end\n    for i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n\
    \            dp[i][i + 1] = 1\n        end\n    end\n    for l = 3, n do\n   \
    \     for i = 1, n - l + 1 do\n            local j = i + l - 1\n            if\
    \ arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n       \
    \     else\n                dp[i][j] = 1 + math.min(dp[i + 1][j], dp[i][j - 1])\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i\
    \ + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for k = 3, n do\n     \
    \   for i = 1, n - k + 1 do\n            local j = i + k - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1]\
    \ = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for i = 3, n do\n        for\
    \ j = 1, n - i + 1 do\n            local k = j + i - 1\n            if arr[j]\
    \ == arr[k] then\n                dp[j][k] = dp[j + 1][k - 1]\n            else\n\
    \                dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n - i do\n            if i == 1 then\n                dp[j][j\
    \ + i] = 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j]\
    \ == arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n            local\
    \ j = i + k - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n - i do\n         \
    \   if i == 1 then\n                dp[j][j + i] = 0\n            elseif i ==\
    \ 2 then\n                dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n   \
    \         else\n                dp[j][j + i] = math.min(dp[j + 1][j + i] + 1,\
    \ dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j + i] and 0 or\
    \ 1))\n            end\n        end\n    end\n    return dp[1][n]\nend", "   \
    \ local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n - i do\n            if i == 1 then\n \
    \               dp[j][j + i] = 0\n            elseif i == 2 then\n           \
    \     dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n     \
    \           dp[j][j + i] = math.min(dp[j + 1][j + i] + 1, dp[j][j + i - 1] + 1,\
    \ dp[j + 1][j + i - 1] + (arr[j] == arr[j + i] and 0 or 1))\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "  local n = #arr\n  local dp\
    \ = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j]\
    \ = 0\n    end\n  end\n  for i = 1, n do\n    for j = 1, n do\n      if i == j\
    \ then\n        dp[i][j] = 0\n      elseif j == i + 1 then\n        dp[i][j] =\
    \ arr[i] ~= arr[j] and 1 or 0\n      else\n        dp[i][j] = math.min(dp[i +\
    \ 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n\
    \      end\n    end\n  end\n  return dp[1][n]\nend", "  local n = #arr\n  local\
    \ dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j]\
    \ = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1,\
    \ n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for l\
    \ = 3, n do\n    for i = 1, n - l + 1 do\n      j = i + l - 1\n      dp[i][j]\
    \ = math.min(dp[i + 1][j] + (arr[i] ~= arr[j] and 1 or 0), dp[i][j - 1] + (arr[i]\
    \ ~= arr[j] and 1 or 0))\n    end\n  end\n  return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i\
    \ + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3, n do\n     \
    \   for i = 1, n - l + 1 do\n            local j = i + l - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        if arr[i] ~=\
    \ arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n    end\n    for\
    \ l = 3, n do\n        for i = 1, n - l + 1 do\n            local j = i + l -\
    \ 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j\
    \ - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i + 1][j],\
    \ dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~=\
    \ arr[i + 1] and 1 or 0\n  end\n  for i = n - 1, 1, -1 do\n    for j = i + 2,\
    \ n do\n      dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j\
    \ - 1] + (arr[i] ~= arr[j] and 1 or 0))\n    end\n  end\n  return dp[1][n]\nend",
  "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j\
    \ = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    for j\
    \ = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif i + 1 ==\
    \ j then\n        dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n      else\n       \
    \ dp[i][j] = math.min(\n          dp[i + 1][j] + (arr[i] ~= arr[i + 1] and 1 or\
    \ 0),\n          dp[i][j - 1] + (arr[j] ~= arr[j - 1] and 1 or 0)\n        )\n\
    \      end\n    end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n   \
    \ local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n\
    \ do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n  \
    \      for j = 1, n - i do\n            if i == 1 then\n                dp[j][j\
    \ + i] = 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j]\
    \ == arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "\tlocal n = #arr\n\tlocal dp = {}\n\tfor i = 1, n do\n\t\tdp[i] = {}\n\t\
    \tfor j = 1, n do\n\t\t\tdp[i][j] = 0\n\t\tend\n\tend\n\tfor i = 1, n do\n\t\t\
    dp[i][i] = 0\n\tend\n\tfor i = 1, n - 1 do\n\t\tif arr[i] ~= arr[i + 1] then\n\
    \t\t\tdp[i][i + 1] = 1\n\t\tend\n\tend\n\tfor i = 3, n do\n\t\tfor j = 1, n -\
    \ i + 1 do\n\t\t\tlocal k = j + i - 1\n\t\t\tif arr[j] == arr[k] then\n\t\t\t\t\
    dp[j][k] = dp[j + 1][k - 1]\n\t\t\telse\n\t\t\t\tdp[j][k] = math.min(dp[j + 1][k],\
    \ dp[j][k - 1]) + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn dp[1][n]\nend", "   \
    \ local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for i = n\
    \ - 1, 1, -1 do\n        for j = i + 2, n do\n            if arr[i] == arr[j]\
    \ then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n      \
    \          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i]\
    \ == arr[i + 1] and 0 or 1\n    end\n    for i = 3, n do\n        for j = 1, n\
    \ - i + 1 do\n            local k = j + i - 1\n            if arr[j] == arr[k]\
    \ then\n                dp[j][k] = dp[j + 1][k - 1]\n            else\n      \
    \          dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = n - 1, 1, -1 do\n\
    \        for j = i + 1, n do\n            if arr[i] == arr[j] then\n         \
    \       dp[i][j] = dp[i + 1][j - 1]\n            else\n                dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n \
    \   end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n \
    \   for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n           \
    \ dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        for j = 1,\
    \ n do\n            if i == j then\n                dp[i][j] = 0\n           \
    \ elseif i + 1 == j then\n                dp[i][j] = arr[i] == arr[j] and 0 or\
    \ 1\n            else\n                dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i\
    \ + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n           \
    \ end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n do\n            if i == j then\n                dp[i][j]\
    \ = 0\n            elseif i + 1 == j then\n                dp[i][j] = arr[i] ==\
    \ arr[j] and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or\
    \ 1))\n            end\n        end\n    end\n    return dp[1][n]\nend", "   \
    \ local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n do\n            if i == j then\n     \
    \           dp[i][j] = 0\n            elseif i + 1 == j then\n               \
    \ dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n            else\n                dp[i][j]\
    \ = math.min(dp[i + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] ~=\
    \ arr[j] and 1 or 0))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i > j then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j]\
    \ then\n          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i =\
    \ 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n\
    \  end\n  for i = 1, n do\n    for j = 1, n do\n      if i == j then\n       \
    \ dp[i][j] = 0\n      elseif j == i + 1 then\n        dp[i][j] = arr[i] ~= arr[j]\
    \ and 1 or 0\n      else\n        dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i +\
    \ 1][j] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n      end\n  \
    \  end\n  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n\
    \    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n          \
    \  dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        for j = 1,\
    \ n - i do\n            if i == 1 then\n                dp[j][j + i] = 0\n   \
    \         elseif i == 2 then\n                dp[j][j + i] = arr[j] == arr[j +\
    \ i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i > j then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j]\
    \ then\n          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j]\
    \ = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i =\
    \ 0, n do\n    dp[i] = {}\n    for j = 0, n do\n      dp[i][j] = 0\n    end\n\
    \  end\n  for i = 1, n do\n    for j = 1, n do\n      if i == j then\n       \
    \ dp[i][j] = 0\n      elseif i > j then\n        dp[i][j] = dp[j][i]\n      else\n\
    \        if arr[i] == arr[j] then\n          dp[i][j] = dp[i + 1][j - 1]\n   \
    \     else\n          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n  \
    \      end\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n =\
    \ #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for\
    \ j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1,\
    \ n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i\
    \ + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3, n do\n     \
    \   for i = 1, n - l + 1 do\n            local j = i + l - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1]\
    \ = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for i = n - 1, 1, -1 do\n  \
    \      for j = i + 2, n do\n            dp[i][j] = arr[i] == arr[j] and dp[i +\
    \ 1][j - 1] or math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n        end\n    end\n\
    \    return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n\
    \ do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n\
    \  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i\
    \ + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for i = n - 1, 1, -1 do\n \
    \   for j = i + 2, n do\n      dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j -\
    \ 1] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n    end\n  end\n\
    \  return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i =\
    \ 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] =\
    \ 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n\
    \    for i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n            dp[i][i\
    \ + 1] = 1\n        end\n    end\n    for len = 3, n do\n        for i = 1, n\
    \ - len + 1 do\n            local j = i + len - 1\n            if arr[i] == arr[j]\
    \ then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n      \
    \          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n do\n            if i == j then\n                dp[i][j] = 0\n\
    \            elseif j == i + 1 then\n                dp[i][j] = arr[i] == arr[j]\
    \ and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i][j -\
    \ 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        if\
    \ arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n    end\n\
    \    for len = 3, n do\n        for i = 1, n - len + 1 do\n            local j\
    \ = i + len - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i]\
    \ ~= arr[i + 1] and 1 or 0\n  end\n  for i = 3, n do\n    for j = 1, n - i + 1\
    \ do\n      dp[j][j + i - 1] = math.min(dp[j + 1][j + i - 1] + (arr[j] ~= arr[j\
    \ + i - 1] and 1 or 0),\n                                  dp[j][j + i - 2] +\
    \ (arr[j] ~= arr[j + i - 2] and 1 or 0))\n    end\n  end\n  return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i == j - 1 then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n      else\n\
    \        dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j -\
    \ 1] + (arr[i] == arr[j] and 0 or 1))\n      end\n    end\n  end\n  return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for len\
    \ = 3, n do\n        for i = 1, n - len + 1 do\n            local j = i + len\
    \ - 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i +\
    \ 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j],\
    \ dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 0, n do\n    dp[i] = {}\n\
    \    for j = 0, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n - i + 1 do\n      local k = j + i - 1\n      if i == 1 then\n\
    \        dp[j][k] = 0\n      elseif i == 2 then\n        dp[j][k] = arr[j] ~=\
    \ arr[k] and 1 or 0\n      else\n        dp[j][k] = math.min(dp[j + 1][k] + (arr[j]\
    \ ~= arr[k] and 1 or 0),\n                             dp[j][k - 1] + (arr[j]\
    \ ~= arr[k] and 1 or 0))\n      end\n    end\n  end\n  return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for k = 3,\
    \ n do\n        for i = 1, n - k + 1 do\n            local j = i + k - 1\n   \
    \         if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \ local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for\
    \ j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i]\
    \ = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and\
    \ 1 or 0\n  end\n  for i = n - 1, 1, -1 do\n    for j = i + 2, n do\n      if\
    \ arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j - 1]\n      else\n   \
    \     dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for\
    \ i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n\
    \    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or\
    \ 1\n    end\n    for i = n - 1, 1, -1 do\n        for j = i + 2, n do\n     \
    \       if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n\
    \            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j -\
    \ 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \ local n = #arr\n  local dp = {}\n  for i = 0, n do\n    dp[i] = {}\n    for\
    \ j = 0, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    for\
    \ j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif i > j\
    \ then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j] then\n\
    \          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n  end\n  return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n    \
    \  elseif i == j - 1 then\n        dp[i][j] = arr[i] == arr[j] and 0 or 1\n  \
    \    else\n        dp[i][j] = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i\
    \ + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n      end\n    end\n  end\n  return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n\
    \        dp[i] = {}\n        for j = 0, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n - i + 1 do\n     \
    \       local k = j + i - 1\n            if i == 1 then\n                dp[j][k]\
    \ = 0\n            elseif i == 2 then\n                dp[j][k] = arr[j] ~= arr[k]\
    \ and 1 or 0\n            else\n                dp[j][k] = math.min(dp[j + 1][k],\
    \ dp[j][k - 1]) + (arr[j] ~= arr[k] and 1 or 0)\n            end\n        end\n\
    \    end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n\
    \    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n          \
    \  dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] =\
    \ 0\n    end\n    for i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n\
    \            dp[i][i + 1] = 1\n        end\n    end\n    for k = 3, n do\n   \
    \     for i = 1, n - k + 1 do\n            local j = i + k - 1\n            if\
    \ arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n       \
    \     else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) +\
    \ 1\n            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i\
    \ + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for l = 3, n do\n     \
    \   for i = 1, n - l + 1 do\n            local j = i + l - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n do\n            if i == j then\n                dp[i][j]\
    \ = 0\n            elseif j == i + 1 then\n                dp[i][j] = dp[i][j]\
    \ + math.abs(arr[i] - arr[j])\n            else\n                dp[i][j] = math.min(dp[i][j\
    \ - 1] + math.abs(arr[j] - arr[j - 1]), dp[i + 1][j] + math.abs(arr[i] - arr[i\
    \ + 1]))\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for i = 3, n do\n        for j = 1, n - i + 1 do\n            local\
    \ k = j + i - 1\n            if arr[j] == arr[k] then\n                dp[j][k]\
    \ = dp[j + 1][k - 1]\n            else\n                dp[j][k] = math.min(dp[j\
    \ + 1][k], dp[j][k - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i]\
    \ ~= arr[i + 1] and 1 or 0\n  end\n  for l = 3, n do\n    for i = 1, n - l + 1\
    \ do\n      local j = i + l - 1\n      if arr[i] == arr[j] then\n        dp[i][j]\
    \ = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n\
    \ = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n       \
    \ for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i =\
    \ 1, n do\n        for j = 1, n - i do\n            if i == 1 then\n         \
    \       dp[j][j + i] = 0\n            elseif i == 2 then\n                dp[j][j\
    \ + i] = arr[j] == arr[j + i] and 0 or 1\n            else\n                dp[j][j\
    \ + i] = math.min(dp[j + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i\
    \ - 1] + (arr[j] == arr[j + i] and 0 or 1))\n            end\n        end\n  \
    \  end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n  \
    \  for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        for j = 1, n - i do\n\
    \            if i == 1 then\n                dp[j][j + i] = 0\n            elseif\
    \ i == 2 then\n                dp[j][j + i] = arr[j] == arr[j + i] and 0 or 1\n\
    \            else\n                dp[j][j + i] = math.min(dp[j + 1][j + i] +\
    \ 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j + i] and 0\
    \ or 1))\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \ local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n    for\
    \ j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n    for\
    \ j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif i > j\
    \ then\n        dp[i][j] = dp[j][i]\n      else\n        if arr[i] == arr[j] then\n\
    \          dp[i][j] = dp[i + 1][j - 1]\n        else\n          dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n        end\n      end\n    end\n  end\n  return\
    \ dp[1][n]\nend", "    local len = #arr\n    local dp = {}\n    for i = 0, len\
    \ do\n        dp[i] = {}\n        for j = 0, len do\n            dp[i][j] = 0\n\
    \        end\n    end\n    for i = 1, len do\n        for j = 1, len - i + 1 do\n\
    \            if i == 1 then\n                dp[j][j + i - 1] = 0\n          \
    \  elseif i == 2 then\n                dp[j][j + i - 1] = arr[j] == arr[j + i\
    \ - 1] and 0 or 1\n            else\n                if arr[j] == arr[j + i -\
    \ 1] then\n                    dp[j][j + i - 1] = dp[j + 1][j + i - 2]\n     \
    \           else\n                    dp[j][j + i - 1] = math.min(dp[j + 1][j\
    \ + i - 1], dp[j][j + i - 2]) + 1\n                end\n            end\n    \
    \    end\n    end\n    return dp[1][len]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n do\n            if i == j then\n                dp[i][j] = 0\n\
    \            elseif j == i + 1 then\n                dp[i][j] = arr[i] == arr[j]\
    \ and 0 or 1\n            else\n                dp[i][j] = math.min(dp[i + 1][j\
    \ - 1] + (arr[i] == arr[j] and 0 or 2), dp[i + 1][j] + 1, dp[i][j - 1] + 1)\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n     \
    \   for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n - i do\n            local k = j + i\n      \
    \      if i == 1 then\n                dp[j][k] = 0\n            elseif i == 2\
    \ then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n            else\n\
    \                dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + (arr[j] ~=\
    \ arr[k] and 1 or 0)\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for k =\
    \ 3, n do\n        for i = 1, n - k + 1 do\n            local j = i + k - 1\n\
    \            if arr[i] == arr[j] then\n                dp[i][j] = dp[i + 1][j\
    \ - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = math.huge\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for len\
    \ = 3, n do\n        for i = 1, n - len + 1 do\n            local j = i + len\
    \ - 1\n            if arr[i] == arr[j] then\n                dp[i][j] = dp[i +\
    \ 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i + 1][j],\
    \ dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for l = 3, n do\n        for i = 1, n - l + 1 do\n            local\
    \ j = i + l - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i\
    \ + 1][j], dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or\
    \ 0\n    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n         \
    \   local j = i + k - 1\n            if arr[i] == arr[j] then\n              \
    \  dp[i][j] = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i]\
    \ = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1,\
    \ n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i]\
    \ ~= arr[i + 1] and 1 or 0\n  end\n  for l = 3, n do\n    for i = 1, n - l + 1\
    \ do\n      local j = i + l - 1\n      if arr[i] == arr[j] then\n        dp[i][j]\
    \ = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n\
    \ = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n       \
    \ for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i =\
    \ 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i\
    \ + 1] = arr[i] == arr[i + 1] and 0 or 1\n    end\n    for k = 3, n do\n     \
    \   for i = 1, n - k + 1 do\n            local j = i + k - 1\n            if arr[i]\
    \ == arr[j] then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n\
    \                dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n       \
    \     end\n        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n\
    \    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n        for j = 0,\
    \ n do\n            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n\
    \        for j = 1, n - i + 1 do\n            local k = j + i - 1\n          \
    \  if i == 1 then\n                dp[j][k] = 0\n            elseif i == 2 then\n\
    \                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n            else\n  \
    \              dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + (arr[j] ~= arr[k]\
    \ and 1 or 0)\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n do\n            if i == j then\n     \
    \           dp[i][j] = 0\n            elseif i > j then\n                dp[i][j]\
    \ = dp[j][i]\n            else\n                if arr[i] == arr[j] then\n   \
    \                 dp[i][j] = dp[i + 1][j - 1]\n                else\n        \
    \            dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n           \
    \     end\n            end\n        end\n    end\n    return dp[1][n]\nend", " \
    \   local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for len = 3, n do\n        for i = 1, n - len + 1 do\n         \
    \   local j = i + len - 1\n            if arr[i] == arr[j] then\n            \
    \    dp[i][j] = dp[i + 1][j - 1]\n            else\n                dp[i][j] =\
    \ 1 + math.min(dp[i + 1][j], dp[i][j - 1])\n            end\n        end\n   \
    \ end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n   \
    \ for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        for j = 1, n do\n  \
    \          if i == j then\n                dp[i][j] = 0\n            elseif i\
    \ + 1 == j then\n                dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n    \
    \        else\n                dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j -\
    \ 1] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n do\n            if i == j then\n                dp[i][j] = 0\n\
    \            elseif i > j then\n                dp[i][j] = dp[j][i]\n        \
    \    else\n                if arr[i] == arr[j] then\n                    dp[i][j]\
    \ = dp[i + 1][j - 1]\n                else\n                    dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n                end\n            end\n        end\n\
    \    end\n    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n\
    \    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n          \
    \  dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] =\
    \ 0\n    end\n    for i = 2, n do\n        for j = 1, n - i + 1 do\n         \
    \   if arr[j] == arr[j + i - 1] then\n                dp[j][j + i - 1] = dp[j\
    \ + 1][j + i - 2]\n            else\n                dp[j][j + i - 1] = math.min(dp[j\
    \ + 1][j + i - 1], dp[j][j + i - 2]) + 1\n            end\n        end\n    end\n\
    \    return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i\
    \ = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        for j = 1, n do\n  \
    \          if i == j then\n                dp[i][j] = 0\n            elseif i\
    \ + 1 == j then\n                dp[i][j] = arr[i] == arr[j] and 0 or 1\n    \
    \        else\n                dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j -\
    \ 1] + 1, dp[i + 1][j - 1] + (arr[i] == arr[j] and 0 or 1))\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "  local n = #arr\n  local dp\
    \ = {}\n  for i = 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j]\
    \ = 0\n    end\n  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1,\
    \ n - 1 do\n    dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for l\
    \ = 3, n do\n    for i = 1, n - l + 1 do\n      local j = i + l - 1\n      if\
    \ arr[i] == arr[j] then\n        dp[i][j] = dp[i + 1][j - 1]\n      else\n   \
    \     dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i =\
    \ 1, n do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n\
    \  end\n  for i = 1, n do\n    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n  \
    \  dp[i][i + 1] = arr[i] ~= arr[i + 1] and 1 or 0\n  end\n  for l = 3, n do\n\
    \    for i = 1, n - l + 1 do\n      local j = i + l - 1\n      if arr[i] == arr[j]\
    \ then\n        dp[i][j] = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        for j = 1, n do\n            if i == j then\n     \
    \           dp[i][j] = 0\n            elseif i + 1 == j then\n               \
    \ dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n            else\n                dp[i][j]\
    \ = math.min(dp[i][j - 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] ~=\
    \ arr[j] and 1 or 0))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i]\
    \ = {}\n        for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        for j = 1, n - i + 1 do\n            local k = j\
    \ + i - 1\n            if i == 1 then\n                dp[j][k] = 0\n        \
    \    elseif i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or\
    \ 0\n            else\n                dp[j][k] = math.min(dp[j + 1][k], dp[j][k\
    \ - 1]) + (arr[j] ~= arr[k] and 1 or 0)\n            end\n        end\n    end\n\
    \    return dp[1][n]\nend", "  local n = #arr\n  local dp = {}\n  for i = 1, n\
    \ do\n    dp[i] = {}\n    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n\
    \  for i = 1, n do\n    for j = 1, n do\n      if i == j then\n        dp[i][j]\
    \ = 0\n      elseif i + 1 == j then\n        dp[i][j] = arr[i] ~= arr[j] and 1\
    \ or 0\n      else\n        dp[i][j] = math.min(dp[i + 1][j] + 1, dp[i][j - 1]\
    \ + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n      end\n    end\n\
    \  end\n  return dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for\
    \ i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n            dp[i][j]\
    \ = 0\n        end\n    end\n    for i = 1, n do\n        dp[i][i] = 0\n    end\n\
    \    for i = 1, n - 1 do\n        if arr[i] ~= arr[i + 1] then\n            dp[i][i\
    \ + 1] = 1\n        end\n    end\n    for len = 3, n do\n        for i = 1, n\
    \ - len + 1 do\n            local j = i + len - 1\n            if arr[i] == arr[j]\
    \ then\n                dp[i][j] = dp[i + 1][j - 1]\n            else\n      \
    \          dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n do\n            if i == j then\n                dp[i][j] = 0\n\
    \            elseif i + 1 == j then\n                dp[i][j] = arr[i] ~= arr[j]\
    \ and 1 or 0\n            else\n                dp[i][j] = math.min(dp[i][j -\
    \ 1] + 1, dp[i + 1][j] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j] and 1 or 0))\n\
    \            end\n        end\n    end\n    return dp[1][n]\nend", "    local\
    \ n = #arr\n    local dp = {}\n    for i = 0, n do\n        dp[i] = {}\n     \
    \   for j = 0, n do\n            dp[i][j] = 0\n        end\n    end\n    for i\
    \ = 1, n do\n        for j = 1, n - i + 1 do\n            local k = j + i - 1\n\
    \            if i == 1 then\n                dp[j][k] = 0\n            elseif\
    \ i == 2 then\n                dp[j][k] = arr[j] ~= arr[k] and 1 or 0\n      \
    \      else\n                dp[j][k] = math.min(dp[j + 1][k] + (arr[j] ~= arr[k]\
    \ and 1 or 0), dp[j][k - 1] + (arr[j] ~= arr[k] and 1 or 0))\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n        dp[i][i + 1] = arr[i]\
    \ == arr[i + 1] and 0 or 1\n    end\n    for i = 3, n do\n        for j = 1, n\
    \ - i + 1 do\n            local k = j + i - 1\n            if arr[j] == arr[k]\
    \ then\n                dp[j][k] = dp[j + 1][k - 1]\n            else\n      \
    \          dp[j][k] = math.min(dp[j + 1][k], dp[j][k - 1]) + 1\n            end\n\
    \        end\n    end\n    return dp[1][n]\nend", "    local n = #arr\n    local\
    \ dp = {}\n    for i = 1, n do\n        dp[i] = {}\n        for j = 1, n do\n\
    \            dp[i][j] = 0\n        end\n    end\n    for i = 1, n do\n       \
    \ for j = 1, n - i do\n            if i == 1 then\n                dp[j][j + i]\
    \ = 0\n            elseif i == 2 then\n                dp[j][j + i] = arr[j] ==\
    \ arr[j + i] and 0 or 1\n            else\n                dp[j][j + i] = math.min(dp[j\
    \ + 1][j + i] + 1, dp[j][j + i - 1] + 1, dp[j + 1][j + i - 1] + (arr[j] == arr[j\
    \ + i] and 0 or 1))\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    dp[i][i] = 0\n  end\n  for i = 1, n - 1 do\n    dp[i][i + 1] = arr[i] ~=\
    \ arr[i + 1] and 1 or 0\n  end\n  for l = 3, n do\n    for i = 1, n - l + 1 do\n\
    \      local j = i + l - 1\n      if arr[i] == arr[j] then\n        dp[i][j] =\
    \ dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i + 1][j], dp[i][j\
    \ - 1]) + 1\n      end\n    end\n  end\n  return dp[1][n]\nend", "    local n\
    \ = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n       \
    \ for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n    for i =\
    \ 1, n do\n        for j = 1, n do\n            if i == j then\n             \
    \   dp[i][j] = 0\n            elseif j == i + 1 then\n                dp[i][j]\
    \ = arr[i] ~= arr[j] and 1 or 0\n            else\n                dp[i][j] =\
    \ math.min(dp[i + 1][j] + 1, dp[i][j - 1] + 1, dp[i + 1][j - 1] + (arr[i] ~= arr[j]\
    \ and 1 or 0))\n            end\n        end\n    end\n    return dp[1][n]\nend",
  "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i] = {}\n\
    \        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n   \
    \ for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n  \
    \      if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n            local\
    \ j = i + k - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = 1 + math.min(dp[i\
    \ + 1][j], dp[i][j - 1])\n            end\n        end\n    end\n    return dp[1][n]\n\
    end", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n        dp[i]\
    \ = {}\n        for j = 1, n do\n            dp[i][j] = 0\n        end\n    end\n\
    \    for i = 1, n do\n        dp[i][i] = 0\n    end\n    for i = 1, n - 1 do\n\
    \        if arr[i] ~= arr[i + 1] then\n            dp[i][i + 1] = 1\n        end\n\
    \    end\n    for k = 3, n do\n        for i = 1, n - k + 1 do\n            local\
    \ j = i + k - 1\n            if arr[i] == arr[j] then\n                dp[i][j]\
    \ = dp[i + 1][j - 1]\n            else\n                dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n            end\n        end\n    end\n    return\
    \ dp[1][n]\nend", "    local n = #arr\n    local dp = {}\n    for i = 1, n do\n\
    \        dp[i] = {}\n        for j = 1, n do\n            dp[i][j] = 0\n     \
    \   end\n    end\n    for i = 1, n do\n        for j = 1, n do\n            if\
    \ i == j then\n                dp[i][j] = 0\n            elseif i + 1 == j then\n\
    \                dp[i][j] = arr[i] == arr[j] and 0 or 1\n            else\n  \
    \              dp[i][j] = math.min(dp[i + 1][j - 1] + (arr[i] == arr[j] and 0\
    \ or 2), dp[i + 1][j] + 1, dp[i][j - 1] + 1)\n            end\n        end\n \
    \   end\n    return dp[1][n]\nend", "  local len = #arr\n  local dp = {}\n  for\
    \ i = 1, len do\n    dp[i] = {}\n    for j = 1, len do\n      dp[i][j] = 0\n \
    \   end\n  end\n  for i = 1, len do\n    dp[i][i] = 0\n  end\n  for i = 1, len\
    \ - 1 do\n    dp[i][i + 1] = arr[i] == arr[i + 1] and 0 or 1\n  end\n  for i =\
    \ len - 1, 1, -1 do\n    for j = i + 2, len do\n      if arr[i] == arr[j] then\n\
    \        dp[i][j] = dp[i + 1][j - 1]\n      else\n        dp[i][j] = math.min(dp[i\
    \ + 1][j], dp[i][j - 1]) + 1\n      end\n    end\n  end\n  return dp[1][len]\n\
    end", "  local n = #arr\n  local dp = {}\n  for i = 1, n do\n    dp[i] = {}\n\
    \    for j = 1, n do\n      dp[i][j] = 0\n    end\n  end\n  for i = 1, n do\n\
    \    for j = 1, n do\n      if i == j then\n        dp[i][j] = 0\n      elseif\
    \ i + 1 == j then\n        dp[i][j] = arr[i] ~= arr[j] and 1 or 0\n      else\n\
    \        dp[i][j] = math.min(dp[i + 1][j], dp[i][j - 1]) + (arr[i] ~= arr[j] and\
    \ 1 or 0)\n      end\n    end\n  end\n  return dp[1][n]\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

---
name: HumanEval_157_right_angle_triangle
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return true if the
  three\n-- sides form a right-angled triangle, false otherwise.\n-- A right-angled
  triangle is a triangle in which one angle is right angle or \n-- 90 degree.\n--
  Example:\n-- >>> right_angle_triangle(3, 4, 5)\n-- true\n-- >>> right_angle_triangle(1,
  2, 3)\n-- false\nlocal function right_angle_triangle(a, b, c)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = right_angle_triangle
      lu.assertEquals(candidate(3, 4, 5), true)
      lu.assertEquals(candidate(1, 2, 3), false)
      lu.assertEquals(candidate(10, 6, 8), true)
      lu.assertEquals(candidate(2, 2, 2), false)
      lu.assertEquals(candidate(7, 24, 25), true)
      lu.assertEquals(candidate(10, 5, 7), false)
      lu.assertEquals(candidate(5, 12, 13), true)
      lu.assertEquals(candidate(15, 8, 17), true)
      lu.assertEquals(candidate(48, 55, 73), true)
      lu.assertEquals(candidate(1, 1, 1), false)
      lu.assertEquals(candidate(2, 2, 10), false)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
      -- TODO: Implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement the function
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      if max * max == mid * mid + min * min then
          return true
      else
          return false
      end
  end
- |2-
      -- Write your code here
      if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      return max * max == min * min + mid * mid
  end
- |2-
      -- TODO: Implement this function
      -- Hint: use Pythagorean theorem
      -- a^2 + b^2 = c^2
      -- a^2 + b^2 == c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^2
      -- a^2 + b^2 ~= c^
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      local rest = sum - max
      return max * max == rest * rest
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement right_angle_triangle function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement the function
  end
- |2-
    -- TODO: implement here
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a*a + b*b == c*c then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      if a > b and a > c then
          return a * a == b * b + c * c
      elseif b > a and b > c then
          return b * b == a * a + c * c
      elseif c > a and c > b then
          return c * c == a * a + b * b
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      local rest = sum - max
      return max * max == rest * rest
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1] ^ 2 + sides[2] ^ 2 == sides[3] ^ 2
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      return a^2 + b^2 == c^2
  end
- |2-
      if a > b and a > c then
          return a * a == b * b + c * c
      elseif b > a and b > c then
          return b * b == a * a + c * c
      elseif c > a and c > b then
          return c * c == a * a + b * b
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      return max * max == min * min + mid * mid
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      if max * max == min * min + mid * mid then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      local rest = sum - max
      return max * max == rest * rest
  end
- |2-
      return (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2)
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      if a > b and a > c then
          return a*a == b*b + c*c
      elseif b > a and b > c then
          return b*b == a*a + c*c
      elseif c > a and c > b then
          return c*c == a*a + b*b
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      if max * max == min * min + mid * mid then
          return true
      else
          return false
      end
  end
- |2-
    local max = math.max(a, b, c)
    local sum = a + b + c - max
    return max * max == sum * sum
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
      -- TODO: implement the function
      return false
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      return max * max == sum - max * max
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      local rest = sum - max
      return max * max == rest * rest
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      -- TODO: implement this function
      if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max ^ 2 == sum ^ 2
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a > b and a > c then
          return a * a == b * b + c * c
      elseif b > a and b > c then
          return b * b == a * a + c * c
      elseif c > a and c > b then
          return c * c == a * a + b * b
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a == 0 or b == 0 or c == 0 then
          return false
      end
      if a + b <= c or a + c <= b or b + c <= a then
          return false
      end
      if a * a + b * b == c * c or a * a + c * c == b * b or b * b + c * c == a * a then
          return true
      end
      return false
  end
- |2-
      -- your code here
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1] * sides[1] + sides[2] * sides[2] == sides[3] * sides[3]
  end
- |2-
      if a > b and a > c then
          return a * a == b * b + c * c
      elseif b > a and b > c then
          return b * b == a * a + c * c
      elseif c > a and c > b then
          return c * c == a * a + b * b
      end
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      if max * max == min * min + mid * mid then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      return max^2 == mid^2 + min^2
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      local x = math.pow(a, 2)
      local y = math.pow(b, 2)
      local z = math.pow(c, 2)
      if x + y == z or x + z == y or y + z == x then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local sum = a + b + c
      if max == a then
          return a * a == b * b + c * c
      elseif max == b then
          return b * b == a * a + c * c
      else
          return c * c == a * a + b * b
      end
  end
- |2-
      -- TODO: implement this function
      if a > b and a > c then
          if a * a == b * b + c * c then
              return true
          else
              return false
          end
      elseif b > a and b > c then
          if b * b == a * a + c * c then
              return true
          else
              return false
          end
      elseif c > a and c > b then
          if c * c == a * a + b * b then
              return true
          else
              return false
          end
      end
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a > b and a > c then
          return a^2 == b^2 + c^2
      elseif b > a and b > c then
          return b^2 == a^2 + c^2
      elseif c > a and c > b then
          return c^2 == a^2 + b^2
      end
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1] ^ 2 + sides[2] ^ 2 == sides[3] ^ 2
  end
- |2-
      local max_side = math.max(a, b, c)
      local sum_of_other_sides = a + b + c - max_side
      return max_side * max_side == sum_of_other_sides * sum_of_other_sides
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    if a^2 + b^2 == c^2 then
      return true
    else
      return false
    end
  end
- |2-
      -- TODO: implement the function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement here
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement the function
      return false
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      return max * max == sum - max * max
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      local rest = sum - max
      return max * max == rest * rest
  end
- |2-
    local sides = {a, b, c}
    table.sort(sides)
    return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1]^2 + sides[2]^2 == sides[3]^2
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement here
      return false
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a > b and a > c then
          return a * a == b * b + c * c
      elseif b > a and b > c then
          return b * b == a * a + c * c
      elseif c > a and c > b then
          return c * c == a * a + b * b
      end
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c
      return sum - max > max
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement right_angle_triangle
    if a^2 + b^2 == c^2 then
      return true
    else
      return false
    end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
    if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
      return true
    else
      return false
    end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local sum = a + b + c
      local min = math.min(a, b, c)
      if max * max == (sum - max) * (sum - max) then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local max = math.max(a, b, c)
      local sum = a + b + c - max
      return max * max == sum * sum
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      local sides = {a, b, c}
      table.sort(sides)
      return sides[1] ^ 2 + sides[2] ^ 2 == sides[3] ^ 2
  end
- |2-
      if a < b then
          a, b = b, a
      end
      if a < c then
          a, c = c, a
      end
      return a * a == b * b + c * c
  end
- |2-
      -- TODO: implement this function
      if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- your code here
    if a^2 + b^2 == c^2 then
      return true
    else
      return false
    end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      elseif a^2 + c^2 == b^2 then
          return true
      elseif b^2 + c^2 == a^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      local max = math.max(a, b, c)
      local min = math.min(a, b, c)
      local mid = a + b + c - max - min
      if max * max == min * min + mid * mid then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
      if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2 == a^2) then
          return true
      else
          return false
      end
  end
- |2-
      if a^2 + b^2 == c^2 then
          return true
      else
          return false
      end
  end
- |2-
      return a^2 + b^2 == c^2
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

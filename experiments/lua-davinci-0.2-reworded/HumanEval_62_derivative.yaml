---
name: HumanEval_62_derivative
language: lua
prompt: |
  -- xs represent coefficients of a polynomial.
  -- xs[0] + xs[1] * x + xs[2] * x^2 + ....
  -- Return derivative of this polynomial in the same form.
  -- >>> derivative({3, 1, 2, 4, 5})
  -- {1, 4, 12, 20}
  -- >>> derivative({1, 2, 3})
  -- {2, 6}
  local function derivative(xs)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = derivative
      lu.assertEquals(candidate({3, 1, 2, 4, 5}), {1, 4, 12, 20})
      lu.assertEquals(candidate({1, 2, 3}), {2, 6})
      lu.assertEquals(candidate({3, 2, 1}), {2, 2})
      lu.assertEquals(candidate({3, 2, 1, 0, 4}), {2, 2, 0, 16})
      lu.assertEquals(candidate({1}), {})
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      if n == 0 then
          return {}
      end
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i + 1] * i
      end
      return ys
  end
- |2-
      local ys = {}
      for i = 1, #xs - 1 do
          ys[i] = xs[i] * (i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
    local result = {}
    for i = 1, #xs - 1 do
      result[i] = xs[i] * i
    end
    return result
  end
- |2-
    local n = #xs
    local res = {}
    for i = 1, n - 1 do
      res[i] = (i + 1) * xs[i + 1]
    end
    return res
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local ys = {}
      for i = 1, #xs - 1 do
          ys[i] = xs[i] * i
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = (i + 1) * xs[i + 1]
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * i
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 2, n do
          ys[i - 1] = (i - 1) * xs[i]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 2, #xs do
          result[i - 1] = xs[i] * (i - 1)
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
    local result = {}
    for i = 1, #xs - 1 do
      result[i] = xs[i] * i
    end
    return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local result = {}
      for i = 2, #xs do
          table.insert(result, xs[i] * (i - 1))
      end
      return result
  end
- |2-
    local dxs = {}
    for i = 1, #xs - 1 do
      dxs[i] = (i + 1) * xs[i + 1]
    end
    return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * (i + 1)
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs - 1
    local ys = {}
    for i = 0, n - 1 do
      ys[i + 1] = (n - i) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local dxs = {}
    for i = 1, n - 1 do
      dxs[i] = xs[i] * (n - i)
    end
    return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
    local n = #xs
    local dxs = {}
    for i = 1, n - 1 do
      dxs[i] = xs[i] * (n - i)
    end
    return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * (i + 1)
      end
      return dxs
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * (i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * (i)
      end
      return result
  end
- |2-
      local n = #xs
      if n == 0 then
          return {}
      end
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i + 1] * i
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = (i + 1) * xs[i + 1]
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * (i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          table.insert(result, xs[i] * i)
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = (i + 1) * xs[i + 1]
      end
      return result
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * (i)
      end
      return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
    local result = {}
    for i = 1, #xs - 1 do
      result[i] = xs[i] * i
    end
    return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      if n == 0 then
          return {}
      end
      local ys = {}
      for i = 2, n do
          ys[i - 1] = xs[i] * (i - 1)
      end
      return ys
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * (i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local res = {}
      for i = 1, #xs - 1 do
          res[i] = xs[i] * i
      end
      return res
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * (i)
      end
      return result
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = xs[i] * (i)
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local dxs = {}
      for i = 1, #xs - 1 do
          dxs[i] = (i + 1) * xs[i + 1]
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local ys = {}
      for i = 1, #xs - 1 do
          ys[i] = xs[i] * (i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 2, n do
          ys[i - 1] = (i - 1) * xs[i]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local result = {}
    for i = 1, #xs - 1 do
      result[i] = xs[i] * i
    end
    return result
  end
- |2-
    local n = #xs
    local dxs = {}
    for i = 1, n - 1 do
      dxs[i] = xs[i] * (n - i)
    end
    return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local n = #xs
      if n == 0 then
          return {}
      end
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i + 1] * i
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local res = {}
      for i = 1, #xs - 1 do
          res[i] = xs[i] * i
      end
      return res
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = (i + 1) * xs[i + 1]
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local result = {}
      for i = 1, n - 1 do
          result[i] = xs[i] * (n - i)
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
    local n = #xs
    local dxs = {}
    for i = 1, n - 1 do
      dxs[i] = (i + 1) * xs[i + 1]
    end
    return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local n = #xs
      if n == 0 then
          return {}
      end
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i + 1] * i
      end
      return dxs
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 2, n do
          ys[i - 1] = (i - 1) * xs[i]
      end
      return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
    local ys = {}
    for i = 1, #xs - 1 do
      ys[i] = xs[i] * i
    end
    return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local dxs = {}
      for i = 1, n - 1 do
          dxs[i] = xs[i] * (n - i)
      end
      return dxs
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- |2-
      local result = {}
      for i = 1, #xs - 1 do
          result[i] = xs[i] * i
      end
      return result
  end
- |2-
      local ys = {}
      for i = 1, #xs - 1 do
          ys[i] = (i + 1) * xs[i + 1]
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
      local ys = {}
      for i = 1, #xs - 1 do
          ys[i] = xs[i] * (i)
      end
      return ys
  end
- |2-
    local n = #xs
    local ys = {}
    for i = 1, n - 1 do
      ys[i] = xs[i] * (n - i)
    end
    return ys
  end
- "\tlocal n = #xs\n\tlocal ys = {}\n\tfor i = 1, n - 1 do\n\t\tys[i] = xs[i] * (n
  - i)\n\tend\n\treturn ys\nend"
- |2-
      local n = #xs
      local ys = {}
      for i = 1, n - 1 do
          ys[i] = xs[i] * (n - i)
      end
      return ys
  end
- |2-
    local result = {}
    for i = 2, #xs do
      result[i - 1] = xs[i] * (i - 1)
    end
    return result
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

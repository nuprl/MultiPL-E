---
name: HumanEval_139_special_factorial
language: lua
prompt: |
  -- The Brazilian factorial is defined as:
  -- brazilian_factorial(n) = n! * (n-1)! * (n-2)! * ... * 1!
  -- where n > 0
  -- For example:
  -- >>> special_factorial(4)
  -- 288
  -- The function will receive an integer as input and should return the special
  -- factorial of this integer.
  local function special_factorial(n)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = special_factorial
      lu.assertEquals(candidate(4), 288)
      lu.assertEquals(candidate(5), 34560)
      lu.assertEquals(candidate(7), 125411328000)
      lu.assertEquals(candidate(1), 1)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local factorial = 1
      for i = n, 1, -1 do
          factorial = factorial * i
      end
      return factorial
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    -- Your code here
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local factorial = 1
      for i = 1, n do
          factorial = factorial * i
      end
      return factorial
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      if n == 0 then
          return 1
      else
          return n * special_factorial(n - 1)
      end
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    if n < 0 then
      return nil
    end
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
      if n == 0 then
          return 1
      else
          return n * special_factorial(n - 1)
      end
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
      if n == 0 then
          return 1
      else
          return n * special_factorial(n - 1)
      end
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
      if n == 0 then
          return 1
      else
          return n * special_factorial(n - 1)
      end
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * i
    end
    return result
  end
- |2-
    local factorial = 1
    for i = n, 1, -1 do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * factorial(i)
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    if n == 0 then
      return 1
    else
      return n * special_factorial(n - 1)
    end
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * i
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local factorial = 1
      for i = 1, n do
          factorial = factorial * i
      end
      return factorial
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = n, 1, -1 do
          result = result * i
      end
      return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      local result = 1
      for i = 1, n do
          result = result * i
      end
      return result
  end
- |2-
      if n == 0 then
          return 1
      else
          return n * special_factorial(n - 1)
      end
  end
- |2-
    local factorial = 1
    for i = 1, n do
      factorial = factorial * i
    end
    return factorial
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
      if n == 0 then
          return 1
      else
          return n * special_factorial(n - 1)
      end
  end
- |2-
    local result = 1
    for i = 1, n do
      result = result * factorial(i)
    end
    return result
  end
- |2-
    local result = 1
    for i = n, 1, -1 do
      result = result * factorial(i)
    end
    return result
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

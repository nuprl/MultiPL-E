name: HumanEval_89_encrypt
language: lua
prompt: "-- Create a function encrypt that takes a string as an argument and\n-- returns\
  \ a string encrypted with the alphabet being rotated. \n-- The alphabet should be\
  \ rotated in a manner such that the letters \n-- shift down by two multiplied to\
  \ two places.\n-- For example:\n-- >>> encrypt('hi')\n-- 'lm'\n-- >>> encrypt('asdfghjkl')\n\
  -- 'ewhjklnop'\n-- >>> encrypt('gf')\n-- 'kj'\n-- >>> encrypt('et')\n-- 'ix'\nlocal\
  \ function encrypt(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = encrypt\n\
  \    lu.assertEquals(candidate('hi'), 'lm')\n    lu.assertEquals(candidate('asdfghjkl'),\
  \ 'ewhjklnop')\n    lu.assertEquals(candidate('gf'), 'kj')\n    lu.assertEquals(candidate('et'),\
  \ 'ix')\n    lu.assertEquals(candidate('faewfawefaewg'), 'jeiajeaijeiak')\n    lu.assertEquals(candidate('hellomyfriend'),\
  \ 'lippsqcjvmirh')\n    lu.assertEquals(candidate('dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh'),\
  \ 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl')\n    lu.assertEquals(candidate('a'),\
  \ 'e')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = index + (2 * 2)\n            if newIndex > #alphabet then\n              \
    \  newIndex = newIndex - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = (index + (2 * 2)) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(new_index, new_index)\n   \
    \     else\n            encrypted = encrypted .. c\n        end\n    end\n   \
    \ return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n \
    \ local result = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local newIndex = (index +\
    \ (2 * 2)) % #alphabet\n      result = result .. alphabet:sub(newIndex, newIndex)\n\
    \    else\n      result = result .. c\n    end\n  end\n  return result\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = {'a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'}\n  local result = ''\n  for i = 1, #s do\n   \
    \ local letter = s:sub(i, i)\n    local index = 1\n    for j = 1, #alphabet do\n\
    \      if letter == alphabet[j] then\n        index = j\n      end\n    end\n\
    \    result = result .. alphabet[index + 2]\n  end\n  return result\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local new_index = index +\
    \ 2 * 2\n      if new_index > #alphabet then\n        new_index = new_index -\
    \ #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    else\n      encrypted = encrypted .. c\n    end\n  end\n  return\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local index = alphabet:find(c)\n        if index then\n            local new_index\
    \ = index + 2 * 2\n            if new_index > #alphabet then\n               \
    \ new_index = new_index - #alphabet\n            end\n            encrypted =\
    \ encrypted .. alphabet:sub(new_index, new_index)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local result = ''\n  for i = 1, #s\
    \ do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index\
    \ then\n      local new_index = index + 2 * 2\n      if new_index > #alphabet\
    \ then\n        new_index = new_index - #alphabet\n      end\n      c = alphabet:sub(new_index,\
    \ new_index)\n    end\n    result = result .. c\n  end\n  return result\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local alphabet_len = string.len(alphabet)\n\
    \    local result = ''\n    for i = 1, string.len(s) do\n        local c = string.sub(s,\
    \ i, i)\n        local index = string.find(alphabet, c)\n        if index then\n\
    \            local new_index = index + 2 * 2\n            if new_index > alphabet_len\
    \ then\n                new_index = new_index - alphabet_len\n            end\n\
    \            result = result .. string.sub(alphabet, new_index, new_index)\n \
    \       else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n    local encrypted = ''\n    for i = 1, #s do\n        local letter\
    \ = s:sub(i, i)\n        local index = table.indexof(alphabet, letter)\n     \
    \   local new_index = index + 2 * 2\n        if new_index > #alphabet then\n \
    \           new_index = new_index - #alphabet\n        end\n        encrypted\
    \ = encrypted .. alphabet[new_index]\n    end\n    return encrypted\nend", " \
    \ local s = s:lower()\n  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local\
    \ new_alphabet = alphabet:sub(3) .. alphabet:sub(1,2)\n  local new_s = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      new_s = new_s .. new_alphabet:sub(index,index)\n   \
    \ else\n      new_s = new_s .. c\n    end\n  end\n  return new_s\nend", "    local\
    \ function shift(c)\n        local a = string.byte('a')\n        local z = string.byte('z')\n\
    \        local A = string.byte('A')\n        local Z = string.byte('Z')\n    \
    \    local c = string.byte(c)\n        if c >= a and c <= z then\n           \
    \ c = c + 2\n            if c > z then\n                c = a + (c - z) - 1\n\
    \            end\n        elseif c >= A and c <= Z then\n            c = c + 2\n\
    \            if c > Z then\n                c = A + (c - Z) - 1\n            end\n\
    \        end\n        return string.char(c)\n    end\n    local result = ''\n\
    \    for i = 1, #s do\n        result = result .. shift(s:sub(i, i))\n    end\n\
    \    return result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n \
    \ local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      index = index + 2 * 2\n \
    \     if index > #alphabet then\n        index = index - #alphabet\n      end\n\
    \      encrypted = encrypted .. alphabet:sub(index, index)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local idx = alphabet:find(c)\n  \
    \      local new_idx = idx + 2 * 2\n        if new_idx > #alphabet then\n    \
    \        new_idx = new_idx - #alphabet\n        end\n        encrypted = encrypted\
    \ .. alphabet:sub(new_idx, new_idx)\n    end\n    return encrypted\nend", "  \
    \  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local char = s:sub(i, i)\n        local index =\
    \ alphabet:find(char)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "\tlocal alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1, #s do\n\
    \t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\t\tif index then\n\
    \t\t\tlocal new_index = index + 2 * 2\n\t\t\tif new_index > #alphabet then\n\t\
    \t\t\tnew_index = new_index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n\t\telse\n\t\t\tencrypted = encrypted\
    \ .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        local newIndex = index + 4\n\
    \        if newIndex > 26 then\n            newIndex = newIndex - 26\n       \
    \ end\n        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n   \
    \ end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2 * 2)\
    \ % 26 + 1, (index + 2 * 2) % 26 + 1)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)\n  \
    \      else\n            encrypted = encrypted .. c\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local index = string.find(alphabet,\
    \ s:sub(i, i))\n        local new_index = index + (2 * 2)\n        if new_index\
    \ > #alphabet then\n            new_index = new_index - #alphabet\n        end\n\
    \        encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        local newIndex = (index + 2)\
    \ * 2\n        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n   \
    \ end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            encrypted = encrypted .. alphabet:sub(index, index)\n        else\n\
    \            encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local new_index = index\
    \ + 2 * 2\n            if new_index > #alphabet then\n                new_index\
    \ = new_index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n   \
    \     local index = alphabet:find(char)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. char\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local new_alphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n    local new_s = ''\n\
    \    for i = 1, #s do\n        local c = string.sub(s, i, i)\n        local index\
    \ = string.find(alphabet, c)\n        if index then\n            new_s = new_s\
    \ .. string.sub(new_alphabet, index, index)\n        else\n            new_s =\
    \ new_s .. c\n        end\n    end\n    return new_s\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        local newIndex = index\
    \ + (2 * 2)\n        if newIndex > #alphabet then\n            newIndex = newIndex\
    \ - #alphabet\n        end\n        encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local letter = s:sub(i,\
    \ i)\n        local index = alphabet:find(letter)\n        local newIndex = index\
    \ + (2 * 2)\n        if newIndex > #alphabet then\n            newIndex = newIndex\
    \ - #alphabet\n        end\n        encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local s_encrypt = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local pos = alphabet:find(c)\n        if pos then\n            local\
    \ pos_encrypt = (pos + 2 * 2) % #alphabet\n            if pos_encrypt == 0 then\n\
    \                pos_encrypt = #alphabet\n            end\n            s_encrypt\
    \ = s_encrypt .. alphabet:sub(pos_encrypt, pos_encrypt)\n        else\n      \
    \      s_encrypt = s_encrypt .. c\n        end\n    end\n    return s_encrypt\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        local new_index = index + 2 * 2\n        if new_index\
    \ > #alphabet then\n            new_index = new_index - #alphabet\n        end\n\
    \        encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. char\n      \
    \  end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \    local new_s = ''\n    for i = 1, #s do\n        local c = string.sub(s, i,\
    \ i)\n        local index = string.find(alphabet, c)\n        if index then\n\
    \            new_s = new_s .. string.sub(new_alphabet, index, index)\n       \
    \ else\n            new_s = new_s .. c\n        end\n    end\n    return new_s\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n \
    \   local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n\
    \        newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ char\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + (2 * 2)\n      \
    \      if new_index > #alphabet then\n                new_index = new_index -\
    \ #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local new_index = (index + (2 * 2)) % 26\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. char\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if\
    \ index then\n      local new_index = (index + 2 * 2) % #alphabet\n      if new_index\
    \ == 0 then\n        new_index = #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local new_alphabet = string.sub(alphabet, 3)\
    \ .. string.sub(alphabet, 1, 2)\n  local new_string = ''\n  for i = 1, #s do\n\
    \    local c = string.sub(s, i, i)\n    local index = string.find(alphabet, c)\n\
    \    if index then\n      new_string = new_string .. string.sub(new_alphabet,\
    \ index, index)\n    else\n      new_string = new_string .. c\n    end\n  end\n\
    \  return new_string\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local new_index = index + (2 * 2)\n            if new_index > #alphabet\
    \ then\n                new_index = new_index - #alphabet\n            end\n \
    \           encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    \
    \    else\n            encrypted = encrypted .. char\n        end\n    end\n \
    \   return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = (index + (2 * 2)) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n     \
    \   else\n            encrypted = encrypted .. char\n        end\n    end\n  \
    \  return encrypted\nend", "    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n    local encrypted = ''\n    for i = 1, #s do\n      \
    \  local letter = s:sub(i, i)\n        local index = 0\n        for j = 1, #alphabet\
    \ do\n            if letter == alphabet[j] then\n                index = j\n \
    \           end\n        end\n        if index > 0 then\n            local newIndex\
    \ = index + (2 * 2)\n            if newIndex > #alphabet then\n              \
    \  newIndex = newIndex - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet[newIndex]\n        else\n            encrypted = encrypted .. letter\n\
    \        end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            result\
    \ = result .. alphabet:sub(index + 2 * 2, index + 2 * 2)\n        else\n     \
    \       result = result .. c\n        end\n    end\n    return result\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local j = alphabet:find(c)\n\
    \        if j then\n            encrypted = encrypted .. alphabet:sub((j + 2)\
    \ % 26 + 1, (j + 2) % 26 + 1)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local result = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local offset = c:byte() -\
    \ string.byte('a')\n    local new_offset = (offset + 2 * 2) % 26\n    local new_c\
    \ = string.char(string.byte('a') + new_offset)\n    result = result .. new_c\n\
    \  end\n  return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + (2 * 2)\n      \
    \      if new_index > #alphabet then\n                new_index = new_index -\
    \ #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            result\
    \ = result .. alphabet:sub(index + 2 * 2, index + 2 * 2)\n        else\n     \
    \       result = result .. c\n        end\n    end\n    return result\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n\
    \    for i = 1, #s do\n        local char = s:sub(i, i)\n        local index =\
    \ alphabet:find(char)\n        if index then\n            local new_index = index\
    \ + (2 * 2)\n            if new_index > #alphabet then\n                new_index\
    \ = new_index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. char\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if\
    \ index then\n      encrypted = encrypted .. alphabet:sub((index + 4) % 26 + 1,\
    \ (index + 4) % 26 + 1)\n    else\n      encrypted = encrypted .. c\n    end\n\
    \  end\n  return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local newIndex = index +\
    \ 2 * 2\n      if newIndex > #alphabet then\n        newIndex = newIndex - #alphabet\n\
    \      end\n      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "    local function rot(c)\n        local i = string.byte(c)\n        if\
    \ i >= string.byte('a') and i <= string.byte('z') then\n            i = i + 2\
    \ * 2\n            if i > string.byte('z') then\n                i = i - 26\n\
    \            end\n        end\n        return string.char(i)\n    end\n    return\
    \ string.gsub(s, '.', rot)\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local new_index = (index\
    \ + (2 * 2)) % 26\n      encrypted = encrypted .. alphabet:sub(new_index, new_index)\n\
    \    else\n      encrypted = encrypted .. c\n    end\n  end\n  return encrypted\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + (2 * 2)\n      if newIndex\
    \ > #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    -- TODO: Implement this function\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2) %\
    \ #alphabet + 1, (index + 2) % #alphabet + 1)\n    else\n      encrypted = encrypted\
    \ .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local\
    \ index = alphabet:find(char)\n    if index then\n      result = result .. alphabet:sub((index\
    \ + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n     \
    \ result = result .. char\n    end\n  end\n  return result\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local new_index = index + 2 * 2\n            if new_index > #alphabet\
    \ then\n                new_index = new_index - #alphabet\n            end\n \
    \           encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    \
    \    else\n            encrypted = encrypted .. char\n        end\n    end\n \
    \   return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      index = index + 2 * 2\n \
    \     if index > #alphabet then\n        index = index - #alphabet\n      end\n\
    \      result = result .. alphabet:sub(index, index)\n    else\n      result =\
    \ result .. c\n    end\n  end\n  return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n  \
    \      newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            result\
    \ = result .. alphabet:sub(new_index, new_index)\n        else\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "  local alphabet\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local encrypted =\
    \ ''\n  for i = 1, #s do\n    local letter = string.sub(s, i, i)\n    local index\
    \ = table.indexOf(alphabet, letter)\n    if index then\n      local newIndex =\
    \ index + 2 * 2\n      if newIndex > #alphabet then\n        newIndex = newIndex\
    \ - #alphabet\n      end\n      encrypted = encrypted .. alphabet[newIndex]\n\
    \    else\n      encrypted = encrypted .. letter\n    end\n  end\n  return encrypted\n\
    end", "    local function rotate(c)\n        local a = string.byte('a')\n    \
    \    local z = string.byte('z')\n        local A = string.byte('A')\n        local\
    \ Z = string.byte('Z')\n        local c = string.byte(c)\n        if c >= a and\
    \ c <= z then\n            c = c + 2\n            if c > z then\n            \
    \    c = c - 26\n            end\n        elseif c >= A and c <= Z then\n    \
    \        c = c + 2\n            if c > Z then\n                c = c - 26\n  \
    \          end\n        end\n        return string.char(c)\n    end\n    local\
    \ t = {}\n    for i = 1, #s do\n        t[i] = rotate(s:sub(i, i))\n    end\n\
    \    return table.concat(t)\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i =\
    \ 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local idx = alphabet:find(c)\n        if idx then\n            local new_idx\
    \ = (idx + (2 * 2)) % #alphabet\n            encrypted = encrypted .. alphabet:sub(new_idx,\
    \ new_idx)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = {'a', 'b', 'c', 'd',\
    \ 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\
    \ 'u', 'v', 'w', 'x', 'y', 'z'}\n    local result = ''\n    for i = 1, #s do\n\
    \        local letter = s:sub(i, i)\n        local index = nil\n        for j\
    \ = 1, #alphabet do\n            if alphabet[j] == letter then\n             \
    \   index = j\n            end\n        end\n        if index == nil then\n  \
    \          result = result .. letter\n        else\n            local new_index\
    \ = index + 2 * 2\n            if new_index > #alphabet then\n               \
    \ new_index = new_index - #alphabet\n            end\n            result = result\
    \ .. alphabet[new_index]\n        end\n    end\n    return result\nend", "   \
    \ local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n  \
    \  for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal result = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tresult = result .. alphabet:sub((index\
    \ + 2 * 2 - 1) % #alphabet + 1, (index + 2 * 2 - 1) % #alphabet + 1)\n\t\telse\n\
    \t\t\tresult = result .. c\n\t\tend\n\tend\n\treturn result\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. char\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local letter = s:sub(i, i)\n        local index = alphabet:find(letter)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. letter\n    \
    \    end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n       \
    \         newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = (index + (2 * 2)) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n     \
    \   else\n            encrypted = encrypted .. c\n        end\n    end\n    return\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted\
    \ = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      encrypted = encrypted .. alphabet:sub((index + 2 * 2)\
    \ % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      index = index + 2 * 2\n      if index > #alphabet then\n       \
    \ index = index - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n    else\n      encrypted = encrypted .. char\n    end\n  end\n  return\
    \ encrypted\nend", "    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',\
    \ 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x',\
    \ 'y', 'z'}\n    local encrypted = ''\n    for i = 1, #s do\n        local letter\
    \ = string.sub(s, i, i)\n        local index = 0\n        for j = 1, #alphabet\
    \ do\n            if letter == alphabet[j] then\n                index = j\n \
    \           end\n        end\n        if index == 0 then\n            encrypted\
    \ = encrypted .. letter\n        else\n            local newIndex = index + 2\
    \ * 2\n            if newIndex > #alphabet then\n                newIndex = newIndex\
    \ - #alphabet\n            end\n            encrypted = encrypted .. alphabet[newIndex]\n\
    \        end\n    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local new_index = index +\
    \ 2 * 2\n      if new_index > #alphabet then\n        new_index = new_index -\
    \ #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    else\n      encrypted = encrypted .. c\n    end\n  end\n  return\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local result\
    \ = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      result\
    \ = result .. alphabet:sub(newIndex, newIndex)\n    else\n      result = result\
    \ .. c\n    end\n  end\n  return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + (2 * 2)\n      if newIndex\
    \ > #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n  \
    \  local index = alphabet:find(char)\n    if index then\n      local new_index\
    \ = index + 2 * 2\n      if new_index > #alphabet then\n        new_index = new_index\
    \ - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    else\n      encrypted = encrypted .. char\n    end\n  end\n\
    \  return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \  local new_s = ''\n  for i = 1, #s do\n    local c = string.sub(s, i, i)\n \
    \   local index = string.find(alphabet, c)\n    if index then\n      new_s = new_s\
    \ .. string.sub(new_alphabet, index, index)\n    else\n      new_s = new_s ..\
    \ c\n    end\n  end\n  return new_s\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local function shift(c)\n        return\
    \ string.char(string.byte(c) + 2 * 2)\n    end\n    return string.gsub(s, '.',\
    \ shift)\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local result\
    \ = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      result\
    \ = result .. alphabet:sub(newIndex, newIndex)\n    else\n      result = result\
    \ .. c\n    end\n  end\n  return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n\
    \        local index = alphabet:find(char)\n        if index then\n          \
    \  local newIndex = index + 2 * 2\n            if newIndex > #alphabet then\n\
    \                newIndex = newIndex - #alphabet\n            end\n          \
    \  result = result .. alphabet:sub(newIndex, newIndex)\n        else\n       \
    \     result = result .. char\n        end\n    end\n    return result\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local index = string.find(alphabet, s:sub(i, i))\n\
    \        local newIndex = index + (2 * 2)\n        if newIndex > #alphabet then\n\
    \            newIndex = newIndex - #alphabet\n        end\n        encrypted =\
    \ encrypted .. alphabet:sub(newIndex, newIndex)\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            index = index + 2 * 2\n\
    \            if index > #alphabet then\n                index = index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(index, index)\n\
    \        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n  \
    \  local index = alphabet:find(char)\n    if index then\n      local new_index\
    \ = index + 2 * 2\n      if new_index > #alphabet then\n        new_index = new_index\
    \ - #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    else\n      encrypted = encrypted .. char\n    end\n  end\n\
    \  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local char = s:sub(i,\
    \ i)\n        local index = alphabet:find(char)\n        if index then\n     \
    \       local new_index = index + (2 * 2)\n            if new_index > #alphabet\
    \ then\n                new_index = new_index - #alphabet\n            end\n \
    \           encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    \
    \    else\n            encrypted = encrypted .. char\n        end\n    end\n \
    \   return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local new_index = index + 2 * 2\n      if new_index\
    \ > #alphabet then\n        new_index = new_index - #alphabet\n      end\n   \
    \   encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    else\n  \
    \    encrypted = encrypted .. char\n    end\n  end\n  return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = (index + (2 * 2)) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n     \
    \   else\n            encrypted = encrypted .. c\n        end\n    end\n    return\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local new_alphabet\
    \ = alphabet:sub(3) .. alphabet:sub(1,2)\n  local new_s = ''\n  for i = 1, #s\
    \ do\n    local c = s:sub(i,i)\n    local index = alphabet:find(c)\n    if index\
    \ then\n      new_s = new_s .. new_alphabet:sub(index,index)\n    else\n     \
    \ new_s = new_s .. c\n    end\n  end\n  return new_s\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index == nil then\n            encrypted = encrypted .. c\n      \
    \  else\n            encrypted = encrypted .. alphabet:sub((index + 2) % 26 +\
    \ 1, (index + 2) % 26 + 1)\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        encrypted = encrypted .. alphabet:sub(index + 2, index + 2)\n    end\n\
    \    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      local new_index = index +\
    \ 2 * 2\n      if new_index > #alphabet then\n        new_index = new_index -\
    \ #alphabet\n      end\n      encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    else\n      encrypted = encrypted .. c\n    end\n  end\n  return\
    \ encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local alphabet_length\
    \ = #alphabet\n  local encrypted_string = ''\n  for i = 1, #s do\n    local letter\
    \ = s:sub(i, i)\n    local letter_index = alphabet:find(letter)\n    if letter_index\
    \ then\n      local encrypted_letter_index = (letter_index + (2 * 2)) % alphabet_length\n\
    \      encrypted_string = encrypted_string .. alphabet:sub(encrypted_letter_index,\
    \ encrypted_letter_index)\n    else\n      encrypted_string = encrypted_string\
    \ .. letter\n    end\n  end\n  return encrypted_string\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ newIndex = index + (2 * 2)\n            if newIndex > #alphabet then\n     \
    \           newIndex = newIndex - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted\
    \ = encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local letter = string.sub(s, i,\
    \ i)\n        local index = 0\n        for j = 1, #alphabet do\n            if\
    \ letter == alphabet[j] then\n                index = j\n            end\n   \
    \     end\n        local new_index = index + 2 * 2\n        if new_index > #alphabet\
    \ then\n            new_index = new_index - #alphabet\n        end\n        encrypted\
    \ = encrypted .. alphabet[new_index]\n    end\n    return encrypted\nend", " \
    \   local function encrypt_char(c)\n        local char_code = string.byte(c)\n\
    \        local new_char_code = char_code + 2 * 2\n        return string.char(new_char_code)\n\
    \    end\n    return string.gsub(s, '.', encrypt_char)\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n    for i = 1, #s do\n\
    \        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. char\n        end\n    end\n   \
    \ return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  \
    \  local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \    local new_s = ''\n    for i = 1, string.len(s) do\n        local letter =\
    \ string.sub(s, i, i)\n        local index = string.find(alphabet, letter)\n \
    \       new_s = new_s .. string.sub(new_alphabet, index, index)\n    end\n   \
    \ return new_s\nend", "    local s = string.lower(s)\n    local result = ''\n\
    \    for i = 1, #s do\n        local c = string.byte(s, i)\n        if c >= 97\
    \ and c <= 122 then\n            c = c + 2\n            if c > 122 then\n    \
    \            c = c - 26\n            end\n        end\n        result = result\
    \ .. string.char(c)\n    end\n    return result\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      index = index + 2 * 2\n \
    \     if index > #alphabet then\n        index = index - #alphabet\n      end\n\
    \      encrypted = encrypted .. alphabet:sub(index, index)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n\
    \    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if index then\n\
    \      local newIndex = index + 2 * 2\n      if newIndex > #alphabet then\n  \
    \      newIndex = newIndex - #alphabet\n      end\n      encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted = encrypted ..\
    \ c\n    end\n  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2)\
    \ % #alphabet + 1)\n        else\n            encrypted = encrypted .. c\n   \
    \     end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local new_alphabet = {}\n    for i = 1, #alphabet do\n        new_alphabet[i]\
    \ = alphabet:sub(i + 2 * 2, i + 2 * 2)\n    end\n    local new_s = ''\n    for\
    \ i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        new_s = new_s .. new_alphabet[index]\n    end\n    return new_s\nend",
  "    local a = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}\n\
    \    local b = {'c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b'}\n\
    \    local c = {}\n    for i = 1, #s do\n        for j = 1, #a do\n          \
    \  if s:sub(i,i) == a[j] then\n                c[i] = b[j]\n            end\n\
    \        end\n    end\n    return table.concat(c)\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local result = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      result = result .. alphabet:sub((index\
    \ + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)\n    else\n     \
    \ result = result .. c\n    end\n  end\n  return result\nend", "\tlocal alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor i = 1, #s do\n\
    \t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\t\tif index then\n\
    \t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\t\t\t\tindex =\
    \ index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,\
    \ index)\n\t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn\
    \ encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local index = alphabet:find(c)\n        if index then\n            local newIndex\
    \ = index + (2 * 2)\n            if newIndex > #alphabet then\n              \
    \  newIndex = newIndex - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n \
    \   local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    local newIndex\
    \ = index + 2 * 2\n    if newIndex > #alphabet then\n      newIndex = newIndex\
    \ - #alphabet\n    end\n    encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\
    \  end\n  return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \  local new_string = ''\n  for i = 1, #s do\n    local letter = string.sub(s,\
    \ i, i)\n    local index = string.find(alphabet, letter)\n    if index then\n\
    \      new_string = new_string .. string.sub(new_alphabet, index, index)\n   \
    \ else\n      new_string = new_string .. letter\n    end\n  end\n  return new_string\n\
    end", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n\
    \  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index = alphabet:find(char)\n\
    \    if index then\n      local newIndex = index + (2 * 2)\n      if newIndex\
    \ > #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n     \
    \ encrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted\
    \ = encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            index\
    \ = index + 2 * 2\n            if index > #alphabet then\n                index\
    \ = index - #alphabet\n            end\n            encrypted = encrypted .. alphabet:sub(index,\
    \ index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local result = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n\
    \        local index = alphabet:find(char)\n        if index then\n          \
    \  local new_index = index + 2 * 2\n            if new_index > #alphabet then\n\
    \                new_index = new_index - #alphabet\n            end\n        \
    \    result = result .. alphabet:sub(new_index, new_index)\n        else\n   \
    \         result = result .. char\n        end\n    end\n    return result\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local newIndex = index + 2 * 2\n      if newIndex >\
    \ #alphabet then\n        newIndex = newIndex - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + (2 * 2)\n            if new_index > #alphabet then\n   \
    \             new_index = new_index - #alphabet\n            end\n           \
    \ encrypted = encrypted .. alphabet:sub(new_index, new_index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j',\
    \ 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local letter = string.sub(s,\
    \ i, i)\n        local index = 0\n        for j = 1, #alphabet do\n          \
    \  if letter == alphabet[j] then\n                index = j\n            end\n\
    \        end\n        local newIndex = index + 2 * 2\n        if newIndex > #alphabet\
    \ then\n            newIndex = newIndex - #alphabet\n        end\n        encrypted\
    \ = encrypted .. alphabet[newIndex]\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    if\
    \ index then\n      local new_index = index + 2 * 2\n      if new_index > #alphabet\
    \ then\n        new_index = new_index - #alphabet\n      end\n      encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + (2 * 2)\n            if new_index > #alphabet then\n   \
    \             new_index = new_index - #alphabet\n            end\n           \
    \ encrypted = encrypted .. alphabet:sub(new_index, new_index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1, #s do\n \
    \   local char = s:sub(i, i)\n    local index = alphabet:find(char)\n    if index\
    \ then\n      local newIndex = (index + (2 * 2)) % #alphabet\n      encrypted\
    \ = encrypted .. alphabet:sub(newIndex, newIndex)\n    else\n      encrypted =\
    \ encrypted .. char\n    end\n  end\n  return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "\tlocal s = s\n\tlocal s2 = ''\n\tlocal\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tfor i = 1, #s do\n\t\tlocal letter\
    \ = string.sub(s, i, i)\n\t\tlocal index = string.find(alphabet, letter)\n\t\t\
    if index == nil then\n\t\t\ts2 = s2 .. letter\n\t\telse\n\t\t\tlocal new_index\
    \ = index + 2 * 2\n\t\t\tif new_index > #alphabet then\n\t\t\t\tnew_index = new_index\
    \ - #alphabet\n\t\t\tend\n\t\t\ts2 = s2 .. string.sub(alphabet, new_index, new_index)\n\
    \t\tend\n\tend\n\treturn s2\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            encrypted\
    \ = encrypted .. alphabet:sub((index + 2 * 2) % 26 + 1, (index + 2 * 2) % 26 +\
    \ 1)\n        else\n            encrypted = encrypted .. c\n        end\n    end\n\
    \    return encrypted\nend", "    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'}\n    local new_alphabet = {}\n    local new_string = ''\n\
    \    for i = 1, #alphabet do\n        if i + 2 * 2 > #alphabet then\n        \
    \    new_alphabet[i] = alphabet[i + 2 * 2 - #alphabet]\n        else\n       \
    \     new_alphabet[i] = alphabet[i + 2 * 2]\n        end\n    end\n    for i =\
    \ 1, #s do\n        for j = 1, #alphabet do\n            if s:sub(i, i) == alphabet[j]\
    \ then\n                new_string = new_string .. new_alphabet[j]\n         \
    \   end\n        end\n    end\n    return new_string\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = (index + (2 * 2)) % #alphabet\n\
    \            encrypted = encrypted .. alphabet:sub(new_index, new_index)\n   \
    \     else\n            encrypted = encrypted .. c\n        end\n    end\n   \
    \ return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local index = string.find(alphabet,\
    \ s:sub(i, i))\n        if index == nil then\n            encrypted = encrypted\
    \ .. s:sub(i, i)\n        else\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local new_index\
    \ = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. char\n      \
    \  end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n \
    \   for i = 1, #s do\n        local char = s:sub(i, i)\n        local index =\
    \ alphabet:find(char)\n        if index then\n            local newIndex = (index\
    \ + (2 * 2)) % 26\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i=1, #s do\n\t\tlocal char = s:sub(i,i)\n\t\tlocal\
    \ index = alphabet:find(char)\n\t\tif index then\n\t\t\tlocal newIndex = index\
    \ + 2 * 2\n\t\t\tif newIndex > #alphabet then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\
    \t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(newIndex, newIndex)\n\t\
    \telse\n\t\t\tencrypted = encrypted .. char\n\t\tend\n\tend\n\treturn encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local new_alphabet\
    \ = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n    local new_s = ''\n\
    \    for i = 1, #s do\n        local c = string.sub(s, i, i)\n        local index\
    \ = string.find(alphabet, c)\n        if index then\n            new_s = new_s\
    \ .. string.sub(new_alphabet, index, index)\n        else\n            new_s =\
    \ new_s .. c\n        end\n    end\n    return new_s\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 2) % 26 + 1, (index + 2) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. char\n        end\n    end\n    return encrypted\nend", "  local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for i = 1,\
    \ #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n    local\
    \ newIndex = index + 2 * 2\n    if newIndex > #alphabet then\n      newIndex =\
    \ newIndex - #alphabet\n    end\n    encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n  end\n  return encrypted\nend", "  local alphabet = {'a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local s = string.lower(s)\n  local new_string\
    \ = ''\n  for i = 1, #s do\n    local letter = string.sub(s, i, i)\n    local\
    \ index = 0\n    for j = 1, #alphabet do\n      if letter == alphabet[j] then\n\
    \        index = j\n      end\n    end\n    if index == 0 then\n      new_string\
    \ = new_string .. letter\n    else\n      new_string = new_string .. alphabet[index\
    \ + 2]\n    end\n  end\n  return new_string\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)\n\
    \    local new_s = ''\n    for i = 1, #s do\n        local c = string.sub(s, i,\
    \ i)\n        local index = string.find(alphabet, c)\n        if index then\n\
    \            new_s = new_s .. string.sub(new_alphabet, index, index)\n       \
    \ else\n            new_s = new_s .. c\n        end\n    end\n    return new_s\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local char = s:sub(i, i)\n        local\
    \ index = alphabet:find(char)\n        if index then\n            local newIndex\
    \ = (index + (2 * 2)) % 26\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local new_index = index + 2 * 2\n      if new_index\
    \ > #alphabet then\n        new_index = new_index - #alphabet\n      end\n   \
    \   encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    else\n  \
    \    encrypted = encrypted .. c\n    end\n  end\n  return encrypted\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n\
    \    for i = 1, #s do\n        local letter = s:sub(i, i)\n        local index\
    \ = alphabet:find(letter)\n        if index then\n            local new_index\
    \ = index + 2 * 2\n            if new_index > #alphabet then\n               \
    \ new_index = new_index - #alphabet\n            end\n            encrypted =\
    \ encrypted .. alphabet:sub(new_index, new_index)\n        else\n            encrypted\
    \ = encrypted .. letter\n        end\n    end\n    return encrypted\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n\
    \    for i = 1, #s do\n        local char = s:sub(i, i)\n        local index =\
    \ alphabet:find(char)\n        if index then\n            local newIndex = index\
    \ + (2 * 2)\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local char = s:sub(i, i)\n        local index = alphabet:find(char)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. char\n       \
    \ end\n    end\n    return encrypted\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        local new_index = index + 2 *\
    \ 2\n        if new_index > #alphabet then\n            new_index = new_index\
    \ - #alphabet\n        end\n        encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n    end\n    return encrypted\nend", "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \tlocal encrypted = ''\n\tfor i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal\
    \ index = alphabet:find(c)\n\t\tif index then\n\t\t\tindex = index + 2 * 2\n\t\
    \t\tif index > #alphabet then\n\t\t\t\tindex = index - #alphabet\n\t\t\tend\n\t\
    \t\tencrypted = encrypted .. alphabet:sub(index, index)\n\t\telse\n\t\t\tencrypted\
    \ = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            encrypted = encrypted .. alphabet:sub((index\
    \ + 4) % 26 + 1, (index + 4) % 26 + 1)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + (2 * 2)\n       \
    \     if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(newIndex,\
    \ newIndex)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "    -- TODO: Implement this function\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local new_index = index\
    \ + 2 * 2\n            if new_index > #alphabet then\n                new_index\
    \ = new_index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}\n  local result = ''\n\
    \  for i = 1, #s do\n    local c = s:sub(i, i)\n    local index = 0\n    for j\
    \ = 1, #alphabet do\n      if c == alphabet[j] then\n        index = j\n     \
    \ end\n    end\n    result = result .. alphabet[index + 2]\n  end\n  return result\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n\
    \    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            result = result .. alphabet:sub(index + 2,\
    \ index + 2)\n        else\n            result = result .. c\n        end\n  \
    \  end\n    return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local new_alphabet = string.sub(alphabet,\
    \ 3) .. string.sub(alphabet, 1, 2)\n    local new_s = ''\n    for i = 1, #s do\n\
    \        local c = string.sub(s, i, i)\n        local index = string.find(alphabet,\
    \ c)\n        if index then\n            new_s = new_s .. string.sub(new_alphabet,\
    \ index, index)\n        else\n            new_s = new_s .. c\n        end\n \
    \   end\n    return new_s\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = (index + (2 * 2)) % #alphabet\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "  local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n  local new_alphabet = string.sub(alphabet,\
    \ 3) .. string.sub(alphabet, 1, 2)\n  local new_s = ''\n  for i = 1, #s do\n \
    \   local c = string.sub(s, i, i)\n    local index = string.find(alphabet, c)\n\
    \    if index then\n      new_s = new_s .. string.sub(new_alphabet, index, index)\n\
    \    else\n      new_s = new_s .. c\n    end\n  end\n  return new_s\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local result = ''\n   \
    \ for i = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local newIndex = index + 2 * 2\n         \
    \   if newIndex > #alphabet then\n                newIndex = newIndex - #alphabet\n\
    \            end\n            result = result .. alphabet:sub(newIndex, newIndex)\n\
    \        else\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local\
    \ encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n      \
    \  local index = alphabet:find(c)\n        if index then\n            local new_index\
    \ = (index + 2 * 2) % #alphabet\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \  local encrypted = ''\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local\
    \ index = alphabet:find(c)\n    if index then\n      index = index + 2 * 2\n \
    \     if index > #alphabet then\n        index = index - #alphabet\n      end\n\
    \      encrypted = encrypted .. alphabet:sub(index, index)\n    else\n      encrypted\
    \ = encrypted .. c\n    end\n  end\n  return encrypted\nend", "    local s = s:lower()\n\
    \    local result = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local n = string.byte(c)\n        if n >= 97 and n <= 122 then\n    \
    \        n = n + 2\n            if n > 122 then\n                n = n - 26\n\
    \            end\n        end\n        result = result .. string.char(n)\n   \
    \ end\n    return result\nend", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\
    \    local encrypted = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n\
    \        local index = alphabet:find(c)\n        if index then\n            local\
    \ new_index = index + 2 * 2\n            if new_index > #alphabet then\n     \
    \           new_index = new_index - #alphabet\n            end\n            encrypted\
    \ = encrypted .. alphabet:sub(new_index, new_index)\n        else\n          \
    \  encrypted = encrypted .. c\n        end\n    end\n    return encrypted\nend",
  "  local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n  local encrypted = ''\n  for\
    \ i = 1, #s do\n    local c = s:sub(i, i)\n    local index = alphabet:find(c)\n\
    \    if index then\n      local new_index = index + 2 * 2\n      if new_index\
    \ > #alphabet then\n        new_index = new_index - #alphabet\n      end\n   \
    \   encrypted = encrypted .. alphabet:sub(new_index, new_index)\n    else\n  \
    \    encrypted = encrypted .. c\n    end\n  end\n  return encrypted\nend", " \
    \   local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n\
    \    for i = 1, #s do\n        local char = s:sub(i, i)\n        local index =\
    \ alphabet:find(char)\n        if index then\n            local newIndex = index\
    \ + 2 * 2\n            if newIndex > #alphabet then\n                newIndex\
    \ = newIndex - #alphabet\n            end\n            encrypted = encrypted ..\
    \ alphabet:sub(newIndex, newIndex)\n        else\n            encrypted = encrypted\
    \ .. char\n        end\n    end\n    return encrypted\nend", "    local alphabet\
    \ = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i = 1, #s\
    \ do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            index = index + 2 * 2\n            if index\
    \ > #alphabet then\n                index = index - #alphabet\n            end\n\
    \            encrypted = encrypted .. alphabet:sub(index, index)\n        else\n\
    \            encrypted = encrypted .. c\n        end\n    end\n    return encrypted\n\
    end", "    local alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted\
    \ = ''\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local index\
    \ = alphabet:find(c)\n        if index then\n            local new_index = index\
    \ + 2 * 2\n            if new_index > #alphabet then\n                new_index\
    \ = new_index - #alphabet\n            end\n            encrypted = encrypted\
    \ .. alphabet:sub(new_index, new_index)\n        else\n            encrypted =\
    \ encrypted .. c\n        end\n    end\n    return encrypted\nend", "    local\
    \ alphabet = 'abcdefghijklmnopqrstuvwxyz'\n    local encrypted = ''\n    for i\
    \ = 1, #s do\n        local c = s:sub(i, i)\n        local index = alphabet:find(c)\n\
    \        if index then\n            local new_index = index + 2 * 2\n        \
    \    if new_index > #alphabet then\n                new_index = new_index - #alphabet\n\
    \            end\n            encrypted = encrypted .. alphabet:sub(new_index,\
    \ new_index)\n        else\n            encrypted = encrypted .. c\n        end\n\
    \    end\n    return encrypted\nend", "  local alphabet = {}\n  for i = 1, 26\
    \ do\n    alphabet[i] = string.char(string.byte('a') + i - 1)\n  end\n  local\
    \ result = ''\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    local index\
    \ = table.indexof(alphabet, char)\n    if index then\n      local new_index =\
    \ index + 2 * 2\n      if new_index > 26 then\n        new_index = new_index -\
    \ 26\n      end\n      result = result .. alphabet[new_index]\n    else\n    \
    \  result = result .. char\n    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

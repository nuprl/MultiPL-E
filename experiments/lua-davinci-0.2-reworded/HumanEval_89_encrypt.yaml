---
name: HumanEval_89_encrypt
language: lua
prompt: "-- Create a function encrypt that takes a string as an argument and\n-- returns
  a string encrypted with the alphabet being rotated. \n-- The alphabet should be
  rotated in a manner such that the letters \n-- shift down by two multiplied to two
  places.\n-- For example:\n-- >>> encrypt('hi')\n-- 'lm'\n-- >>> encrypt('asdfghjkl')\n--
  'ewhjklnop'\n-- >>> encrypt('gf')\n-- 'kj'\n-- >>> encrypt('et')\n-- 'ix'\nlocal
  function encrypt(s)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = encrypt
      lu.assertEquals(candidate('hi'), 'lm')
      lu.assertEquals(candidate('asdfghjkl'), 'ewhjklnop')
      lu.assertEquals(candidate('gf'), 'kj')
      lu.assertEquals(candidate('et'), 'ix')
      lu.assertEquals(candidate('faewfawefaewg'), 'jeiajeaijeiak')
      lu.assertEquals(candidate('hellomyfriend'), 'lippsqcjvmirh')
      lu.assertEquals(candidate('dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh'), 'hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl')
      lu.assertEquals(candidate('a'), 'e')
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = (index + (2 * 2)) % #alphabet
        result = result .. alphabet:sub(newIndex, newIndex)
      else
        result = result .. c
      end
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
    local result = ''
    for i = 1, #s do
      local letter = s:sub(i, i)
      local index = 1
      for j = 1, #alphabet do
        if letter == alphabet[j] then
          index = j
        end
      end
      result = result .. alphabet[index + 2]
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        c = alphabet:sub(new_index, new_index)
      end
      result = result .. c
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local alphabet_len = string.len(alphabet)
      local result = ''
      for i = 1, string.len(s) do
          local c = string.sub(s, i, i)
          local index = string.find(alphabet, c)
          if index then
              local new_index = index + 2 * 2
              if new_index > alphabet_len then
                  new_index = new_index - alphabet_len
              end
              result = result .. string.sub(alphabet, new_index, new_index)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local encrypted = ''
      for i = 1, #s do
          local letter = s:sub(i, i)
          local index = table.indexof(alphabet, letter)
          local new_index = index + 2 * 2
          if new_index > #alphabet then
              new_index = new_index - #alphabet
          end
          encrypted = encrypted .. alphabet[new_index]
      end
      return encrypted
  end
- |2-
    local s = s:lower()
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local new_alphabet = alphabet:sub(3) .. alphabet:sub(1,2)
    local new_s = ''
    for i = 1, #s do
      local c = s:sub(i,i)
      local index = alphabet:find(c)
      if index then
        new_s = new_s .. new_alphabet:sub(index,index)
      else
        new_s = new_s .. c
      end
    end
    return new_s
  end
- |2-
      local function shift(c)
          local a = string.byte('a')
          local z = string.byte('z')
          local A = string.byte('A')
          local Z = string.byte('Z')
          local c = string.byte(c)
          if c >= a and c <= z then
              c = c + 2
              if c > z then
                  c = a + (c - z) - 1
              end
          elseif c >= A and c <= Z then
              c = c + 2
              if c > Z then
                  c = A + (c - Z) - 1
              end
          end
          return string.char(c)
      end
      local result = ''
      for i = 1, #s do
          result = result .. shift(s:sub(i, i))
      end
      return result
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        index = index + 2 * 2
        if index > #alphabet then
          index = index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(index, index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local idx = alphabet:find(c)
          local new_idx = idx + 2 * 2
          if new_idx > #alphabet then
              new_idx = new_idx - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(new_idx, new_idx)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor
  i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\t\tif
  index then\n\t\t\tlocal new_index = index + 2 * 2\n\t\t\tif new_index > #alphabet
  then\n\t\t\t\tnew_index = new_index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted
  .. alphabet:sub(new_index, new_index)\n\t\telse\n\t\t\tencrypted = encrypted ..
  c\n\t\tend\n\tend\n\treturn encrypted\nend"
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          local newIndex = index + 4
          if newIndex > 26 then
              newIndex = newIndex - 26
          end
          encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        encrypted = encrypted .. alphabet:sub((index + 2 * 2) % 26 + 1, (index + 2 * 2) % 26 + 1)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local index = string.find(alphabet, s:sub(i, i))
          local new_index = index + (2 * 2)
          if new_index > #alphabet then
              new_index = new_index - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(new_index, new_index)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          local newIndex = (index + 2) * 2
          encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              result = result .. alphabet:sub(newIndex, newIndex)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
      local new_s = ''
      for i = 1, #s do
          local c = string.sub(s, i, i)
          local index = string.find(alphabet, c)
          if index then
              new_s = new_s .. string.sub(new_alphabet, index, index)
          else
              new_s = new_s .. c
          end
      end
      return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          local newIndex = index + (2 * 2)
          if newIndex > #alphabet then
              newIndex = newIndex - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local letter = s:sub(i, i)
          local index = alphabet:find(letter)
          local newIndex = index + (2 * 2)
          if newIndex > #alphabet then
              newIndex = newIndex - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local s_encrypt = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local pos = alphabet:find(c)
          if pos then
              local pos_encrypt = (pos + 2 * 2) % #alphabet
              if pos_encrypt == 0 then
                  pos_encrypt = #alphabet
              end
              s_encrypt = s_encrypt .. alphabet:sub(pos_encrypt, pos_encrypt)
          else
              s_encrypt = s_encrypt .. c
          end
      end
      return s_encrypt
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          local new_index = index + 2 * 2
          if new_index > #alphabet then
              new_index = new_index - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(new_index, new_index)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
      local new_s = ''
      for i = 1, #s do
          local c = string.sub(s, i, i)
          local index = string.find(alphabet, c)
          if index then
              new_s = new_s .. string.sub(new_alphabet, index, index)
          else
              new_s = new_s .. c
          end
      end
      return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = (index + (2 * 2)) % 26
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = (index + 2 * 2) % #alphabet
        if new_index == 0 then
          new_index = #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
    local new_string = ''
    for i = 1, #s do
      local c = string.sub(s, i, i)
      local index = string.find(alphabet, c)
      if index then
        new_string = new_string .. string.sub(new_alphabet, index, index)
      else
        new_string = new_string .. c
      end
    end
    return new_string
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local encrypted = ''
      for i = 1, #s do
          local letter = s:sub(i, i)
          local index = 0
          for j = 1, #alphabet do
              if letter == alphabet[j] then
                  index = j
              end
          end
          if index > 0 then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet[newIndex]
          else
              encrypted = encrypted .. letter
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              result = result .. alphabet:sub(index + 2 * 2, index + 2 * 2)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local j = alphabet:find(c)
          if j then
              encrypted = encrypted .. alphabet:sub((j + 2) % 26 + 1, (j + 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local offset = c:byte() - string.byte('a')
      local new_offset = (offset + 2 * 2) % 26
      local new_c = string.char(string.byte('a') + new_offset)
      result = result .. new_c
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              result = result .. alphabet:sub(index + 2 * 2, index + 2 * 2)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        encrypted = encrypted .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local function rot(c)
          local i = string.byte(c)
          if i >= string.byte('a') and i <= string.byte('z') then
              i = i + 2 * 2
              if i > string.byte('z') then
                  i = i - 26
              end
          end
          return string.char(i)
      end
      return string.gsub(s, '.', rot)
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = (index + (2 * 2)) % 26
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local newIndex = index + (2 * 2)
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        encrypted = encrypted .. alphabet:sub((index + 2) % #alphabet + 1, (index + 2) % #alphabet + 1)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        result = result .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)
      else
        result = result .. char
      end
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        index = index + 2 * 2
        if index > #alphabet then
          index = index - #alphabet
        end
        result = result .. alphabet:sub(index, index)
      else
        result = result .. c
      end
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              result = result .. alphabet:sub(new_index, new_index)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
    local encrypted = ''
    for i = 1, #s do
      local letter = string.sub(s, i, i)
      local index = table.indexOf(alphabet, letter)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet[newIndex]
      else
        encrypted = encrypted .. letter
      end
    end
    return encrypted
  end
- |2-
      local function rotate(c)
          local a = string.byte('a')
          local z = string.byte('z')
          local A = string.byte('A')
          local Z = string.byte('Z')
          local c = string.byte(c)
          if c >= a and c <= z then
              c = c + 2
              if c > z then
                  c = c - 26
              end
          elseif c >= A and c <= Z then
              c = c + 2
              if c > Z then
                  c = c - 26
              end
          end
          return string.char(c)
      end
      local t = {}
      for i = 1, #s do
          t[i] = rotate(s:sub(i, i))
      end
      return table.concat(t)
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              result = result .. alphabet:sub(newIndex, newIndex)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local idx = alphabet:find(c)
          if idx then
              local new_idx = (idx + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_idx, new_idx)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local result = ''
      for i = 1, #s do
          local letter = s:sub(i, i)
          local index = nil
          for j = 1, #alphabet do
              if alphabet[j] == letter then
                  index = j
              end
          end
          if index == nil then
              result = result .. letter
          else
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              result = result .. alphabet[new_index]
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal result = ''\n\tfor i =
  1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\t\tif
  index then\n\t\t\tresult = result .. alphabet:sub((index + 2 * 2 - 1) % #alphabet
  + 1, (index + 2 * 2 - 1) % #alphabet + 1)\n\t\telse\n\t\t\tresult = result .. c\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local letter = s:sub(i, i)
          local index = alphabet:find(letter)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. letter
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        encrypted = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        index = index + 2 * 2
        if index > #alphabet then
          index = index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(index, index)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local encrypted = ''
      for i = 1, #s do
          local letter = string.sub(s, i, i)
          local index = 0
          for j = 1, #alphabet do
              if letter == alphabet[j] then
                  index = j
              end
          end
          if index == 0 then
              encrypted = encrypted .. letter
          else
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet[newIndex]
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        result = result .. alphabet:sub(newIndex, newIndex)
      else
        result = result .. c
      end
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + (2 * 2)
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
    local new_s = ''
    for i = 1, #s do
      local c = string.sub(s, i, i)
      local index = string.find(alphabet, c)
      if index then
        new_s = new_s .. string.sub(new_alphabet, index, index)
      else
        new_s = new_s .. c
      end
    end
    return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local function shift(c)
          return string.char(string.byte(c) + 2 * 2)
      end
      return string.gsub(s, '.', shift)
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        result = result .. alphabet:sub(newIndex, newIndex)
      else
        result = result .. c
      end
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              result = result .. alphabet:sub(newIndex, newIndex)
          else
              result = result .. char
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local index = string.find(alphabet, s:sub(i, i))
          local newIndex = index + (2 * 2)
          if newIndex > #alphabet then
              newIndex = newIndex - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local new_alphabet = alphabet:sub(3) .. alphabet:sub(1,2)
    local new_s = ''
    for i = 1, #s do
      local c = s:sub(i,i)
      local index = alphabet:find(c)
      if index then
        new_s = new_s .. new_alphabet:sub(index,index)
      else
        new_s = new_s .. c
      end
    end
    return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index == nil then
              encrypted = encrypted .. c
          else
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          encrypted = encrypted .. alphabet:sub(index + 2, index + 2)
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local alphabet_length = #alphabet
    local encrypted_string = ''
    for i = 1, #s do
      local letter = s:sub(i, i)
      local letter_index = alphabet:find(letter)
      if letter_index then
        local encrypted_letter_index = (letter_index + (2 * 2)) % alphabet_length
        encrypted_string = encrypted_string .. alphabet:sub(encrypted_letter_index, encrypted_letter_index)
      else
        encrypted_string = encrypted_string .. letter
      end
    end
    return encrypted_string
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local encrypted = ''
      for i = 1, #s do
          local letter = string.sub(s, i, i)
          local index = 0
          for j = 1, #alphabet do
              if letter == alphabet[j] then
                  index = j
              end
          end
          local new_index = index + 2 * 2
          if new_index > #alphabet then
              new_index = new_index - #alphabet
          end
          encrypted = encrypted .. alphabet[new_index]
      end
      return encrypted
  end
- |2-
      local function encrypt_char(c)
          local char_code = string.byte(c)
          local new_char_code = char_code + 2 * 2
          return string.char(new_char_code)
      end
      return string.gsub(s, '.', encrypt_char)
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              result = result .. alphabet:sub(newIndex, newIndex)
          else
              result = result .. char
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
      local new_s = ''
      for i = 1, string.len(s) do
          local letter = string.sub(s, i, i)
          local index = string.find(alphabet, letter)
          new_s = new_s .. string.sub(new_alphabet, index, index)
      end
      return new_s
  end
- |2-
      local s = string.lower(s)
      local result = ''
      for i = 1, #s do
          local c = string.byte(s, i)
          if c >= 97 and c <= 122 then
              c = c + 2
              if c > 122 then
                  c = c - 26
              end
          end
          result = result .. string.char(c)
      end
      return result
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        index = index + 2 * 2
        if index > #alphabet then
          index = index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(index, index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = {}
      for i = 1, #alphabet do
          new_alphabet[i] = alphabet:sub(i + 2 * 2, i + 2 * 2)
      end
      local new_s = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          new_s = new_s .. new_alphabet[index]
      end
      return new_s
  end
- |2-
      local a = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'}
      local b = {'c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b'}
      local c = {}
      for i = 1, #s do
          for j = 1, #a do
              if s:sub(i,i) == a[j] then
                  c[i] = b[j]
              end
          end
      end
      return table.concat(c)
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        result = result .. alphabet:sub((index + 2 * 2) % #alphabet + 1, (index + 2 * 2) % #alphabet + 1)
      else
        result = result .. c
      end
    end
    return result
  end
- "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor
  i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\t\tif
  index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\t\t\t\tindex
  = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,
  index)\n\t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend"
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      local newIndex = index + 2 * 2
      if newIndex > #alphabet then
        newIndex = newIndex - #alphabet
      end
      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
    local new_string = ''
    for i = 1, #s do
      local letter = string.sub(s, i, i)
      local index = string.find(alphabet, letter)
      if index then
        new_string = new_string .. string.sub(new_alphabet, index, index)
      else
        new_string = new_string .. letter
      end
    end
    return new_string
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local newIndex = index + (2 * 2)
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              result = result .. alphabet:sub(new_index, new_index)
          else
              result = result .. char
          end
      end
      return result
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local newIndex = index + 2 * 2
        if newIndex > #alphabet then
          newIndex = newIndex - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local encrypted = ''
      for i = 1, #s do
          local letter = string.sub(s, i, i)
          local index = 0
          for j = 1, #alphabet do
              if letter == alphabet[j] then
                  index = j
              end
          end
          local newIndex = index + 2 * 2
          if newIndex > #alphabet then
              newIndex = newIndex - #alphabet
          end
          encrypted = encrypted .. alphabet[newIndex]
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + (2 * 2)
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = alphabet:find(char)
      if index then
        local newIndex = (index + (2 * 2)) % #alphabet
        encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
      else
        encrypted = encrypted .. char
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- "\tlocal s = s\n\tlocal s2 = ''\n\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tfor
  i = 1, #s do\n\t\tlocal letter = string.sub(s, i, i)\n\t\tlocal index = string.find(alphabet,
  letter)\n\t\tif index == nil then\n\t\t\ts2 = s2 .. letter\n\t\telse\n\t\t\tlocal
  new_index = index + 2 * 2\n\t\t\tif new_index > #alphabet then\n\t\t\t\tnew_index
  = new_index - #alphabet\n\t\t\tend\n\t\t\ts2 = s2 .. string.sub(alphabet, new_index,
  new_index)\n\t\tend\n\tend\n\treturn s2\nend"
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2 * 2) % 26 + 1, (index + 2 * 2) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
      local new_alphabet = {}
      local new_string = ''
      for i = 1, #alphabet do
          if i + 2 * 2 > #alphabet then
              new_alphabet[i] = alphabet[i + 2 * 2 - #alphabet]
          else
              new_alphabet[i] = alphabet[i + 2 * 2]
          end
      end
      for i = 1, #s do
          for j = 1, #alphabet do
              if s:sub(i, i) == alphabet[j] then
                  new_string = new_string .. new_alphabet[j]
              end
          end
      end
      return new_string
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local index = string.find(alphabet, s:sub(i, i))
          if index == nil then
              encrypted = encrypted .. s:sub(i, i)
          else
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = (index + (2 * 2)) % 26
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor
  i=1, #s do\n\t\tlocal char = s:sub(i,i)\n\t\tlocal index = alphabet:find(char)\n\t\tif
  index then\n\t\t\tlocal newIndex = index + 2 * 2\n\t\t\tif newIndex > #alphabet
  then\n\t\t\t\tnewIndex = newIndex - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted
  .. alphabet:sub(newIndex, newIndex)\n\t\telse\n\t\t\tencrypted = encrypted .. char\n\t\tend\n\tend\n\treturn
  encrypted\nend"
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
      local new_s = ''
      for i = 1, #s do
          local c = string.sub(s, i, i)
          local index = string.find(alphabet, c)
          if index then
              new_s = new_s .. string.sub(new_alphabet, index, index)
          else
              new_s = new_s .. c
          end
      end
      return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 2) % 26 + 1, (index + 2) % 26 + 1)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      local newIndex = index + 2 * 2
      if newIndex > #alphabet then
        newIndex = newIndex - #alphabet
      end
      encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
    end
    return encrypted
  end
- |2-
    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
    local s = string.lower(s)
    local new_string = ''
    for i = 1, #s do
      local letter = string.sub(s, i, i)
      local index = 0
      for j = 1, #alphabet do
        if letter == alphabet[j] then
          index = j
        end
      end
      if index == 0 then
        new_string = new_string .. letter
      else
        new_string = new_string .. alphabet[index + 2]
      end
    end
    return new_string
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
      local new_s = ''
      for i = 1, #s do
          local c = string.sub(s, i, i)
          local index = string.find(alphabet, c)
          if index then
              new_s = new_s .. string.sub(new_alphabet, index, index)
          else
              new_s = new_s .. c
          end
      end
      return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = (index + (2 * 2)) % 26
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local letter = s:sub(i, i)
          local index = alphabet:find(letter)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. letter
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          local new_index = index + 2 * 2
          if new_index > #alphabet then
              new_index = new_index - #alphabet
          end
          encrypted = encrypted .. alphabet:sub(new_index, new_index)
      end
      return encrypted
  end
- "\tlocal alphabet = 'abcdefghijklmnopqrstuvwxyz'\n\tlocal encrypted = ''\n\tfor
  i = 1, #s do\n\t\tlocal c = s:sub(i, i)\n\t\tlocal index = alphabet:find(c)\n\t\tif
  index then\n\t\t\tindex = index + 2 * 2\n\t\t\tif index > #alphabet then\n\t\t\t\tindex
  = index - #alphabet\n\t\t\tend\n\t\t\tencrypted = encrypted .. alphabet:sub(index,
  index)\n\t\telse\n\t\t\tencrypted = encrypted .. c\n\t\tend\n\tend\n\treturn encrypted\nend"
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              encrypted = encrypted .. alphabet:sub((index + 4) % 26 + 1, (index + 4) % 26 + 1)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + (2 * 2)
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'}
    local result = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = 0
      for j = 1, #alphabet do
        if c == alphabet[j] then
          index = j
        end
      end
      result = result .. alphabet[index + 2]
    end
    return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              result = result .. alphabet:sub(index + 2, index + 2)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
      local new_s = ''
      for i = 1, #s do
          local c = string.sub(s, i, i)
          local index = string.find(alphabet, c)
          if index then
              new_s = new_s .. string.sub(new_alphabet, index, index)
          else
              new_s = new_s .. c
          end
      end
      return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + (2 * 2)) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local new_alphabet = string.sub(alphabet, 3) .. string.sub(alphabet, 1, 2)
    local new_s = ''
    for i = 1, #s do
      local c = string.sub(s, i, i)
      local index = string.find(alphabet, c)
      if index then
        new_s = new_s .. string.sub(new_alphabet, index, index)
      else
        new_s = new_s .. c
      end
    end
    return new_s
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              result = result .. alphabet:sub(newIndex, newIndex)
          else
              result = result .. c
          end
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = (index + 2 * 2) % #alphabet
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        index = index + 2 * 2
        if index > #alphabet then
          index = index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(index, index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local s = s:lower()
      local result = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local n = string.byte(c)
          if n >= 97 and n <= 122 then
              n = n + 2
              if n > 122 then
                  n = n - 26
              end
          end
          result = result .. string.char(n)
      end
      return result
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = 'abcdefghijklmnopqrstuvwxyz'
    local encrypted = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      local index = alphabet:find(c)
      if index then
        local new_index = index + 2 * 2
        if new_index > #alphabet then
          new_index = new_index - #alphabet
        end
        encrypted = encrypted .. alphabet:sub(new_index, new_index)
      else
        encrypted = encrypted .. c
      end
    end
    return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local char = s:sub(i, i)
          local index = alphabet:find(char)
          if index then
              local newIndex = index + 2 * 2
              if newIndex > #alphabet then
                  newIndex = newIndex - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(newIndex, newIndex)
          else
              encrypted = encrypted .. char
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              index = index + 2 * 2
              if index > #alphabet then
                  index = index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(index, index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
      local alphabet = 'abcdefghijklmnopqrstuvwxyz'
      local encrypted = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          local index = alphabet:find(c)
          if index then
              local new_index = index + 2 * 2
              if new_index > #alphabet then
                  new_index = new_index - #alphabet
              end
              encrypted = encrypted .. alphabet:sub(new_index, new_index)
          else
              encrypted = encrypted .. c
          end
      end
      return encrypted
  end
- |2-
    local alphabet = {}
    for i = 1, 26 do
      alphabet[i] = string.char(string.byte('a') + i - 1)
    end
    local result = ''
    for i = 1, #s do
      local char = s:sub(i, i)
      local index = table.indexof(alphabet, char)
      if index then
        local new_index = index + 2 * 2
        if new_index > 26 then
          new_index = new_index - 26
        end
        result = result .. alphabet[new_index]
      else
        result = result .. char
      end
    end
    return result
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

name: HumanEval_162_string_to_md5
language: lua
results:
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxtwut6us.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpxtwut6us.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpxtwut6us.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw8pi3n04.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpw8pi3n04.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw8pi3n04.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi7bfwv7u.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpi7bfwv7u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpi7bfwv7u.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil or text == '' then\n        return nil\n    end\n    return\
    \ md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmzpszp9s.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpmzpszp9s.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpmzpszp9s.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil or text == '' then\n        return nil\n    end\n    return\
    \ md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq4eftp9f.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpq4eftp9f.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpq4eftp9f.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprv5_4b38.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmprv5_4b38.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmprv5_4b38.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpua85uyzw.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpua85uyzw.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpua85uyzw.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjirvv7fp.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpjirvv7fp.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpjirvv7fp.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpllf0lu2_.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpllf0lu2_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpllf0lu2_.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwrku62wh.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpwrku62wh.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpwrku62wh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8x_cmnjs.lua:10:\
    \ attempt to call a nil value (field 'sumhexa')\nstack traceback:\n\t/tmp/tmp8x_cmnjs.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp8x_cmnjs.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvrbud5v3.lua:10:\
    \ attempt to call a nil value (field 'sumhexa')\nstack traceback:\n\t/tmp/tmpvrbud5v3.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpvrbud5v3.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1c2ud8k9.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmp1c2ud8k9.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp1c2ud8k9.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp88_z3qx_.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmp88_z3qx_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp88_z3qx_.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxd757vex.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpxd757vex.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpxd757vex.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxcrz1fta.lua:10:\
    \ attempt to call a nil value (field 'sumhexa')\nstack traceback:\n\t/tmp/tmpxcrz1fta.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpxcrz1fta.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == nil or text == '' then\n        return nil\n    end\n    return\
    \ md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphlmc4giy.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmphlmc4giy.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmphlmc4giy.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavsdmn3a.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmpavsdmn3a.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpavsdmn3a.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    return md5.sumhexa(text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp18532lo9.lua:9:\
    \ attempt to index a nil value (global 'md5')\nstack traceback:\n\t/tmp/tmp18532lo9.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp18532lo9.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\n-- >>> string_to_md5('Hello world')\n\
    -- '3e25960a79dbc69b674cd4ec67a72c62'\nlocal function string_to_md5(text)\n  \
    \  if text == '' then\n        return nil\n    end\n    local md5 = require('md5')\n\
    \    return md5.sumhexa(text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_3863gev.lua:10:\
    \ attempt to call a nil value (field 'sumhexa')\nstack traceback:\n\t/tmp/tmp_3863gev.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp_3863gev.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception

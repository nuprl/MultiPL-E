name: HumanEval_81_numerical_letter_grade
language: lua
prompt: "-- It is the last week of the semester and the teacher has to give the grades\n\
  -- to students. The teacher has been making her own algorithm for grading.\n-- The\
  \ only problem is, she has lost the code she used for grading.\n-- She has given\
  \ you a table of GPAs for some students and you have to write \n-- a function that\
  \ can output a table of letter grades using the following table:\n-- GPA       |\
  \    Letter grade\n-- 4.0                A+\n-- > 3.7                A \n-- > 3.3\
  \                A- \n-- > 3.0                B+\n-- > 2.7                B \n--\
  \ > 2.3                B-\n-- > 2.0                C+\n-- > 1.7                C\n\
  -- > 1.3                C-\n-- > 1.0                D+ \n-- > 0.7              \
  \  D \n-- > 0.0                D-\n-- 0.0                E\n-- Example:\n-- >>>\
  \ grade_equation({4.0, 3, 1.7, 2, 3.5})\n-- {'A+', 'B', 'C-', 'C', 'A-'}\nlocal\
  \ function numerical_letter_grade(grades)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = numerical_letter_grade\n\
  \    lu.assertEquals(candidate({4.0, 3, 1.7, 2, 3.5}), {'A+', 'B', 'C-', 'C', 'A-'})\n\
  \    lu.assertEquals(candidate({1.2}), {'D+'})\n    lu.assertEquals(candidate({0.5}),\
  \ {'D-'})\n    lu.assertEquals(candidate({0.0}), {'E'})\n    lu.assertEquals(candidate({1.0,\
  \ 0.3, 1.5, 2.8, 3.3}), {'D', 'D-', 'C-', 'B', 'B+'})\n    lu.assertEquals(candidate({0.0,\
  \ 0.7}), {'E', 'D-'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local letter_grades = {}\n    for i = 1, #grades do\n        if\
    \ grades[i] >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif grades[i]\
    \ >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif grades[i] >=\
    \ 3.3 then\n            letter_grades[i] = 'A-'\n        elseif grades[i] >= 3.0\
    \ then\n            letter_grades[i] = 'B+'\n        elseif grades[i] >= 2.7 then\n\
    \            letter_grades[i] = 'B'\n        elseif grades[i] >= 2.3 then\n  \
    \          letter_grades[i] = 'B-'\n        elseif grades[i] >= 2.0 then\n   \
    \         letter_grades[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n    \
    \        letter_grades[i] = 'C'\n        elseif grades[i] >= 1.3 then\n      \
    \      letter_grades[i] = 'C-'\n        elseif grades[i] >= 1.0 then\n       \
    \     letter_grades[i] = 'D+'\n        elseif grades[i] >= 0.7 then\n        \
    \    letter_grades[i] = 'D'\n        elseif grades[i] >= 0.0 then\n          \
    \  letter_grades[i] = 'D-'\n        else\n            letter_grades[i] = 'E'\n\
    \        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for i = 1, #grades do\n        if grades[i] >= 4.0 then\n        \
    \    letter_grades[i] = 'A+'\n        elseif grades[i] >= 3.7 then\n         \
    \   letter_grades[i] = 'A'\n        elseif grades[i] >= 3.3 then\n           \
    \ letter_grades[i] = 'A-'\n        elseif grades[i] >= 3.0 then\n            letter_grades[i]\
    \ = 'B+'\n        elseif grades[i] >= 2.7 then\n            letter_grades[i] =\
    \ 'B'\n        elseif grades[i] >= 2.3 then\n            letter_grades[i] = 'B-'\n\
    \        elseif grades[i] >= 2.0 then\n            letter_grades[i] = 'C+'\n \
    \       elseif grades[i] >= 1.7 then\n            letter_grades[i] = 'C'\n   \
    \     elseif grades[i] >= 1.3 then\n            letter_grades[i] = 'C-'\n    \
    \    elseif grades[i] >= 1.0 then\n            letter_grades[i] = 'D+'\n     \
    \   elseif grades[i] >= 0.7 then\n            letter_grades[i] = 'D'\n       \
    \ elseif grades[i] >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n\
    \            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local letter_grades = {}\n    for _, grade in ipairs(grades) do\n \
    \       if grade >= 4.0 then\n            table.insert(letter_grades, 'A+')\n\
    \        elseif grade >= 3.7 then\n            table.insert(letter_grades, 'A')\n\
    \        elseif grade >= 3.3 then\n            table.insert(letter_grades, 'A-')\n\
    \        elseif grade >= 3.0 then\n            table.insert(letter_grades, 'B+')\n\
    \        elseif grade >= 2.7 then\n            table.insert(letter_grades, 'B')\n\
    \        elseif grade >= 2.3 then\n            table.insert(letter_grades, 'B-')\n\
    \        elseif grade >= 2.0 then\n            table.insert(letter_grades, 'C+')\n\
    \        elseif grade >= 1.7 then\n            table.insert(letter_grades, 'C')\n\
    \        elseif grade >= 1.3 then\n            table.insert(letter_grades, 'C-')\n\
    \        elseif grade >= 1.0 then\n            table.insert(letter_grades, 'D+')\n\
    \        elseif grade >= 0.7 then\n            table.insert(letter_grades, 'D')\n\
    \        elseif grade >= 0.0 then\n            table.insert(letter_grades, 'D-')\n\
    \        else\n            table.insert(letter_grades, 'E')\n        end\n   \
    \ end\n    return letter_grades\nend", "    local letter_grades = {}\n    for\
    \ i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n            letter_grades[i]\
    \ = 'A+'\n        elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n\
    \        elseif grade >= 3.3 then\n            letter_grades[i] = 'A-'\n     \
    \   elseif grade >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ grade >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif grade\
    \ >= 2.3 then\n            letter_grades[i] = 'B-'\n        elseif grade >= 2.0\
    \ then\n            letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n      \
    \      letter_grades[i] = 'C-'\n        elseif grade >= 1.0 then\n           \
    \ letter_grades[i] = 'D+'\n        elseif grade >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n\
    \        else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i, grade in ipairs(grades)\
    \ do\n        if grade >= 4.0 then\n            letter_grades[i] = 'A+'\n    \
    \    elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif\
    \ grade >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif grade\
    \ >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif grade >= 2.7\
    \ then\n            letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n     \
    \       letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n          \
    \  letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n            letter_grades[i]\
    \ = 'C-'\n        elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n\
    \        elseif grade >= 0.7 then\n            letter_grades[i] = 'D'\n      \
    \  elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n\
    \            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local letter_grades = {}\n    for i = 1, #grades do\n        if grades[i]\
    \ == 4.0 then\n            letter_grades[i] = 'A+'\n        elseif grades[i] >\
    \ 3.7 then\n            letter_grades[i] = 'A'\n        elseif grades[i] > 3.3\
    \ then\n            letter_grades[i] = 'A-'\n        elseif grades[i] > 3.0 then\n\
    \            letter_grades[i] = 'B+'\n        elseif grades[i] > 2.7 then\n  \
    \          letter_grades[i] = 'B'\n        elseif grades[i] > 2.3 then\n     \
    \       letter_grades[i] = 'B-'\n        elseif grades[i] > 2.0 then\n       \
    \     letter_grades[i] = 'C+'\n        elseif grades[i] > 1.7 then\n         \
    \   letter_grades[i] = 'C'\n        elseif grades[i] > 1.3 then\n            letter_grades[i]\
    \ = 'C-'\n        elseif grades[i] > 1.0 then\n            letter_grades[i] =\
    \ 'D+'\n        elseif grades[i] > 0.7 then\n            letter_grades[i] = 'D'\n\
    \        elseif grades[i] > 0.0 then\n            letter_grades[i] = 'D-'\n  \
    \      else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i, grade in ipairs(grades)\
    \ do\n        if grade >= 4.0 then\n            letter_grades[i] = 'A+'\n    \
    \    elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif\
    \ grade >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif grade\
    \ >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif grade >= 2.7\
    \ then\n            letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n     \
    \       letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n          \
    \  letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n            letter_grades[i]\
    \ = 'C-'\n        elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n\
    \        elseif grade >= 0.7 then\n            letter_grades[i] = 'D'\n      \
    \  elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n\
    \            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local letter_grades = {}\n    for _, grade in ipairs(grades) do\n \
    \       if grade >= 4.0 then\n            table.insert(letter_grades, 'A+')\n\
    \        elseif grade >= 3.7 then\n            table.insert(letter_grades, 'A')\n\
    \        elseif grade >= 3.3 then\n            table.insert(letter_grades, 'A-')\n\
    \        elseif grade >= 3.0 then\n            table.insert(letter_grades, 'B+')\n\
    \        elseif grade >= 2.7 then\n            table.insert(letter_grades, 'B')\n\
    \        elseif grade >= 2.3 then\n            table.insert(letter_grades, 'B-')\n\
    \        elseif grade >= 2.0 then\n            table.insert(letter_grades, 'C+')\n\
    \        elseif grade >= 1.7 then\n            table.insert(letter_grades, 'C')\n\
    \        elseif grade >= 1.3 then\n            table.insert(letter_grades, 'C-')\n\
    \        elseif grade >= 1.0 then\n            table.insert(letter_grades, 'D+')\n\
    \        elseif grade >= 0.7 then\n            table.insert(letter_grades, 'D')\n\
    \        elseif grade >= 0.0 then\n            table.insert(letter_grades, 'D-')\n\
    \        else\n            table.insert(letter_grades, 'E')\n        end\n   \
    \ end\n    return letter_grades\nend", "    local letter_grades = {}\n    for\
    \ _, grade in ipairs(grades) do\n        if grade >= 4.0 then\n            table.insert(letter_grades,\
    \ 'A+')\n        elseif grade >= 3.7 then\n            table.insert(letter_grades,\
    \ 'A')\n        elseif grade >= 3.3 then\n            table.insert(letter_grades,\
    \ 'A-')\n        elseif grade >= 3.0 then\n            table.insert(letter_grades,\
    \ 'B+')\n        elseif grade >= 2.7 then\n            table.insert(letter_grades,\
    \ 'B')\n        elseif grade >= 2.3 then\n            table.insert(letter_grades,\
    \ 'B-')\n        elseif grade >= 2.0 then\n            table.insert(letter_grades,\
    \ 'C+')\n        elseif grade >= 1.7 then\n            table.insert(letter_grades,\
    \ 'C')\n        elseif grade >= 1.3 then\n            table.insert(letter_grades,\
    \ 'C-')\n        elseif grade >= 1.0 then\n            table.insert(letter_grades,\
    \ 'D+')\n        elseif grade >= 0.7 then\n            table.insert(letter_grades,\
    \ 'D')\n        elseif grade >= 0.0 then\n            table.insert(letter_grades,\
    \ 'D-')\n        else\n            table.insert(letter_grades, 'E')\n        end\n\
    \    end\n    return letter_grades\nend", "    local letter_grades = {}\n    for\
    \ _, grade in ipairs(grades) do\n        if grade >= 4.0 then\n            table.insert(letter_grades,\
    \ 'A+')\n        elseif grade >= 3.7 then\n            table.insert(letter_grades,\
    \ 'A')\n        elseif grade >= 3.3 then\n            table.insert(letter_grades,\
    \ 'A-')\n        elseif grade >= 3.0 then\n            table.insert(letter_grades,\
    \ 'B+')\n        elseif grade >= 2.7 then\n            table.insert(letter_grades,\
    \ 'B')\n        elseif grade >= 2.3 then\n            table.insert(letter_grades,\
    \ 'B-')\n        elseif grade >= 2.0 then\n            table.insert(letter_grades,\
    \ 'C+')\n        elseif grade >= 1.7 then\n            table.insert(letter_grades,\
    \ 'C')\n        elseif grade >= 1.3 then\n            table.insert(letter_grades,\
    \ 'C-')\n        elseif grade >= 1.0 then\n            table.insert(letter_grades,\
    \ 'D+')\n        elseif grade >= 0.7 then\n            table.insert(letter_grades,\
    \ 'D')\n        elseif grade >= 0.0 then\n            table.insert(letter_grades,\
    \ 'D-')\n        else\n            table.insert(letter_grades, 'E')\n        end\n\
    \    end\n    return letter_grades\nend", "    local letter_grades = {}\n    for\
    \ i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n            letter_grades[i]\
    \ = 'A+'\n        elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n\
    \        elseif grade >= 3.3 then\n            letter_grades[i] = 'A-'\n     \
    \   elseif grade >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif\
    \ grade >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif grade\
    \ >= 2.3 then\n            letter_grades[i] = 'B-'\n        elseif grade >= 2.0\
    \ then\n            letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n\
    \            letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n      \
    \      letter_grades[i] = 'C-'\n        elseif grade >= 1.0 then\n           \
    \ letter_grades[i] = 'D+'\n        elseif grade >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n\
    \        else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i, grade in ipairs(grades)\
    \ do\n        if grade >= 4.0 then\n            letter_grades[i] = 'A+'\n    \
    \    elseif grade >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif\
    \ grade >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif grade\
    \ >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif grade >= 2.7\
    \ then\n            letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n\
    \            letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n     \
    \       letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n          \
    \  letter_grades[i] = 'C'\n        elseif grade >= 1.3 then\n            letter_grades[i]\
    \ = 'C-'\n        elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n\
    \        elseif grade >= 0.7 then\n            letter_grades[i] = 'D'\n      \
    \  elseif grade >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n\
    \            letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local letter_grades = {}\n    for i, grade in ipairs(grades) do\n \
    \       if grade >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif\
    \ grade >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif grade\
    \ >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif grade >= 3.0\
    \ then\n            letter_grades[i] = 'B+'\n        elseif grade >= 2.7 then\n\
    \            letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n      \
    \      letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n           \
    \ letter_grades[i] = 'C+'\n        elseif grade >= 1.7 then\n            letter_grades[i]\
    \ = 'C'\n        elseif grade >= 1.3 then\n            letter_grades[i] = 'C-'\n\
    \        elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n     \
    \   elseif grade >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif\
    \ grade >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n     \
    \       letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\n\
    end", "    local letter_grades = {}\n    for i, v in ipairs(grades) do\n     \
    \   if v >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif v >=\
    \ 3.7 then\n            letter_grades[i] = 'A'\n        elseif v >= 3.3 then\n\
    \            letter_grades[i] = 'A-'\n        elseif v >= 3.0 then\n         \
    \   letter_grades[i] = 'B+'\n        elseif v >= 2.7 then\n            letter_grades[i]\
    \ = 'B'\n        elseif v >= 2.3 then\n            letter_grades[i] = 'B-'\n \
    \       elseif v >= 2.0 then\n            letter_grades[i] = 'C+'\n        elseif\
    \ v >= 1.7 then\n            letter_grades[i] = 'C'\n        elseif v >= 1.3 then\n\
    \            letter_grades[i] = 'C-'\n        elseif v >= 1.0 then\n         \
    \   letter_grades[i] = 'D+'\n        elseif v >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif v >= 0.0 then\n            letter_grades[i] = 'D-'\n \
    \       else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i, v in ipairs(grades)\
    \ do\n        if v >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif\
    \ v >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif v >= 3.3 then\n\
    \            letter_grades[i] = 'A-'\n        elseif v >= 3.0 then\n         \
    \   letter_grades[i] = 'B+'\n        elseif v >= 2.7 then\n            letter_grades[i]\
    \ = 'B'\n        elseif v >= 2.3 then\n            letter_grades[i] = 'B-'\n \
    \       elseif v >= 2.0 then\n            letter_grades[i] = 'C+'\n        elseif\
    \ v >= 1.7 then\n            letter_grades[i] = 'C'\n        elseif v >= 1.3 then\n\
    \            letter_grades[i] = 'C-'\n        elseif v >= 1.0 then\n         \
    \   letter_grades[i] = 'D+'\n        elseif v >= 0.7 then\n            letter_grades[i]\
    \ = 'D'\n        elseif v >= 0.0 then\n            letter_grades[i] = 'D-'\n \
    \       else\n            letter_grades[i] = 'E'\n        end\n    end\n    return\
    \ letter_grades\nend", "    local letter_grades = {}\n    for i = 1, #grades do\n\
    \        if grades[i] >= 4.0 then\n            letter_grades[i] = 'A+'\n     \
    \   elseif grades[i] >= 3.7 then\n            letter_grades[i] = 'A'\n       \
    \ elseif grades[i] >= 3.3 then\n            letter_grades[i] = 'A-'\n        elseif\
    \ grades[i] >= 3.0 then\n            letter_grades[i] = 'B+'\n        elseif grades[i]\
    \ >= 2.7 then\n            letter_grades[i] = 'B'\n        elseif grades[i] >=\
    \ 2.3 then\n            letter_grades[i] = 'B-'\n        elseif grades[i] >= 2.0\
    \ then\n            letter_grades[i] = 'C+'\n        elseif grades[i] >= 1.7 then\n\
    \            letter_grades[i] = 'C'\n        elseif grades[i] >= 1.3 then\n  \
    \          letter_grades[i] = 'C-'\n        elseif grades[i] >= 1.0 then\n   \
    \         letter_grades[i] = 'D+'\n        elseif grades[i] >= 0.7 then\n    \
    \        letter_grades[i] = 'D'\n        elseif grades[i] >= 0.0 then\n      \
    \      letter_grades[i] = 'D-'\n        else\n            letter_grades[i] = 'E'\n\
    \        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for i, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            letter_grades[i] = 'A+'\n        elseif grade >= 3.7 then\n     \
    \       letter_grades[i] = 'A'\n        elseif grade >= 3.3 then\n           \
    \ letter_grades[i] = 'A-'\n        elseif grade >= 3.0 then\n            letter_grades[i]\
    \ = 'B+'\n        elseif grade >= 2.7 then\n            letter_grades[i] = 'B'\n\
    \        elseif grade >= 2.3 then\n            letter_grades[i] = 'B-'\n     \
    \   elseif grade >= 2.0 then\n            letter_grades[i] = 'C+'\n        elseif\
    \ grade >= 1.7 then\n            letter_grades[i] = 'C'\n        elseif grade\
    \ >= 1.3 then\n            letter_grades[i] = 'C-'\n        elseif grade >= 1.0\
    \ then\n            letter_grades[i] = 'D+'\n        elseif grade >= 0.7 then\n\
    \            letter_grades[i] = 'D'\n        elseif grade >= 0.0 then\n      \
    \      letter_grades[i] = 'D-'\n        else\n            letter_grades[i] = 'E'\n\
    \        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for _, grade in ipairs(grades) do\n        if grade >= 4.0 then\n\
    \            table.insert(letter_grades, 'A+')\n        elseif grade >= 3.7 then\n\
    \            table.insert(letter_grades, 'A')\n        elseif grade >= 3.3 then\n\
    \            table.insert(letter_grades, 'A-')\n        elseif grade >= 3.0 then\n\
    \            table.insert(letter_grades, 'B+')\n        elseif grade >= 2.7 then\n\
    \            table.insert(letter_grades, 'B')\n        elseif grade >= 2.3 then\n\
    \            table.insert(letter_grades, 'B-')\n        elseif grade >= 2.0 then\n\
    \            table.insert(letter_grades, 'C+')\n        elseif grade >= 1.7 then\n\
    \            table.insert(letter_grades, 'C')\n        elseif grade >= 1.3 then\n\
    \            table.insert(letter_grades, 'C-')\n        elseif grade >= 1.0 then\n\
    \            table.insert(letter_grades, 'D+')\n        elseif grade >= 0.7 then\n\
    \            table.insert(letter_grades, 'D')\n        elseif grade >= 0.0 then\n\
    \            table.insert(letter_grades, 'D-')\n        else\n            table.insert(letter_grades,\
    \ 'E')\n        end\n    end\n    return letter_grades\nend", "    local letter_grades\
    \ = {}\n    for i = 1, #grades do\n        local grade = grades[i]\n        if\
    \ grade >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif grade\
    \ >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif grade >= 3.3\
    \ then\n            letter_grades[i] = 'A-'\n        elseif grade >= 3.0 then\n\
    \            letter_grades[i] = 'B+'\n        elseif grade >= 2.7 then\n     \
    \       letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n           \
    \ letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n            letter_grades[i]\
    \ = 'C+'\n        elseif grade >= 1.7 then\n            letter_grades[i] = 'C'\n\
    \        elseif grade >= 1.3 then\n            letter_grades[i] = 'C-'\n     \
    \   elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif\
    \ grade >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif grade\
    \ >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n           \
    \ letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\nend",
  "    local letter_grades = {}\n    for i, grade in ipairs(grades) do\n        if\
    \ grade >= 4.0 then\n            letter_grades[i] = 'A+'\n        elseif grade\
    \ >= 3.7 then\n            letter_grades[i] = 'A'\n        elseif grade >= 3.3\
    \ then\n            letter_grades[i] = 'A-'\n        elseif grade >= 3.0 then\n\
    \            letter_grades[i] = 'B+'\n        elseif grade >= 2.7 then\n     \
    \       letter_grades[i] = 'B'\n        elseif grade >= 2.3 then\n           \
    \ letter_grades[i] = 'B-'\n        elseif grade >= 2.0 then\n            letter_grades[i]\
    \ = 'C+'\n        elseif grade >= 1.7 then\n            letter_grades[i] = 'C'\n\
    \        elseif grade >= 1.3 then\n            letter_grades[i] = 'C-'\n     \
    \   elseif grade >= 1.0 then\n            letter_grades[i] = 'D+'\n        elseif\
    \ grade >= 0.7 then\n            letter_grades[i] = 'D'\n        elseif grade\
    \ >= 0.0 then\n            letter_grades[i] = 'D-'\n        else\n           \
    \ letter_grades[i] = 'E'\n        end\n    end\n    return letter_grades\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

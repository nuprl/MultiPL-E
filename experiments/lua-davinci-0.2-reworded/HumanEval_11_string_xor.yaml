name: HumanEval_11_string_xor
language: lua
prompt: "-- Input are two strings a and b consisting only of 1s and 0s.\n-- Perform\
  \ binary XOR on these inputs and return result also as a string.\n-- >>> string_xor('010',\
  \ '110')\n-- '100'\nlocal function string_xor(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_xor\n\
  \    lu.assertEquals(candidate('111000', '101010'), '010010')\n    lu.assertEquals(candidate('1',\
  \ '1'), '0')\n    lu.assertEquals(candidate('0101', '0000'), '0101')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = ''\n  for i = 1, #a do\n    result = result .. (a:sub(i,\
    \ i) == b:sub(i, i) and '0' or '1')\n  end\n  return result\nend", "  local result\
    \ = {}\n  for i = 1, #a do\n    local ai = tonumber(a:sub(i, i))\n    local bi\
    \ = tonumber(b:sub(i, i))\n    table.insert(result, ai ~ bi)\n  end\n  return\
    \ table.concat(result)\nend", "    local result = ''\n    for i = 1, #a do\n \
    \       result = result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n    end\n\
    \    return result\nend", "    local result = ''\n    for i = 1, #a do\n     \
    \   local x = a:sub(i, i)\n        local y = b:sub(i, i)\n        if x ~= y then\n\
    \            result = result .. '1'\n        else\n            result = result\
    \ .. '0'\n        end\n    end\n    return result\nend", "    local result = ''\n\
    \    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n          \
    \  result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "  local result = {}\n  for i = 1,\
    \ #a do\n    local x = a:sub(i, i)\n    local y = b:sub(i, i)\n    if x ~= y then\n\
    \      result[i] = '1'\n    else\n      result[i] = '0'\n    end\n  end\n  return\
    \ table.concat(result)\nend", "    local res = {}\n    for i = 1, #a do\n    \
    \    res[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n    end\n    return table.concat(res)\n\
    end", "    local result = {}\n    for i = 1, #a do\n        local a_char = a:sub(i,\
    \ i)\n        local b_char = b:sub(i, i)\n        if a_char == b_char then\n \
    \           table.insert(result, '0')\n        else\n            table.insert(result,\
    \ '1')\n        end\n    end\n    return table.concat(result)\nend", "    local\
    \ result = \"\"\n    local length = math.max(#a, #b)\n    for i = 1, length do\n\
    \        local x = tonumber(a:sub(i, i)) or 0\n        local y = tonumber(b:sub(i,\
    \ i)) or 0\n        local z = x ~ y\n        result = result .. z\n    end\n \
    \   return result\nend", "    local result = \"\"\n    for i = 1, #a do\n    \
    \    if a:sub(i, i) == b:sub(i, i) then\n            result = result .. \"0\"\n\
    \        else\n            result = result .. \"1\"\n        end\n    end\n  \
    \  return result\nend", "  local result = {}\n  for i = 1, #a do\n    result[i]\
    \ = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n  end\n  return table.concat(result)\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \ local result = ''\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n\
    \      result = result .. '0'\n    else\n      result = result .. '1'\n    end\n\
    \  end\n  return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = ''\n    for i = 1, #a do\n        result =\
    \ result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "\tlocal res = {}\n\tfor i = 1, #a do\n\t\tres[i] = a:sub(i, i) == b:sub(i, i) and\
    \ '0' or '1'\n\tend\n\treturn table.concat(res)\nend", "    local result = {}\n\
    \    for i = 1, #a do\n        local x = tonumber(a:sub(i, i))\n        local\
    \ y = tonumber(b:sub(i, i))\n        local z = x ~ y\n        table.insert(result,\
    \ z)\n    end\n    return table.concat(result)\nend", "  local result = \"\"\n\
    \  for i = 1, #a do\n    local a_bit = a:sub(i, i)\n    local b_bit = b:sub(i,\
    \ i)\n    if a_bit == b_bit then\n      result = result .. \"0\"\n    else\n \
    \     result = result .. \"1\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n\
    \      result = result .. \"0\"\n    else\n      result = result .. \"1\"\n  \
    \  end\n  end\n  return result\nend", "    local result = \"\"\n    for i = 1,\
    \ #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result = result\
    \ .. \"0\"\n        else\n            result = result .. \"1\"\n        end\n\
    \    end\n    return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = ''\n    for i = 1, #a do\n        result =\
    \ result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = ''\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n\
    \        local b_bit = b:sub(i, i)\n        if a_bit == b_bit then\n         \
    \   result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result = result\
    \ .. \"0\"\n    else\n      result = result .. \"1\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    if a:sub(i, i)\
    \ == b:sub(i, i) then\n      result = result .. \"0\"\n    else\n      result\
    \ = result .. \"1\"\n    end\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n        local\
    \ b_bit = b:sub(i, i)\n        if a_bit == b_bit then\n            result = result\
    \ .. \"0\"\n        else\n            result = result .. \"1\"\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for i = 1, #a do\n\
    \        local a_bit = a:sub(i, i)\n        local b_bit = b:sub(i, i)\n      \
    \  if a_bit == b_bit then\n            table.insert(result, '0')\n        else\n\
    \            table.insert(result, '1')\n        end\n    end\n    return table.concat(result)\n\
    end", "    local result = ''\n    local len = math.max(#a, #b)\n    for i = 1,\
    \ len do\n        local x = tonumber(a:sub(i, i)) or 0\n        local y = tonumber(b:sub(i,\
    \ i)) or 0\n        result = result .. tostring(x ~ y)\n    end\n    return result\n\
    end", "  local res = {}\n  for i = 1, #a do\n    res[i] = a:sub(i, i) == b:sub(i,\
    \ i) and '0' or '1'\n  end\n  return table.concat(res)\nend", "    local result\
    \ = {}\n    local len = math.max(#a, #b)\n    for i = 1, len do\n        local\
    \ x = tonumber(a:sub(i, i)) or 0\n        local y = tonumber(b:sub(i, i)) or 0\n\
    \        table.insert(result, (x + y) % 2)\n    end\n    return table.concat(result)\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n\
    \        local b_bit = b:sub(i, i)\n        local xor_bit = (a_bit == b_bit) and\
    \ '0' or '1'\n        result = result .. xor_bit\n    end\n    return result\n\
    end", "  local result = ''\n  for i = 1, #a do\n    result = result .. (a:sub(i,\
    \ i) == b:sub(i, i) and '0' or '1')\n  end\n  return result\nend", "\tlocal result\
    \ = ''\n\tfor i = 1, #a do\n\t\tresult = result .. (a:sub(i, i) == b:sub(i, i)\
    \ and '0' or '1')\n\tend\n\treturn result\nend", "    local result = \"\"\n  \
    \  for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "    local result = {}\n    local\
    \ len = math.max(#a, #b)\n    for i = 1, len do\n        local x = a:sub(i, i)\n\
    \        local y = b:sub(i, i)\n        if x == y then\n            table.insert(result,\
    \ '0')\n        else\n            table.insert(result, '1')\n        end\n   \
    \ end\n    return table.concat(result)\nend", "    local result = ''\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "  local result = ''\n  for i = 1, #a do\n    if a:sub(i, i) ==\
    \ b:sub(i, i) then\n      result = result .. '0'\n    else\n      result = result\
    \ .. '1'\n    end\n  end\n  return result\nend", "    local result = ''\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "  local result = {}\n  for i = 1, #a do\n\
    \    result[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n  end\n  return table.concat(result)\n\
    end", "    local result = \"\"\n    local len = math.max(#a, #b)\n    for i =\
    \ 1, len do\n        local x = a:sub(i, i) == \"1\" and 1 or 0\n        local\
    \ y = b:sub(i, i) == \"1\" and 1 or 0\n        if x ~= y then\n            result\
    \ = result .. \"1\"\n        else\n            result = result .. \"0\"\n    \
    \    end\n    end\n    return result\nend", "    local result = ''\n    for i\
    \ = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result =\
    \ result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    local len = math.max(#a,\
    \ #b)\n    for i = 1, len do\n        local x = a:sub(i, i) == '1' and 1 or 0\n\
    \        local y = b:sub(i, i) == '1' and 1 or 0\n        table.insert(result,\
    \ x ~= y and '1' or '0')\n    end\n    return table.concat(result)\nend", "  \
    \  local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i,\
    \ i) then\n            result = result .. \"0\"\n        else\n            result\
    \ = result .. \"1\"\n        end\n    end\n    return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result\
    \ = result .. \"0\"\n    else\n      result = result .. \"1\"\n    end\n  end\n\
    \  return result\nend", "    local result = \"\"\n    for i = 1, #a do\n     \
    \   if a:sub(i, i) == b:sub(i, i) then\n            result = result .. \"0\"\n\
    \        else\n            result = result .. \"1\"\n        end\n    end\n  \
    \  return result\nend", "  local result = ''\n  for i = 1, #a do\n    if a:sub(i,\
    \ i) == b:sub(i, i) then\n      result = result .. '0'\n    else\n      result\
    \ = result .. '1'\n    end\n  end\n  return result\nend", "  local result = ''\n\
    \  for i = 1, #a do\n    result = result .. (a:sub(i, i) == b:sub(i, i) and '0'\
    \ or '1')\n  end\n  return result\nend", "\tlocal result = ''\n\tfor i = 1, #a\
    \ do\n\t\tresult = result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n\tend\n\
    \treturn result\nend", "    local result = ''\n    for i = 1, #a do\n        result\
    \ = result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n    end\n    return\
    \ result\nend", "    local result = {}\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result[i] = '0'\n        else\n        result[i]\
    \ = '1'\n        end\n    end\n    return table.concat(result)\nend", "    local\
    \ result = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n\
    \            result = result .. '0'\n        else\n            result = result\
    \ .. '1'\n        end\n    end\n    return result\nend", "    local result = ''\n\
    \    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n          \
    \  result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "\tlocal result = ''\n\tlocal\
    \ a_len = #a\n\tlocal b_len = #b\n\tlocal max_len = math.max(a_len, b_len)\n\t\
    for i = 1, max_len do\n\t\tlocal a_bit = a:sub(i, i)\n\t\tlocal b_bit = b:sub(i,\
    \ i)\n\t\tif a_bit == b_bit then\n\t\t\tresult = result .. '0'\n\t\telse\n\t\t\
    \tresult = result .. '1'\n\t\tend\n\tend\n\treturn result\nend", "  local result\
    \ = ''\n  for i = 1, #a do\n    result = result .. (a:sub(i, i) == b:sub(i, i)\
    \ and '0' or '1')\n  end\n  return result\nend", "    local result = ''\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        local a_bit = a:sub(i, i)\n        local b_bit = b:sub(i, i)\n      \
    \  local xor_bit = (a_bit == '1' and b_bit == '0') or (a_bit == '0' and b_bit\
    \ == '1')\n        result = result .. (xor_bit and '1' or '0')\n    end\n    return\
    \ result\nend", "    local result = ''\n    for i = 1, #a do\n        local a_bit\
    \ = a:sub(i, i)\n        local b_bit = b:sub(i, i)\n        if a_bit == b_bit\
    \ then\n            result = result .. '0'\n        else\n            result =\
    \ result .. '1'\n        end\n    end\n    return result\nend", "    local result\
    \ = {}\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n        local\
    \ b_bit = b:sub(i, i)\n        if a_bit == b_bit then\n            table.insert(result,\
    \ '0')\n        else\n            table.insert(result, '1')\n        end\n   \
    \ end\n    return table.concat(result)\nend", "    local result = \"\"\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "    local result = {}\n    for i\
    \ = 1, #a do\n        result[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n\
    \    end\n    return table.concat(result)\nend", "\tlocal result = \"\"\n\tfor\
    \ i = 1, #a do\n\t\tif a:sub(i, i) == b:sub(i, i) then\n\t\t\tresult = result\
    \ .. \"0\"\n\t\telse\n\t\t\tresult = result .. \"1\"\n\t\tend\n\tend\n\treturn\
    \ result\nend", "    local result = ''\n    for i = 1, #a do\n        local ai\
    \ = a:sub(i, i)\n        local bi = b:sub(i, i)\n        result = result .. (ai\
    \ == bi and '0' or '1')\n    end\n    return result\nend", "    local result =\
    \ {}\n    for i = 1, #a do\n        local x = a:sub(i, i)\n        local y = b:sub(i,\
    \ i)\n        if x ~= y then\n            result[i] = '1'\n        else\n    \
    \        result[i] = '0'\n        end\n    end\n    return table.concat(result)\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for i = 1, #a do\n        local x = tonumber(a:sub(i,\
    \ i))\n        local y = tonumber(b:sub(i, i))\n        local z = x ~ y\n    \
    \    table.insert(result, z)\n    end\n    return table.concat(result)\nend",
  "    local result = ''\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n\
    \        local b_bit = b:sub(i, i)\n        if a_bit == b_bit then\n         \
    \   result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "  local result = {}\n  for i\
    \ = 1, #a do\n    result[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n  end\n\
    \  return table.concat(result)\nend", "    local result = ''\n    for i = 1, #a\
    \ do\n        if a:sub(i, i) == b:sub(i, i) then\n            result = result\
    \ .. '0'\n        else\n            result = result .. '1'\n        end\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, #a do\n   \
    \     if a:sub(i, i) == b:sub(i, i) then\n            result = result .. \"0\"\
    \n        else\n            result = result .. \"1\"\n        end\n    end\n \
    \   return result\nend", "\tlocal result = {}\n\tfor i = 1, #a do\n\t\tresult[i]\
    \ = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n\tend\n\treturn table.concat(result)\n\
    end", "    local result = {}\n    for i = 1, #a do\n        result[i] = a:sub(i,\
    \ i) == b:sub(i, i) and '0' or '1'\n    end\n    return table.concat(result)\n\
    end", "    local result = {}\n    for i = 1, #a do\n        local a_bit = a:sub(i,\
    \ i)\n        local b_bit = b:sub(i, i)\n        local xor_bit = a_bit ~= b_bit\
    \ and '1' or '0'\n        table.insert(result, xor_bit)\n    end\n    return table.concat(result)\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i,\
    \ i) then\n            result = result .. '0'\n        else\n            result\
    \ = result .. '1'\n        end\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n \
    \           result = result .. \"0\"\n        else\n            result = result\
    \ .. \"1\"\n        end\n    end\n    return result\nend", "    local result =\
    \ ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n     \
    \       result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ local len = math.max(#a, #b)\n    for i = 1, len do\n        local x = a:sub(i,\
    \ i) == \"1\" and 1 or 0\n        local y = b:sub(i, i) == \"1\" and 1 or 0\n\
    \        if x ~= y then\n            result = result .. \"1\"\n        else\n\
    \            result = result .. \"0\"\n        end\n    end\n    return result\n\
    end", "  local result = ''\n  local len = math.max(#a, #b)\n  for i = 1, len do\n\
    \    local x = tonumber(a:sub(i, i)) or 0\n    local y = tonumber(b:sub(i, i))\
    \ or 0\n    result = result .. tostring(x ~ y)\n  end\n  return result\nend",
  "    local xor = {}\n    for i = 1, #a do\n        xor[i] = a:sub(i, i) == b:sub(i,\
    \ i) and '0' or '1'\n    end\n    return table.concat(xor)\nend", "    local result\
    \ = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n   \
    \         result = result .. '0'\n        else\n            result = result ..\
    \ '1'\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for i = 1, #a do\n        local x, y = a:sub(i, i), b:sub(i, i)\n       \
    \ local r = xor(x, y)\n        table.insert(result, r)\n    end\n    return table.concat(result)\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \ local ret = ''\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n\
    \      ret = ret .. '0'\n    else\n      ret = ret .. '1'\n    end\n  end\n  return\
    \ ret\nend", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result = result .. '0'\n        else\n \
    \           result = result .. '1'\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for i = 1, #a do\n        result[i] = a:sub(i,\
    \ i) == b:sub(i, i) and '0' or '1'\n    end\n    return table.concat(result)\n\
    end", "\tlocal result = \"\"\n\tfor i = 1, #a do\n\t\tif a:sub(i, i) == b:sub(i,\
    \ i) then\n\t\t\tresult = result .. \"0\"\n\t\telse\n\t\t\tresult = result ..\
    \ \"1\"\n\t\tend\n\tend\n\treturn result\nend", "    local result = \"\"\n   \
    \ for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "  local result = {}\n  for i = 1,\
    \ #a do\n    local x = a:sub(i, i)\n    local y = b:sub(i, i)\n    if x ~= y then\n\
    \      result[i] = '1'\n    else\n      result[i] = '0'\n    end\n  end\n  return\
    \ table.concat(result)\nend", "    local result = ''\n    for i = 1, #a do\n \
    \       if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result = result .. '0'\n        else\n \
    \           result = result .. '1'\n        end\n    end\n    return result\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \ local result = ''\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n\
    \      result = result .. '0'\n    else\n      result = result .. '1'\n    end\n\
    \  end\n  return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        result = result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n    end\n\
    \    return result\nend", "    local result = ''\n    for i = 1, #a do\n     \
    \   result = result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n    end\n\
    \    return result\nend", "    local result = {}\n    for i = 1, #a do\n     \
    \   local x = a:sub(i, i)\n        local y = b:sub(i, i)\n        if x ~= y then\n\
    \            result[i] = '1'\n        else\n            result[i] = '0'\n    \
    \    end\n    end\n    return table.concat(result)\nend", "    local result =\
    \ ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n     \
    \       result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    local\
    \ len = math.max(#a, #b)\n    for i = 1, len do\n        local x = a:sub(i, i)\
    \ == '1' and 1 or 0\n        local y = b:sub(i, i) == '1' and 1 or 0\n       \
    \ local z = x ~ y\n        table.insert(result, z and '1' or '0')\n    end\n \
    \   return table.concat(result)\nend", "    local result = \"\"\n    for i = 1,\
    \ #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result = result\
    \ .. \"0\"\n        else\n            result = result .. \"1\"\n        end\n\
    \    end\n    return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result = result .. \"0\"\n        else\n\
    \            result = result .. \"1\"\n        end\n    end\n    return result\n\
    end", "    local res = ''\n    for i = 1, #a do\n        res = res .. (a:sub(i,\
    \ i) == b:sub(i, i) and '0' or '1')\n    end\n    return res\nend", "    local\
    \ result = {}\n    for i = 1, #a do\n        local x = a:sub(i, i)\n        local\
    \ y = b:sub(i, i)\n        local z = x ~= y and '1' or '0'\n        table.insert(result,\
    \ z)\n    end\n    return table.concat(result)\nend", "    local result = ''\n\
    \    for i = 1, #a do\n        result = result .. (a:sub(i, i) == b:sub(i, i)\
    \ and '0' or '1')\n    end\n    return result\nend", "  local result = ''\n  for\
    \ i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result = result\
    \ .. '0'\n    else\n      result = result .. '1'\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local a_bit = a:sub(i, i)\n\
    \    local b_bit = b:sub(i, i)\n    local xor_bit = a_bit == b_bit and \"0\" or\
    \ \"1\"\n    result = result .. xor_bit\n  end\n  return result\nend", "    local\
    \ result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n\
    \            result = result .. \"0\"\n        else\n            result = result\
    \ .. \"1\"\n        end\n    end\n    return result\nend", "  local result = ''\n\
    \  for i = 1, #a do\n    result = result .. (a:sub(i, i) == b:sub(i, i) and '0'\
    \ or '1')\n  end\n  return result\nend", "  local result = {}\n  for i = 1, #a\
    \ do\n    result[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n  end\n  return\
    \ table.concat(result)\nend", "    local result = ''\n    for i = 1, #a do\n \
    \       if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result = result .. '0'\n        else\n \
    \           result = result .. '1'\n        end\n    end\n    return result\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n\
    \      result = result .. \"0\"\n    else\n      result = result .. \"1\"\n  \
    \  end\n  end\n  return result\nend", "    local result = {}\n    local len =\
    \ math.max(#a, #b)\n    for i = 1, len do\n        local a_bit = a:sub(i, i)\n\
    \        local b_bit = b:sub(i, i)\n        local a_num = tonumber(a_bit)\n  \
    \      local b_num = tonumber(b_bit)\n        if a_num and b_num then\n      \
    \      result[i] = (a_num + b_num) % 2\n        elseif a_num then\n          \
    \  result[i] = a_num\n        elseif b_num then\n            result[i] = b_num\n\
    \        else\n            result[i] = 0\n        end\n    end\n    return table.concat(result)\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \   local result = {}\n    for i = 1, #a do\n        local a_char = a:sub(i, i)\n\
    \        local b_char = b:sub(i, i)\n        local a_int = tonumber(a_char)\n\
    \        local b_int = tonumber(b_char)\n        local xor_int = a_int ~ b_int\n\
    \        local xor_char = tostring(xor_int)\n        table.insert(result, xor_char)\n\
    \    end\n    return table.concat(result)\nend", "    local result = ''\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    local len = math.max(#a, #b)\n \
    \   for i = 1, len do\n        local x = tonumber(a:sub(i, i)) or 0\n        local\
    \ y = tonumber(b:sub(i, i)) or 0\n        result = result .. tostring(x ~ y)\n\
    \    end\n    return result\nend", "    local result = ''\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. '0'\n\
    \        else\n            result = result .. '1'\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result = result .. \"0\"\n        else\n\
    \            result = result .. \"1\"\n        end\n    end\n    return result\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \   local res = \"\"\n    for i = 1, #a do\n        res = res .. (a:sub(i, i)\
    \ == b:sub(i, i) and \"0\" or \"1\")\n    end\n    return res\nend", "  local\
    \ result = {}\n  for i = 1, #a do\n    local ai = a:sub(i, i)\n    local bi =\
    \ b:sub(i, i)\n    if ai == bi then\n      result[i] = '0'\n    else\n      result[i]\
    \ = '1'\n    end\n  end\n  return table.concat(result)\nend", "    local result\
    \ = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n \
    \           result = result .. \"0\"\n        else\n            result = result\
    \ .. \"1\"\n        end\n    end\n    return result\nend", "    local result =\
    \ ''\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n        local b_bit\
    \ = b:sub(i, i)\n        local xor_bit = a_bit == b_bit and '0' or '1'\n     \
    \   result = result .. xor_bit\n    end\n    return result\nend", "    local result\
    \ = ''\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n        local\
    \ b_bit = b:sub(i, i)\n        if a_bit == b_bit then\n            result = result\
    \ .. '0'\n        else\n            result = result .. '1'\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for i = 1, #a do\n     \
    \   local a_bit = a:sub(i, i)\n        local b_bit = b:sub(i, i)\n        if a_bit\
    \ == b_bit then\n            table.insert(result, '0')\n        else\n       \
    \     table.insert(result, '1')\n        end\n    end\n    return table.concat(result)\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \   local result = ''\n    for i = 1, #a do\n        local a_bit = a:sub(i, i)\n\
    \        local b_bit = b:sub(i, i)\n        if a_bit == b_bit then\n         \
    \   result = result .. '0'\n        else\n            result = result .. '1'\n\
    \        end\n    end\n    return result\nend", "    local result = ''\n    for\
    \ i = 1, #a do\n        local x = a:sub(i, i)\n        local y = b:sub(i, i)\n\
    \        local z = x ~= y and '1' or '0'\n        result = result .. z\n    end\n\
    \    return result\nend", "    local xor = \"\"\n    for i = 1, #a do\n      \
    \  xor = xor .. (a:sub(i, i) == b:sub(i, i) and \"0\" or \"1\")\n    end\n   \
    \ return xor\nend", "    local result = \"\"\n    for i = 1, #a do\n        local\
    \ a_bit = a:sub(i, i)\n        local b_bit = b:sub(i, i)\n        if a_bit ==\
    \ b_bit then\n            result = result .. \"0\"\n        else\n           \
    \ result = result .. \"1\"\n        end\n    end\n    return result\nend", " \
    \   local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i,\
    \ i) then\n            result = result .. '0'\n        else\n            result\
    \ = result .. '1'\n        end\n    end\n    return result\nend", "  local result\
    \ = ''\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result\
    \ = result .. '0'\n    else\n      result = result .. '1'\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for i = 1, #a do\n    local ai = tonumber(a:sub(i,\
    \ i))\n    local bi = tonumber(b:sub(i, i))\n    if ai == bi then\n      result[i]\
    \ = '0'\n    else\n      result[i] = '1'\n    end\n  end\n  return table.concat(result)\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = {}\n    local len = math.max(#a, #b)\n    for i = 1, len do\n\
    \        local x = tonumber(a:sub(i, i)) or 0\n        local y = tonumber(b:sub(i,\
    \ i)) or 0\n        local z = x ~ y\n        table.insert(result, z)\n    end\n\
    \    return table.concat(result)\nend", "    local result = ''\n    for i = 1,\
    \ #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result = result\
    \ .. '0'\n        else\n            result = result .. '1'\n        end\n    end\n\
    \    return result\nend", "    local r = \"\"\n    for i = 1, #a do\n        if\
    \ a:sub(i, i) == b:sub(i, i) then\n            r = r .. \"0\"\n        else\n\
    \            r = r .. \"1\"\n        end\n    end\n    return r\nend", "    local\
    \ result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n\
    \            result = result .. \"0\"\n        else\n            result = result\
    \ .. \"1\"\n        end\n    end\n    return result\nend", "  local result = {}\n\
    \  local len = math.max(#a, #b)\n  for i = 1, len do\n    local x = a:sub(i, i)\
    \ == '1' and 1 or 0\n    local y = b:sub(i, i) == '1' and 1 or 0\n    local z\
    \ = x ~ y\n    result[i] = z == 1 and '1' or '0'\n  end\n  return table.concat(result)\n\
    end", "    local result = {}\n    for i = 1, #a do\n        result[i] = a:sub(i,\
    \ i) == b:sub(i, i) and '0' or '1'\n    end\n    return table.concat(result)\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i,\
    \ i) then\n            result = result .. '0'\n        else\n            result\
    \ = result .. '1'\n        end\n    end\n    return result\nend", "    local result\
    \ = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n   \
    \         result = result .. '0'\n        else\n            result = result ..\
    \ '1'\n        end\n    end\n    return result\nend", "  local result = \"\"\n\
    \  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result = result\
    \ .. \"0\"\n    else\n      result = result .. \"1\"\n    end\n  end\n  return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i,\
    \ i) == b:sub(i, i) then\n            result = result .. \"0\"\n        else\n\
    \            result = result .. \"1\"\n        end\n    end\n    return result\n\
    end", "  local result = ''\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i,\
    \ i) then\n      result = result .. '0'\n    else\n      result = result .. '1'\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result = result\
    \ .. \"0\"\n        else\n            result = result .. \"1\"\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    local len = math.max(#a,\
    \ #b)\n    for i = 1, len do\n        local x = a:sub(i, i) == '1' and 1 or 0\n\
    \        local y = b:sub(i, i) == '1' and 1 or 0\n        local z = x ~ y\n  \
    \      table.insert(result, z == 1 and '1' or '0')\n    end\n    return table.concat(result)\n\
    end", "  local result = {}\n  for i = 1, #a do\n    result[i] = a:sub(i, i) ==\
    \ b:sub(i, i) and '0' or '1'\n  end\n  return table.concat(result)\nend", "  \
    \  local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i,\
    \ i) then\n            result = result .. '0'\n        else\n            result\
    \ = result .. '1'\n        end\n    end\n    return result\nend", "    local result\
    \ = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n   \
    \         result = result .. '0'\n        else\n            result = result ..\
    \ '1'\n        end\n    end\n    return result\nend", "  local result = ''\n \
    \ for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result = result\
    \ .. '0'\n    else\n      result = result .. '1'\n    end\n  end\n  return result\n\
    end", "    local r = ''\n    for i = 1, #a do\n        r = r .. (a:sub(i, i) ==\
    \ b:sub(i, i) and '0' or '1')\n    end\n    return r\nend", "    local result\
    \ = ''\n    for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n   \
    \         result = result .. '0'\n        else\n            result = result ..\
    \ '1'\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for i = 1, #a do\n        local a_bit = tonumber(a:sub(i, i))\n        local\
    \ b_bit = tonumber(b:sub(i, i))\n        local xor_bit = a_bit ~ b_bit\n     \
    \   table.insert(result, xor_bit)\n    end\n    return table.concat(result)\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \   local res = \"\"\n    for i = 1, #a do\n        res = res .. tostring(a:sub(i,\
    \ i) ~= b:sub(i, i))\n    end\n    return res\nend", "    local result = {}\n\
    \    for i = 1, #a do\n        local ai = a:sub(i, i)\n        local bi = b:sub(i,\
    \ i)\n        if ai == bi then\n            result[i] = '0'\n        else\n  \
    \          result[i] = '1'\n        end\n    end\n    return table.concat(result)\n\
    end", "  local result = {}\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i,\
    \ i) then\n      result[i] = '0'\n    else\n      result[i] = '1'\n    end\n \
    \ end\n  return table.concat(result)\nend", "\tlocal result = \"\"\n\tfor i =\
    \ 1, #a do\n\t\tif a:sub(i, i) == b:sub(i, i) then\n\t\t\tresult = result .. \"\
    0\"\n\t\telse\n\t\t\tresult = result .. \"1\"\n\t\tend\n\tend\n\treturn result\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for i = 1, #a do\n        local ai = a:sub(i, i)\n \
    \       local bi = b:sub(i, i)\n        if ai == bi then\n            result[i]\
    \ = '0'\n        else\n            result[i] = '1'\n        end\n    end\n   \
    \ return table.concat(result)\nend", "    local result = {}\n    for i = 1, #a\
    \ do\n        if a:sub(i, i) == b:sub(i, i) then\n            result[i] = '0'\n\
    \        else\n        result[i] = '1'\n        end\n    end\n    return table.concat(result)\n\
    end", "    local result = ''\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", " \
    \   local result = {}\n    for i = 1, #a do\n        local x = a:sub(i, i)\n \
    \       local y = b:sub(i, i)\n        if x ~= y then\n            result[i] =\
    \ '1'\n        else\n            result[i] = '0'\n        end\n    end\n    return\
    \ table.concat(result)\nend", "    local result = \"\"\n    for i = 1, #a do\n\
    \        if a:sub(i, i) == b:sub(i, i) then\n            result = result .. \"\
    0\"\n        else\n            result = result .. \"1\"\n        end\n    end\n\
    \    return result\nend", "  local result = ''\n  for i = 1, #a do\n    result\
    \ = result .. (a:sub(i, i) == b:sub(i, i) and '0' or '1')\n  end\n  return result\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for i = 1, #a do\n        local x = a:sub(i, i)\n  \
    \      local y = b:sub(i, i)\n        if x ~= y then\n            result[i] =\
    \ '1'\n        else\n            result[i] = '0'\n        end\n    end\n    return\
    \ table.concat(result)\nend", "    local result = ''\n    for i = 1, math.max(#a,\
    \ #b) do\n        local x = a:sub(i, i)\n        local y = b:sub(i, i)\n     \
    \   if x == y then\n            result = result .. '0'\n        else\n       \
    \     result = result .. '1'\n        end\n    end\n    return result\nend", "\t\
    local result = {}\n\tfor i = 1, #a do\n\t\tresult[i] = a:sub(i, i) == b:sub(i,\
    \ i) and '0' or '1'\n\tend\n\treturn table.concat(result)\nend", "\tlocal xor\
    \ = {}\n\tfor i = 1, #a do\n\t\txor[i] = a:sub(i, i) ~= b:sub(i, i) and '1' or\
    \ '0'\n\tend\n\treturn table.concat(xor)\nend", "    local result = ''\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "  local result = ''\n  for i = 1, #a do\n\
    \    if a:sub(i, i) == b:sub(i, i) then\n      result = result .. '0'\n    else\n\
    \      result = result .. '1'\n    end\n  end\n  return result\nend", "  local\
    \ result = {}\n  for i = 1, #a do\n    result[i] = a:sub(i, i) == b:sub(i, i)\
    \ and '0' or '1'\n  end\n  return table.concat(result)\nend", "  local result\
    \ = ''\n  for i = 1, #a do\n    result = result .. (a:sub(i, i) == b:sub(i, i)\
    \ and '0' or '1')\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local a_bit = a:sub(i, i)\n    local b_bit = b:sub(i, i)\n\
    \    if a_bit == b_bit then\n      result = result .. \"0\"\n    else\n      result\
    \ = result .. \"1\"\n    end\n  end\n  return result\nend", "  local result =\
    \ {}\n  for i = 1, #a do\n    result[i] = a:sub(i, i) == b:sub(i, i) and '0' or\
    \ '1'\n  end\n  return table.concat(result)\nend", "    local result = ''\n  \
    \  for i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. '0'\n        else\n            result = result .. '1'\n        end\n\
    \    end\n    return result\nend", "  local result = {}\n  for i = 1, #a do\n\
    \    local a_bit = a:sub(i, i)\n    local b_bit = b:sub(i, i)\n    if a_bit ==\
    \ b_bit then\n      result[i] = '0'\n    else\n      result[i] = '1'\n    end\n\
    \  end\n  return table.concat(result)\nend", "    local result = \"\"\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #a do\n        if a:sub(i, i) == b:sub(i, i) then\n            result\
    \ = result .. \"0\"\n        else\n            result = result .. \"1\"\n    \
    \    end\n    end\n    return result\nend", "  local result = ''\n  for i = 1,\
    \ #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result = result .. '0'\n\
    \    else\n      result = result .. '1'\n    end\n  end\n  return result\nend",
  "    local result = ''\n    for i = 1, #a do\n        local x = a:sub(i, i)\n  \
    \      local y = b:sub(i, i)\n        if x ~= y then\n            result = result\
    \ .. '1'\n        else\n            result = result .. '0'\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for i = 1, #a do\n     \
    \   local a_bit = a:sub(i, i)\n        local b_bit = b:sub(i, i)\n        local\
    \ xor_bit = a_bit ~= b_bit and '1' or '0'\n        table.insert(result, xor_bit)\n\
    \    end\n    return table.concat(result)\nend", "  local result = {}\n  for i\
    \ = 1, #a do\n    result[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n  end\n\
    \  return table.concat(result)\nend", "  local result = {}\n  for i = 1, #a do\n\
    \    result[i] = a:sub(i, i) == b:sub(i, i) and '0' or '1'\n  end\n  return table.concat(result)\n\
    end", "    local result = \"\"\n    for i = 1, #a do\n        if a:sub(i, i) ==\
    \ b:sub(i, i) then\n            result = result .. \"0\"\n        else\n     \
    \       result = result .. \"1\"\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for i = 1, #a do\n    result[i] = a:sub(i, i) == b:sub(i,\
    \ i) and '0' or '1'\n  end\n  return table.concat(result)\nend", "  local result\
    \ = {}\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i, i) then\n      result[i]\
    \ = '0'\n    else\n      result[i] = '1'\n    end\n  end\n  return table.concat(result)\n\
    end", "    local result = {}\n    local len = math.max(#a, #b)\n    for i = 1,\
    \ len do\n        local x = a:sub(i, i)\n        local y = b:sub(i, i)\n     \
    \   if x == y then\n            table.insert(result, '0')\n        else\n    \
    \        table.insert(result, '1')\n        end\n    end\n    return table.concat(result)\n\
    end", "  local result = ''\n  for i = 1, #a do\n    if a:sub(i, i) == b:sub(i,\
    \ i) then\n      result = result .. '0'\n    else\n      result = result .. '1'\n\
    \    end\n  end\n  return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_94_skjkasdkd
language: lua
prompt: "-- You are given a table of integers.\n-- You need to find the largest prime\
  \ value and return the sum of its digits.\n-- Examples:\n-- >>> skjkasdkd({0, 3,\
  \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3})\n-- 10\n--\
  \ >>> skjkasdkd({1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1})\n--\
  \ 25\n-- >>> skjkasdkd({1, 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30,\
  \ 1, 9, 3})\n-- 13\n-- >>> skjkasdkd({0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0,\
  \ 5, 6})\n-- 11\n-- >>> skjkasdkd({0, 81, 12, 3, 1, 21})\n-- 3\n-- >>> skjkasdkd({0,\
  \ 8, 1, 2, 1, 7})\n-- 7\nlocal function skjkasdkd(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = skjkasdkd\n\
  \    lu.assertEquals(candidate({0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
  \ 32, 3, 2, 32, 324, 4, 3}), 10)\n    lu.assertEquals(candidate({1, 0, 1, 8, 2,\
  \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1}), 25)\n    lu.assertEquals(candidate({1,\
  \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3}), 13)\n    lu.assertEquals(candidate({0,\
  \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6}), 11)\n    lu.assertEquals(candidate({0,\
  \ 81, 12, 3, 1, 21}), 3)\n    lu.assertEquals(candidate({0, 8, 1, 2, 1, 7}), 7)\n\
  \    lu.assertEquals(candidate({8191}), 19)\n    lu.assertEquals(candidate({8191,\
  \ 123456, 127, 7}), 19)\n    lu.assertEquals(candidate({127, 97, 8192}), 10)\nend\n\
  \nos.exit(lu.LuaUnit.run())"
completions: ["  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v)\
    \ then\n      max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + (max % 10)\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and\
    \ isPrime(v) then\n            max = v\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if isPrime(v) and v > max then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n            max\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n        if\
    \ is_prime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n        end\n\
    \    end\n    local max = primes[1]\n    for i = 2, #primes do\n        if primes[i]\
    \ > max then\n            max = primes[i]\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "  local function isPrime(n)\n    if n\
    \ < 2 then return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local s = 0\n    while n > 0 do\n      s = s + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return s\n  end\n  local maxPrime = 0\n  for _, n in ipairs(lst)\
    \ do\n    if isPrime(n) and n > maxPrime then maxPrime = n end\n  end\n  return\
    \ sumDigits(maxPrime)\nend", "    local primes = {}\n    for i = 1, #lst do\n\
    \        if isPrime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n \
    \       end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if\
    \ primes[i] > max then\n            max = primes[i]\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend", "  local primes =\
    \ {}\n  for i = 1, #lst do\n    if is_prime(lst[i]) then\n      primes[#primes\
    \ + 1] = lst[i]\n    end\n  end\n  local max = math.max(unpack(primes))\n  local\
    \ sum = 0\n  while max > 0 do\n    sum = sum + (max % 10)\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "  local max =\
    \ 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n     \
    \ max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum\
    \ + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "   \
    \ local function isPrime(n)\n        if n < 2 then\n            return false\n\
    \        end\n        for i = 2, n - 1 do\n            if n % i == 0 then\n  \
    \              return false\n            end\n        end\n        return true\n\
    \    end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local maxPrime = 0\n    for _,\
    \ v in ipairs(lst) do\n        if isPrime(v) and v > maxPrime then\n         \
    \   maxPrime = v\n        end\n    end\n    return sumDigits(maxPrime)\nend",
  "  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and isPrime(v) then\n\
    \      max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum =\
    \ sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", " \
    \   local max = 0\n    for i = 1, #lst do\n        if isPrime(lst[i]) and lst[i]\
    \ > max then\n            max = lst[i]\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and isPrime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n            max\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend", "  local primes = {}\n  for i = 1, #lst do\n    if isPrime(lst[i])\
    \ then\n      primes[#primes + 1] = lst[i]\n    end\n  end\n  local max = 0\n\
    \  for i = 1, #primes do\n    if primes[i] > max then\n      max = primes[i]\n\
    \    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local max = 0\n\
    \    for i = 1, #lst do\n        if lst[i] > max then\n            max = lst[i]\n\
    \        end\n    end\n    local sum = 0\n    while max > 0 do\n        sum =\
    \ sum + max % 10\n        max = math.floor(max / 10)\n    end\n    return sum\n\
    end", "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n     \
    \ max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum =\
    \ sum + (max % 10)\n    max = math.floor(max / 10)\n  end\n  return sum\nend",
  "    local function is_prime(n)\n        if n < 2 then\n            return false\n\
    \        end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max_prime = 0\n    for _,\
    \ v in ipairs(lst) do\n        if is_prime(v) and v > max_prime then\n       \
    \     max_prime = v\n        end\n    end\n    return sum_digits(max_prime)\n\
    end", "  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v)\
    \ then\n      max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and\
    \ isPrime(v) then\n            max = v\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local max = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local primes\
    \ = {}\n  for i = 1, #lst do\n    if is_prime(lst[i]) then\n      primes[#primes\
    \ + 1] = lst[i]\n    end\n  end\n  local max_prime = math.max(unpack(primes))\n\
    \  local sum = 0\n  while max_prime > 0 do\n    sum = sum + max_prime % 10\n \
    \   max_prime = math.floor(max_prime / 10)\n  end\n  return sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n\
    \            max = v\n        end\n    end\n    local sum = 0\n    while max >\
    \ 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n   \
    \ end\n    return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n\
    \        if isPrime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n \
    \       end\n    end\n    local max = primes[1]\n    for i = 2, #primes do\n \
    \       if primes[i] > max then\n            max = primes[i]\n        end\n  \
    \  end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ prime = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and v > prime\
    \ then\n            prime = v\n        end\n    end\n    local sum = 0\n    while\
    \ prime > 0 do\n        sum = sum + prime % 10\n        prime = math.floor(prime\
    \ / 10)\n    end\n    return sum\nend", "    local primes = {}\n    for i = 1,\
    \ #lst do\n        if isPrime(lst[i]) then\n            table.insert(primes, lst[i])\n\
    \        end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if\
    \ primes[i] > max then\n            max = primes[i]\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend", "  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if is_prime(v) and v > max then\n      max\
    \ = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max\
    \ % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local\
    \ primes = {}\n    for _, v in ipairs(lst) do\n        if is_prime(v) then\n \
    \           table.insert(primes, v)\n        end\n    end\n    local max = math.max(unpack(primes))\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + (max % 10)\n   \
    \     max = math.floor(max / 10)\n    end\n    return sum\nend", "    local function\
    \ isPrime(n)\n        if n < 2 then\n            return false\n        end\n \
    \       for i = 2, n - 1 do\n            if n % i == 0 then\n                return\
    \ false\n            end\n        end\n        return true\n    end\n    local\
    \ function sumDigits(n)\n        local sum = 0\n        while n > 0 do\n     \
    \       sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local maxPrime = 0\n    for _, v in ipairs(lst)\
    \ do\n        if isPrime(v) and v > maxPrime then\n            maxPrime = v\n\
    \        end\n    end\n    return sumDigits(maxPrime)\nend", "  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n      max\
    \ = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max\
    \ % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local\
    \ function isPrime(n)\n        if n < 2 then\n            return false\n     \
    \   end\n        for i = 2, n - 1 do\n            if n % i == 0 then\n       \
    \         return false\n            end\n        end\n        return true\n  \
    \  end\n    local function sumDigits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max = 0\n    for _, v in\
    \ ipairs(lst) do\n        if isPrime(v) and v > max then\n            max = v\n\
    \        end\n    end\n    return sumDigits(max)\nend", "  local primes = {}\n\
    \  for i = 1, #lst do\n    local n = lst[i]\n    if n > 1 then\n      local is_prime\
    \ = true\n      for j = 2, n - 1 do\n        if n % j == 0 then\n          is_prime\
    \ = false\n          break\n        end\n      end\n      if is_prime then\n \
    \       primes[#primes + 1] = n\n      end\n    end\n  end\n  local max_prime\
    \ = 0\n  for i = 1, #primes do\n    if primes[i] > max_prime then\n      max_prime\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while max_prime > 0 do\n   \
    \ sum = sum + max_prime % 10\n    max_prime = math.floor(max_prime / 10)\n  end\n\
    \  return sum\nend", "  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v)\
    \ and v > max then\n      max = v\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend", "    local primes = {}\n    for i = 1, #lst do\n        if is_prime(lst[i])\
    \ then\n            primes[#primes + 1] = lst[i]\n        end\n    end\n    local\
    \ max = math.max(unpack(primes))\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend", "\tlocal primes = {}\n\tlocal max = 0\n\tfor i = 1, #lst do\n\
    \t\tlocal n = lst[i]\n\t\tif n > 1 then\n\t\t\tlocal is_prime = true\n\t\t\tfor\
    \ j = 2, n - 1 do\n\t\t\t\tif n % j == 0 then\n\t\t\t\t\tis_prime = false\n\t\t\
    \t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif is_prime then\n\t\t\t\tprimes[#primes\
    \ + 1] = n\n\t\t\t\tif n > max then\n\t\t\t\t\tmax = n\n\t\t\t\tend\n\t\t\tend\n\
    \t\tend\n\tend\n\tlocal sum = 0\n\twhile max > 0 do\n\t\tsum = sum + max % 10\n\
    \t\tmax = math.floor(max / 10)\n\tend\n\treturn sum\nend", "    local function\
    \ is_prime(n)\n        if n <= 1 then\n            return false\n        elseif\
    \ n <= 3 then\n            return true\n        elseif n % 2 == 0 or n % 3 ==\
    \ 0 then\n            return false\n        end\n        local i = 5\n       \
    \ while i * i <= n do\n            if n % i == 0 or n % (i + 2) == 0 then\n  \
    \              return false\n            end\n            i = i + 6\n        end\n\
    \        return true\n    end\n    local function sum_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end\n    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v) and v > max\
    \ then\n            max = v\n        end\n    end\n    return sum_digits(max)\n\
    end", "  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and isPrime(v)\
    \ then\n      max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v)\
    \ then\n      max = v\n    end\n  end\n  return sum_digits(max)\nend", "  local\
    \ max = 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n\
    \      max = v\n    end\n  end\n  return sum_digits(max)\nend", "  local max =\
    \ 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > max and is_prime(n)\
    \ then\n      max = n\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local function is_prime(n)\n        if n < 2 then\n            return\
    \ false\n        end\n        for i = 2, math.sqrt(n) do\n            if n % i\
    \ == 0 then\n                return false\n            end\n        end\n    \
    \    return true\n    end\n    local function sum_digits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end\n    local max\
    \ = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v) and v > max then\n\
    \            max = v\n        end\n    end\n    return sum_digits(max)\nend",
  "    local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "  local largestPrime = 0\n  for i = 1, #lst do\n\
    \    if isPrime(lst[i]) and lst[i] > largestPrime then\n      largestPrime = lst[i]\n\
    \    end\n  end\n  local sum = 0\n  while largestPrime > 0 do\n    sum = sum +\
    \ largestPrime % 10\n    largestPrime = math.floor(largestPrime / 10)\n  end\n\
    \  return sum\nend", "    local sum = 0\n    local max = 0\n    for i = 1, #lst\
    \ do\n        if lst[i] > max then\n            max = lst[i]\n        end\n  \
    \  end\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "  local function isPrime(n)\n    if n\
    \ < 2 then return false end\n    if n == 2 then return true end\n    if n % 2\
    \ == 0 then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n %\
    \ i == 0 then return false end\n    end\n    return true\n  end\n  local function\
    \ sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n\
    \      n = math.floor(n / 10)\n    end\n    return sum\n  end\n  local max = 0\n\
    \  for i = 1, #lst do\n    if isPrime(lst[i]) and lst[i] > max then\n      max\
    \ = lst[i]\n    end\n  end\n  return sumDigits(max)\nend", "  local primes = {}\n\
    \  for i = 1, #lst do\n    local n = lst[i]\n    local is_prime = true\n    for\
    \ j = 2, math.sqrt(n) do\n      if n % j == 0 then\n        is_prime = false\n\
    \        break\n      end\n    end\n    if is_prime then\n      primes[#primes\
    \ + 1] = n\n    end\n  end\n  local max = math.max(unpack(primes))\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and isPrime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and is_prime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "  local max = 0\n  for _, v in ipairs(lst) do\n\
    \    if v > max and is_prime(v) then\n      max = v\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and isPrime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ function is_prime(n)\n        if n <= 1 then\n            return false\n   \
    \     elseif n <= 3 then\n            return true\n        elseif n % 2 == 0 or\
    \ n % 3 == 0 then\n            return false\n        end\n        local i = 5\n\
    \        while i * i <= n do\n            if n % i == 0 or n % (i + 2) == 0 then\n\
    \                return false\n            end\n            i = i + 6\n      \
    \  end\n        return true\n    end\n    local function sum_digits(n)\n     \
    \   local s = 0\n        while n > 0 do\n            s = s + n % 10\n        \
    \    n = math.floor(n / 10)\n        end\n        return s\n    end\n    local\
    \ max_prime = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v) and v\
    \ > max_prime then\n            max_prime = v\n        end\n    end\n    return\
    \ sum_digits(max_prime)\nend", "    local largest = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > largest and is_prime(v) then\n            largest = v\n \
    \       end\n    end\n    local sum = 0\n    while largest > 0 do\n        sum\
    \ = sum + largest % 10\n        largest = math.floor(largest / 10)\n    end\n\
    \    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst) do\n  \
    \      if v > max and isPrime(v) then\n            max = v\n        end\n    end\n\
    \    local res = 0\n    while max > 0 do\n        res = res + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return res\nend", "  local max =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max\
    \ = math.floor(max / 10)\n  end\n  return sum\nend", "    local primes = {}\n\
    \    for i = 1, #lst do\n        if is_prime(lst[i]) then\n            primes[#primes\
    \ + 1] = lst[i]\n        end\n    end\n    local max = 0\n    for i = 1, #primes\
    \ do\n        if primes[i] > max then\n            max = primes[i]\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n\
    \            max = v\n        end\n    end\n    local sum = 0\n    while max >\
    \ 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n   \
    \ end\n    return sum\nend", "  local primes = {}\n  for i = 1, #lst do\n    if\
    \ isPrime(lst[i]) then\n      primes[#primes + 1] = lst[i]\n    end\n  end\n \
    \ local max = 0\n  for i = 1, #primes do\n    if primes[i] > max then\n      max\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum =\
    \ sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", " \
    \   local primes = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n  \
    \          for j = 2, lst[i] do\n                if lst[i] % j == 0 then\n   \
    \                 break\n                end\n                if j == lst[i] then\n\
    \                    primes[#primes + 1] = lst[i]\n                end\n     \
    \       end\n        end\n    end\n    local max = primes[1]\n    for i = 2, #primes\
    \ do\n        if primes[i] > max then\n            max = primes[i]\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local primes\
    \ = {}\n  for i = 1, #lst do\n    if lst[i] > 1 then\n      local is_prime = true\n\
    \      for j = 2, lst[i] - 1 do\n        if lst[i] % j == 0 then\n          is_prime\
    \ = false\n          break\n        end\n      end\n      if is_prime then\n \
    \       table.insert(primes, lst[i])\n      end\n    end\n  end\n  local max_prime\
    \ = 0\n  for i = 1, #primes do\n    if primes[i] > max_prime then\n      max_prime\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while max_prime > 0 do\n   \
    \ sum = sum + max_prime % 10\n    max_prime = math.floor(max_prime / 10)\n  end\n\
    \  return sum\nend", "  local largest = 0\n  for _, v in ipairs(lst) do\n    if\
    \ isPrime(v) and v > largest then\n      largest = v\n    end\n  end\n  local\
    \ sum = 0\n  while largest > 0 do\n    sum = sum + largest % 10\n    largest =\
    \ math.floor(largest / 10)\n  end\n  return sum\nend", "    local function is_prime(n)\n\
    \        if n < 2 then\n            return false\n        end\n        for i =\
    \ 2, math.sqrt(n) do\n            if n % i == 0 then\n                return false\n\
    \            end\n        end\n        return true\n    end\n    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local max = -1\n    for _, v in ipairs(lst) do\n        if\
    \ is_prime(v) and v > max then\n            max = v\n        end\n    end\n  \
    \  return sum_digits(max)\nend", "  local function is_prime(n)\n    if n < 2 then\
    \ return false end\n    if n == 2 then return true end\n    if n % 2 == 0 then\
    \ return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local largest_prime = 0\n  for _, v\
    \ in ipairs(lst) do\n    if is_prime(v) and v > largest_prime then\n      largest_prime\
    \ = v\n    end\n  end\n  return sum_digits(largest_prime)\nend", "    local max\
    \ = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n\
    \            max = v\n        end\n    end\n    local res = 0\n    while max >\
    \ 0 do\n        res = res + max % 10\n        max = math.floor(max / 10)\n   \
    \ end\n    return res\nend", "  local primes = {}\n  for i = 1, #lst do\n    if\
    \ isPrime(lst[i]) then\n      primes[#primes + 1] = lst[i]\n    end\n  end\n \
    \ local max = 0\n  for i = 1, #primes do\n    if primes[i] > max then\n      max\
    \ = primes[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum =\
    \ sum + (max % 10)\n    max = math.floor(max / 10)\n  end\n  return sum\nend",
  "    local function is_prime(n)\n        if n < 2 then\n            return false\n\
    \        end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max_prime = 0\n    for _,\
    \ n in ipairs(lst) do\n        if is_prime(n) and n > max_prime then\n       \
    \     max_prime = n\n        end\n    end\n    return sum_digits(max_prime)\n\
    end", "  local primes = {}\n  for i = 1, #lst do\n    if is_prime(lst[i]) then\n\
    \      primes[#primes + 1] = lst[i]\n    end\n  end\n  local max_prime = math.max(unpack(primes))\n\
    \  local sum = 0\n  while max_prime > 0 do\n    sum = sum + max_prime % 10\n \
    \   max_prime = math.floor(max_prime / 10)\n  end\n  return sum\nend", "  local\
    \ max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > max and is_prime(n)\
    \ then\n      max = n\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "  local max = 0\n  for i = 1, #lst do\n    local n = lst[i]\n    if n >\
    \ max and isPrime(n) then\n      max = n\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend", "  local primes = {}\n  for i = 1, #lst do\n    local isPrime\
    \ = true\n    for j = 2, i - 1 do\n      if i % j == 0 then\n        isPrime =\
    \ false\n        break\n      end\n    end\n    if isPrime then\n      primes[#primes\
    \ + 1] = i\n    end\n  end\n  local maxPrime = primes[#primes]\n  local sum =\
    \ 0\n  while maxPrime > 0 do\n    sum = sum + maxPrime % 10\n    maxPrime = math.floor(maxPrime\
    \ / 10)\n  end\n  return sum\nend", "  local primes = {}\n  for _, v in ipairs(lst)\
    \ do\n    if is_prime(v) then\n      table.insert(primes, v)\n    end\n  end\n\
    \  local max = math.max(unpack(primes))\n  local sum = 0\n  while max > 0 do\n\
    \    sum = sum + (max % 10)\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        if lst[i] > 1 then\n\
    \            local is_prime = true\n            for j = 2, lst[i] - 1 do\n   \
    \             if lst[i] % j == 0 then\n                    is_prime = false\n\
    \                    break\n                end\n            end\n           \
    \ if is_prime then\n                table.insert(primes, lst[i])\n           \
    \ end\n        end\n    end\n    local max_prime = 0\n    for i = 1, #primes do\n\
    \        if primes[i] > max_prime then\n            max_prime = primes[i]\n  \
    \      end\n    end\n    local sum = 0\n    while max_prime > 0 do\n        sum\
    \ = sum + max_prime % 10\n        max_prime = math.floor(max_prime / 10)\n   \
    \ end\n    return sum\nend", "  local max = 0\n  for i = 1, #lst do\n    local\
    \ n = lst[i]\n    if n > max and isPrime(n) then\n      max = n\n    end\n  end\n\
    \  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and is_prime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local function\
    \ is_prime(n)\n    if n <= 1 then return false end\n    for i = 2, math.sqrt(n)\
    \ do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local max = 0\n  for _, v in ipairs(lst) do\n    if is_prime(v) and\
    \ v > max then max = v end\n  end\n  return sum_digits(max)\nend", "  local primes\
    \ = {}\n  for i = 1, #lst do\n    if isPrime(lst[i]) then\n      primes[#primes\
    \ + 1] = lst[i]\n    end\n  end\n  local max = primes[1]\n  for i = 2, #primes\
    \ do\n    if primes[i] > max then\n      max = primes[i]\n    end\n  end\n  local\
    \ sum = 0\n  while max > 0 do\n    sum = sum + (max % 10)\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max_prime = 0\n    for _, v in\
    \ ipairs(lst) do\n        if is_prime(v) and v > max_prime then\n            max_prime\
    \ = v\n        end\n    end\n    local sum = 0\n    while max_prime > 0 do\n \
    \       sum = sum + (max_prime % 10)\n        max_prime = math.floor(max_prime\
    \ / 10)\n    end\n    return sum\nend", "\tlocal max = 0\n\tfor _, v in ipairs(lst)\
    \ do\n\t\tif v > max and is_prime(v) then\n\t\t\tmax = v\n\t\tend\n\tend\n\tlocal\
    \ sum = 0\n\twhile max > 0 do\n\t\tsum = sum + max % 10\n\t\tmax = math.floor(max\
    \ / 10)\n\tend\n\treturn sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and is_prime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local function\
    \ isPrime(n)\n    if n < 2 then return false end\n    for i = 2, math.floor(math.sqrt(n))\
    \ do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n\
    \  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local largestPrime = 0\n  for _, v in ipairs(lst) do\n    if isPrime(v) and\
    \ v > largestPrime then\n      largestPrime = v\n    end\n  end\n  return sumDigits(largestPrime)\n\
    end", "  local function isPrime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, math.sqrt(n) do\n      if n % i == 0 then return false end\n    end\n\
    \    return true\n  end\n  local function sumDigits(n)\n    local sum = 0\n  \
    \  while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n  \
    \  end\n    return sum\n  end\n  local maxPrime = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > maxPrime then\n      maxPrime = v\n    end\n \
    \ end\n  return sumDigits(maxPrime)\nend", "  local max = 0\n  for i = 1, #lst\
    \ do\n    if lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and is_prime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and is_prime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n\
    \        if is_prime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n\
    \        end\n    end\n    local max = math.max(unpack(primes))\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local primes = {}\n    for i = 1,\
    \ #lst do\n        if isPrime(lst[i]) then\n            primes[#primes + 1] =\
    \ lst[i]\n        end\n    end\n    local max = primes[1]\n    for i = 2, #primes\
    \ do\n        if primes[i] > max then\n            max = primes[i]\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n            max\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend", "  local max = 0\n  for _, v in ipairs(lst) do\n    if v >\
    \ max and is_prime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n \
    \ while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n\
    \  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if v > max and isPrime(v) then\n            max = v\n        end\n  \
    \  end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i]) then\n     \
    \       primes[#primes + 1] = lst[i]\n        end\n    end\n    local max = primes[1]\n\
    \    for i = 2, #primes do\n        if primes[i] > max then\n            max =\
    \ primes[i]\n        end\n    end\n    local sum = 0\n    while max > 0 do\n \
    \       sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n  \
    \  return sum\nend", "  local max = 0\n  for _, v in ipairs(lst) do\n    if v\
    \ > max and isPrime(v) then\n      max = v\n    end\n  end\n  local sum = 0\n\
    \  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n\
    \  end\n  return sum\nend", "  local max = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ > max then\n      max = lst[i]\n    end\n  end\n  local sum = 0\n  while max\
    \ > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend", "    local max = 0\n    for _, v in ipairs(lst) do\n        if v\
    \ > max and isPrime(v) then\n            max = v\n        end\n    end\n    local\
    \ sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if v > max and is_prime(v) then\n      max = v\n    end\n  end\n  local\
    \ sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "  local primes = {}\n  for i = 1, #lst do\n\
    \    if is_prime(lst[i]) then\n      table.insert(primes, lst[i])\n    end\n \
    \ end\n  local max = math.max(unpack(primes))\n  local sum = 0\n  while max >\
    \ 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return\
    \ sum\nend", "    local max = 0\n    for i = 1, #lst do\n        if lst[i] > max\
    \ then\n            max = lst[i]\n        end\n    end\n    local sum = 0\n  \
    \  while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "  local function isPrime(n)\n    if n\
    \ <= 1 then return false end\n    for i = 2, n - 1 do\n      if n % i == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local maxPrime = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > maxPrime then\n      maxPrime = v\n    end\n \
    \ end\n  return sumDigits(maxPrime)\nend", "    local primes = {}\n    for i =\
    \ 1, #lst do\n        if isPrime(lst[i]) then\n            table.insert(primes,\
    \ lst[i])\n        end\n    end\n    local max = math.max(unpack(primes))\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend", "\tlocal max = 0\n\
    \tfor _, v in ipairs(lst) do\n\t\tif v > max and is_prime(v) then\n\t\t\tmax =\
    \ v\n\t\tend\n\tend\n\tlocal sum = 0\n\twhile max > 0 do\n\t\tsum = sum + max\
    \ % 10\n\t\tmax = math.floor(max / 10)\n\tend\n\treturn sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n\
    \            max = v\n        end\n    end\n    local sum = 0\n    for i = 1,\
    \ #tostring(max) do\n        sum = sum + tonumber(tostring(max):sub(i, i))\n \
    \   end\n    return sum\nend", "    local max = 0\n    for i = 1, #lst do\n  \
    \      if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "    local max\
    \ = 0\n    for i = 1, #lst do\n        local x = lst[i]\n        if x > max and\
    \ is_prime(x) then\n            max = x\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local function is_prime(n)\n    \
    \    for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n            \
    \    return false\n            end\n        end\n        return true\n    end\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\n    local max_prime = 0\n    for _, v\
    \ in ipairs(lst) do\n        if is_prime(v) and v > max_prime then\n         \
    \   max_prime = v\n        end\n    end\n    return sum_digits(max_prime)\nend",
  "    local primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i]) then\n\
    \            primes[#primes + 1] = lst[i]\n        end\n    end\n    local max\
    \ = 0\n    for i = 1, #primes do\n        if primes[i] > max then\n          \
    \  max = primes[i]\n        end\n    end\n    local sum = 0\n    while max > 0\
    \ do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n\
    \    return sum\nend", "    local max = 0\n    for i = 1, #lst do\n        if\
    \ lst[i] > max then\n            max = lst[i]\n        end\n    end\n    local\
    \ sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local primes = {}\n    for i = 1,\
    \ #lst do\n        if is_prime(lst[i]) then\n            primes[#primes + 1] =\
    \ lst[i]\n        end\n    end\n    local max = 0\n    for i = 1, #primes do\n\
    \        if primes[i] > max then\n            max = primes[i]\n        end\n \
    \   end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local max\
    \ = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n  \
    \  end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "  local function\
    \ is_prime(n)\n    if n <= 1 then return false end\n    if n <= 3 then return\
    \ true end\n    if n % 2 == 0 or n % 3 == 0 then return false end\n    for i =\
    \ 5, math.floor(math.sqrt(n)), 6 do\n      if n % i == 0 or n % (i + 2) == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max_prime = 0\n  for _, v in\
    \ ipairs(lst) do\n    if is_prime(v) and v > max_prime then\n      max_prime =\
    \ v\n    end\n  end\n  return sum_digits(max_prime)\nend", "  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if isPrime(v) and v > max then\n      max =\
    \ v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max\
    \ % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "  local max\
    \ = 0\n  for i = 1, #lst do\n    local x = lst[i]\n    if x > max and isPrime(x)\
    \ then\n      max = x\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local function is_prime(n)\n        if n <= 1 then\n            return\
    \ false\n        elseif n <= 3 then\n            return true\n        elseif n\
    \ % 2 == 0 or n % 3 == 0 then\n            return false\n        end\n       \
    \ local i = 5\n        while i * i <= n do\n            if n % i == 0 or n % (i\
    \ + 2) == 0 then\n                return false\n            end\n            i\
    \ = i + 6\n        end\n        return true\n    end\n    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max_prime = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v)\
    \ and v > max_prime then\n            max_prime = v\n        end\n    end\n  \
    \  return sum_digits(max_prime)\nend", "    local primes = {}\n    for i = 1,\
    \ #lst do\n        local n = lst[i]\n        if n > 1 then\n            local\
    \ is_prime = true\n            for j = 2, math.sqrt(n) do\n                if\
    \ n % j == 0 then\n                    is_prime = false\n                    break\n\
    \                end\n            end\n            if is_prime then\n        \
    \        table.insert(primes, n)\n            end\n        end\n    end\n    local\
    \ max_prime = math.max(unpack(primes))\n    local sum = 0\n    while max_prime\
    \ > 0 do\n        sum = sum + max_prime % 10\n        max_prime = math.floor(max_prime\
    \ / 10)\n    end\n    return sum\nend", "  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if v > max and isPrime(v) then\n      max = v\n    end\n  end\n  local\
    \ sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local primes = {}\n    for i = 1, #lst\
    \ do\n        if is_prime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n\
    \        end\n    end\n    local max = math.max(unpack(primes))\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and is_prime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + (max %\
    \ 10)\n        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local\
    \ primes = {}\n  for i = 1, #lst do\n    local n = lst[i]\n    if is_prime(n)\
    \ then\n      primes[#primes + 1] = n\n    end\n  end\n  local max_prime = math.max(unpack(primes))\n\
    \  local sum = 0\n  while max_prime > 0 do\n    sum = sum + max_prime % 10\n \
    \   max_prime = math.floor(max_prime / 10)\n  end\n  return sum\nend", "    local\
    \ function is_prime(n)\n        for i = 2, math.sqrt(n) do\n            if n %\
    \ i == 0 then\n                return false\n            end\n        end\n  \
    \      return true\n    end\n    local function sum_digits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end\n    local max\
    \ = 0\n    for _, n in ipairs(lst) do\n        if is_prime(n) and n > max then\n\
    \            max = n\n        end\n    end\n    return sum_digits(max)\nend",
  "    local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n\
    \        local n = lst[i]\n        if n > 1 then\n            local is_prime =\
    \ true\n            for j = 2, n - 1 do\n                if n % j == 0 then\n\
    \                    is_prime = false\n                    break\n           \
    \     end\n            end\n            if is_prime then\n                table.insert(primes,\
    \ n)\n            end\n        end\n    end\n    local max_prime = math.max(unpack(primes))\n\
    \    local sum = 0\n    while max_prime > 0 do\n        sum = sum + max_prime\
    \ % 10\n        max_prime = math.floor(max_prime / 10)\n    end\n    return sum\n\
    end", "    local max = 0\n    for i = 1, #lst do\n        local n = lst[i]\n \
    \       if n > max and is_prime(n) then\n            max = n\n        end\n  \
    \  end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ function is_prime(n)\n        if n < 2 then\n            return false\n    \
    \    end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max = 0\n    for _, v in\
    \ ipairs(lst) do\n        if is_prime(v) and v > max then\n            max = v\n\
    \        end\n    end\n    return sum_digits(max)\nend", "  local primes = {}\n\
    \  for i = 1, #lst do\n    if isPrime(lst[i]) then\n      primes[#primes + 1]\
    \ = lst[i]\n    end\n  end\n  local max = 0\n  for i = 1, #primes do\n    if primes[i]\
    \ > max then\n      max = primes[i]\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend", "  local largest_prime = 0\n  for i = 1, #lst do\n    local\
    \ n = lst[i]\n    if is_prime(n) and n > largest_prime then\n      largest_prime\
    \ = n\n    end\n  end\n  local sum = 0\n  while largest_prime > 0 do\n    sum\
    \ = sum + largest_prime % 10\n    largest_prime = math.floor(largest_prime / 10)\n\
    \  end\n  return sum\nend", "    local function is_prime(n)\n        if n <= 1\
    \ then\n            return false\n        elseif n <= 3 then\n            return\
    \ true\n        elseif n % 2 == 0 or n % 3 == 0 then\n            return false\n\
    \        end\n        local i = 5\n        while i * i <= n do\n            if\
    \ n % i == 0 or n % (i + 2) == 0 then\n                return false\n        \
    \    end\n            i = i + 6\n        end\n        return true\n    end\n \
    \   local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if is_prime(v) and v > max then\n            max = v\n        end\n \
    \   end\n    return sum_digits(max)\nend", "  local primes = {}\n  for i = 1,\
    \ #lst do\n    local n = lst[i]\n    if n > 1 then\n      local is_prime = true\n\
    \      for j = 2, math.floor(math.sqrt(n)) do\n        if n % j == 0 then\n  \
    \        is_prime = false\n          break\n        end\n      end\n      if is_prime\
    \ then\n        primes[#primes + 1] = n\n      end\n    end\n  end\n  local max_prime\
    \ = math.max(unpack(primes))\n  local sum = 0\n  while max_prime > 0 do\n    sum\
    \ = sum + max_prime % 10\n    max_prime = math.floor(max_prime / 10)\n  end\n\
    \  return sum\nend", "  local function isPrime(n)\n    if n < 2 then return false\
    \ end\n    if n == 2 then return true end\n    if n % 2 == 0 then return false\
    \ end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i == 0 then return false\
    \ end\n    end\n    return true\n  end\n  local function sumDigits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max = 0\n  for _, v in ipairs(lst)\
    \ do\n    if isPrime(v) and v > max then\n      max = v\n    end\n  end\n  return\
    \ sumDigits(max)\nend", "    local primes = {}\n    for i = 1, #lst do\n     \
    \   if isPrime(lst[i]) then\n            table.insert(primes, lst[i])\n      \
    \  end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if primes[i]\
    \ > max then\n            max = primes[i]\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + (max % 10)\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local function isPrime(n)\n     \
    \   if n < 2 then\n            return false\n        end\n        for i = 2, n\
    \ - 1 do\n            if n % i == 0 then\n                return false\n     \
    \       end\n        end\n        return true\n    end\n    local function sumDigits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end\n\
    \    local max = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and\
    \ v > max then\n            max = v\n        end\n    end\n    return sumDigits(max)\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        local n = lst[i]\n\
    \        if n > 1 then\n            local is_prime = true\n            for j =\
    \ 2, n - 1 do\n                if n % j == 0 then\n                    is_prime\
    \ = false\n                    break\n                end\n            end\n \
    \           if is_prime then\n                primes[#primes + 1] = n\n      \
    \      end\n        end\n    end\n    local max_prime = primes[1]\n    for i =\
    \ 2, #primes do\n        if primes[i] > max_prime then\n            max_prime\
    \ = primes[i]\n        end\n    end\n    local sum = 0\n    while max_prime >\
    \ 0 do\n        sum = sum + max_prime % 10\n        max_prime = math.floor(max_prime\
    \ / 10)\n    end\n    return sum\nend", "    local primes = {}\n    for i = 1,\
    \ #lst do\n        if is_prime(lst[i]) then\n            primes[#primes + 1] =\
    \ lst[i]\n        end\n    end\n    local max = 0\n    for i = 1, #primes do\n\
    \        if primes[i] > max then\n            max = primes[i]\n        end\n \
    \   end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for i = 1, #lst do\n        local n = lst[i]\n        if n > max\
    \ and isPrime(n) then\n            max = n\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local primes = {}\n    for _, v in\
    \ ipairs(lst) do\n        if isPrime(v) then\n            table.insert(primes,\
    \ v)\n        end\n    end\n    local max = math.max(unpack(primes))\n    local\
    \ sum = 0\n    while max > 0 do\n        sum = sum + (max % 10)\n        max =\
    \ math.floor(max / 10)\n    end\n    return sum\nend", "    local primes = {}\n\
    \    for i = 1, #lst do\n        if is_prime(lst[i]) then\n            primes[#primes\
    \ + 1] = lst[i]\n        end\n    end\n    local max_prime = math.max(unpack(primes))\n\
    \    local sum = 0\n    while max_prime > 0 do\n        sum = sum + max_prime\
    \ % 10\n        max_prime = math.floor(max_prime / 10)\n    end\n    return sum\n\
    end", "  local function is_prime(n)\n    if n < 2 then return false end\n    for\
    \ i = 2, n - 1 do\n      if n % i == 0 then return false end\n    end\n    return\
    \ true\n  end\n  local function sum_digits(n)\n    local sum = 0\n    while n\
    \ > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n  \
    \  return sum\n  end\n  local max_prime = 0\n  for _, n in ipairs(lst) do\n  \
    \  if is_prime(n) and n > max_prime then\n      max_prime = n\n    end\n  end\n\
    \  return sum_digits(max_prime)\nend", "    local function is_prime(n)\n     \
    \   if n < 2 then\n            return false\n        end\n        for i = 2, math.floor(math.sqrt(n))\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local function sum_digits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local max_prime = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v)\
    \ and v > max_prime then\n            max_prime = v\n        end\n    end\n  \
    \  return sum_digits(max_prime)\nend", "    local primes = {}\n    for i = 1,\
    \ #lst do\n        if is_prime(lst[i]) then\n            primes[#primes + 1] =\
    \ lst[i]\n        end\n    end\n    local max = 0\n    for i = 1, #primes do\n\
    \        if primes[i] > max then\n            max = primes[i]\n        end\n \
    \   end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ function is_prime(n)\n        if n < 2 then\n            return false\n    \
    \    end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max = 0\n    for _, v in\
    \ ipairs(lst) do\n        if is_prime(v) and v > max then\n            max = v\n\
    \        end\n    end\n    return sum_digits(max)\nend", "    local max = 0\n\
    \    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n    \
    \        max = v\n        end\n    end\n    local sum = 0\n    while max > 0 do\n\
    \        sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n \
    \   return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n       \
    \ if is_prime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n       \
    \ end\n    end\n    local max = primes[1]\n    for i = 2, #primes do\n       \
    \ if primes[i] > max then\n            max = primes[i]\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "  local max =\
    \ 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n     \
    \ max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum\
    \ + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", "  local\
    \ primes = {}\n  for _, v in ipairs(lst) do\n    if isPrime(v) then\n      table.insert(primes,\
    \ v)\n    end\n  end\n  local max = math.max(unpack(primes))\n  local sum = 0\n\
    \  while max > 0 do\n    sum = sum + (max % 10)\n    max = math.floor(max / 10)\n\
    \  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if v > max and is_prime(v) then\n            max = v\n        end\n \
    \   end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local primes\
    \ = {}\n  for i = 1, #lst do\n    local is_prime = true\n    for j = 2, math.floor(math.sqrt(lst[i]))\
    \ do\n      if lst[i] % j == 0 then\n        is_prime = false\n        break\n\
    \      end\n    end\n    if is_prime then\n      table.insert(primes, lst[i])\n\
    \    end\n  end\n  local max_prime = 0\n  for i = 1, #primes do\n    if primes[i]\
    \ > max_prime then\n      max_prime = primes[i]\n    end\n  end\n  local sum =\
    \ 0\n  while max_prime > 0 do\n    sum = sum + max_prime % 10\n    max_prime =\
    \ math.floor(max_prime / 10)\n  end\n  return sum\nend", "  local max = 0\n  for\
    \ _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n      max = v\n\
    \    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "  local function\
    \ isPrime(n)\n    if n < 2 then return false end\n    if n == 2 then return true\
    \ end\n    if n % 2 == 0 then return false end\n    for i = 3, math.sqrt(n), 2\
    \ do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n\
    \  local function sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local maxPrime = 0\n  for _, v in ipairs(lst) do\n    if isPrime(v) and v >\
    \ maxPrime then\n      maxPrime = v\n    end\n  end\n  return sumDigits(maxPrime)\n\
    end", "    local max_prime = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v)\
    \ and v > max_prime then\n            max_prime = v\n        end\n    end\n  \
    \  local sum = 0\n    while max_prime > 0 do\n        sum = sum + max_prime %\
    \ 10\n        max_prime = math.floor(max_prime / 10)\n    end\n    return sum\n\
    end", "    local function isPrime(n)\n        if n < 2 then\n            return\
    \ false\n        end\n        for i = 2, math.sqrt(n) do\n            if n % i\
    \ == 0 then\n                return false\n            end\n        end\n    \
    \    return true\n    end\n    local function sumDigits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end\n    local maxPrime\
    \ = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and v > maxPrime\
    \ then\n            maxPrime = v\n        end\n    end\n    return sumDigits(maxPrime)\n\
    end", "    local largestPrime = 0\n    for _, v in ipairs(lst) do\n        if\
    \ isPrime(v) and v > largestPrime then\n            largestPrime = v\n       \
    \ end\n    end\n    local sum = 0\n    while largestPrime > 0 do\n        sum\
    \ = sum + largestPrime % 10\n        largestPrime = math.floor(largestPrime /\
    \ 10)\n    end\n    return sum\nend", "    local primes = {}\n    for i = 1, #lst\
    \ do\n        if isPrime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n\
    \        end\n    end\n    local max = primes[1]\n    for i = 2, #primes do\n\
    \        if primes[i] > max then\n            max = primes[i]\n        end\n \
    \   end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if v > max and is_prime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "  local max = 0\n  for _, v in ipairs(lst) do\n\
    \    if v > max and is_prime(v) then\n      max = v\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and isPrime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local max\
    \ = 0\n  for i = 1, #lst do\n    if isPrime(lst[i]) and lst[i] > max then\n  \
    \    max = lst[i]\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum\
    \ = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend",
  "  local primes = {}\n  for i = 1, #lst do\n    local n = lst[i]\n    if n > 1 then\n\
    \      local is_prime = true\n      for j = 2, n - 1 do\n        if n % j == 0\
    \ then\n          is_prime = false\n          break\n        end\n      end\n\
    \      if is_prime then\n        primes[#primes + 1] = n\n      end\n    end\n\
    \  end\n  local max_prime = math.max(unpack(primes))\n  local sum = 0\n  while\
    \ max_prime > 0 do\n    sum = sum + max_prime % 10\n    max_prime = math.floor(max_prime\
    \ / 10)\n  end\n  return sum\nend", "    local max = 0\n    for i = 1, #lst do\n\
    \        if lst[i] > max then\n            max = lst[i]\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "  local max =\
    \ 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n    end\n\
    \  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max\
    \ = math.floor(max / 10)\n  end\n  return sum\nend", "    local function is_prime(n)\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end\n \
    \   local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if is_prime(v) and v > max then\n            max = v\n        end\n \
    \   end\n    return sum_digits(max)\nend", "  local function isPrime(n)\n    if\
    \ n < 2 then return false end\n    if n == 2 then return true end\n    if n %\
    \ 2 == 0 then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n\
    \ % i == 0 then return false end\n    end\n    return true\n  end\n  local function\
    \ sumDigits(n)\n    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n\
    \      n = math.floor(n / 10)\n    end\n    return sum\n  end\n  local max = 0\n\
    \  for _, v in ipairs(lst) do\n    if isPrime(v) and v > max then\n      max =\
    \ v\n    end\n  end\n  return sumDigits(max)\nend", "    local primes = {}\n \
    \   for i = 2, math.maxinteger do\n        if not primes[i] then\n           \
    \ for j = i * 2, math.maxinteger, i do\n                primes[j] = true\n   \
    \         end\n        end\n    end\n    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if not primes[v] and v > max then\n            max = v\n       \
    \ end\n    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max\
    \ % 10\n        max = math.floor(max / 10)\n    end\n    return sum\nend", " \
    \   local max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n    \
    \        max = lst[i]\n        end\n    end\n    local sum = 0\n    while max\
    \ > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n \
    \   end\n    return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n\
    \        if isPrime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n \
    \       end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if\
    \ primes[i] > max then\n            max = primes[i]\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend", "    local function\
    \ is_prime(n)\n        if n <= 1 then\n            return false\n        elseif\
    \ n <= 3 then\n            return true\n        elseif n % 2 == 0 or n % 3 ==\
    \ 0 then\n            return false\n        end\n        local i = 5\n       \
    \ while i * i <= n do\n            if n % i == 0 or n % (i + 2) == 0 then\n  \
    \              return false\n            end\n            i = i + 6\n        end\n\
    \        return true\n    end\n    local function sum_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end\n    local\
    \ max = 0\n    for _, v in ipairs(lst) do\n        if is_prime(v) and v > max\
    \ then\n            max = v\n        end\n    end\n    return sum_digits(max)\n\
    end", "    local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and\
    \ isPrime(v) then\n            max = v\n        end\n    end\n    local sum =\
    \ 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local function is_prime(n)\n    \
    \    for i = 2, n - 1 do\n            if n % i == 0 then\n                return\
    \ false\n            end\n        end\n        return true\n    end\n    local\
    \ function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n    \
    \        sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end\n    local max_prime = 0\n    for _, n in ipairs(lst)\
    \ do\n        if is_prime(n) and n > max_prime then\n            max_prime = n\n\
    \        end\n    end\n    return sum_digits(max_prime)\nend", "  local max =\
    \ 0\n  for i = 1, #lst do\n    local num = lst[i]\n    if num > max and isPrime(num)\
    \ then\n      max = num\n    end\n  end\n  local sum = 0\n  while max > 0 do\n\
    \    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ then\n            primes[#primes + 1] = lst[i]\n        end\n    end\n    local\
    \ max = 0\n    for i = 1, #primes do\n        if primes[i] > max then\n      \
    \      max = primes[i]\n        end\n    end\n    local sum = 0\n    while max\
    \ > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n \
    \   end\n    return sum\nend", "    local max_prime = 0\n    for _, v in ipairs(lst)\
    \ do\n        if is_prime(v) and v > max_prime then\n            max_prime = v\n\
    \        end\n    end\n    local sum = 0\n    while max_prime > 0 do\n       \
    \ sum = sum + max_prime % 10\n        max_prime = math.floor(max_prime / 10)\n\
    \    end\n    return sum\nend", "  local max = 0\n  for i = 1, #lst do\n    local\
    \ n = lst[i]\n    if n > max and is_prime(n) then\n      max = n\n    end\n  end\n\
    \  local sum = 0\n  while max > 0 do\n    sum = sum + (max % 10)\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "  local function isPrime(n)\n    if n < 2\
    \ then return false end\n    if n == 2 then return true end\n    if n % 2 == 0\
    \ then return false end\n    for i = 3, math.sqrt(n), 2 do\n      if n % i ==\
    \ 0 then return false end\n    end\n    return true\n  end\n  local function sumDigits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local maxPrime = 0\n  for _, n in ipairs(lst)\
    \ do\n    if isPrime(n) and n > maxPrime then\n      maxPrime = n\n    end\n \
    \ end\n  return sumDigits(maxPrime)\nend", "    local primes = {}\n    for i =\
    \ 1, #lst do\n        local n = lst[i]\n        local is_prime = true\n      \
    \  for j = 2, math.floor(math.sqrt(n)) do\n            if n % j == 0 then\n  \
    \              is_prime = false\n                break\n            end\n    \
    \    end\n        if is_prime then\n            table.insert(primes, n)\n    \
    \    end\n    end\n    local max_prime = math.max(unpack(primes))\n    local sum\
    \ = 0\n    while max_prime > 0 do\n        sum = sum + max_prime % 10\n      \
    \  max_prime = math.floor(max_prime / 10)\n    end\n    return sum\nend", "  \
    \  local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local primes = {}\n    for i = 2, #lst do\n\
    \        if lst[i] > 1 then\n            for j = i * 2, #lst, i do\n         \
    \       lst[j] = 0\n            end\n        end\n    end\n    for i = 2, #lst\
    \ do\n        if lst[i] > 1 then\n            table.insert(primes, lst[i])\n \
    \       end\n    end\n    local max = primes[1]\n    for i = 2, #primes do\n \
    \       if primes[i] > max then\n            max = primes[i]\n        end\n  \
    \  end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local function\
    \ is_prime(n)\n    if n <= 1 then return false end\n    if n <= 3 then return\
    \ true end\n    if n % 2 == 0 or n % 3 == 0 then return false end\n    for i =\
    \ 5, math.floor(math.sqrt(n)), 6 do\n      if n % i == 0 or n % (i + 2) == 0 then\
    \ return false end\n    end\n    return true\n  end\n  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local max_prime = 0\n  for _, n in\
    \ ipairs(lst) do\n    if is_prime(n) and n > max_prime then\n      max_prime =\
    \ n\n    end\n  end\n  return sum_digits(max_prime)\nend", "    local primes =\
    \ {}\n    for i = 0, #lst do\n        if lst[i] > 1 then\n            for j =\
    \ 2, lst[i] do\n                if lst[i] % j == 0 then\n                    break\n\
    \                end\n                if j == lst[i] then\n                  \
    \  primes[#primes + 1] = lst[i]\n                end\n            end\n      \
    \  end\n    end\n    local max = primes[1]\n    for i = 2, #primes do\n      \
    \  if primes[i] > max then\n            max = primes[i]\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "    local largestPrime\
    \ = 0\n    for _, v in ipairs(lst) do\n        if isPrime(v) and v > largestPrime\
    \ then\n            largestPrime = v\n        end\n    end\n    local sum = 0\n\
    \    while largestPrime > 0 do\n        sum = sum + largestPrime % 10\n      \
    \  largestPrime = math.floor(largestPrime / 10)\n    end\n    return sum\nend",
  "  local max = 0\n  for i = 1, #lst do\n    if lst[i] > max then\n      max = lst[i]\n\
    \    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum = sum + max % 10\n\
    \    max = math.floor(max / 10)\n  end\n  return sum\nend", "    local primes\
    \ = {}\n    for i = 1, #lst do\n        if is_prime(lst[i]) then\n           \
    \ primes[#primes + 1] = lst[i]\n        end\n    end\n    local max_prime = math.max(unpack(primes))\n\
    \    local sum = 0\n    while max_prime > 0 do\n        sum = sum + max_prime\
    \ % 10\n        max_prime = math.floor(max_prime / 10)\n    end\n    return sum\n\
    end", "  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v)\
    \ then\n      max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n \
    \   sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        if is_prime(lst[i])\
    \ then\n            primes[#primes + 1] = lst[i]\n        end\n    end\n    local\
    \ max_prime = math.max(unpack(primes))\n    local sum = 0\n    while max_prime\
    \ > 0 do\n        sum = sum + max_prime % 10\n        max_prime = math.floor(max_prime\
    \ / 10)\n    end\n    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if isPrime(v) and v > max then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local function\
    \ is_prime(n)\n    if n < 2 then return false end\n    for i = 2, math.floor(math.sqrt(n))\
    \ do\n      if n % i == 0 then return false end\n    end\n    return true\n  end\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local max = 0\n  for _, n in ipairs(lst) do\n    if is_prime(n) and\
    \ n > max then max = n end\n  end\n  return sum_digits(max)\nend", "    local\
    \ max = 0\n    for i = 1, #lst do\n        local n = lst[i]\n        if n > max\
    \ and isPrime(n) then\n            max = n\n        end\n    end\n    local sum\
    \ = 0\n    while max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max\
    \ / 10)\n    end\n    return sum\nend", "    local function is_prime(n)\n    \
    \    if n < 2 then\n            return false\n        end\n        for i = 2,\
    \ math.sqrt(n) do\n            if n % i == 0 then\n                return false\n\
    \            end\n        end\n        return true\n    end\n    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end\n    local max_prime = 0\n    for _, n in ipairs(lst) do\n    \
    \    if is_prime(n) and n > max_prime then\n            max_prime = n\n      \
    \  end\n    end\n    return sum_digits(max_prime)\nend", "    local largestPrime\
    \ = 0\n    for _, n in ipairs(lst) do\n        if n > largestPrime and isPrime(n)\
    \ then\n            largestPrime = n\n        end\n    end\n    local sum = 0\n\
    \    while largestPrime > 0 do\n        sum = sum + largestPrime % 10\n      \
    \  largestPrime = math.floor(largestPrime / 10)\n    end\n    return sum\nend",
  "  local max = 0\n  for _, v in ipairs(lst) do\n    if v > max and is_prime(v) then\n\
    \      max = v\n    end\n  end\n  local sum = 0\n  while max > 0 do\n    sum =\
    \ sum + max % 10\n    max = math.floor(max / 10)\n  end\n  return sum\nend", " \
    \   local max = 0\n    for _, v in ipairs(lst) do\n        if v > max and is_prime(v)\
    \ then\n            max = v\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "  local max = 0\n  for i = 1, #lst do\n    if\
    \ lst[i] > max then\n      max = lst[i]\n    end\n  end\n  local sum = 0\n  while\
    \ max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max / 10)\n  end\n\
    \  return sum\nend", "    local max = 0\n    for _, v in ipairs(lst) do\n    \
    \    if v > max and is_prime(v) then\n            max = v\n        end\n    end\n\
    \    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n     \
    \   max = math.floor(max / 10)\n    end\n    return sum\nend", "    local max\
    \ = 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n\
    \            max = v\n        end\n    end\n    local sum = 0\n    while max >\
    \ 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n   \
    \ end\n    return sum\nend", "    local primes = {}\n    for i = 1, #lst do\n\
    \        if isPrime(lst[i]) then\n            table.insert(primes, lst[i])\n \
    \       end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if\
    \ primes[i] > max then\n            max = primes[i]\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend", "    local max =\
    \ 0\n    for _, v in ipairs(lst) do\n        if v > max and isPrime(v) then\n\
    \            max = v\n        end\n    end\n    local sum = 0\n    while max >\
    \ 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n   \
    \ end\n    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst) do\n\
    \        if v > max and is_prime(v) then\n            max = v\n        end\n \
    \   end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "  local primes\
    \ = {}\n  for i = 1, #lst do\n    if is_prime(lst[i]) then\n      primes[#primes\
    \ + 1] = lst[i]\n    end\n  end\n  local max = 0\n  for i = 1, #primes do\n  \
    \  if primes[i] > max then\n      max = primes[i]\n    end\n  end\n  local sum\
    \ = 0\n  while max > 0 do\n    sum = sum + max % 10\n    max = math.floor(max\
    \ / 10)\n  end\n  return sum\nend", "    local primes = {}\n    for i = 1, #lst\
    \ do\n        if is_prime(lst[i]) then\n            primes[#primes + 1] = lst[i]\n\
    \        end\n    end\n    local max = 0\n    for i = 1, #primes do\n        if\
    \ primes[i] > max then\n            max = primes[i]\n        end\n    end\n  \
    \  local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n       \
    \ max = math.floor(max / 10)\n    end\n    return sum\nend", "    local function\
    \ is_prime(n)\n        if n < 2 then\n            return false\n        end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n        \
    \        return false\n            end\n        end\n        return true\n   \
    \ end\n    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\n    local max_prime = 0\n    for _,\
    \ v in ipairs(lst) do\n        if is_prime(v) and v > max_prime then\n       \
    \     max_prime = v\n        end\n    end\n    return sum_digits(max_prime)\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        local n = lst[i]\n\
    \        if n > 1 then\n            local is_prime = true\n            for j =\
    \ 2, n - 1 do\n                if n % j == 0 then\n                    is_prime\
    \ = false\n                    break\n                end\n            end\n \
    \           if is_prime then\n                table.insert(primes, n)\n      \
    \      end\n        end\n    end\n    local max_prime = 0\n    for i = 1, #primes\
    \ do\n        if primes[i] > max_prime then\n            max_prime = primes[i]\n\
    \        end\n    end\n    local sum = 0\n    while max_prime > 0 do\n       \
    \ sum = sum + max_prime % 10\n        max_prime = math.floor(max_prime / 10)\n\
    \    end\n    return sum\nend", "  local function is_prime(n)\n    if n < 2 then\
    \ return false end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then return\
    \ false end\n    end\n    return true\n  end\n  local function sum_digits(n)\n\
    \    local s = 0\n    while n > 0 do\n      s = s + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return s\n  end\n  local max = 0\n  for _, n in ipairs(lst)\
    \ do\n    if is_prime(n) and n > max then max = n end\n  end\n  return sum_digits(max)\n\
    end", "    local primes = {}\n    for i = 1, #lst do\n        if isPrime(lst[i])\
    \ then\n            primes[#primes + 1] = lst[i]\n        end\n    end\n    local\
    \ max = primes[1]\n    for i = 2, #primes do\n        if primes[i] > max then\n\
    \            max = primes[i]\n        end\n    end\n    local sum = 0\n    while\
    \ max > 0 do\n        sum = sum + max % 10\n        max = math.floor(max / 10)\n\
    \    end\n    return sum\nend", "    local max = 0\n    for _, v in ipairs(lst)\
    \ do\n        if v > max and isPrime(v) then\n            max = v\n        end\n\
    \    end\n    local sum = 0\n    while max > 0 do\n        sum = sum + max % 10\n\
    \        max = math.floor(max / 10)\n    end\n    return sum\nend", "    local\
    \ max = 0\n    for i = 1, #lst do\n        if lst[i] > max then\n            max\
    \ = lst[i]\n        end\n    end\n    local sum = 0\n    while max > 0 do\n  \
    \      sum = sum + max % 10\n        max = math.floor(max / 10)\n    end\n   \
    \ return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

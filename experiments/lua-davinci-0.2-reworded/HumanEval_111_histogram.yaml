---
name: HumanEval_111_histogram
language: lua
prompt: |
  -- Given a string representing a space separated lowercase letters, return a table
  -- of the letter with the most repetition and containing the corresponding count.
  -- If several letters have the same occurrence, return all of them.
  -- Example:
  -- >>> histogram('a b c')
  -- {['a'] = 1, ['b'] = 1, ['c'] = 1}
  -- >>> histogram('a b b a')
  -- {['a'] = 2, ['b'] = 2}
  -- >>> histogram('a b c a b')
  -- {['a'] = 2, ['b'] = 2}
  -- >>> histogram('b b b b a')
  -- {['b'] = 4}
  -- >>> histogram('')
  -- {}
  local function histogram(test)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = histogram
      lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})
      lu.assertEquals(candidate('a b c a b'), {['a'] = 2, ['b'] = 2})
      lu.assertEquals(candidate('a b c d g'), {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})
      lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})
      lu.assertEquals(candidate('b b b b a'), {['b'] = 4})
      lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})
      lu.assertEquals(candidate(''), {})
      lu.assertEquals(candidate('a'), {['a'] = 1})
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local t = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if t[i] == nil then
              t[i] = 1
          else
              t[i] = t[i] + 1
          end
          if t[i] > max then
              max = t[i]
          end
      end
      local r = {}
      for k, v in pairs(t) do
          if v == max then
              r[k] = v
          end
      end
      return r
  end
- |2-
      local result = {}
      local max = 0
      for letter in test:gmatch('%a') do
          if not result[letter] then
              result[letter] = 1
          else
              result[letter] = result[letter] + 1
          end
          if result[letter] > max then
              max = result[letter]
          end
      end
      for letter, count in pairs(result) do
          if count < max then
              result[letter] = nil
          end
      end
      return result
  end
- |2-
    local result = {}
    for word in string.gmatch(test, "%S+") do
      result[word] = (result[word] or 0) + 1
    end
    return result
  end
- |2-
      local t = {}
      local max = 0
      local max_t = {}
      for word in string.gmatch(test, "%S+") do
          if t[word] == nil then
              t[word] = 1
          else
              t[word] = t[word] + 1
          end
          if t[word] > max then
              max = t[word]
              max_t = {[word] = max}
          elseif t[word] == max then
              max_t[word] = max
          end
      end
      return max_t
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local histogram = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      histogram[letter] = (histogram[letter] or 0) + 1
      if histogram[letter] > max then
        max = histogram[letter]
        max_letters = {letter}
      elseif histogram[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters
  end
- |2-
    local hist = {}
    local max = 0
    for word in string.gmatch(test, "%S+") do
      hist[word] = (hist[word] or 0) + 1
      if hist[word] > max then
        max = hist[word]
      end
    end
    local result = {}
    for k, v in pairs(hist) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
      local hist = {}
      for c in test:gmatch('%a') do
          hist[c] = (hist[c] or 0) + 1
      end
      return hist
  end
- |2-
      local result = {}
      for i in string.gmatch(test, "%S+") do
          if result[i] then
              result[i] = result[i] + 1
          else
              result[i] = 1
          end
      end
      return result
  end
- |2-
    local t = {}
    local max = 0
    local max_t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
      if t[i] > max then
        max = t[i]
        max_t = {i}
      elseif t[i] == max then
        table.insert(max_t, i)
      end
    end
    return max_t
  end
- |2-
      local hist = {}
      for i = 1, #test do
          local c = test:sub(i, i)
          if not hist[c] then
              hist[c] = 1
          else
              hist[c] = hist[c] + 1
          end
      end
      return hist
  end
- |2-
      local t = {}
      for i in string.gmatch(test, '%S+') do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return {[max_letters] = max}
  end
- |2-
      local t = {}
      for i in string.gmatch(test, "%S+") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
      local histogram = {}
      for i in string.gmatch(test, "%S+") do
          histogram[i] = (histogram[i] or 0) + 1
      end
      return histogram
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, "%S+") do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local hist = {}
    local max = 0
    for i = 1, #test do
      local c = test:sub(i, i)
      if c ~= ' ' then
        hist[c] = (hist[c] or 0) + 1
        if hist[c] > max then
          max = hist[c]
        end
      end
    end
    local result = {}
    for k, v in pairs(hist) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
    local result = {}
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
    end
    return result
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
    local histo = {}
    local max = 0
    for i = 1, #test do
      local c = test:sub(i, i)
      if c ~= ' ' then
        histo[c] = (histo[c] or 0) + 1
        if histo[c] > max then
          max = histo[c]
        end
      end
    end
    local result = {}
    for k, v in pairs(histo) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      if result[letter] == nil then
        result[letter] = 1
      else
        result[letter] = result[letter] + 1
      end
      if result[letter] > max then
        max = result[letter]
      end
    end
    local result2 = {}
    for letter, count in pairs(result) do
      if count == max then
        result2[letter] = count
      end
    end
    return result2
  end
- |2-
      local t = {}
      for i in string.gmatch(test, '%S+') do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
      local histogram = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          histogram[letter] = (histogram[letter] or 0) + 1
          if histogram[letter] > max then
              max = histogram[letter]
              max_letters = {letter}
          elseif histogram[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      t[i] = (t[i] or 0) + 1
    end
    return t
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, "%S+") do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
    local t = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
      if t[i] > max then
        max = t[i]
      end
    end
    local result = {}
    for i, v in pairs(t) do
      if v == max then
        result[i] = v
      end
    end
    return result
  end
- |2-
    local hist = {}
    for i in string.gmatch(test, "%S+") do
      if hist[i] then
        hist[i] = hist[i] + 1
      else
        hist[i] = 1
      end
    end
    return hist
  end
- |2-
      local hist = {}
      for i in string.gmatch(test, "%S+") do
          if hist[i] then
              hist[i] = hist[i] + 1
          else
              hist[i] = 1
          end
      end
      return hist
  end
- |2-
    local t = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      t[letter] = (t[letter] or 0) + 1
      if t[letter] > max then
        max = t[letter]
        max_letters = {letter}
      elseif t[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
    local t = {}
    local max = 0
    for letter in test:gmatch('%a') do
      t[letter] = (t[letter] or 0) + 1
      max = math.max(max, t[letter])
    end
    local r = {}
    for k, v in pairs(t) do
      if v == max then
        r[k] = v
      end
    end
    return r
  end
- |2-
    local hist = {}
    for i in string.gmatch(test, "%S+") do
      hist[i] = (hist[i] or 0) + 1
    end
    return hist
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      result[i] = (result[i] or 0) + 1
      if result[i] > max then
        max = result[i]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
    local t = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
      if t[i] > max then
        max = t[i]
      end
    end
    local r = {}
    for k, v in pairs(t) do
      if v == max then
        r[k] = v
      end
    end
    return r
  end
- |2-
      local result = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if result[i] == nil then
              result[i] = 1
          else
              result[i] = result[i] + 1
          end
          if result[i] > max then
              max = result[i]
          end
      end
      local final = {}
      for k, v in pairs(result) do
          if v == max then
              final[k] = v
          end
      end
      return final
  end
- |2-
    local letters = {}
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
    end
    local max = 0
    for _, count in pairs(letters) do
      max = math.max(max, count)
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      result[i] = (result[i] or 0) + 1
      if result[i] > max then
        max = result[i]
      end
    end
    local max_table = {}
    for k, v in pairs(result) do
      if v == max then
        max_table[k] = v
      end
    end
    return max_table
  end
- |2-
      local result = {}
      local max = 0
      for letter in test:gmatch("%a") do
          result[letter] = (result[letter] or 0) + 1
          if result[letter] > max then
              max = result[letter]
          end
      end
      local max_letters = {}
      for letter, count in pairs(result) do
          if count == max then
              max_letters[letter] = count
          end
      end
      return max_letters
  end
- |2-
      local t = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
          if t[i] > max then
              max = t[i]
          end
      end
      local r = {}
      for k, v in pairs(t) do
          if v == max then
              r[k] = v
          end
      end
      return r
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%S+') do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
    local result = {}
    for word in string.gmatch(test, "%S+") do
      if result[word] then
        result[word] = result[word] + 1
      else
        result[word] = 1
      end
    end
    return result
  end
- |2-
    local result = {}
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      max = math.max(max, result[letter])
    end
    local letters = {}
    for letter, count in pairs(result) do
      if count == max then
        table.insert(letters, letter)
      end
    end
    return letters
  end
- |2-
      local result = {}
      local max = 0
      for letter in test:gmatch('%a') do
          result[letter] = (result[letter] or 0) + 1
          if result[letter] > max then
              max = result[letter]
          end
      end
      for letter, count in pairs(result) do
          if count < max then
              result[letter] = nil
          end
      end
      return result
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%S+") do
          result[word] = (result[word] or 0) + 1
          if result[word] > max then
              max = result[word]
          end
      end
      local max_words = {}
      for word, count in pairs(result) do
          if count == max then
              max_words[word] = count
          end
      end
      return max_words
  end
- |2-
    local hist = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      hist[i] = (hist[i] or 0) + 1
      if hist[i] > max then
        max = hist[i]
      end
    end
    local result = {}
    for k, v in pairs(hist) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
    local letters = {}
    local count = {}
    local max = 0
    for letter in test:gmatch('%a') do
      local n = count[letter] or 0
      count[letter] = n + 1
      if n + 1 > max then
        max = n + 1
        letters = {letter}
      elseif n + 1 == max then
        letters[#letters + 1] = letter
      end
    end
    return letters, max
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
    local hist = {}
    local max = 0
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      max = math.max(max, hist[letter])
    end
    local result = {}
    for letter, count in pairs(hist) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for i = 1, #test do
      local char = test:sub(i, i)
      if result[char] == nil then
        result[char] = 1
      else
        result[char] = result[char] + 1
      end
      if result[char] > max then
        max = result[char]
      end
    end
    local max_result = {}
    for k, v in pairs(result) do
      if v == max then
        max_result[k] = v
      end
    end
    return max_result
  end
- |2-
    local t = {}
    local max = 0
    local max_t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
      if t[i] > max then
        max = t[i]
        max_t = {i}
      elseif t[i] == max then
        table.insert(max_t, i)
      end
    end
    return max_t
  end
- |2-
      local result = {}
      for word in string.gmatch(test, "%S+") do
          if result[word] then
              result[word] = result[word] + 1
          else
              result[word] = 1
          end
      end
      return result
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      if hist[letter] == nil then
        hist[letter] = 1
      else
        hist[letter] = hist[letter] + 1
      end
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        table.insert(max_letters, letter)
      end
    end
    return max_letters
  end
- |2-
      local hist = {}
      local max = 0
      for i = 1, #test do
          local c = test:sub(i, i)
          if c ~= ' ' then
              hist[c] = (hist[c] or 0) + 1
              if hist[c] > max then
                  max = hist[c]
              end
          end
      end
      local result = {}
      for k, v in pairs(hist) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
      if result[i] > max then
        max = result[i]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
      local hist = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          hist[i] = (hist[i] or 0) + 1
          if hist[i] > max then
              max = hist[i]
          end
      end
      local res = {}
      for k, v in pairs(hist) do
          if v == max then
              res[k] = v
          end
      end
      return res
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, '%a+') do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local final = {}
      for k, v in pairs(result) do
          if v == max then
              final[k] = v
          end
      end
      return final
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      max = math.max(max, result[letter])
    end
    local result2 = {}
    for letter, count in pairs(result) do
      if count == max then
        result2[letter] = count
      end
    end
    return result2
  end
- |2-
    local t = {}
    local max = 0
    for w in string.gmatch(test, "%S+") do
      t[w] = (t[w] or 0) + 1
      if t[w] > max then
        max = t[w]
      end
    end
    local res = {}
    for k, v in pairs(t) do
      if v == max then
        res[k] = v
      end
    end
    return res
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local hist = {}
    local max = 0
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      max = math.max(max, hist[letter])
    end
    local result = {}
    for letter, count in pairs(hist) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
      local result = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if result[i] == nil then
              result[i] = 1
          else
              result[i] = result[i] + 1
          end
          if result[i] > max then
              max = result[i]
          end
      end
      local final = {}
      for k, v in pairs(result) do
          if v == max then
              final[k] = v
          end
      end
      return final
  end
- |2-
    local hist = {}
    local max = 0
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      max = math.max(max, hist[letter])
    end
    local result = {}
    for letter, count in pairs(hist) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local hist = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
    end
    return hist
  end
- |2-
    local letters = {}
    local max = 0
    local result = {}
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      if letters[letter] > max then
        max = letters[letter]
      end
    end
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local hist = {}
    for i = 1, #test do
      local char = test:sub(i, i)
      if not hist[char] then
        hist[char] = 1
      else
        hist[char] = hist[char] + 1
      end
    end
    return hist
  end
- |2-
    local letters = {}
    local count = {}
    local max = 0
    for letter in test:gmatch('%a') do
      if letters[letter] then
        letters[letter] = letters[letter] + 1
      else
        letters[letter] = 1
      end
      if letters[letter] > max then
        max = letters[letter]
      end
    end
    for letter, value in pairs(letters) do
      if value == max then
        count[letter] = value
      end
    end
    return count
  end
- |2-
      local letter_count = {}
      local max_count = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          if letter_count[letter] == nil then
              letter_count[letter] = 1
          else
              letter_count[letter] = letter_count[letter] + 1
          end
          if letter_count[letter] > max_count then
              max_count = letter_count[letter]
              max_letters = {letter}
          elseif letter_count[letter] == max_count then
              table.insert(max_letters, letter)
          end
      end
      return max_letters, max_count
  end
- |2-
    local result = {}
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
    end
    return result
  end
- |2-
    local hist = {}
    for i = 1, #test do
      local c = test:sub(i, i)
      if c ~= ' ' then
        hist[c] = (hist[c] or 0) + 1
      end
    end
    return hist
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, '%a+') do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local result2 = {}
      for word, count in pairs(result) do
          if count == max then
              result2[word] = count
          end
      end
      return result2
  end
- |2-
    local letters = {}
    local max = 0
    local result = {}
    for letter in test:gmatch('%a') do
      if letters[letter] then
        letters[letter] = letters[letter] + 1
      else
        letters[letter] = 1
      end
      if letters[letter] > max then
        max = letters[letter]
      end
    end
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local histogram = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      histogram[letter] = (histogram[letter] or 0) + 1
      if histogram[letter] > max then
        max = histogram[letter]
        max_letters = {letter}
      elseif histogram[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%S+') do
      result[word] = (result[word] or 0) + 1
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
    local histogram = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      histogram[letter] = (histogram[letter] or 0) + 1
      if histogram[letter] > max then
        max = histogram[letter]
        max_letters = {letter}
      elseif histogram[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local hist = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
    end
    return hist
  end
- |2-
      local t = {}
      for i in string.gmatch(test, "%S+") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
      if result[i] > max then
        max = result[i]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local result = {}
    for letter in test:gmatch('%a') do
      if result[letter] then
        result[letter] = result[letter] + 1
      else
        result[letter] = 1
      end
    end
    return result
  end
- |2-
    local hist = {}
    local max = 0
    for i = 1, #test do
      local c = test:sub(i, i)
      hist[c] = (hist[c] or 0) + 1
      max = math.max(max, hist[c])
    end
    local res = {}
    for k, v in pairs(hist) do
      if v == max then
        res[k] = v
      end
    end
    return res
  end
- |2-
    local t = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      if not t[letter] then
        t[letter] = 1
      else
        t[letter] = t[letter] + 1
      end
      if t[letter] > max then
        max = t[letter]
        max_letters = {letter}
      elseif t[letter] == max then
        table.insert(max_letters, letter)
      end
    end
    return max_letters
  end
- |2-
      local t = {}
      for i in string.gmatch(test, "%S+") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
      if result[i] > max then
        max = result[i]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
    local result = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      if result[letter] > max then
        max = result[letter]
        max_letters = {letter}
      elseif result[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    for _, letter in ipairs(max_letters) do
      result[letter] = max
    end
    return result
  end
- |2-
    local histo = {}
    local max = 0
    for w in string.gmatch(test, '%a+') do
      histo[w] = (histo[w] or 0) + 1
      if histo[w] > max then
        max = histo[w]
      end
    end
    local result = {}
    for k, v in pairs(histo) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
      local letters = {}
      local max = 0
      for letter in test:gmatch('%a') do
          if letters[letter] then
              letters[letter] = letters[letter] + 1
          else
              letters[letter] = 1
          end
          if letters[letter] > max then
              max = letters[letter]
          end
      end
      local result = {}
      for letter, count in pairs(letters) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
      local t = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if t[i] == nil then
              t[i] = 1
          else
              t[i] = t[i] + 1
          end
          if t[i] > max then
              max = t[i]
          end
      end
      local r = {}
      for k, v in pairs(t) do
          if v == max then
              r[k] = v
          end
      end
      return r
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
      if result[i] > max then
        max = result[i]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
      local result = {}
      local max = 0
      for i in string.gmatch(test, "%a") do
          if result[i] == nil then
              result[i] = 1
          else
              result[i] = result[i] + 1
          end
          if result[i] > max then
              max = result[i]
          end
      end
      local final = {}
      for k, v in pairs(result) do
          if v == max then
              final[k] = v
          end
      end
      return final
  end
- |2-
    local hist = {}
    local max = 0
    for letter in test:gmatch("%a") do
      hist[letter] = (hist[letter] or 0) + 1
      max = math.max(max, hist[letter])
    end
    local result = {}
    for letter, count in pairs(hist) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      t[i] = (t[i] or 0) + 1
    end
    return t
  end
- |2-
      local result = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if result[i] == nil then
              result[i] = 1
          else
              result[i] = result[i] + 1
          end
          if result[i] > max then
              max = result[i]
          end
      end
      local max_result = {}
      for k, v in pairs(result) do
          if v == max then
              max_result[k] = v
          end
      end
      return max_result
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%S+') do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local final = {}
    for key, value in pairs(result) do
      if value == max then
        final[key] = value
      end
    end
    return final
  end
- |2-
    local t = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
      if t[i] > max then
        max = t[i]
      end
    end
    local result = {}
    for k, v in pairs(t) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      max = math.max(max, result[letter])
    end
    local letters = {}
    for letter, count in pairs(result) do
      if count == max then
        table.insert(letters, letter)
      end
    end
    return letters
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
      local t = {}
      for i in string.gmatch(test, "%S+") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%a+') do
      result[word] = (result[word] or 0) + 1
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%S+") do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local result2 = {}
      for k, v in pairs(result) do
          if v == max then
              result2[k] = v
          end
      end
      return result2
  end
- |2-
      local hist = {}
      for i = 1, #test do
          local c = test:sub(i, i)
          hist[c] = (hist[c] or 0) + 1
      end
      return hist
  end
- |2-
    local letters = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%w') do
      letters[letter] = (letters[letter] or 0) + 1
      if letters[letter] > max then
        max = letters[letter]
        max_letters = {letter}
      elseif letters[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters
  end
- |2-
      local histogram = {}
      local max = 0
      for i = 1, #test do
          local letter = test:sub(i, i)
          if histogram[letter] then
              histogram[letter] = histogram[letter] + 1
          else
              histogram[letter] = 1
          end
          if histogram[letter] > max then
              max = histogram[letter]
          end
      end
      local result = {}
      for letter, count in pairs(histogram) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%S+') do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local result = {}
    for i in string.gmatch(test, "%S+") do
      result[i] = result[i] and result[i] + 1 or 1
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      if not result[letter] then
        result[letter] = 1
      else
        result[letter] = result[letter] + 1
      end
      if result[letter] > max then
        max = result[letter]
        max_letters = {letter}
      elseif result[letter] == max then
        table.insert(max_letters, letter)
      end
    end
    for _, letter in ipairs(max_letters) do
      result[letter] = max
    end
    return result
  end
- |2-
    local t = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      t[i] = (t[i] or 0) + 1
      if t[i] > max then
        max = t[i]
      end
    end
    local r = {}
    for k, v in pairs(t) do
      if v == max then
        r[k] = v
      end
    end
    return r
  end
- |2-
    local t = {}
    local max = 0
    local max_t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
      if t[i] > max then
        max = t[i]
        max_t = {[i] = max}
      elseif t[i] == max then
        max_t[i] = max
      end
    end
    return max_t
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%S+') do
      result[word] = (result[word] or 0) + 1
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
    local hist = {}
    local max = 0
    local max_keys = {}
    for i in string.gmatch(test, "%S+") do
      local count = hist[i] or 0
      hist[i] = count + 1
      if hist[i] > max then
        max = hist[i]
        max_keys = {i}
      elseif hist[i] == max then
        table.insert(max_keys, i)
      end
    end
    return {[max_keys[1]] = max}
  end
- |2-
      local letters = {}
      local max = 0
      for letter in test:gmatch('%a') do
          if letters[letter] then
              letters[letter] = letters[letter] + 1
          else
              letters[letter] = 1
          end
          if letters[letter] > max then
              max = letters[letter]
          end
      end
      local result = {}
      for letter, count in pairs(letters) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      t[i] = (t[i] or 0) + 1
    end
    return t
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%a+") do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local result_max = {}
      for k, v in pairs(result) do
          if v == max then
              result_max[k] = v
          end
      end
      return result_max
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%a+') do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%S+") do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local result2 = {}
      for k, v in pairs(result) do
          if v == max then
              result2[k] = v
          end
      end
      return result2
  end
- |2-
    local result = {}
    for i in string.gmatch(test, "%S+") do
      if result[i] then
        result[i] = result[i] + 1
      else
        result[i] = 1
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%a+') do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local result = {}
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
    end
    return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
    end
    return t
  end
- |2-
    local t = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
      if t[i] > max then
        max = t[i]
      end
    end
    local res = {}
    for k, v in pairs(t) do
      if v == max then
        res[k] = v
      end
    end
    return res
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      if hist[letter] == nil then
        hist[letter] = 1
      else
        hist[letter] = hist[letter] + 1
      end
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        table.insert(max_letters, letter)
      end
    end
    return max_letters
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          if not hist[letter] then
              hist[letter] = 1
          else
              hist[letter] = hist[letter] + 1
          end
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
      local hist = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          hist[i] = (hist[i] or 0) + 1
          if hist[i] > max then
              max = hist[i]
          end
      end
      local result = {}
      for k, v in pairs(hist) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
    local hist = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      hist[i] = (hist[i] or 0) + 1
      if hist[i] > max then
        max = hist[i]
      end
    end
    local result = {}
    for k, v in pairs(hist) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      if result[letter] > max then
        max = result[letter]
        max_letters = {letter}
      elseif result[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    for i, letter in ipairs(max_letters) do
      max_letters[letter] = max
    end
    return max_letters
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%a+") do
          result[word] = (result[word] or 0) + 1
          if result[word] > max then
              max = result[word]
          end
      end
      local max_words = {}
      for word, count in pairs(result) do
          if count == max then
              max_words[word] = count
          end
      end
      return max_words
  end
- |2-
      local result = {}
      for word in string.gmatch(test, "%S+") do
          result[word] = (result[word] or 0) + 1
      end
      return result
  end
- |2-
    local hist = {}
    for i = 1, #test do
      local char = test:sub(i, i)
      if not hist[char] then
        hist[char] = 1
      else
        hist[char] = hist[char] + 1
      end
    end
    return hist
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
    end
    return t
  end
- |2-
      local result = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if result[i] == nil then
              result[i] = 1
          else
              result[i] = result[i] + 1
          end
          if result[i] > max then
              max = result[i]
          end
      end
      local result2 = {}
      for k, v in pairs(result) do
          if v == max then
              result2[k] = v
          end
      end
      return result2
  end
- |2-
    local hist = {}
    for i = 1, #test do
      local c = test:sub(i, i)
      if hist[c] then
        hist[c] = hist[c] + 1
      else
        hist[c] = 1
      end
    end
    return hist
  end
- |2-
    local t = {}
    for word in string.gmatch(test, "%S+") do
      if t[word] then
        t[word] = t[word] + 1
      else
        t[word] = 1
      end
    end
    return t
  end
- |2-
    local hist = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if hist[i] == nil then
        hist[i] = 1
      else
        hist[i] = hist[i] + 1
      end
      if hist[i] > max then
        max = hist[i]
      end
    end
    local result = {}
    for k, v in pairs(hist) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
      local hist = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          hist[i] = (hist[i] or 0) + 1
          if hist[i] > max then
              max = hist[i]
          end
      end
      local result = {}
      for k, v in pairs(hist) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      max = math.max(max, result[letter])
    end
    local max_letters = {}
    for letter, count in pairs(result) do
      if count == max then
        max_letters[letter] = count
      end
    end
    return max_letters
  end
- |2-
    local letters = {}
    local count = {}
    local max = 0
    local result = {}
- |2-
      local letters = {}
      for letter in test:gmatch('%a') do
          letters[letter] = (letters[letter] or 0) + 1
      end
      local max = 0
      for _, count in pairs(letters) do
          max = math.max(max, count)
      end
      local result = {}
      for letter, count in pairs(letters) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local result = {}
    for word in string.gmatch(test, '%a+') do
      result[word] = (result[word] or 0) + 1
    end
    return result
  end
- |2-
      local hist = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if hist[i] == nil then
              hist[i] = 1
          else
              hist[i] = hist[i] + 1
          end
          if hist[i] > max then
              max = hist[i]
          end
      end
      local result = {}
      for k, v in pairs(hist) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
      local histogram = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          if histogram[i] == nil then
              histogram[i] = 1
          else
              histogram[i] = histogram[i] + 1
          end
          if histogram[i] > max then
              max = histogram[i]
          end
      end
      local result = {}
      for k, v in pairs(histogram) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
      local t = {}
      for letter in test:gmatch('%a') do
          t[letter] = (t[letter] or 0) + 1
      end
      return t
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
      if result[i] > max then
        max = result[i]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local t = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
      if t[i] > max then
        max = t[i]
      end
    end
    local result = {}
    for k, v in pairs(t) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
      local hist = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          hist[i] = (hist[i] or 0) + 1
          if hist[i] > max then
              max = hist[i]
          end
      end
      local result = {}
      for k, v in pairs(hist) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
      local result = {}
      for i in string.gmatch(test, "%S+") do
          if result[i] then
              result[i] = result[i] + 1
          else
              result[i] = 1
          end
      end
      return result
  end
- |2-
      local t = {}
      for i in string.gmatch(test, "%S+") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
    local result = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      if result[letter] > max then
        max = result[letter]
        max_letters = {letter}
      elseif result[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    for _, letter in ipairs(max_letters) do
      result[letter] = max
    end
    return result
  end
- |2-
      local result = {}
      local max = 0
      local max_letters = {}
      for word in string.gmatch(test, '%a+') do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
              max_letters = {word}
          elseif result[word] == max then
              table.insert(max_letters, word)
          end
      end
      return max_letters
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%S+") do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local result2 = {}
      for k, v in pairs(result) do
          if v == max then
              result2[k] = v
          end
      end
      return result2
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, "%S+") do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local histogram = {}
    local max = 0
    for word in string.gmatch(test, "%S+") do
      histogram[word] = (histogram[word] or 0) + 1
      if histogram[word] > max then
        max = histogram[word]
      end
    end
    local result = {}
    for word, count in pairs(histogram) do
      if count == max then
        result[word] = count
      end
    end
    return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
    end
    return t
  end
- |2-
      local result = {}
      local max = 0
      for char in test:gmatch('%a') do
          result[char] = (result[char] or 0) + 1
          if result[char] > max then
              max = result[char]
          end
      end
      local final = {}
      for char, count in pairs(result) do
          if count == max then
              final[char] = count
          end
      end
      return final
  end
- |2-
      local hist = {}
      local max = 0
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          max = math.max(max, hist[letter])
      end
      local result = {}
      for letter, count in pairs(hist) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
      local letters = {}
      local max = 0
      for letter in test:gmatch('%a') do
          letters[letter] = (letters[letter] or 0) + 1
          max = math.max(max, letters[letter])
      end
      local result = {}
      for letter, count in pairs(letters) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
    local histogram = {}
    local max = 0
    for letter in test:gmatch('%a') do
      histogram[letter] = (histogram[letter] or 0) + 1
      max = math.max(max, histogram[letter])
    end
    local result = {}
    for letter, count in pairs(histogram) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      if result[i] == nil then
        result[i] = 1
      else
        result[i] = result[i] + 1
      end
      if result[i] > max then
        max = result[i]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
      local letters = {}
      local max = 0
      for letter in test:gmatch('%a') do
          letters[letter] = (letters[letter] or 0) + 1
          max = math.max(max, letters[letter])
      end
      local result = {}
      for letter, count in pairs(letters) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
      local t = {}
      for i in string.gmatch(test, "%a") do
          if t[i] then
              t[i] = t[i] + 1
          else
              t[i] = 1
          end
      end
      return t
  end
- |2-
      local result = {}
      local max = 0
      for letter in test:gmatch('%a') do
          result[letter] = (result[letter] or 0) + 1
          if result[letter] > max then
              max = result[letter]
          end
      end
      local letters = {}
      for letter, count in pairs(result) do
          if count == max then
              table.insert(letters, letter)
          end
      end
      return letters
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, "%a+") do
      result[word] = (result[word] or 0) + 1
      if result[word] > max then
        max = result[word]
      end
    end
    local result2 = {}
    for k, v in pairs(result) do
      if v == max then
        result2[k] = v
      end
    end
    return result2
  end
- |2-
      local hist = {}
      local max = 0
      for i in string.gmatch(test, "%S+") do
          hist[i] = (hist[i] or 0) + 1
          if hist[i] > max then
              max = hist[i]
          end
      end
      local res = {}
      for i, v in pairs(hist) do
          if v == max then
              res[i] = v
          end
      end
      return res
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
      local t = {}
      local max = 0
      for word in string.gmatch(test, "%S+") do
          t[word] = (t[word] or 0) + 1
          if t[word] > max then
              max = t[word]
          end
      end
      local result = {}
      for k, v in pairs(t) do
          if v == max then
              result[k] = v
          end
      end
      return result
  end
- |2-
    local hist = {}
    local max = 0
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      max = math.max(max, hist[letter])
    end
    local result = {}
    for letter, count in pairs(hist) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      max = math.max(max, result[letter])
    end
    local ret = {}
    for letter, count in pairs(result) do
      if count == max then
        ret[letter] = count
      end
    end
    return ret
  end
- |2-
    local letters = {}
    local max = 0
    local result = {}
    for letter in test:gmatch('%a') do
      if letters[letter] then
        letters[letter] = letters[letter] + 1
      else
        letters[letter] = 1
      end
      if letters[letter] > max then
        max = letters[letter]
      end
    end
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
    local hist = {}
    local max = 0
    local max_letters = {}
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      if hist[letter] > max then
        max = hist[letter]
        max_letters = {letter}
      elseif hist[letter] == max then
        max_letters[#max_letters + 1] = letter
      end
    end
    return max_letters, max
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local letters = {}
    local max = 0
    for i = 1, #test do
      local letter = test:sub(i, i)
      if letters[letter] == nil then
        letters[letter] = 1
      else
        letters[letter] = letters[letter] + 1
      end
      if letters[letter] > max then
        max = letters[letter]
      end
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
      local hist = {}
      local max = 0
      local max_letters = {}
      for letter in test:gmatch('%a') do
          hist[letter] = (hist[letter] or 0) + 1
          if hist[letter] > max then
              max = hist[letter]
              max_letters = {letter}
          elseif hist[letter] == max then
              table.insert(max_letters, letter)
          end
      end
      return max_letters
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] == nil then
        t[i] = 1
      else
        t[i] = t[i] + 1
      end
    end
    return t
  end
- |2-
      local hist = {}
      for i = 1, #test do
          local c = test:sub(i, i)
          hist[c] = (hist[c] or 0) + 1
      end
      return hist
  end
- |2-
    local letters = {}
    local max = 0
    for letter in test:gmatch('%a') do
      letters[letter] = (letters[letter] or 0) + 1
      max = math.max(max, letters[letter])
    end
    local result = {}
    for letter, count in pairs(letters) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
      local result = {}
      local max = 0
      for word in string.gmatch(test, "%S+") do
          if result[word] == nil then
              result[word] = 1
          else
              result[word] = result[word] + 1
          end
          if result[word] > max then
              max = result[word]
          end
      end
      local result2 = {}
      for k, v in pairs(result) do
          if v == max then
              result2[k] = v
          end
      end
      return result2
  end
- |2-
      local result = {}
      for letter in test:gmatch('%a') do
          result[letter] = (result[letter] or 0) + 1
      end
      return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local hist = {}
    local max = 0
    for word in string.gmatch(test, "%S+") do
      hist[word] = (hist[word] or 0) + 1
      if hist[word] > max then
        max = hist[word]
      end
    end
    local result = {}
    for k, v in pairs(hist) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
    local result = {}
    local max = 0
    for letter in test:gmatch('%a') do
      result[letter] = (result[letter] or 0) + 1
      max = math.max(max, result[letter])
    end
    local result2 = {}
    for letter, count in pairs(result) do
      if count == max then
        result2[letter] = count
      end
    end
    return result2
  end
- |2-
    local histogram = {}
    local max = 0
    for i in string.gmatch(test, "%S+") do
      histogram[i] = (histogram[i] or 0) + 1
      if histogram[i] > max then
        max = histogram[i]
      end
    end
    local result = {}
    for k, v in pairs(histogram) do
      if v == max then
        result[k] = v
      end
    end
    return result
  end
- |2-
      local letters = {}
      local max = 0
      for letter in test:gmatch('%a') do
          if letters[letter] then
              letters[letter] = letters[letter] + 1
          else
              letters[letter] = 1
          end
          if letters[letter] > max then
              max = letters[letter]
          end
      end
      local result = {}
      for letter, count in pairs(letters) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
- |2-
    local t = {}
    for i in string.gmatch(test, "%S+") do
      if t[i] then
        t[i] = t[i] + 1
      else
        t[i] = 1
      end
    end
    return t
  end
- |2-
    local result = {}
    local max = 0
    for word in string.gmatch(test, '%a+') do
      if result[word] == nil then
        result[word] = 1
      else
        result[word] = result[word] + 1
      end
      if result[word] > max then
        max = result[word]
      end
    end
    local final = {}
    for k, v in pairs(result) do
      if v == max then
        final[k] = v
      end
    end
    return final
  end
- |2-
    local hist = {}
    local max = 0
    for letter in test:gmatch('%a') do
      hist[letter] = (hist[letter] or 0) + 1
      max = math.max(max, hist[letter])
    end
    local result = {}
    for letter, count in pairs(hist) do
      if count == max then
        result[letter] = count
      end
    end
    return result
  end
- |2-
      local histogram = {}
      local max = 0
      for letter in test:gmatch('%a') do
          histogram[letter] = (histogram[letter] or 0) + 1
          max = math.max(max, histogram[letter])
      end
      local result = {}
      for letter, count in pairs(histogram) do
          if count == max then
              result[letter] = count
          end
      end
      return result
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

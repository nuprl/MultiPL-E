name: HumanEval_126_is_sorted
language: lua
prompt: "-- Given a table of numbers, return whether or not they are sorted\n-- in\
  \ ascending order. If table has more than 1 duplicate of the same\n-- number, return\
  \ false. Assume no negative numbers and only integers.\n-- Examples\n-- >>> is_sorted({5})\n\
  -- true\n-- >>> is_sorted({1, 2, 3, 4, 5})\n-- true\n-- >>> is_sorted({1, 3, 2,\
  \ 4, 5})\n-- false\n-- >>> is_sorted({1, 2, 3, 4, 5, 6})\n-- true\n-- >>> is_sorted({1,\
  \ 2, 3, 4, 5, 6, 7})\n-- true\n-- >>> is_sorted({1, 3, 2, 4, 5, 6, 7})\n-- false\n\
  -- >>> is_sorted({1, 2, 2, 3, 3, 4})\n-- true\n-- >>> is_sorted({1, 2, 2, 2, 3,\
  \ 4})\n-- false\nlocal function is_sorted(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_sorted\n\
  \    lu.assertEquals(candidate({5}), true)\n    lu.assertEquals(candidate({1, 2,\
  \ 3, 4, 5}), true)\n    lu.assertEquals(candidate({1, 3, 2, 4, 5}), false)\n   \
  \ lu.assertEquals(candidate({1, 2, 3, 4, 5, 6}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4, 5, 6, 7}), true)\n    lu.assertEquals(candidate({1, 3, 2, 4, 5, 6, 7}),\
  \ false)\n    lu.assertEquals(candidate({}), true)\n    lu.assertEquals(candidate({1}),\
  \ true)\n    lu.assertEquals(candidate({3, 2, 1}), false)\n    lu.assertEquals(candidate({1,\
  \ 2, 2, 2, 3, 4}), false)\n    lu.assertEquals(candidate({1, 2, 3, 3, 3, 4}), false)\n\
  \    lu.assertEquals(candidate({1, 2, 2, 3, 3, 4}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev\
    \ then\n      return false\n    end\n    prev = lst[i]\n  end\n  return true\n\
    end", "    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n    \
    \        return false\n        end\n    end\n    return true\nend", "  local last\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n      return false\n\
    \    end\n    last = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] <= prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] <= prev then\n      return false\n    end\n    prev = lst[i]\n  end\n\
    \  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n\
    \            return false\n        end\n    end\n    return true\nend", "  local\
    \ last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return\
    \ false\n    end\n    last = lst[i]\n  end\n  return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if prev >= lst[i] then\n      return false\n    end\n  \
    \  prev = lst[i]\n  end\n  return true\nend", "  local last = lst[1]\n  for i\
    \ = 2, #lst do\n    if lst[i] < last then\n      return false\n    end\n    last\
    \ = lst[i]\n  end\n  return true\nend", "    local prev = nil\n    for _, v in\
    \ ipairs(lst) do\n        if prev and prev >= v then\n            return false\n\
    \        end\n        prev = v\n    end\n    return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local last = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] <= last then\n      return false\n    end\n\
    \    last = lst[i]\n  end\n  return true\nend", "    for i = 1, #lst - 1 do\n\
    \        if lst[i] >= lst[i + 1] then\n            return false\n        end\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if prev >= lst[i] then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] <= prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ last = -math.huge\n  for _, v in ipairs(lst) do\n    if v < last then\n    \
    \  return false\n    end\n    last = v\n  end\n  return true\nend", "  -- your\
    \ code here\n  return false\nend", "    local last = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < last then\n            return false\n        end\n \
    \       last = lst[i]\n    end\n    return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] <= prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if prev >= lst[i] then\n      return false\n    end\n  \
    \  prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for i\
    \ = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n    prev\
    \ = lst[i]\n  end\n  return true\nend", "  -- YOUR CODE HERE\n  local sorted =\
    \ true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      sorted\
    \ = false\n    end\n  end\n  return sorted\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] <= prev then\n      return false\n    end\n  \
    \  prev = lst[i]\n  end\n  return true\nend", "  local prev = nil\n  for _, v\
    \ in ipairs(lst) do\n    if prev ~= nil and prev >= v then\n      return false\n\
    \    end\n    prev = v\n  end\n  return true\nend", "  local prev = lst[1]\n \
    \ for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local last = -math.huge\n \
    \ for _, v in ipairs(lst) do\n    if v <= last then\n      return false\n    end\n\
    \    last = v\n  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2,\
    \ #lst do\n    if lst[i] < prev then\n      return false\n    end\n    prev =\
    \ lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n\
    \  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev\
    \ then\n      return false\n    end\n    prev = lst[i]\n  end\n  return true\n\
    end", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev\
    \ then\n            return false\n        end\n        prev = lst[i]\n    end\n\
    \    return true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n   \
    \     if lst[i] <= last then\n            return false\n        end\n        last\
    \ = lst[i]\n    end\n    return true\nend", "  -- TODO: Implement me!\nend", " \
    \ local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n    \
    \  return false\n    end\n    last = lst[i]\n  end\n  return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  return false\n        end\n        prev = lst[i]\n    end\n    return true\n\
    end", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n\
    \      return false\n    end\n    last = lst[i]\n  end\n  return true\nend", " \
    \ local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n     \
    \ return false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local\
    \ last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return\
    \ false\n    end\n    last = lst[i]\n  end\n  return true\nend", "  local last\
    \ = nil\n  for _, v in ipairs(lst) do\n    if last and last >= v then\n      return\
    \ false\n    end\n    last = v\n  end\n  return true\nend", "  local last = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] <= last then\n      return false\n    end\n\
    \    last = lst[i]\n  end\n  return true\nend", "    for i = 1, #lst - 1 do\n\
    \        if lst[i] >= lst[i + 1] then\n            return false\n        end\n\
    \    end\n    return true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] < last then\n      return false\n    end\n    last = lst[i]\n \
    \ end\n  return true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n   \
    \ if lst[i] < last then\n      return false\n    end\n    last = lst[i]\n  end\n\
    \  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "    local prev = 0\n    for _, v in ipairs(lst) do\n        if\
    \ v <= prev then\n            return false\n        end\n        prev = v\n  \
    \  end\n    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] <= prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "  local last = 0\n  for _, v in ipairs(lst) do\n\
    \    if v <= last then\n      return false\n    end\n    last = v\n  end\n  return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "  local prev = nil\n \
    \ for _, v in ipairs(lst) do\n    if prev and prev >= v then\n      return false\n\
    \    end\n    prev = v\n  end\n  return true\nend", "  local prev = lst[1]\n \
    \ for i = 2, #lst do\n    if lst[i] <= prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  return false\n        end\n        prev = lst[i]\n    end\n    return true\n\
    end", "  local last = 0\n  for _, v in ipairs(lst) do\n    if v < last then\n\
    \      return false\n    end\n    last = v\n  end\n  return true\nend", "  local\
    \ sorted = true\n  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n\
    \      sorted = false\n      break\n    end\n  end\n  return sorted\nend", " \
    \   local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "  local sorted = true\n  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] <= prev then\n      sorted = false\n    \
    \  break\n    end\n    prev = lst[i]\n  end\n  return sorted\nend", "  -- your\
    \ code here\n  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last\
    \ then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "  local last = 0\n  for _, v in ipairs(lst) do\n    if v < last then\n\
    \      return false\n    end\n    last = v\n  end\n  return true\nend", "    for\
    \ i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n            return\
    \ false\n        end\n    end\n    return true\nend", "    local prev = nil\n\
    \    for _, v in ipairs(lst) do\n        if prev and prev >= v then\n        \
    \    return false\n        end\n        prev = v\n    end\n    return true\nend",
  "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ last = 0\n    for _, v in ipairs(lst) do\n        if v < last then\n       \
    \     return false\n        end\n        last = v\n    end\n    return true\n\
    end", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev then\n\
    \      return false\n    end\n    prev = lst[i]\n  end\n  return true\nend", " \
    \   local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n\
    \            return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last\
    \ then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n\
    \      return false\n    end\n    last = lst[i]\n  end\n  return true\nend", " \
    \   local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n\
    \            return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last\
    \ then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      return\
    \ false\n    end\n  end\n  return true\nend", "    local prev = lst[1]\n    for\
    \ _, v in ipairs(lst) do\n        if v < prev then\n            return false\n\
    \        end\n        prev = v\n    end\n    return true\nend", "  local last\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n      return false\n\
    \    end\n    last = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n   \
    \ prev = lst[i]\n  end\n  return true\nend", "  local last = lst[1]\n  for i =\
    \ 2, #lst do\n    if lst[i] <= last then\n      return false\n    end\n    last\
    \ = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n    for i =\
    \ 2, #lst do\n        if lst[i] < prev then\n            return false\n      \
    \  end\n        prev = lst[i]\n    end\n    return true\nend", "    local prev\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n          \
    \  return false\n        end\n        prev = lst[i]\n    end\n    return true\n\
    end", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last\
    \ then\n            return false\n        end\n        last = lst[i]\n    end\n\
    \    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n   \
    \     if lst[i] < prev then\n            return false\n        end\n        prev\
    \ = lst[i]\n    end\n    return true\nend", "    local last = lst[1]\n    for\
    \ i = 2, #lst do\n        if lst[i] <= last then\n            return false\n \
    \       end\n        last = lst[i]\n    end\n    return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "  local prev = nil\n \
    \ for _, v in ipairs(lst) do\n    if prev and prev >= v then\n      return false\n\
    \    end\n    prev = v\n  end\n  return true\nend", "    local last = nil\n  \
    \  for _, v in ipairs(lst) do\n        if last ~= nil and last >= v then\n   \
    \         return false\n        end\n        last = v\n    end\n    return true\n\
    end", "  -- TODO: implement this function\n  local prev = lst[1]\n  for i, v in\
    \ ipairs(lst) do\n    if i > 1 then\n      if v < prev then\n        return false\n\
    \      end\n      prev = v\n    end\n  end\n  return true\nend", "  local prev\
    \ = nil\n  for _, v in ipairs(lst) do\n    if prev and prev >= v then\n      return\
    \ false\n    end\n    prev = v\n  end\n  return true\nend", "    local prev =\
    \ lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n            return\
    \ false\n        end\n        prev = lst[i]\n    end\n    return true\nend", " \
    \ local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n    \
    \  return false\n    end\n    last = lst[i]\n  end\n  return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "    for i =\
    \ 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local last = nil\n  for _, v\
    \ in ipairs(lst) do\n    if last and last >= v then\n      return false\n    end\n\
    \    last = v\n  end\n  return true\nend", "    local prev = lst[1]\n    for i\
    \ = 2, #lst do\n        if lst[i] < prev then\n            return false\n    \
    \    end\n        prev = lst[i]\n    end\n    return true\nend", "  local last\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return false\n\
    \    end\n    last = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if prev >= lst[i] then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n   \
    \ prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for i =\
    \ 2, #lst do\n    if prev >= lst[i] then\n      return false\n    end\n    prev\
    \ = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n\
    \        if lst[i] < prev then\n            return false\n        end\n      \
    \  prev = lst[i]\n    end\n    return true\nend", "  local prev = nil\n  for _,\
    \ v in ipairs(lst) do\n    if prev and prev >= v then\n      return false\n  \
    \  end\n    prev = v\n  end\n  return true\nend", "  local last = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] <= last then\n      return false\n    end\n  \
    \  last = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n    for\
    \ i = 2, #lst do\n        if lst[i] < prev then\n            return false\n  \
    \      end\n        prev = lst[i]\n    end\n    return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local last = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < last then\n      return false\n    end\n   \
    \ last = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n    for\
    \ i = 2, #lst do\n        if lst[i] < prev then\n            return false\n  \
    \      end\n        prev = lst[i]\n    end\n    return true\nend", "    local\
    \ prev = nil\n    for i, v in ipairs(lst) do\n        if prev ~= nil and prev\
    \ >= v then\n            return false\n        end\n        prev = v\n    end\n\
    \    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last\
    \ then\n      return false\n    end\n    last = lst[i]\n  end\n  return true\n\
    end", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev\
    \ then\n            return false\n        end\n        prev = lst[i]\n    end\n\
    \    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n   \
    \     if lst[i] < prev then\n            return false\n        end\n        prev\
    \ = lst[i]\n    end\n    return true\nend", "  local prev = lst[1]\n  for i =\
    \ 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n    prev\
    \ = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] <= prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n  \
    \  if prev >= lst[i] then\n      return false\n    end\n    prev = lst[i]\n  end\n\
    \  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "    local prev = nil\n    for i, v in ipairs(lst) do\n        if\
    \ prev and v <= prev then\n            return false\n        end\n        prev\
    \ = v\n    end\n    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n\
    \  end\n  return true\nend", "    if #lst == 1 then\n        return true\n   \
    \ end\n    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n    \
    \        return false\n        end\n    end\n    return true\nend", "  for i =\
    \ 1, #lst - 1 do\n    if lst[i] >= lst[i + 1] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local last = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] < last then\n      return false\n    end\n    last = lst[i]\n  end\n\
    \  return true\nend", "    local prev = nil\n    for _, v in ipairs(lst) do\n\
    \        if prev and prev >= v then\n            return false\n        end\n \
    \       prev = v\n    end\n    return true\nend", "    local last = lst[1]\n \
    \   for i = 2, #lst do\n        if lst[i] <= last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "    local\
    \ last = lst[1]\n    for i = 2, #lst do\n        if lst[i] < last then\n     \
    \       return false\n        end\n        last = lst[i]\n    end\n    return\
    \ true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev\
    \ then\n      return false\n    end\n    prev = lst[i]\n  end\n  return true\n\
    end", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev\
    \ then\n            return false\n        end\n        prev = lst[i]\n    end\n\
    \    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ <= prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "    local prev = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ < prev then\n            return false\n        end\n        prev = lst[i]\n\
    \    end\n    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n \
    \ end\n  return true\nend", "  for i = 1, #lst - 1 do\n    if lst[i] >= lst[i\
    \ + 1] then\n      return false\n    end\n  end\n  return true\nend", "    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= prev then\n    \
    \        return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "    local prev = lst[1]\n    for i = 2, #lst\
    \ do\n        if lst[i] < prev then\n            return false\n        end\n \
    \       prev = lst[i]\n    end\n    return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n   \
    \ prev = lst[i]\n  end\n  return true\nend", "  local prev = nil\n  for _, v in\
    \ ipairs(lst) do\n    if prev and prev >= v then\n      return false\n    end\n\
    \    prev = v\n  end\n  return true\nend", "    local prev = nil\n    for _, v\
    \ in ipairs(lst) do\n        if prev and prev >= v then\n            return false\n\
    \        end\n        prev = v\n    end\n    return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = nil\n\
    \  for _, v in ipairs(lst) do\n    if prev and prev >= v then\n      return false\n\
    \    end\n    prev = v\n  end\n  return true\nend", "    local last = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] <= last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "  local\
    \ last = nil\n  for _, v in ipairs(lst) do\n    if last and last >= v then\n \
    \     return false\n    end\n    last = v\n  end\n  return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local last\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < last then\n      return false\n\
    \    end\n    last = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n\
    \    for i = 2, #lst do\n        if lst[i] <= prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "    local last\
    \ = lst[1]\n    for i = 2, #lst do\n        if lst[i] <= last then\n         \
    \   return false\n        end\n        last = lst[i]\n    end\n    return true\n\
    end", "    for i = 1, #lst - 1 do\n        if lst[i] >= lst[i + 1] then\n    \
    \        return false\n        end\n    end\n    return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if prev >= lst[i] then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n  for\
    \ i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n   \
    \ prev = lst[i]\n  end\n  return true\nend", "    -- your code here\n    local\
    \ prev = lst[1]\n    for i = 2, #lst do\n        if lst[i] < prev then\n     \
    \       return false\n        end\n        prev = lst[i]\n    end\n    return\
    \ true\nend", "    -- your code here\n    local prev = lst[1]\n    for i = 2,\
    \ #lst do\n        if lst[i] < prev then\n            return false\n        end\n\
    \        prev = lst[i]\n    end\n    return true\nend", "  local prev = nil\n\
    \  for _, v in ipairs(lst) do\n    if prev and prev >= v then\n      return false\n\
    \    end\n    prev = v\n  end\n  return true\nend", "  local prev = lst[1]\n \
    \ for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  -- TODO:\
    \ implement this function\n  local prev = lst[1]\n  for i = 2, #lst do\n    if\
    \ prev >= lst[i] then\n      return false\n    end\n    prev = lst[i]\n  end\n\
    \  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n        if lst[i]\
    \ <= last then\n            return false\n        end\n        last = lst[i]\n\
    \    end\n    return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n\
    \    if lst[i] < prev then\n      return false\n    end\n    prev = lst[i]\n \
    \ end\n  return true\nend", "    local last = lst[1]\n    for i = 2, #lst do\n\
    \        if lst[i] < last then\n            return false\n        end\n      \
    \  last = lst[i]\n    end\n    return true\nend", "    local last = lst[1]\n \
    \   for i = 2, #lst do\n        if lst[i] <= last then\n            return false\n\
    \        end\n        last = lst[i]\n    end\n    return true\nend", "  local\
    \ last = lst[1]\n  for i = 2, #lst do\n    if lst[i] <= last then\n      return\
    \ false\n    end\n    last = lst[i]\n  end\n  return true\nend", "  -- TODO: Implement\
    \ me!\nend", "  -- TODO: Implement me!\nend", "  local last = lst[1]\n  for i\
    \ = 2, #lst do\n    if lst[i] <= last then\n      return false\n    end\n    last\
    \ = lst[i]\n  end\n  return true\nend", "  local last = lst[1]\n  for i = 2, #lst\
    \ do\n    if lst[i] < last then\n      return false\n    end\n    last = lst[i]\n\
    \  end\n  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n  \
    \  if lst[i] <= prev then\n      return false\n    end\n    prev = lst[i]\n  end\n\
    \  return true\nend", "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i]\
    \ < prev then\n      return false\n    end\n    prev = lst[i]\n  end\n  return\
    \ true\nend", "    local last = nil\n    for _, v in ipairs(lst) do\n        if\
    \ last and last >= v then\n            return false\n        end\n        last\
    \ = v\n    end\n    return true\nend", "    local last = lst[1]\n    for i = 2,\
    \ #lst do\n        if lst[i] <= last then\n            return false\n        end\n\
    \        last = lst[i]\n    end\n    return true\nend", "    local prev = nil\n\
    \    for _, v in ipairs(lst) do\n        if prev and prev >= v then\n        \
    \    return false\n        end\n        prev = v\n    end\n    return true\nend",
  "  local prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] <= prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ last = 0\n  for _, v in ipairs(lst) do\n    if v <= last then\n      return\
    \ false\n    end\n    last = v\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] < prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend", "  local\
    \ prev = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return\
    \ false\n    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev\
    \ = lst[1]\n  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n\
    \    end\n    prev = lst[i]\n  end\n  return true\nend", "  local prev = lst[1]\n\
    \  for i = 2, #lst do\n    if lst[i] < prev then\n      return false\n    end\n\
    \    prev = lst[i]\n  end\n  return true\nend", "    local prev = lst[1]\n   \
    \ for i = 2, #lst do\n        if lst[i] <= prev then\n            return false\n\
    \        end\n        prev = lst[i]\n    end\n    return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

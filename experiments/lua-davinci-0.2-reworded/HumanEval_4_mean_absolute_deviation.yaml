---
name: HumanEval_4_mean_absolute_deviation
language: lua
prompt: |
  -- For a given table of input numbers, calculate Mean Absolute Deviation
  -- around the mean of this dataset.
  -- Mean Absolute Deviation is the average absolute difference between each
  -- element and a centerpoint (mean in this case):
  -- MAD = average | x - x_mean |
  -- >>> mean_absolute_deviation({1.0, 2.0, 3.0, 4.0})
  -- 1.0
  local function mean_absolute_deviation(numbers)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = mean_absolute_deviation
      lu.assertEquals(candidate({1.0, 2.0}), 0.5)
      lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0}), 1.0)
      lu.assertEquals(candidate({1.0, 2.0, 3.0, 4.0, 5.0}), 1.2)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, n in ipairs(numbers) do
      sum = sum + math.abs(n - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, v in pairs(numbers) do
          sum = sum + v
          count = count + 1
      end
      local mean = sum / count
      local sum_of_deviations = 0
      for _, v in pairs(numbers) do
          sum_of_deviations = sum_of_deviations + math.abs(v - mean)
      end
      return sum_of_deviations / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local sum = 0
    local mean = mean(numbers)
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local mean = mean(numbers)
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local mean = mean(numbers)
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_squares = 0
    for _, number in pairs(numbers) do
      sum_of_squares = sum_of_squares + math.abs(number - mean)
    end
    return sum_of_squares / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_deviations = 0
    for _, number in pairs(numbers) do
      sum_of_deviations = sum_of_deviations + math.abs(number - mean)
    end
    return sum_of_deviations / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, n in ipairs(numbers) do
      sum = sum + math.abs(n - mean)
    end
    return sum / #numbers
  end
- |2-
      local sum = 0
      local mean = mean(numbers)
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_squares = 0
      for _, number in ipairs(numbers) do
          sum_of_squares = sum_of_squares + math.abs(number - mean)
      end
      return sum_of_squares / count
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_deviations = 0
    for _, number in pairs(numbers) do
      sum_of_deviations = sum_of_deviations + math.abs(number - mean)
    end
    return sum_of_deviations / count
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_deviations = 0
    for _, number in pairs(numbers) do
      sum_of_deviations = sum_of_deviations + math.abs(number - mean)
    end
    return sum_of_deviations / count
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, x in ipairs(numbers) do
          sum = sum + math.abs(x - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, v in ipairs(numbers) do
          sum = sum + math.abs(v - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, n in ipairs(numbers) do
          sum = sum + n
          count = count + 1
      end
      local mean = sum / count
      local sum_of_deviations = 0
      for _, n in ipairs(numbers) do
          sum_of_deviations = sum_of_deviations + math.abs(n - mean)
      end
      return sum_of_deviations / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, v in ipairs(numbers) do
          sum = sum + math.abs(v - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_abs_diffs = 0
      for _, number in ipairs(numbers) do
          sum_of_abs_diffs = sum_of_abs_diffs + math.abs(number - mean)
      end
      return sum_of_abs_diffs / count
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_absolute_deviations = 0
    for _, number in pairs(numbers) do
      sum_of_absolute_deviations = sum_of_absolute_deviations + math.abs(number - mean)
    end
    return sum_of_absolute_deviations / count
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_absolute_differences = 0
      for _, number in ipairs(numbers) do
          sum_of_absolute_differences = sum_of_absolute_differences + math.abs(number - mean)
      end
      return sum_of_absolute_differences / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local total = 0
      for _, number in ipairs(numbers) do
          total = total + math.abs(number - mean)
      end
      return total / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_absolute_deviations = 0
    for _, number in pairs(numbers) do
      sum_of_absolute_deviations = sum_of_absolute_deviations + math.abs(number - mean)
    end
    return sum_of_absolute_deviations / count
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local total = 0
      for _, number in ipairs(numbers) do
          total = total + math.abs(number - mean)
      end
      return total / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local mean = mean(numbers)
    for _, num in ipairs(numbers) do
      sum = sum + math.abs(num - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, n in ipairs(numbers) do
          sum = sum + math.abs(n - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, v in ipairs(numbers) do
          sum = sum + math.abs(v - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local mean = mean(numbers)
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, x in ipairs(numbers) do
      sum = sum + math.abs(x - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local total = 0
      for _, x in ipairs(numbers) do
          total = total + math.abs(x - mean)
      end
      return total / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_absolute_deviations = 0
      for _, number in ipairs(numbers) do
          sum_of_absolute_deviations = sum_of_absolute_deviations + math.abs(number - mean)
      end
      return sum_of_absolute_deviations / count
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_squares = 0
      for _, number in ipairs(numbers) do
          sum_of_squares = sum_of_squares + (number - mean)^2
      end
      return math.sqrt(sum_of_squares / count)
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0.0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local absolute_deviations = {}
      for _, number in ipairs(numbers) do
          table.insert(absolute_deviations, math.abs(number - mean))
      end
      return mean(absolute_deviations)
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, v in ipairs(numbers) do
          sum = sum + math.abs(v - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local mean = mean(numbers)
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, n in ipairs(numbers) do
          sum = sum + math.abs(n - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, n in ipairs(numbers) do
          sum = sum + math.abs(n - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, x in ipairs(numbers) do
          sum = sum + math.abs(x - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local mean = mean(numbers)
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local mean = mean(numbers)
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_absolute_differences = 0
      for _, number in ipairs(numbers) do
          sum_of_absolute_differences = sum_of_absolute_differences + math.abs(number - mean)
      end
      return sum_of_absolute_differences / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local mean = mean(numbers)
    for _, x in ipairs(numbers) do
      sum = sum + math.abs(x - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, v in ipairs(numbers) do
          sum = sum + math.abs(v - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_deviations = 0
      for _, number in ipairs(numbers) do
          sum_of_deviations = sum_of_deviations + math.abs(number - mean)
      end
      return sum_of_deviations / count
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local sum = 0
    local count = 0
    for _, number in pairs(numbers) do
      sum = sum + number
      count = count + 1
    end
    local mean = sum / count
    local sum_of_squares = 0
    for _, number in pairs(numbers) do
      sum_of_squares = sum_of_squares + math.abs(number - mean)
    end
    return sum_of_squares / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local sum = 0
      local count = 0
      for _, number in ipairs(numbers) do
          sum = sum + number
          count = count + 1
      end
      local mean = sum / count
      local sum_of_squares = 0
      for _, number in ipairs(numbers) do
          sum_of_squares = sum_of_squares + math.abs(number - mean)
      end
      return sum_of_squares / count
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local total = 0
      for _, number in ipairs(numbers) do
          total = total + math.abs(number - mean)
      end
      return total / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
      local mean = mean(numbers)
      local sum = 0
      for _, number in ipairs(numbers) do
          sum = sum + math.abs(number - mean)
      end
      return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
- |2-
    local mean = mean(numbers)
    local sum = 0
    for _, number in ipairs(numbers) do
      sum = sum + math.abs(number - mean)
    end
    return sum / #numbers
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

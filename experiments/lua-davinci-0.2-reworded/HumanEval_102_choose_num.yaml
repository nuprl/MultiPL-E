---
name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest
  even integer number that is in the range [x, y] inclusive. If \n-- there's no such
  number, then the function should return -1.\n-- For example:\n-- >>> choose_num(12,
  15)\n-- 14\n-- >>> choose_num(13, 12)\n-- -1\nlocal function choose_num(x, y)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = choose_num
      lu.assertEquals(candidate(12, 15), 14)
      lu.assertEquals(candidate(13, 12), -1)
      lu.assertEquals(candidate(33, 12354), 12354)
      lu.assertEquals(candidate(5234, 5233), -1)
      lu.assertEquals(candidate(6, 29), 28)
      lu.assertEquals(candidate(27, 10), -1)
      lu.assertEquals(candidate(7, 7), -1)
      lu.assertEquals(candidate(546, 546), 546)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local num = -1
      if x % 2 == 0 then
          num = x
      else
          num = x + 1
      end
      while num <= y do
          return num
      end
      return -1
  end
- "\tif x % 2 == 0 then\n\t\treturn x\n\telseif x + 1 <= y then\n\t\treturn x + 1\n\telse\n\t\treturn
  -1\n\tend\nend"
- |2-
      -- TODO: implement this function
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 == y then
          return -1
      else
          return choose_num(x + 1, y)
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- "\tif x % 2 == 0 then\n\t\treturn x\n\telseif x + 1 <= y then\n\t\treturn x + 1\n\telse\n\t\treturn
  -1\n\tend\nend"
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      -- TODO: Write your code here
      return -1
  end
- |2-
      -- TODO: implement this function
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local i = y
      while i >= x do
          if i % 2 == 0 then
              return i
          end
          i = i - 1
      end
      return -1
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
    if x % 2 == 0 then
      return x
    elseif x + 1 <= y then
      return x + 1
    else
      return -1
    end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
    -- your code here
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      -- TODO: implement this function
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      -- YOUR CODE HERE
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local num = -1
      if x % 2 == 0 then
          num = x
      else
          num = x + 1
      end
      for i = num, y, 2 do
          if i <= y then
              return i
          end
      end
      return -1
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      -- TODO: Write your code here
      return -1
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
    if x > y then
      return -1
    end
    if x % 2 == 0 then
      return x
    end
    return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
      if x%2 == 0 then
          return x
      elseif x+1 <= y then
          return x+1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
    if x % 2 == 0 then
      return x
    elseif x + 1 <= y then
      return x + 1
    else
      return -1
    end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      -- TODO: implement this function
      return -1
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 == y then
          return -1
      else
          return choose_num(x + 1, y)
      end
  end
- |2-
      -- TODO: implement this function
      if x%2 == 0 then
          return x
      else
          return x+1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
    if x > y then
      return -1
    end
    if x % 2 == 0 then
      return x
    end
    return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      -- TODO: implement this function
      if x%2 == 0 then
          return x
      elseif y%2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
    if x > y then
      return -1
    end
    if x % 2 == 0 then
      return x
    end
    return choose_num(x + 1, y)
  end
- |2-
      local result = -1
      for i = x, y do
          if i % 2 == 0 then
              result = i
          end
      end
      return result
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
    if x % 2 == 0 then
      return x
    elseif x + 1 <= y then
      return x + 1
    else
      return -1
    end
  end
- |2-
      -- TODO: implement this function
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
    local num = -1
    for i = x, y do
      if i % 2 == 0 then
        num = i
      end
    end
    return num
  end
- |2-
      -- your code here
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- your code here
      if x % 2 == 0 then
          return x
      elseif x % 2 == 1 and y % 2 == 0 then
          return y
      elseif x % 2 == 1 and y % 2 == 1 then
          return -1
      end
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the modulo operator to check if a number is even.
      -- Hint: You can use the max function to find the largest number.
      -- Hint: You can use the min function to find the smallest number.
      -- Hint: You can use the range function to create a list of numbers.
      -- Hint: You can use the filter function to filter a list of numbers.
      -- Hint: You can use the head function to get the first element of a list.
      -- Hint: You can use the empty function to check if a list is empty.
      -- Hint: You can use the length function to check the length of a list.
      -- Hint: You can use the any function to check if any element of a list
      -- satisfies a condition.
      -- Hint: You can use the all function to check if all elements of a list
      -- satisfy a condition.
      -- Hint: You can use the map function to apply a function to all elements
      -- of a list.
      -- Hint: You can use the foldl function to fold a list.
      -- Hint: You can use the foldr function to fold a list.
      -- Hint: You can use the zip function to zip two lists together.
      -- Hint: You can use the unzip function to unzip a list of pairs.
      -- Hint: You can use the zip_with function to zip two lists together using
      -- a function.
      -- Hint: You can use the zip_with3 function to zip three lists together
      -- using a function.
      -- Hint: You can use the zip_with4 function to zip four lists together
      -- using a function.
      -- Hint: You can use the zip_with5 function to zip five lists together
      -- using a function.
      -- Hint: You can use the zip_with6 function to zip six lists together
      -- using a function.
      -- Hint: You can use the zip_with7 function to zip seven lists together
      -- using a function.
      -- Hint: You can use the zip_with8 function to zip eight lists together
      -- using a function.
      --
- |2-
    if x > y then
      return -1
    end
    if x % 2 == 0 then
      return x
    end
    return choose_num(x + 1, y)
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- YOUR CODE HERE
      if x%2 == 0 then
          return x
      elseif x+1 == y then
          return -1
      else
          return choose_num(x+1, y)
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
    local n = math.max(x, y)
    if n % 2 == 0 then
      return n
    else
      return n - 1
    end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local n = x
      while n <= y do
          if n % 2 == 0 then
              return n
          end
          n = n + 1
      end
      return -1
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          if x >= y then
              return x
          else
              return choose_num(x + 2, y)
          end
      else
          return choose_num(x + 1, y)
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      -- TODO: implement this function
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 == y then
          return -1
      else
          return choose_num(x + 1, y)
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      -- YOUR CODE HERE
      if x%2 == 0 then
          return x
      elseif x+1 <= y then
          return x+1
      else
          return -1
      end
  end
- |2-
    -- YOUR CODE HERE
    if x > y then
      return -1
    end
    if x % 2 == 0 then
      return x
    end
    return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 == y then
          return -1
      else
          return choose_num(x + 1, y)
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
    -- TODO: implement this function
    if x % 2 == 0 then
      return x
    elseif y % 2 == 0 then
      return y
    else
      return -1
    end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
      if x%2 == 0 then
          return x
      elseif x+1 <= y then
          return x+1
      else
          return -1
      end
  end
- |2-
      local even = -1
      for i = x, y do
          if i % 2 == 0 then
              even = i
          end
      end
      return even
  end
- |2-
      -- TODO: implement this function
      if x%2 == 0 then
          return x
      elseif x+1 <= y then
          return x+1
      else
          return -1
      end
  end
- |2-
      local max_even = -1
      for i = x, y do
          if i % 2 == 0 and i > max_even then
              max_even = i
          end
      end
      return max_even
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local max_even = -1
      for i = x, y do
          if i % 2 == 0 and i > max_even then
              max_even = i
          end
      end
      return max_even
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
      return -1
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      local result = -1
      for i = x, y do
          if i % 2 == 0 then
              result = i
          end
      end
      return result
  end
- "\tif x % 2 == 0 then\n\t\treturn x\n\telseif x + 1 == y then\n\t\treturn -1\n\telse\n\t\treturn
  choose_num(x + 1, y)\n\tend\nend"
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      local result = -1
      for i = x, y do
          if i % 2 == 0 then
              result = i
          end
      end
      return result
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- "\tlocal n = math.max(x, y)\n\tif n % 2 == 0 then\n\t\treturn n\n\telse\n\t\treturn
  n - 1\n\tend\nend"
- |2-
      -- TODO: implement this function
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      -- TODO: implement this function
      if x%2 == 0 then
          return x
      elseif x+1 <= y then
          return x+1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
    if x % 2 == 0 then
      return x
    elseif x + 1 <= y then
      return x + 1
    else
      return -1
    end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      -- TODO: implement this function
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
      local result = -1
      for i = x, y do
          if i % 2 == 0 then
              result = i
          end
      end
      return result
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif y % 2 == 0 then
          return y
      else
          return -1
      end
  end
- |2-
    -- TODO: implement this function
    if x % 2 == 0 then
      return x
    elseif x + 1 <= y then
      return x + 1
    else
      return -1
    end
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- |2-
      local max_even = -1
      for i = x, y do
          if i % 2 == 0 and i > max_even then
              max_even = i
          end
      end
      return max_even
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      local max = -1
      for i = x, y do
          if i % 2 == 0 and i > max then
              max = i
          end
      end
      return max
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
- |2-
    local n = math.max(x, y)
    while n >= x do
      if n % 2 == 0 then
        return n
      end
      n = n - 1
    end
    return -1
  end
- |2-
      local num = -1
      for i = x, y do
          if i % 2 == 0 then
              num = i
          end
      end
      return num
  end
- |2-
      if x > y then
          return -1
      end
      if x % 2 == 0 then
          return x
      end
      return choose_num(x + 1, y)
  end
- "\tlocal max = -1\n\tfor i = x, y do\n\t\tif i % 2 == 0 and i > max then\n\t\t\tmax
  = i\n\t\tend\n\tend\n\treturn max\nend"
- |2-
      if x % 2 == 0 then
          return x
      elseif x + 1 <= y then
          return x + 1
      else
          return -1
      end
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

---
name: HumanEval_134_check_if_last_char_is_a_letter
language: lua
prompt: |
  -- Create a function that returns true if the last character
  -- of a given string is an alphabetical character and is not
  -- a part of a word, and false otherwise.
  -- Note: "word" is a group of characters separated by space.
  -- Examples:
  -- >>> check_if_last_char_is_a_letter('apple pie')
  -- false
  -- >>> check_if_last_char_is_a_letter('apple pi e')
  -- true
  -- >>> check_if_last_char_is_a_letter('apple pi e ')
  -- false
  -- >>> check_if_last_char_is_a_letter('')
  -- false
  local function check_if_last_char_is_a_letter(txt)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = check_if_last_char_is_a_letter
      lu.assertEquals(candidate('apple'), false)
      lu.assertEquals(candidate('apple pi e'), true)
      lu.assertEquals(candidate('eeeee'), false)
      lu.assertEquals(candidate('A'), true)
      lu.assertEquals(candidate('Pumpkin pie '), false)
      lu.assertEquals(candidate('Pumpkin pie 1'), false)
      lu.assertEquals(candidate(''), false)
      lu.assertEquals(candidate('eeeee e '), false)
      lu.assertEquals(candidate('apple pie'), false)
      lu.assertEquals(candidate('apple pi e '), false)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local last_char = string.sub(txt, -1)
      if last_char == ' ' then
          return false
      end
      if string.match(last_char, '%a') then
          return true
      end
      return false
  end
- |2-
      -- TODO: Implement this function.
      return false
  end
- |2-
      local last_char = txt:sub(-1)
      return last_char:match('%a') and not txt:sub(-2):match('%a')
  end
- |2-
    local last_char = txt:sub(-1)
    if last_char:match('%a') and not last_char:match('%w') then
      return true
    else
      return false
    end
  end
- |2-
      local last_char = txt:sub(-1)
      local last_char_is_letter = last_char:match('%a')
      local last_char_is_not_part_of_word = txt:sub(-2, -2) == ' '
      return last_char_is_letter and last_char_is_not_part_of_word
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function.
      local last_char = txt:sub(-1)
      local last_char_is_letter = last_char:match("%a")
      local last_char_is_not_part_of_word = txt:sub(-2, -2) == " "
      return last_char_is_letter and last_char_is_not_part_of_word
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.match function to check
      -- if the last character is an alphabetical character.
      -- Hint: You can use the string.find function to check
      -- if the last character is a part of a word.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.find function to check
      -- if the last character is a part of a word.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.find function to check
      -- if the last character is a part of a word.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.find function to check
      -- if the last character is a part of a word.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.find function to check
      -- if the last character is a part of a word.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.find function to check
      -- if the last character is a part of a word.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.
- |2
      -- TODO: Implement this function.
      -- Hint: Use string.match() and string.find() functions.
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
      -- Hint: Use the following pattern:
      -- %w+%s*$
- |2-
      -- TODO: Implement this function.
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    return false
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.find() function.
      -- Hint: You may need to use string.sub() function.
      -- Hint: You may need to use string.len() function.
      -- Hint: You may need to use string.gsub() function.
      -- Hint: You may need to use string.gmatch() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You may need to use string.match() function.
      -- Hint: You
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use string.find() to find a pattern in a string.
      -- Hint: You can use string.match() to match a pattern in a string.
      -- Hint: You can use string.sub() to get a substring from a string.
      -- Hint: You can use string.len() to get the length of a string.
      -- Hint: You can use string.gmatch() to iterate over all characters in a string.
      -- Hint: You can use string.gsub() to replace all occurrences of a pattern in a string.
      -- Hint: You can use string.upper() to convert a string to uppercase.
      -- Hint: You can use string.lower() to convert a string to lowercase.
      -- Hint: You can use string.reverse() to reverse a string.
      -- Hint: You can use string.format() to format a string.
      -- Hint: You can use string.char() to convert a number to a character.
      -- Hint: You can use string.byte() to convert a character to a number.
      -- Hint: You can use string.rep() to repeat a string.
      -- Hint: You can use string.dump() to dump a function as a string.
      -- Hint: You can use string.gfind() to iterate over all occurrences of a pattern in a string.
      -- Hint: You can use string.find() to find a pattern in a string.
      -- Hint: You can use string.match() to match a pattern in a string.
      -- Hint: You can use string.gsub() to replace all occurrences of a pattern in a string.
      -- Hint: You can use string.gmatch() to iterate over all characters in a string.
      -- Hint: You can use string.len() to get the length of a string.
      -- Hint: You can use string.sub() to get a substring from a string.
      -- Hint: You can use string.upper() to convert a string to uppercase.
      -- Hint: You can use string.lower() to convert a string to lowercase.
      -- H
- |2-
      -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
    if txt:sub(-1):match("%a") and not txt:sub(-1):match("%w") then
      return true
    else
      return false
    end
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: Use the string.match function.
      -- Hint: Use the string.find function.
      -- Hint: Use the string.sub function.
      -- Hint: Use the string.len function.
      -- Hint: Use the string.gmatch function.
      -- Hint: Use the string.gsub function.
      -- Hint: Use the string.lower function.
      -- Hint: Use the string.upper function.
      -- Hint: Use the string.reverse function.
      -- Hint: Use the string.format function.
      -- Hint: Use the string.char function.
      -- Hint: Use the string.byte function.
      -- Hint: Use the string.rep function.
      -- Hint: Use the string.gfind function.
      -- Hint: Use the string.dump function.
      -- Hint: Use the string.len function.
      -- Hint: Use the string.find function.
      -- Hint: Use the string.sub function.
      -- Hint: Use the string.match function.
      -- Hint: Use the string.gsub function.
      -- Hint: Use the string.gmatch function.
      -- Hint: Use the string.reverse function.
      -- Hint: Use the string.lower function.
      -- Hint: Use the string.upper function.
      -- Hint: Use the string.format function.
      -- Hint: Use the string.char function.
      -- Hint: Use the string.byte function.
      -- Hint: Use the string.rep function.
      -- Hint: Use the string.dump function.
      -- Hint: Use the string.gfind function.
      -- Hint: Use the string.gsub function.
      -- Hint: Use the string.gmatch function.
      -- Hint: Use the string.reverse function.
      -- Hint: Use the string.lower function.
      -- Hint: Use the string.upper function.
      -- Hint: Use the string.format function.
      -- Hint: Use the string.char function.
      -- Hint: Use the string.byte function.
- |2-
      -- TODO: Implement this function.
      -- Hint: Use string.match() and string.find() functions.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.match() function.
      -- Hint: Use string.find() function.
      -- Hint: Use string.len() function.
      -- Hint: Use string.sub() function.
      --
- |2-
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use string.match() function.
      -- Hint: You can use string.find() function.
      -- Hint: You can use string.sub() function.
      -- Hint: You can use string.len() function.
      -- Hint: You can use string.gmatch() function.
      -- Hint: You can use string.gsub() function.
      -- Hint: You can use string.reverse() function.
      -- Hint: You can use string.lower() function.
      -- Hint: You can use string.upper() function.
      -- Hint: You can use string.byte() function.
      -- Hint: You can use string.char() function.
      -- Hint: You can use string.dump() function.
      -- Hint: You can use string.format() function.
      -- Hint: You can use string.rep() function.
      -- Hint: You can use string.gfind() function.
      -- Hint: You can use string.find() function.
      -- Hint: You can use string.match() function.
      -- Hint: You can use string.gsub() function.
      -- Hint: You can use string.reverse() function.
      -- Hint: You can use string.lower() function.
      -- Hint: You can use string.upper() function.
      -- Hint: You can use string.len() function.
      -- Hint: You can use string.byte() function.
      -- Hint: You can use string.char() function.
      -- Hint: You can use string.dump() function.
      -- Hint: You can use string.format() function.
      -- Hint: You can use string.rep() function.
      -- Hint: You can use string.gfind() function.
      -- Hint: You can use string.gmatch() function.
      -- Hint: You can use string.find() function.
      -- Hint: You can use string.match() function.
      -- Hint: You can use string.gsub() function.
      -- Hint: You can use string.reverse() function.
- |2-
    -- TODO: Write your code here
    return nil
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- your code here
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: use string.find() and string.match()
      -- Hint: use string.find() and string.match()
      local last_char = string.sub(txt, -1)
      if string.find(last_char, "%a") then
          if string.find(txt, "%s"..last_char) then
              return false
          else
              return true
          end
      else
          return false
      end
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.find function to find
      -- the last character of a string.
      -- Hint: You can use the string.find function to find
      -- the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
      -- Hint: You can use the string.find function to find
      -- the last character of the last word of a string.
- "    -- TODO: Implement this function.\n    -- Hint: Use string.match() function.\n
  \   -- Hint: Use string.sub() function.\n    -- Hint: Use string.len() function.\n
  \   -- Hint: Use string.find() function.\n    -- Hint: Use string.byte() function.\n
  \   -- Hint: Use string.char() function.\n    -- Hint: Use string.gmatch() function.\n
  \   -- Hint: Use string.gsub() function.\n    -- Hint: Use string.match() function.\n
  \   -- Hint: Use string.reverse() function.\n    -- Hint: Use string.upper() function.\n
  \   -- Hint: Use string.lower() function.\n    -- Hint: Use string.format() function.\n
  \   -- Hint: Use string.dump() function.\n    -- Hint: Use string.rep() function.\n
  \   -- Hint: Use string.len() function.\n    -- Hint: Use string.sub() function.\n
  \   -- Hint: Use string.find() function.\n    -- Hint: Use string.byte() function.\n
  \   -- Hint: Use string.char() function.\n    -- Hint: Use string.gmatch() function.\n
  \   -- Hint: Use string.gsub() function.\n    -- Hint: Use string.match() function.\n
  \   -- Hint: Use string.reverse() function.\n    -- Hint: Use string.upper() function.\n
  \   -- Hint: Use string.lower() function.\n    -- Hint: Use string.format() function.\n
  \   -- Hint: Use string.dump() function.\n    -- Hint: Use string.rep() function.\n
  \   -- Hint: Use string.len() function.\n    -- Hint: Use string.sub() function.\n
  \   -- Hint: Use string.find() function.\n    -- Hint: Use string.byte() function.\n
  \   -- Hint: Use string.char() function.\n    -- Hint: Use string.gmatch() function.\n
  \   -- Hint: Use string.gsub() function.\n    -- Hint: Use string.match() function.\n
  \   -- Hint: Use string.reverse() function.\n   "
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement the function here
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.match function to check
      -- if the last character is an alphabetical character.
      -- You can use the string.find function to check if the
      -- last character is a part of a word.
      -- You can use the string.sub function to get the last
      -- character of a string.
      -- You can use the string.len function to get the length
      -- of a string.
      -- You can use the string.byte function to get the ASCII
      -- code of a character.
      -- You can use the string.char function to get the
      -- character of a given ASCII code.
      -- You can use the string.gsub function to remove all
      -- spaces from a string.
      -- You can use the string.gmatch function to iterate
      -- through all characters of a string.
      -- You can use the string.find function to check if a
      -- character is an alphabetical character.
      -- You can use the string.match function to check if a
      -- character is an alphabetical character.
      -- You can use the string.sub function to get a
      -- substring of a string.
      -- You can use the string.gsub function to replace all
      -- spaces with an empty string.
      -- You can use the string.gsub function to replace all
      -- non-alphabetical characters with an empty string.
      -- You can use the string.gsub function to replace all
      -- alphabetical characters with an empty string.
      -- You can use the string.len function to get the length
      -- of a string.
      -- You can use the string.sub function to get the last
      -- character of a string.
      -- You can use the string.find function to check if a
      -- character is a part of a word.
      -- You can use the string.match function to check if a
      -- character is a part of a word.
      -- You can use the string.sub function to get the
      -- substring of a string.
      -- You can use the string.gsub function to replace all
      -- spaces with an empty string.
      -- You can use the string.g
- |2-
      -- YOUR CODE HERE
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- your code here
  end
- |2-
      return false
  end
- |2-
    -- body
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: Use string.match() to find the last character.
      -- Hint: Use string.find() to check if the last character
      -- is a part of a word.
      -- Hint: Use string.find() to check if the last character
      -- is an alphabetical character.
      -- Hint: Use string.find() to check if the last character
      -- is a space.
      -- Hint: Use string.find() to check if the last character
      -- is a punctuation character.
      -- Hint: Use string.find() to check if the last character
      -- is a digit.
      -- Hint: Use string.find() to check if the last character
      -- is a symbol.
      -- Hint: Use string.find() to check if the last character
      -- is a control character.
      -- Hint: Use string.find() to check if the last character
      -- is a hexadecimal character.
      -- Hint: Use string.find() to check if the last character
      -- is a printable character.
      -- Hint: Use string.find() to check if the last character
      -- is a space character.
      -- Hint: Use string.find() to check if the last character
      -- is a line break character.
      -- Hint: Use string.find() to check if the last character
      -- is a uppercase character.
      -- Hint: Use string.find() to check if the last character
      -- is a lowercase character.
      -- Hint: Use string.find() to check if the last character
      -- is a titlecase character.
      -- Hint: Use string.find() to check if the last character
      -- is a decimal digit character.
      -- Hint: Use string.find() to check if the last character
      -- is a hexadecimal digit character.
      -- Hint: Use string.find() to check if the last character
      -- is a letter character.
      -- Hint: Use string.find() to check if the last character
      -- is a mark character.
      -- Hint: Use string.find() to check if the last character
      --
- |2-
      -- TODO: Implement this function
  end
- |2-
      if txt == '' then
          return false
      end
      local last_char = txt:sub(-1)
      if last_char == ' ' then
          return false
      end
      return last_char:match('%a') ~= nil
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      if string.len(txt) == 0 then
          return false
      end
      local last_char = string.sub(txt, -1)
      if string.match(last_char, '%a') and not string.match(last_char, '%w') then
          return true
      end
      return false
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      return false
  end
- |2-
      -- TODO: Implement this function.
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Write your code here
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      local last_char_is_a_letter = last_char:match('%a')
      local last_char_is_a_part_of_a_word = txt:match('%a%s*$')
      return last_char_is_a_letter and not last_char_is_a_part_of_a_word
  end
- |2-
      -- TODO: Write your code here
      return nil
  end
- |2-
      return false
  end
- |2-
      local last_char = txt:sub(-1)
      local last_char_is_letter = last_char:match('%a')
      local last_char_is_not_part_of_word = not txt:match('%a%s$')
      return last_char_is_letter and last_char_is_not_part_of_word
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.match() function to
      -- check if the last character is an alphabetical character.
      -- You can use the string.find() function to check if
      -- the last character is a part of a word.
      -- You can use the string.sub() function to get the last
      -- character of a string.
      -- You can use the string.len() function to get the length
      -- of a string.
      -- You can use the string.find() function to check if
      -- the last character is a part of a word.
      -- You can use the string.sub() function to get the last
      -- character of a string.
      -- You can use the string.len() function to get the length
      -- of a string.
      if txt == '' then
          return false
      end
      local last_char = string.sub(txt, string.len(txt), string.len(txt))
      if string.match(last_char, '%a') then
          if string.find(txt, last_char, string.len(txt) - 1) then
              return false
          else
              return true
          end
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
    -- TODO: implement this function
  end
- |2
      -- TODO: Implement this function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.sub function.
      -- Hint: You can use the string.len function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.reverse function.
      -- Hint: You can use the string.lower function.
      -- Hint: You can use the string.upper function.
      -- Hint: You can use the string.char function.
      -- Hint: You can use the string.byte function.
      -- Hint: You can use the string.format function.
      -- Hint: You can use the string.rep function.
      -- Hint: You can use the string.dump function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.len function.
      -- Hint: You can use the string.lower function.
      -- Hint: You can use the string.reverse function.
      -- Hint: You can use the string.sub function.
      -- Hint: You can use the string.upper function.
      -- Hint: You can use the string.char function.
      -- Hint: You can use the string.byte function.
      -- Hint: You can use the string.format function.
      -- Hint: You can use the string.rep function.
      -- Hint: You can use the string.dump function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.len function.
- |2-
      -- TODO: Implement this function.
      -- Hint: Use string.find() to find the last character.
      -- Hint: Use string.match() to check if the last character
      -- is an alphabetical character.
      -- Hint: Use string.sub() to get the last character.
      -- Hint: Use string.len() to get the length of the string.
      -- Hint: Use string.find() to check if the last character
      -- is a part of a word.
      -- Hint: Use string.find() to find the last character.
      -- Hint: Use string.match() to check if the last character
      -- is an alphabetical character.
      -- Hint: Use string.sub() to get the last character.
      -- Hint: Use string.len() to get the length of the string.
      -- Hint: Use string.find() to check if the last character
      -- is a part of a word.
      -- Hint: Use string.find() to find the last character.
      -- Hint: Use string.match() to check if the last character
      -- is an alphabetical character.
      -- Hint: Use string.sub() to get the last character.
      -- Hint: Use string.len() to get the length of the string.
      -- Hint: Use string.find() to check if the last character
      -- is a part of a word.
      -- Hint: Use string.find() to find the last character.
      -- Hint: Use string.match() to check if the last character
      -- is an alphabetical character.
      -- Hint: Use string.sub() to get the last character.
      -- Hint: Use string.len() to get the length of the string.
      -- Hint: Use string.find() to check if the last character
      -- is a part of a word.
      -- Hint: Use string.find() to find the last character.
      -- Hint: Use string.match() to check if the last character
      -- is an alphabetical character.
      -- Hint: Use string.sub() to get the last character.
      -- Hint: Use string.len() to get the length of the string
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.find() function to find
      -- the last character in a string.
      -- Hint: You can use the string.match() function to
      -- check if the last character is an alphabetical character.
      -- Hint: You can use the string.sub() function to
      -- get the last character in a string.
      -- Hint: You can use the string.len() function to
      -- get the length of a string.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a part of a word.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a space.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a punctuation character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a symbol character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a number character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a control character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a hexadecimal character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a printable character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a space character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a line break character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a uppercase character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a lowercase character.
      -- Hint: You can use the string.match() function to
      -- check if the last character is a titlecase character.
      -- H
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- YOUR CODE HERE
      local last_char = string.sub(txt, -1)
      if string.match(last_char, "%a") and not string.match(last_char, "%w") then
          return true
      else
          return false
      end
  end
- |2-
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    if txt == '' then
      return false
    end
    local len = string.len(txt)
    local last_char = string.sub(txt, len, len)
    if string.match(last_char, '%a') then
      if string.match(last_char, '%s') then
        return false
      end
      return true
    end
    return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: Use the string.find function.
      -- Hint: Use the string.match function.
      -- Hint: Use the string.sub function.
      -- Hint: Use the string.len function.
      -- Hint: Use the string.gmatch function.
      -- Hint: Use the string.gsub function.
      -- Hint: Use the string.reverse function.
      -- Hint: Use the string.upper function.
      -- Hint: Use the string.lower function.
      -- Hint: Use the string.char function.
      -- Hint: Use the string.byte function.
      -- Hint: Use the string.format function.
      -- Hint: Use the string.rep function.
      -- Hint: Use the string.gfind function.
      -- Hint: Use the string.dump function.
      -- Hint: Use the string.len function.
      -- Hint: Use the string.find function.
      -- Hint: Use the string.match function.
      -- Hint: Use the string.sub function.
      -- Hint: Use the string.gmatch function.
      -- Hint: Use the string.gsub function.
      -- Hint: Use the string.reverse function.
      -- Hint: Use the string.upper function.
      -- Hint: Use the string.lower function.
      -- Hint: Use the string.char function.
      -- Hint: Use the string.byte function.
      -- Hint: Use the string.format function.
      -- Hint: Use the string.rep function.
      -- Hint: Use the string.gfind function.
      -- Hint: Use the string.dump function.
      -- Hint: Use the string.len function.
      -- Hint: Use the string.find function.
      -- Hint: Use the string.match function.
      -- Hint: Use the string.sub function.
      -- Hint: Use the string.gmatch function.
      -- Hint: Use the string.gsub function.
      -- Hint: Use the string.reverse function.
      -- Hint: Use the string.upper function.
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      if txt == '' then
          return false
      end
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      end
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') and not last_char:match('%w') then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: Use string.match and string.sub
      -- Hint: Use string.match and string.sub
      local last_char = string.sub(txt, -1)
      local last_char_is_a_letter = string.match(last_char, '%a')
      local last_char_is_a_space = string.match(last_char, '%s')
      if last_char_is_a_letter and not last_char_is_a_space then
          return true
      else
          return false
      end
  end
- |2-
      -- TODO: Implement this function.
      if txt == '' then
          return false
      end
      local last_char = txt:sub(-1)
      if last_char:match('%a') then
          local last_char_index = txt:len()
          local last_char_is_a_letter = true
          for i = 1, last_char_index do
              local char = txt:sub(i, i)
              if char == ' ' then
                  last_char_is_a_letter = true
              elseif char:match('%a') then
                  last_char_is_a_letter = false
              end
          end
          return last_char_is_a_letter
      else
          return false
      end
  end
- |2-
      local last_char = txt:sub(-1)
      return last_char:match('%a') and not last_char:match('%w')
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Write your code here
      return false
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use string.find() to find a character in a string.
      -- Hint: You can use string.match() to find a pattern in a string.
      -- Hint: You can use string.sub() to get a substring of a string.
      -- Hint: You can use string.len() to get the length of a string.
      -- Hint: You can use string.byte() to get the ASCII code of a character.
      -- Hint: You can use string.char() to get the character of an ASCII code.
      -- Hint: You can use string.gmatch() to iterate over all characters in a string.
      -- Hint: You can use string.gsub() to replace a pattern in a string.
      -- Hint: You can use string.format() to format a string.
      -- Hint: You can use string.lower() to convert a string to lowercase.
      -- Hint: You can use string.upper() to convert a string to uppercase.
      -- Hint: You can use string.reverse() to reverse a string.
      -- Hint: You can use string.rep() to repeat a string.
      -- Hint: You can use string.pack() to pack values into a string.
      -- Hint: You can use string.unpack() to unpack values from a string.
      -- Hint: You can use string.dump() to dump a function as a string.
      -- Hint: You can use string.find() to find a pattern in a string.
      -- Hint: You can use string.match() to find a pattern in a string.
      -- Hint: You can use string.sub() to get a substring of a string.
      -- Hint: You can use string.len() to get the length of a string.
      -- Hint: You can use string.byte() to get the ASCII code of a character.
      -- Hint: You can use string.char() to get the character of an ASCII code.
      -- Hint: You can use string.gmatch() to iterate over all characters in a string.
      -- Hint: You can use string.gsub()
- |2-
    -- TODO: Implement this function.
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    local last_char = txt:sub(-1)
    return last_char:match('%a') and not txt:sub(-2):match('%a')
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You may find string.match() useful.
      -- Hint: You may find string.sub() useful.
      -- Hint: You may find string.len() useful.
      -- Hint: You may find string.find() useful.
      -- Hint: You may find string.gmatch() useful.
      -- Hint: You may find string.gsub() useful.
      -- Hint: You may find string.byte() useful.
      -- Hint: You may find string.char() useful.
      -- Hint: You may find string.format() useful.
      -- Hint: You may find string.rep() useful.
      -- Hint: You may find string.reverse() useful.
      -- Hint: You may find string.lower() useful.
      -- Hint: You may find string.upper() useful.
      -- Hint: You may find string.dump() useful.
      -- Hint: You may find string.pack() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.unpack() useful.
      -- Hint: You may find string.len() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- Hint: You may find string.packsize() useful.
      -- H
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') then
          return true
      else
          return false
      end
  end
- |2-
      -- YOUR CODE HERE
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: Write your code here
    return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- YOUR CODE HERE
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use string.match() function to find
      -- the last character of a string.
      -- Hint: You can use string.find() function to find
      -- the last character of a string.
      -- Hint: You can use string.sub() function to find
      -- the last character of a string.
      -- Hint: You can use string.len() function to find
      -- the last character of a string.
      -- Hint: You can use string.byte() function to find
      -- the last character of a string.
      -- Hint: You can use string.char() function to find
      -- the last character of a string.
      -- Hint: You can use string.reverse() function to find
      -- the last character of a string.
      -- Hint: You can use string.gmatch() function to find
      -- the last character of a string.
      -- Hint: You can use string.gsub() function to find
      -- the last character of a string.
      -- Hint: You can use string.format() function to find
      -- the last character of a string.
      -- Hint: You can use string.dump() function to find
      -- the last character of a string.
      -- Hint: You can use string.rep() function to find
      -- the last character of a string.
      -- Hint: You can use string.lower() function to find
      -- the last character of a string.
      -- Hint: You can use string.upper() function to find
      -- the last character of a string.
      -- Hint: You can use string.pack() function to find
      -- the last character of a string.
      -- Hint: You can use string.packsize() function to find
      -- the last character of a string.
      -- Hint: You can use string.unpack() function to find
      -- the last character of a string.
      -- Hint: You can use string.unpack() function to find
      -- the last character of a string.
      -- Hint: You can use string.pack() function to find
      -- the last character of a string.
      --
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: Use string.match() and string.sub()
      -- Hint: Use string.find() to find the last space
      -- Hint: Use string.sub() to get the last character
      -- Hint: Use string.match() to check if the last character is an alphabetical character
      -- Hint: Use string.match() to check if the last character is a part of a word
      -- Hint: Use string.sub() to get the last word
      -- Hint: Use string.match() to check if the last word contains the last character
      -- Hint: Use string.len() to get the length of the last word
      -- Hint: Use string.sub() to get the last character of the last word
      -- Hint: Use string.sub() to get the last character of the given string
      -- Hint: Use string.sub() to get the last word of the given string
      -- Hint: Use string.sub() to get the last character of the last word of the given string
      -- Hint: Use string.sub() to get the last character of the given string
      -- Hint: Use string.sub() to get the last word of the given string
      -- Hint: Use string.sub() to get the last character of the last word of the given string
      -- Hint: Use string.sub() to get the last character of the given string
      -- Hint: Use string.sub() to get the last word of the given string
      -- Hint: Use string.sub() to get the last character of the last word of the given string
      -- Hint: Use string.sub() to get the last character of the given string
      -- Hint: Use string.sub() to get the last word of the given string
      -- Hint: Use string.sub() to get the last character of the last word of the given string
      -- Hint: Use string.sub() to get the last character of the given string
      -- Hint: Use string.sub() to get the last word of the given string
      -- Hint: Use string.sub() to get the last character of the last word of the given string
      -- Hint: Use string.sub() to get
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
    -- TODO: implement the function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.find function to find
      -- the last character of a string.
      -- Hint: You can use the string.match function to check
      -- if the last character is an alphabetical character.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.find function to find
      -- the last space character of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.sub function to get the
      -- last character of a string.
      -- Hint: You can use the string.len function to get the
      -- length of a string.
      -- Hint: You can use the string.
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      if last_char:match('%a') then
          local last_char_index = txt:len()
          local next_char_index = last_char_index + 1
          local next_char = txt:sub(next_char_index, next_char_index)
          if next_char == ' ' then
              return true
          end
      end
      return false
  end
- |2-
      local last_char = string.sub(txt, -1)
      local last_char_is_a_letter = string.match(last_char, '%a')
      local last_char_is_a_part_of_a_word = string.match(txt, '%a%s$')
      return last_char_is_a_letter and not last_char_is_a_part_of_a_word
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function.
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.match function to find
      -- the last character of a string.
      -- Hint: You can use the string.find function to check
      -- if a character is an alphabetical character.
      -- Hint: You can use the string.sub function to get
      -- the last character of a string.
      -- Hint: You can use the string.len function to get
      -- the length of a string.
      -- Hint: You can use the string.find function to check
      -- if a character is a part of a word.
      -- Hint: You can use the string.sub function to get
      -- the last character of a string.
      -- Hint: You can use the string.len function to get
      -- the length of a string.
      -- Hint: You can use the string.find function to check
      -- if a character is a part of a word.
      -- Hint: You can use the string.sub function to get
      -- the last character of a string.
      -- Hint: You can use the string.len function to get
      -- the length of a string.
      -- Hint: You can use the string.find function to check
      -- if a character is a part of a word.
      -- Hint: You can use the string.sub function to get
      -- the last character of a string.
      -- Hint: You can use the string.len function to get
      -- the length of a string.
      -- Hint: You can use the string.find function to check
      -- if a character is a part of a word.
      -- Hint: You can use the string.sub function to get
      -- the last character of a string.
      -- Hint: You can use the string.len function to get
      -- the length of a string.
      -- Hint: You can use the string.find function to check
      -- if a character is a part of a word.
      -- Hint: You can use the string.sub function to get
      -- the last character of a string.
      -- Hint: You can use the string.len function to get
      -- the length of
- |2-
      -- TODO: Implement the function here
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      return last_char:match('%a') and not txt:match('%a%s$')
  end
- |2-
      -- TODO: Write your code here
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local last_char = txt:sub(-1)
      return last_char:match('%a') and not txt:match('%s' .. last_char .. '$')
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- your code here
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.sub function.
      -- Hint: You can use the string.len function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.format function.
      -- Hint: You can use the string.char function.
      -- Hint: You can use the string.byte function.
      -- Hint: You can use the string.reverse function.
      -- Hint: You can use the string.lower function.
      -- Hint: You can use the string.upper function.
      -- Hint: You can use the string.rep function.
      -- Hint: You can use the string.gfind function.
      -- Hint: You can use the string.dump function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.sub function.
      -- Hint: You can use the string.len function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.format function.
      -- Hint: You can use the string.char function.
      -- Hint: You can use the string.byte function.
      -- Hint: You can use the string.reverse function.
      -- Hint: You can use the string.lower function.
      -- Hint: You can use the string.upper function.
      -- Hint: You can use the string.rep function.
      -- Hint: You can use the string.gfind function.
      -- Hint: You can use the string.dump function.
      -- Hint: You can use the string.find function.
- |2-
    -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.sub function.
      -- Hint: You can use the string.len function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.reverse function.
      -- Hint: You can use the string.format function.
      -- Hint: You can use the string.char function.
      -- Hint: You can use the string.byte function.
      -- Hint: You can use the string.rep function.
      -- Hint: You can use the string.upper function.
      -- Hint: You can use the string.lower function.
      -- Hint: You can use the string.dump function.
      -- Hint: You can use the string.gfind function.
      -- Hint: You can use the string.match function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.len function.
      -- Hint: You can use the string.sub function.
      -- Hint: You can use the string.reverse function.
      -- Hint: You can use the string.format function.
      -- Hint: You can use the string.char function.
      -- Hint: You can use the string.byte function.
      -- Hint: You can use the string.rep function.
      -- Hint: You can use the string.upper function.
      -- Hint: You can use the string.lower function.
      -- Hint: You can use the string.dump function.
      -- Hint: You can use the string.gfind function.
      -- Hint: You can use the string.gmatch function.
      -- Hint: You can use the string.gsub function.
      -- Hint: You can use the string.find function.
      -- Hint: You can use the string.len function.
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

name: HumanEval_156_int_to_mini_roman
language: lua
prompt: "-- Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  -- and return it in lowercase.\n-- Restrictions: 1 <= num <= 1000\n-- Examples:\n\
  -- >>> int_to_mini_roman(19)\n-- 'xix'\n-- >>> int_to_mini_roman(152)\n-- 'clii'\n\
  -- >>> int_to_mini_roman(426)\n-- 'cdxxvi'\nlocal function int_to_mini_roman(number)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = int_to_mini_roman\n\
  \    lu.assertEquals(candidate(19), 'xix')\n    lu.assertEquals(candidate(152),\
  \ 'clii')\n    lu.assertEquals(candidate(251), 'ccli')\n    lu.assertEquals(candidate(426),\
  \ 'cdxxvi')\n    lu.assertEquals(candidate(500), 'd')\n    lu.assertEquals(candidate(1),\
  \ 'i')\n    lu.assertEquals(candidate(4), 'iv')\n    lu.assertEquals(candidate(43),\
  \ 'xliii')\n    lu.assertEquals(candidate(90), 'xc')\n    lu.assertEquals(candidate(94),\
  \ 'xciv')\n    lu.assertEquals(candidate(532), 'dxxxii')\n    lu.assertEquals(candidate(900),\
  \ 'cm')\n    lu.assertEquals(candidate(994), 'cmxciv')\n    lu.assertEquals(candidate(1000),\
  \ 'm')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local roman = \"\"\n    local roman_numerals = {\n        {1000,\
    \ \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"\
    },\n        {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n     \
    \   {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"\
    v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for _, numeral in\
    \ ipairs(roman_numerals) do\n        local value, letter = numeral[1], numeral[2]\n\
    \        while number >= value do\n            roman = roman .. letter\n     \
    \       number = number - value\n        end\n    end\n    return roman\nend",
  "    local result = \"\"\n    local num = number\n    local numeral = {\n      \
    \  {1000, \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400,\
    \ \"cd\"},\n        {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n\
    \        {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5,\
    \ \"v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for i = 1, #numeral\
    \ do\n        while num >= numeral[i][1] do\n            result = result .. numeral[i][2]\n\
    \            num = num - numeral[i][1]\n        end\n    end\n    return result\n\
    end", "\tlocal roman_numerals = {\n\t\t{1000, 'm'},\n\t\t{900, 'cm'},\n\t\t{500,\
    \ 'd'},\n\t\t{400, 'cd'},\n\t\t{100, 'c'},\n\t\t{90, 'xc'},\n\t\t{50, 'l'},\n\t\
    \t{40, 'xl'},\n\t\t{10, 'x'},\n\t\t{9, 'ix'},\n\t\t{5, 'v'},\n\t\t{4, 'iv'},\n\
    \t\t{1, 'i'}\n\t}\n\tlocal result = ''\n\tfor _, pair in ipairs(roman_numerals)\
    \ do\n\t\tlocal decimal, roman = unpack(pair)\n\t\twhile number >= decimal do\n\
    \t\t\tresult = result .. roman\n\t\t\tnumber = number - decimal\n\t\tend\n\tend\n\
    \treturn result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n \
    \       {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local roman_string = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            roman_string = roman_string .. roman\n            number\
    \ = number - arabic\n        end\n    end\n    return roman_string\nend", "  \
    \  local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n    \
    \    {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n\
    \        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local value,\
    \ letter = numeral[1], numeral[2]\n        while number >= value do\n        \
    \    result = result .. letter\n            number = number - value\n        end\n\
    \    end\n    return result\nend", "    local roman_numerals = {\n        {1000,\
    \ 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n   \
    \     {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, letter = numeral[1], numeral[2]\n        while number\
    \ >= value do\n            result = result .. letter\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local result =\
    \ \"\"\n    local digits = {\n        {1000, \"m\"},\n        {900, \"cm\"},\n\
    \        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"},\n      \
    \  {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n        {10, \"\
    x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"},\n     \
    \   {1, \"i\"}\n    }\n    for i = 1, #digits do\n        local digit = digits[i]\n\
    \        local value = digit[1]\n        local roman = digit[2]\n        while\
    \ number >= value do\n            result = result .. roman\n            number\
    \ = number - value\n        end\n    end\n    return result\nend", "    local\
    \ roman = \"\"\n    local num = number\n    while num > 0 do\n        if num >=\
    \ 1000 then\n            roman = roman .. \"m\"\n            num = num - 1000\n\
    \        elseif num >= 900 then\n            roman = roman .. \"cm\"\n       \
    \     num = num - 900\n        elseif num >= 500 then\n            roman = roman\
    \ .. \"d\"\n            num = num - 500\n        elseif num >= 400 then\n    \
    \        roman = roman .. \"cd\"\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            roman = roman .. \"c\"\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            roman = roman .. \"xc\"\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            roman =\
    \ roman .. \"l\"\n            num = num - 50\n        elseif num >= 40 then\n\
    \            roman = roman .. \"xl\"\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            roman = roman .. \"x\"\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            roman = roman .. \"ix\"\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            roman = roman\
    \ .. \"v\"\n            num = num - 5\n        elseif num >= 4 then\n        \
    \    roman = roman .. \"iv\"\n            num = num - 4\n        elseif num >=\
    \ 1 then\n            roman = roman .. \"i\"\n            num = num - 1\n    \
    \    end\n    end\n    return roman\nend", "    local roman_numerals = {\n   \
    \     {'i', 'v'},\n        {'x', 'l'},\n        {'c', 'd'},\n        {'m'}\n \
    \   }\n    local result = ''\n    local digit = 1\n    while number > 0 do\n \
    \       local digit_value = number % 10\n        local digit_roman = ''\n    \
    \    if digit_value == 9 then\n            digit_roman = roman_numerals[digit][1]\
    \ .. roman_numerals[digit + 1][1]\n        elseif digit_value == 4 then\n    \
    \        digit_roman = roman_numerals[digit][1] .. roman_numerals[digit][2]\n\
    \        else\n            if digit_value >= 5 then\n                digit_roman\
    \ = digit_roman .. roman_numerals[digit][2]\n                digit_value = digit_value\
    \ - 5\n            end\n            for i = 1, digit_value do\n              \
    \  digit_roman = digit_roman .. roman_numerals[digit][1]\n            end\n  \
    \      end\n        result = digit_roman .. result\n        number = math.floor(number\
    \ / 10)\n        digit = digit + 1\n    end\n    return result\nend", "  local\
    \ roman_numerals = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n  \
    \  {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n\
    \    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n\
    \  }\n  local result = ''\n  for _, pair in ipairs(roman_numerals) do\n    local\
    \ arabic, roman = table.unpack(pair)\n    while number >= arabic do\n      result\
    \ = result .. roman\n      number = number - arabic\n    end\n  end\n  return\
    \ result\nend", "  local roman = ''\n  local num = number\n  while num > 0 do\n\
    \    if num >= 1000 then\n      roman = roman .. 'm'\n      num = num - 1000\n\
    \    elseif num >= 900 then\n      roman = roman .. 'cm'\n      num = num - 900\n\
    \    elseif num >= 500 then\n      roman = roman .. 'd'\n      num = num - 500\n\
    \    elseif num >= 400 then\n      roman = roman .. 'cd'\n      num = num - 400\n\
    \    elseif num >= 100 then\n      roman = roman .. 'c'\n      num = num - 100\n\
    \    elseif num >= 90 then\n      roman = roman .. 'xc'\n      num = num - 90\n\
    \    elseif num >= 50 then\n      roman = roman .. 'l'\n      num = num - 50\n\
    \    elseif num >= 40 then\n      roman = roman .. 'xl'\n      num = num - 40\n\
    \    elseif num >= 10 then\n      roman = roman .. 'x'\n      num = num - 10\n\
    \    elseif num >= 9 then\n      roman = roman .. 'ix'\n      num = num - 9\n\
    \    elseif num >= 5 then\n      roman = roman .. 'v'\n      num = num - 5\n \
    \   elseif num >= 4 then\n      roman = roman .. 'iv'\n      num = num - 4\n \
    \   elseif num >= 1 then\n      roman = roman .. 'i'\n      num = num - 1\n  \
    \  end\n  end\n  return roman\nend", "    local roman_numerals = {\n        {'m',\
    \ 1000},\n        {'cm', 900},\n        {'d', 500},\n        {'cd', 400},\n  \
    \      {'c', 100},\n        {'xc', 90},\n        {'l', 50},\n        {'xl', 40},\n\
    \        {'x', 10},\n        {'ix', 9},\n        {'v', 5},\n        {'iv', 4},\n\
    \        {'i', 1}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local numeral, value = pair[1], pair[2]\n        while number >=\
    \ value do\n            result = result .. numeral\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local roman = \"\
    \"\n    local roman_numerals = {\n        {1000, \"m\"},\n        {900, \"cm\"\
    },\n        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"},\n   \
    \     {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n        {10,\
    \ \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"},\n \
    \       {1, \"i\"}\n    }\n    for _, numeral in ipairs(roman_numerals) do\n \
    \       local value, symbol = numeral[1], numeral[2]\n        while number >=\
    \ value do\n            roman = roman .. symbol\n            number = number -\
    \ value\n        end\n    end\n    return roman\nend", "    local roman_numerals\
    \ = {\n        {'i', 'v'},\n        {'x', 'l'},\n        {'c', 'd'},\n       \
    \ {'m'}\n    }\n    local result = ''\n    local num_str = tostring(number)\n\
    \    local num_len = #num_str\n    for i = 1, num_len do\n        local digit\
    \ = tonumber(num_str:sub(i, i))\n        local roman_numeral = roman_numerals[num_len\
    \ - i + 1]\n        if digit == 9 then\n            result = result .. roman_numeral[1]\
    \ .. roman_numeral[2]\n        elseif digit >= 5 then\n            result = result\
    \ .. roman_numeral[2] .. string.rep(roman_numeral[1], digit - 5)\n        elseif\
    \ digit == 4 then\n            result = result .. roman_numeral[1] .. roman_numeral[2]\n\
    \        else\n            result = result .. string.rep(roman_numeral[1], digit)\n\
    \        end\n    end\n    return result\nend", "    local roman = ''\n    local\
    \ num = number\n    local numeral = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    for i = 1, #numeral do\n        while num >= numeral[i][1] do\n         \
    \   roman = roman .. numeral[i][2]\n            num = num - numeral[i][1]\n  \
    \      end\n    end\n    return roman\nend", "    local result = \"\"\n    local\
    \ num = number\n    local roman_numerals = {\n        {1000, \"m\"},\n       \
    \ {900, \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"},\n        {100,\
    \ \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n\
    \        {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4,\
    \ \"iv\"},\n        {1, \"i\"}\n    }\n    for i = 1, #roman_numerals do\n   \
    \     local arabic, roman = table.unpack(roman_numerals[i])\n        while num\
    \ >= arabic do\n            result = result .. roman\n            num = num -\
    \ arabic\n        end\n    end\n    return result\nend", "  local result = ''\n\
    \  local digits = {'i', 'v', 'x', 'l', 'c', 'd', 'm'}\n  local i = 1\n  while\
    \ number > 0 do\n    local digit = number % 10\n    if digit == 9 then\n     \
    \ result = digits[i] .. digits[i + 2] .. result\n    elseif digit == 4 then\n\
    \      result = digits[i] .. digits[i + 1] .. result\n    else\n      if digit\
    \ >= 5 then\n        result = digits[i + 1] .. result\n        digit = digit -\
    \ 5\n      end\n      result = string.rep(digits[i], digit) .. result\n    end\n\
    \    number = math.floor(number / 10)\n    i = i + 2\n  end\n  return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local roman_numeral = ''\n    for i = 1, #roman_numerals do\n        local\
    \ arabic, roman = unpack(roman_numerals[i])\n        while number >= arabic do\n\
    \            roman_numeral = roman_numeral .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return roman_numeral\nend", "  local roman\
    \ = \"\"\n  local num = number\n  while num > 0 do\n    if num >= 1000 then\n\
    \      roman = roman .. \"m\"\n      num = num - 1000\n    elseif num >= 900 then\n\
    \      roman = roman .. \"cm\"\n      num = num - 900\n    elseif num >= 500 then\n\
    \      roman = roman .. \"d\"\n      num = num - 500\n    elseif num >= 400 then\n\
    \      roman = roman .. \"cd\"\n      num = num - 400\n    elseif num >= 100 then\n\
    \      roman = roman .. \"c\"\n      num = num - 100\n    elseif num >= 90 then\n\
    \      roman = roman .. \"xc\"\n      num = num - 90\n    elseif num >= 50 then\n\
    \      roman = roman .. \"l\"\n      num = num - 50\n    elseif num >= 40 then\n\
    \      roman = roman .. \"xl\"\n      num = num - 40\n    elseif num >= 10 then\n\
    \      roman = roman .. \"x\"\n      num = num - 10\n    elseif num >= 9 then\n\
    \      roman = roman .. \"ix\"\n      num = num - 9\n    elseif num >= 5 then\n\
    \      roman = roman .. \"v\"\n      num = num - 5\n    elseif num >= 4 then\n\
    \      roman = roman .. \"iv\"\n      num = num - 4\n    elseif num >= 1 then\n\
    \      roman = roman .. \"i\"\n      num = num - 1\n    end\n  end\n  return roman\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, letter = numeral[1], numeral[2]\n        while number >= value\
    \ do\n            result = result .. letter\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1], pair[2]\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "  local roman_numeral = ''\n  local roman_numerals = {\n    {1000, 'm'},\n\
    \    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n    {90,\
    \ 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n  \
    \  {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  for i = 1, #roman_numerals\
    \ do\n    local arabic, roman = table.unpack(roman_numerals[i])\n    while number\
    \ >= arabic do\n      roman_numeral = roman_numeral .. roman\n      number = number\
    \ - arabic\n    end\n  end\n  return roman_numeral\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, letter = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ letter\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n\
    \        local value, letter = numeral[1], numeral[2]\n        while number >=\
    \ value do\n            result = result .. letter\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local roman = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman) do\n        local value, letters = pair[1], pair[2]\n\
    \        while number >= value do\n            result = result .. letters\n  \
    \          number = number - value\n        end\n    end\n    return result\n\
    end", "    local roman = {\n        {1000, 'm'},\n        {900, 'cm'},\n     \
    \   {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n\
    \        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for i = 1, #roman do\n        while number >= roman[i][1] do\n   \
    \         result = result .. roman[i][2]\n            number = number - roman[i][1]\n\
    \        end\n    end\n    return result\nend", "  if number < 1 or number > 1000\
    \ then\n    return nil\n  end\n  local roman = ''\n  local num = number\n  while\
    \ num > 0 do\n    if num >= 1000 then\n      roman = roman .. 'm'\n      num =\
    \ num - 1000\n    elseif num >= 900 then\n      roman = roman .. 'cm'\n      num\
    \ = num - 900\n    elseif num >= 500 then\n      roman = roman .. 'd'\n      num\
    \ = num - 500\n    elseif num >= 400 then\n      roman = roman .. 'cd'\n     \
    \ num = num - 400\n    elseif num >= 100 then\n      roman = roman .. 'c'\n  \
    \    num = num - 100\n    elseif num >= 90 then\n      roman = roman .. 'xc'\n\
    \      num = num - 90\n    elseif num >= 50 then\n      roman = roman .. 'l'\n\
    \      num = num - 50\n    elseif num >= 40 then\n      roman = roman .. 'xl'\n\
    \      num = num - 40\n    elseif num >= 10 then\n      roman = roman .. 'x'\n\
    \      num = num - 10\n    elseif num >= 9 then\n      roman = roman .. 'ix'\n\
    \      num = num - 9\n    elseif num >= 5 then\n      roman = roman .. 'v'\n \
    \     num = num - 5\n    elseif num >= 4 then\n      roman = roman .. 'iv'\n \
    \     num = num - 4\n    elseif num >= 1 then\n      roman = roman .. 'i'\n  \
    \    num = num - 1\n    end\n  end\n  return roman\nend", "    local roman = ''\n\
    \    local num = number\n    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    for i = 1, #roman_numerals do\n        local arabic,\
    \ roman_numeral = unpack(roman_numerals[i])\n        while num >= arabic do\n\
    \            roman = roman .. roman_numeral\n            num = num - arabic\n\
    \        end\n    end\n    return roman\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1], pair[2]\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman = \"\"\n    local num = number\n    while num > 0 do\n\
    \        if num >= 1000 then\n            roman = roman .. \"m\"\n           \
    \ num = num - 1000\n        elseif num >= 900 then\n            roman = roman\
    \ .. \"cm\"\n            num = num - 900\n        elseif num >= 500 then\n   \
    \         roman = roman .. \"d\"\n            num = num - 500\n        elseif\
    \ num >= 400 then\n            roman = roman .. \"cd\"\n            num = num\
    \ - 400\n        elseif num >= 100 then\n            roman = roman .. \"c\"\n\
    \            num = num - 100\n        elseif num >= 90 then\n            roman\
    \ = roman .. \"xc\"\n            num = num - 90\n        elseif num >= 50 then\n\
    \            roman = roman .. \"l\"\n            num = num - 50\n        elseif\
    \ num >= 40 then\n            roman = roman .. \"xl\"\n            num = num -\
    \ 40\n        elseif num >= 10 then\n            roman = roman .. \"x\"\n    \
    \        num = num - 10\n        elseif num >= 9 then\n            roman = roman\
    \ .. \"ix\"\n            num = num - 9\n        elseif num >= 5 then\n       \
    \     roman = roman .. \"v\"\n            num = num - 5\n        elseif num >=\
    \ 4 then\n            roman = roman .. \"iv\"\n            num = num - 4\n   \
    \     elseif num >= 1 then\n            roman = roman .. \"i\"\n            num\
    \ = num - 1\n        end\n    end\n    return roman\nend", "    local roman =\
    \ \"\"\n    local num = number\n    while num >= 1000 do\n        roman = roman\
    \ .. \"m\"\n        num = num - 1000\n    end\n    while num >= 900 do\n     \
    \   roman = roman .. \"cm\"\n        num = num - 900\n    end\n    while num >=\
    \ 500 do\n        roman = roman .. \"d\"\n        num = num - 500\n    end\n \
    \   while num >= 400 do\n        roman = roman .. \"cd\"\n        num = num -\
    \ 400\n    end\n    while num >= 100 do\n        roman = roman .. \"c\"\n    \
    \    num = num - 100\n    end\n    while num >= 90 do\n        roman = roman ..\
    \ \"xc\"\n        num = num - 90\n    end\n    while num >= 50 do\n        roman\
    \ = roman .. \"l\"\n        num = num - 50\n    end\n    while num >= 40 do\n\
    \        roman = roman .. \"xl\"\n        num = num - 40\n    end\n    while num\
    \ >= 10 do\n        roman = roman .. \"x\"\n        num = num - 10\n    end\n\
    \    while num >= 9 do\n        roman = roman .. \"ix\"\n        num = num - 9\n\
    \    end\n    while num >= 5 do\n        roman = roman .. \"v\"\n        num =\
    \ num - 5\n    end\n    while num >= 4 do\n        roman = roman .. \"iv\"\n \
    \       num = num - 4\n    end\n    while num >= 1 do\n        roman = roman ..\
    \ \"i\"\n        num = num - 1\n    end\n    return roman\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, letter = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ letter\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n\
    \        local value, symbol = numeral[1], numeral[2]\n        while number >=\
    \ value do\n            result = result .. symbol\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "  local roman = ''\n\
    \  local symbols = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n  \
    \  {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n\
    \    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n\
    \  }\n  for _, symbol in ipairs(symbols) do\n    local value, letter = symbol[1],\
    \ symbol[2]\n    while number >= value do\n      roman = roman .. letter\n   \
    \   number = number - value\n    end\n  end\n  return roman\nend", "    local\
    \ roman = \"\"\n    local num = number\n    while num > 0 do\n        if num >=\
    \ 1000 then\n            roman = roman .. \"m\"\n            num = num - 1000\n\
    \        elseif num >= 900 then\n            roman = roman .. \"cm\"\n       \
    \     num = num - 900\n        elseif num >= 500 then\n            roman = roman\
    \ .. \"d\"\n            num = num - 500\n        elseif num >= 400 then\n    \
    \        roman = roman .. \"cd\"\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            roman = roman .. \"c\"\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            roman = roman .. \"xc\"\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            roman =\
    \ roman .. \"l\"\n            num = num - 50\n        elseif num >= 40 then\n\
    \            roman = roman .. \"xl\"\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            roman = roman .. \"x\"\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            roman = roman .. \"ix\"\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            roman = roman\
    \ .. \"v\"\n            num = num - 5\n        elseif num >= 4 then\n        \
    \    roman = roman .. \"iv\"\n            num = num - 4\n        elseif num >=\
    \ 1 then\n            roman = roman .. \"i\"\n            num = num - 1\n    \
    \    end\n    end\n    return roman\nend", "    local roman_numerals = {\n   \
    \     {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, v in ipairs(roman_numerals)\
    \ do\n        local div = math.floor(number / v[1])\n        if div > 0 then\n\
    \            result = result .. v[2]:rep(div)\n            number = number - v[1]\
    \ * div\n        end\n    end\n    return result\nend", "    local roman = \"\"\
    \n    local i = 1\n    while number > 0 do\n        local digit = number % 10\n\
    \        if digit == 9 then\n            roman = roman .. mini_roman_digits[i]\
    \ .. mini_roman_digits[i + 2]\n        elseif digit == 4 then\n            roman\
    \ = roman .. mini_roman_digits[i] .. mini_roman_digits[i + 1]\n        else\n\
    \            if digit >= 5 then\n                roman = roman .. mini_roman_digits[i\
    \ + 1]\n                digit = digit - 5\n            end\n            for j\
    \ = 1, digit do\n                roman = roman .. mini_roman_digits[i]\n     \
    \       end\n        end\n        number = (number - digit) / 10\n        i =\
    \ i + 2\n    end\n    return roman\nend", "    local roman_numerals = {\n    \
    \    {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        while number >= numeral[1] do\n\
    \            result = result .. numeral[2]\n            number = number - numeral[1]\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, symbol = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ symbol\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman = \"\"\n    local roman_numerals = {\n      \
    \  {1000, \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400,\
    \ \"cd\"},\n        {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n\
    \        {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5,\
    \ \"v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for _, numeral\
    \ in ipairs(roman_numerals) do\n        while number >= numeral[1] do\n      \
    \      roman = roman .. numeral[2]\n            number = number - numeral[1]\n\
    \        end\n    end\n    return roman\nend", "    local roman_numeral = \"\"\
    \n    local roman_symbols = {\n        {1000, \"m\"},\n        {900, \"cm\"},\n\
    \        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"},\n      \
    \  {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n        {10, \"\
    x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"},\n     \
    \   {1, \"i\"}\n    }\n    for _, symbol in ipairs(roman_symbols) do\n       \
    \ local value, letter = symbol[1], symbol[2]\n        while number >= value do\n\
    \            roman_numeral = roman_numeral .. letter\n            number = number\
    \ - value\n        end\n    end\n    return roman_numeral\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, symbol = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ symbol\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman = \"\"\n    local num = number\n    while num\
    \ > 0 do\n        if num >= 1000 then\n            roman = roman .. \"m\"\n  \
    \          num = num - 1000\n        elseif num >= 900 then\n            roman\
    \ = roman .. \"cm\"\n            num = num - 900\n        elseif num >= 500 then\n\
    \            roman = roman .. \"d\"\n            num = num - 500\n        elseif\
    \ num >= 400 then\n            roman = roman .. \"cd\"\n            num = num\
    \ - 400\n        elseif num >= 100 then\n            roman = roman .. \"c\"\n\
    \            num = num - 100\n        elseif num >= 90 then\n            roman\
    \ = roman .. \"xc\"\n            num = num - 90\n        elseif num >= 50 then\n\
    \            roman = roman .. \"l\"\n            num = num - 50\n        elseif\
    \ num >= 40 then\n            roman = roman .. \"xl\"\n            num = num -\
    \ 40\n        elseif num >= 10 then\n            roman = roman .. \"x\"\n    \
    \        num = num - 10\n        elseif num >= 9 then\n            roman = roman\
    \ .. \"ix\"\n            num = num - 9\n        elseif num >= 5 then\n       \
    \     roman = roman .. \"v\"\n            num = num - 5\n        elseif num >=\
    \ 4 then\n            roman = roman .. \"iv\"\n            num = num - 4\n   \
    \     elseif num >= 1 then\n            roman = roman .. \"i\"\n            num\
    \ = num - 1\n        end\n    end\n    return roman\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, symbol = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ symbol\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n\
    \        local arabic, roman = pair[1], pair[2]\n        while number >= arabic\
    \ do\n            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "    local roman = \"\"\n    local\
    \ num = number\n    while num > 0 do\n        if num >= 1000 then\n          \
    \  roman = roman .. \"m\"\n            num = num - 1000\n        elseif num >=\
    \ 900 then\n            roman = roman .. \"cm\"\n            num = num - 900\n\
    \        elseif num >= 500 then\n            roman = roman .. \"d\"\n        \
    \    num = num - 500\n        elseif num >= 400 then\n            roman = roman\
    \ .. \"cd\"\n            num = num - 400\n        elseif num >= 100 then\n   \
    \         roman = roman .. \"c\"\n            num = num - 100\n        elseif\
    \ num >= 90 then\n            roman = roman .. \"xc\"\n            num = num -\
    \ 90\n        elseif num >= 50 then\n            roman = roman .. \"l\"\n    \
    \        num = num - 50\n        elseif num >= 40 then\n            roman = roman\
    \ .. \"xl\"\n            num = num - 40\n        elseif num >= 10 then\n     \
    \       roman = roman .. \"x\"\n            num = num - 10\n        elseif num\
    \ >= 9 then\n            roman = roman .. \"ix\"\n            num = num - 9\n\
    \        elseif num >= 5 then\n            roman = roman .. \"v\"\n          \
    \  num = num - 5\n        elseif num >= 4 then\n            roman = roman .. \"\
    iv\"\n            num = num - 4\n        elseif num >= 1 then\n            roman\
    \ = roman .. \"i\"\n            num = num - 1\n        end\n    end\n    return\
    \ roman\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n\
    \        local value, letters = numeral[1], numeral[2]\n        while number >=\
    \ value do\n            result = result .. letters\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local roman = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman) do\n        local value, symbol = table.unpack(pair)\n\
    \        while number >= value do\n            result = result .. symbol\n   \
    \         number = number - value\n        end\n    end\n    return result\nend",
  "    local roman = \"\"\n    local num = number\n    while num > 0 do\n        if\
    \ num >= 1000 then\n            roman = roman .. \"m\"\n            num = num\
    \ - 1000\n        elseif num >= 900 then\n            roman = roman .. \"cm\"\n\
    \            num = num - 900\n        elseif num >= 500 then\n            roman\
    \ = roman .. \"d\"\n            num = num - 500\n        elseif num >= 400 then\n\
    \            roman = roman .. \"cd\"\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            roman = roman .. \"c\"\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            roman = roman .. \"xc\"\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            roman =\
    \ roman .. \"l\"\n            num = num - 50\n        elseif num >= 40 then\n\
    \            roman = roman .. \"xl\"\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            roman = roman .. \"x\"\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            roman = roman .. \"ix\"\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            roman = roman\
    \ .. \"v\"\n            num = num - 5\n        elseif num >= 4 then\n        \
    \    roman = roman .. \"iv\"\n            num = num - 4\n        elseif num >=\
    \ 1 then\n            roman = roman .. \"i\"\n            num = num - 1\n    \
    \    end\n    end\n    return roman\nend", "    local roman_numeral = \"\"\n \
    \   local number_of_digits = #tostring(number)\n    local digit_value = 1\n  \
    \  for i = 1, number_of_digits do\n        local digit = math.floor(number / digit_value)\
    \ % 10\n        if digit == 9 then\n            roman_numeral = roman_numeral\
    \ .. mini_roman_digits[i] .. mini_roman_digits[i + 1]\n        elseif digit ==\
    \ 4 then\n            roman_numeral = roman_numeral .. mini_roman_digits[i] ..\
    \ mini_roman_digits[i]\n        else\n            local five_digit = digit >=\
    \ 5\n            if five_digit then\n                digit = digit - 5\n     \
    \       end\n            for j = 1, digit do\n                roman_numeral =\
    \ roman_numeral .. mini_roman_digits[i]\n            end\n            if five_digit\
    \ then\n                roman_numeral = roman_numeral .. mini_roman_digits[i]\n\
    \            end\n        end\n        digit_value = digit_value * 10\n    end\n\
    \    return roman_numeral\nend", "    local roman = ''\n    local num = number\n\
    \    while num > 0 do\n        if num >= 1000 then\n            roman = roman\
    \ .. 'm'\n            num = num - 1000\n        elseif num >= 900 then\n     \
    \       roman = roman .. 'cm'\n            num = num - 900\n        elseif num\
    \ >= 500 then\n            roman = roman .. 'd'\n            num = num - 500\n\
    \        elseif num >= 400 then\n            roman = roman .. 'cd'\n         \
    \   num = num - 400\n        elseif num >= 100 then\n            roman = roman\
    \ .. 'c'\n            num = num - 100\n        elseif num >= 90 then\n       \
    \     roman = roman .. 'xc'\n            num = num - 90\n        elseif num >=\
    \ 50 then\n            roman = roman .. 'l'\n            num = num - 50\n    \
    \    elseif num >= 40 then\n            roman = roman .. 'xl'\n            num\
    \ = num - 40\n        elseif num >= 10 then\n            roman = roman .. 'x'\n\
    \            num = num - 10\n        elseif num >= 9 then\n            roman =\
    \ roman .. 'ix'\n            num = num - 9\n        elseif num >= 5 then\n   \
    \         roman = roman .. 'v'\n            num = num - 5\n        elseif num\
    \ >= 4 then\n            roman = roman .. 'iv'\n            num = num - 4\n  \
    \      elseif num >= 1 then\n            roman = roman .. 'i'\n            num\
    \ = num - 1\n        end\n    end\n    return roman\nend", "  local roman_numerals\
    \ = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n\
    \    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n\
    \    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, v in ipairs(roman_numerals) do\n    while number >= v[1] do\n\
    \      result = result .. v[2]\n      number = number - v[1]\n    end\n  end\n\
    \  return result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman =\
    \ \"\"\n    local num = number\n    while num >= 1000 do\n        roman = roman\
    \ .. \"m\"\n        num = num - 1000\n    end\n    while num >= 900 do\n     \
    \   roman = roman .. \"cm\"\n        num = num - 900\n    end\n    while num >=\
    \ 500 do\n        roman = roman .. \"d\"\n        num = num - 500\n    end\n \
    \   while num >= 400 do\n        roman = roman .. \"cd\"\n        num = num -\
    \ 400\n    end\n    while num >= 100 do\n        roman = roman .. \"c\"\n    \
    \    num = num - 100\n    end\n    while num >= 90 do\n        roman = roman ..\
    \ \"xc\"\n        num = num - 90\n    end\n    while num >= 50 do\n        roman\
    \ = roman .. \"l\"\n        num = num - 50\n    end\n    while num >= 40 do\n\
    \        roman = roman .. \"xl\"\n        num = num - 40\n    end\n    while num\
    \ >= 10 do\n        roman = roman .. \"x\"\n        num = num - 10\n    end\n\
    \    while num >= 9 do\n        roman = roman .. \"ix\"\n        num = num - 9\n\
    \    end\n    while num >= 5 do\n        roman = roman .. \"v\"\n        num =\
    \ num - 5\n    end\n    while num >= 4 do\n        roman = roman .. \"iv\"\n \
    \       num = num - 4\n    end\n    while num >= 1 do\n        roman = roman ..\
    \ \"i\"\n        num = num - 1\n    end\n    return roman\nend", "    local roman_numeral\
    \ = ''\n    local roman_numerals = {'m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl',\
    \ 'x', 'ix', 'v', 'iv', 'i'}\n    local numbers = {1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1}\n    for i, numeral in ipairs(numbers) do\n        while\
    \ number >= numeral do\n            roman_numeral = roman_numeral .. roman_numerals[i]\n\
    \            number = number - numeral\n        end\n    end\n    return roman_numeral\n\
    end", "    local roman_numeral = \"\"\n    local roman_numerals = {\n        {1000,\
    \ \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"\
    },\n        {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n     \
    \   {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"\
    v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for _, numeral in\
    \ ipairs(roman_numerals) do\n        while number >= numeral[1] do\n         \
    \   roman_numeral = roman_numeral .. numeral[2]\n            number = number -\
    \ numeral[1]\n        end\n    end\n    return roman_numeral\nend", "    local\
    \ roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500,\
    \ 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n    \
    \    {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, pair in ipairs(roman_numerals) do\n        local arabic, roman\
    \ = pair[1], pair[2]\n        while number >= arabic do\n            result =\
    \ result .. roman\n            number = number - arabic\n        end\n    end\n\
    \    return result\nend", "  local roman_numerals = {\n    {1000, 'm'},\n    {900,\
    \ 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n\
    \    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n\
    \    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result = ''\n  for _, pair in ipairs(roman_numerals)\
    \ do\n    local arabic, roman = table.unpack(pair)\n    while number >= arabic\
    \ do\n      result = result .. roman\n      number = number - arabic\n    end\n\
    \  end\n  return result\nend", "  local roman_numerals = {\n    {1000, 'm'},\n\
    \    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n    {90,\
    \ 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n  \
    \  {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result = ''\n  for i\
    \ = 1, #roman_numerals do\n    local arabic, roman = table.unpack(roman_numerals[i])\n\
    \    while number >= arabic do\n      result = result .. roman\n      number =\
    \ number - arabic\n    end\n  end\n  return result\nend", "    local roman = \"\
    \"\n    local roman_numerals = {\n        {1000, \"m\"},\n        {900, \"cm\"\
    },\n        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"},\n   \
    \     {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n        {10,\
    \ \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"},\n \
    \       {1, \"i\"}\n    }\n    for _, numeral in ipairs(roman_numerals) do\n \
    \       local value, letters = numeral[1], numeral[2]\n        while number >=\
    \ value do\n            roman = roman .. letters\n            number = number\
    \ - value\n        end\n    end\n    return roman\nend", "    local roman = \"\
    \"\n    local values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}\n\
    \    local numerals = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"\
    xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\"}\n    for i = 1, #values do\n      \
    \  while number >= values[i] do\n            roman = roman .. numerals[i]\n  \
    \          number = number - values[i]\n        end\n    end\n    return roman\n\
    end", "    local roman = ''\n    local digits = {1000, 900, 500, 400, 100, 90,\
    \ 50, 40, 10, 9, 5, 4, 1}\n    local roman_digits = {'m', 'cm', 'd', 'cd', 'c',\
    \ 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'}\n    for i, digit in ipairs(digits)\
    \ do\n        while number >= digit do\n            roman = roman .. roman_digits[i]\n\
    \            number = number - digit\n        end\n    end\n    return roman\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, symbol = numeral[1], numeral[2]\n        while number >= value\
    \ do\n            result = result .. symbol\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "  local roman = ''\n  local num\
    \ = number\n  while num > 0 do\n    if num >= 1000 then\n      roman = roman ..\
    \ 'm'\n      num = num - 1000\n    elseif num >= 900 then\n      roman = roman\
    \ .. 'cm'\n      num = num - 900\n    elseif num >= 500 then\n      roman = roman\
    \ .. 'd'\n      num = num - 500\n    elseif num >= 400 then\n      roman = roman\
    \ .. 'cd'\n      num = num - 400\n    elseif num >= 100 then\n      roman = roman\
    \ .. 'c'\n      num = num - 100\n    elseif num >= 90 then\n      roman = roman\
    \ .. 'xc'\n      num = num - 90\n    elseif num >= 50 then\n      roman = roman\
    \ .. 'l'\n      num = num - 50\n    elseif num >= 40 then\n      roman = roman\
    \ .. 'xl'\n      num = num - 40\n    elseif num >= 10 then\n      roman = roman\
    \ .. 'x'\n      num = num - 10\n    elseif num >= 9 then\n      roman = roman\
    \ .. 'ix'\n      num = num - 9\n    elseif num >= 5 then\n      roman = roman\
    \ .. 'v'\n      num = num - 5\n    elseif num >= 4 then\n      roman = roman ..\
    \ 'iv'\n      num = num - 4\n    elseif num >= 1 then\n      roman = roman ..\
    \ 'i'\n      num = num - 1\n    end\n  end\n  return roman\nend", "    local roman_numerals\
    \ = {\n        {'m', 1000},\n        {'cm', 900},\n        {'d', 500},\n     \
    \   {'cd', 400},\n        {'c', 100},\n        {'xc', 90},\n        {'l', 50},\n\
    \        {'xl', 40},\n        {'x', 10},\n        {'ix', 9},\n        {'v', 5},\n\
    \        {'iv', 4},\n        {'i', 1}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local numeral_string, numeral_value\
    \ = numeral[1], numeral[2]\n        while number >= numeral_value do\n       \
    \     result = result .. numeral_string\n            number = number - numeral_value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        while number >= numeral[1] do\n\
    \            result = result .. numeral[2]\n            number = number - numeral[1]\n\
    \        end\n    end\n    return result\nend", "    local roman = ''\n    local\
    \ num = number\n    while num > 0 do\n        if num >= 1000 then\n          \
    \  roman = roman .. 'm'\n            num = num - 1000\n        elseif num >= 900\
    \ then\n            roman = roman .. 'cm'\n            num = num - 900\n     \
    \   elseif num >= 500 then\n            roman = roman .. 'd'\n            num\
    \ = num - 500\n        elseif num >= 400 then\n            roman = roman .. 'cd'\n\
    \            num = num - 400\n        elseif num >= 100 then\n            roman\
    \ = roman .. 'c'\n            num = num - 100\n        elseif num >= 90 then\n\
    \            roman = roman .. 'xc'\n            num = num - 90\n        elseif\
    \ num >= 50 then\n            roman = roman .. 'l'\n            num = num - 50\n\
    \        elseif num >= 40 then\n            roman = roman .. 'xl'\n          \
    \  num = num - 40\n        elseif num >= 10 then\n            roman = roman ..\
    \ 'x'\n            num = num - 10\n        elseif num >= 9 then\n            roman\
    \ = roman .. 'ix'\n            num = num - 9\n        elseif num >= 5 then\n \
    \           roman = roman .. 'v'\n            num = num - 5\n        elseif num\
    \ >= 4 then\n            roman = roman .. 'iv'\n            num = num - 4\n  \
    \      elseif num >= 1 then\n            roman = roman .. 'i'\n            num\
    \ = num - 1\n        end\n    end\n    return roman\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        while number >= numeral[1] do\n\
    \            result = result .. numeral[2]\n            number = number - numeral[1]\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = table.unpack(pair)\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, symbol = numeral[1], numeral[2]\n        while number >= value\
    \ do\n            result = result .. symbol\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, letter = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ letter\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local roman_numeral = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        while number >= numeral[1] do\n            roman_numeral = roman_numeral\
    \ .. numeral[2]\n            number = number - numeral[1]\n        end\n    end\n\
    \    return roman_numeral\nend", "    local roman_numeral = ''\n    local num\
    \ = number\n    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    for _, v in ipairs(roman_numerals) do\n        while num >= v[1] do\n\
    \            roman_numeral = roman_numeral .. v[2]\n            num = num - v[1]\n\
    \        end\n    end\n    return roman_numeral\nend", "  local result = ''\n\
    \  local numeral_map = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n\
    \    {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40,\
    \ 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1,\
    \ 'i'},\n  }\n  for _, pair in ipairs(numeral_map) do\n    local value, numeral\
    \ = pair[1], pair[2]\n    while number >= value do\n      result = result .. numeral\n\
    \      number = number - value\n    end\n  end\n  return result\nend", "    local\
    \ roman_numeral = \"\"\n    local num_to_roman = {\n        [1] = \"i\",\n   \
    \     [2] = \"ii\",\n        [3] = \"iii\",\n        [4] = \"iv\",\n        [5]\
    \ = \"v\",\n        [6] = \"vi\",\n        [7] = \"vii\",\n        [8] = \"viii\"\
    ,\n        [9] = \"ix\",\n        [10] = \"x\",\n        [20] = \"xx\",\n    \
    \    [30] = \"xxx\",\n        [40] = \"xl\",\n        [50] = \"l\",\n        [60]\
    \ = \"lx\",\n        [70] = \"lxx\",\n        [80] = \"lxxx\",\n        [90] =\
    \ \"xc\",\n        [100] = \"c\",\n        [200] = \"cc\",\n        [300] = \"\
    ccc\",\n        [400] = \"cd\",\n        [500] = \"d\",\n        [600] = \"dc\"\
    ,\n        [700] = \"dcc\",\n        [800] = \"dccc\",\n        [900] = \"cm\"\
    ,\n        [1000] = \"m\",\n    }\n    local number_string = tostring(number)\n\
    \    local length = string.len(number_string)\n    for i = 1, length do\n    \
    \    local digit = tonumber(string.sub(number_string, i, i))\n        local power\
    \ = 10 ^ (length - i)\n        local roman_digit = num_to_roman[digit * power]\n\
    \        roman_numeral = roman_numeral .. roman_digit\n    end\n    return roman_numeral\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, letter = unpack(numeral)\n        while number >= value do\n\
    \            result = result .. letter\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = table.unpack(pair)\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local roman_string = ''\n    for _, pair in ipairs(roman_numerals) do\n \
    \       local value = pair[1]\n        local numeral = pair[2]\n        while\
    \ number >= value do\n            roman_string = roman_string .. numeral\n   \
    \         number = number - value\n        end\n    end\n    return roman_string\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = table.unpack(pair)\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, symbol = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ symbol\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman = \"\"\n    local num = number\n    while num\
    \ > 0 do\n        local digit = num % 10\n        if digit == 9 then\n       \
    \     roman = \"ix\" .. roman\n        elseif digit >= 5 then\n            roman\
    \ = \"v\" .. string.rep(\"i\", digit - 5) .. roman\n        elseif digit == 4\
    \ then\n            roman = \"iv\" .. roman\n        else\n            roman =\
    \ string.rep(\"i\", digit) .. roman\n        end\n        num = math.floor(num\
    \ / 10)\n    end\n    return roman\nend", "    local roman_numerals = {\n    \
    \    {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, symbol = numeral[1], numeral[2]\n        while number\
    \ >= value do\n            result = result .. symbol\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "  local roman_numerals\
    \ = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n\
    \    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n\
    \    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, numeral in ipairs(roman_numerals) do\n    while number >= numeral[1]\
    \ do\n      result = result .. numeral[2]\n      number = number - numeral[1]\n\
    \    end\n  end\n  return result\nend", "    local roman = \"\"\n    local roman_numerals\
    \ = {\n        {1000, \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n\
    \        {400, \"cd\"},\n        {100, \"c\"},\n        {90, \"xc\"},\n      \
    \  {50, \"l\"},\n        {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"\
    },\n        {5, \"v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n   \
    \ for _, numeral in ipairs(roman_numerals) do\n        local value, letters =\
    \ numeral[1], numeral[2]\n        while number >= value do\n            roman\
    \ = roman .. letters\n            number = number - value\n        end\n    end\n\
    \    return roman\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, letter = unpack(numeral)\n        while number >= value\
    \ do\n            result = result .. letter\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = table.unpack(pair)\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = table.unpack(pair)\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_numeral = ''\n  \
    \  for _, pair in ipairs(roman_numerals) do\n        local arabic, numeral = pair[1],\
    \ pair[2]\n        while number >= arabic do\n            roman_numeral = roman_numeral\
    \ .. numeral\n            number = number - arabic\n        end\n    end\n   \
    \ return roman_numeral\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        while number >= numeral[1] do\n            result = result .. numeral[2]\n\
    \            number = number - numeral[1]\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {'m', 1000},\n        {'cm', 900},\n\
    \        {'d', 500},\n        {'cd', 400},\n        {'c', 100},\n        {'xc',\
    \ 90},\n        {'l', 50},\n        {'xl', 40},\n        {'x', 10},\n        {'ix',\
    \ 9},\n        {'v', 5},\n        {'iv', 4},\n        {'i', 1}\n    }\n    local\
    \ result = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local\
    \ numeral_string, value = numeral[1], numeral[2]\n        while number >= value\
    \ do\n            result = result .. numeral_string\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "  local roman = ''\n\
    \  local i = 1\n  while number > 0 do\n    local digit = number % 10\n    if digit\
    \ == 9 then\n      roman = roman .. mini_roman_digits[i][9]\n    elseif digit\
    \ >= 5 then\n      roman = roman .. mini_roman_digits[i][5]\n      for j = 1,\
    \ digit - 5 do\n        roman = roman .. mini_roman_digits[i][1]\n      end\n\
    \    elseif digit == 4 then\n      roman = roman .. mini_roman_digits[i][4]\n\
    \    else\n      for j = 1, digit do\n        roman = roman .. mini_roman_digits[i][1]\n\
    \      end\n    end\n    number = math.floor(number / 10)\n    i = i + 1\n  end\n\
    \  return roman\nend", "    local roman_numerals = {\n        {1000, 'm'},\n \
    \       {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = table.unpack(pair)\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, symbol = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ symbol\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n\
    \        local value, symbol = unpack(numeral)\n        while number >= value\
    \ do\n            result = result .. symbol\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = table.unpack(pair)\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = pair[1], pair[2]\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "  local roman_numerals = {\n\
    \    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100,\
    \ 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n  \
    \  {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, pair in ipairs(roman_numerals) do\n    local arabic, roman =\
    \ pair[1], pair[2]\n    while number >= arabic do\n      result = result .. roman\n\
    \      number = number - arabic\n    end\n  end\n  return result\nend", "  local\
    \ roman = ''\n  local digits = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5,\
    \ 4, 1}\n  local letters = {'m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix',\
    \ 'v', 'iv', 'i'}\n  for i = 1, #digits do\n    while number >= digits[i] do\n\
    \      roman = roman .. letters[i]\n      number = number - digits[i]\n    end\n\
    \  end\n  return roman\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, letter = numeral[1], numeral[2]\n        while number\
    \ >= value do\n            result = result .. letter\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "  local roman_numerals\
    \ = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n\
    \    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n\
    \    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local roman_numeral\
    \ = ''\n  for _, pair in ipairs(roman_numerals) do\n    local div = math.floor(number\
    \ / pair[1])\n    if div > 0 then\n      roman_numeral = roman_numeral .. string.rep(pair[2],\
    \ div)\n      number = number - div * pair[1]\n    end\n  end\n  return roman_numeral\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, letter = numeral[1], numeral[2]\n        while number >= value\
    \ do\n            result = result .. letter\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, letter = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ letter\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local roman_string = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local decimal, roman = pair[1], pair[2]\n        while number >=\
    \ decimal do\n            roman_string = roman_string .. roman\n            number\
    \ = number - decimal\n        end\n    end\n    return roman_string\nend", " \
    \   local roman = \"\"\n    local num = number\n    while num > 0 do\n       \
    \ if num >= 1000 then\n            roman = roman .. \"m\"\n            num = num\
    \ - 1000\n        elseif num >= 900 then\n            roman = roman .. \"cm\"\n\
    \            num = num - 900\n        elseif num >= 500 then\n            roman\
    \ = roman .. \"d\"\n            num = num - 500\n        elseif num >= 400 then\n\
    \            roman = roman .. \"cd\"\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            roman = roman .. \"c\"\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            roman = roman .. \"xc\"\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            roman =\
    \ roman .. \"l\"\n            num = num - 50\n        elseif num >= 40 then\n\
    \            roman = roman .. \"xl\"\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            roman = roman .. \"x\"\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            roman = roman .. \"ix\"\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            roman = roman\
    \ .. \"v\"\n            num = num - 5\n        elseif num >= 4 then\n        \
    \    roman = roman .. \"iv\"\n            num = num - 4\n        elseif num >=\
    \ 1 then\n            roman = roman .. \"i\"\n            num = num - 1\n    \
    \    end\n    end\n    return roman\nend", "    local roman_numerals = {\n   \
    \     {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local result =\
    \ ''\n    local num = number\n    local numeral = {\n        {'m', 1000},\n  \
    \      {'cm', 900},\n        {'d', 500},\n        {'cd', 400},\n        {'c',\
    \ 100},\n        {'xc', 90},\n        {'l', 50},\n        {'xl', 40},\n      \
    \  {'x', 10},\n        {'ix', 9},\n        {'v', 5},\n        {'iv', 4},\n   \
    \     {'i', 1}\n    }\n    for i = 1, #numeral do\n        while num >= numeral[i][2]\
    \ do\n            result = result .. numeral[i][1]\n            num = num - numeral[i][2]\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_numeral = ''\n  \
    \  for _, pair in ipairs(roman_numerals) do\n        local decimal, numeral =\
    \ unpack(pair)\n        while number >= decimal do\n            roman_numeral\
    \ = roman_numeral .. numeral\n            number = number - decimal\n        end\n\
    \    end\n    return roman_numeral\nend", "    local roman_numerals = {\n    \
    \    {'m', 1000},\n        {'cm', 900},\n        {'d', 500},\n        {'cd', 400},\n\
    \        {'c', 100},\n        {'xc', 90},\n        {'l', 50},\n        {'xl',\
    \ 40},\n        {'x', 10},\n        {'ix', 9},\n        {'v', 5},\n        {'iv',\
    \ 4},\n        {'i', 1}\n    }\n    local roman_numeral = ''\n    for i = 1, #roman_numerals\
    \ do\n        local numeral, value = roman_numerals[i][1], roman_numerals[i][2]\n\
    \        while number >= value do\n            roman_numeral = roman_numeral ..\
    \ numeral\n            number = number - value\n        end\n    end\n    return\
    \ roman_numeral\nend", "    local roman_numerals = {\n        {1000, 'm'},\n \
    \       {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, symbol = numeral[1], numeral[2]\n        while number\
    \ >= value do\n            result = result .. symbol\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        while number >= numeral[1] do\n\
    \            result = result .. numeral[2]\n            number = number - numeral[1]\n\
    \        end\n    end\n    return result\nend", "  local roman = \"\"\n  local\
    \ num = number\n  while num > 0 do\n    if num >= 1000 then\n      roman = roman\
    \ .. \"m\"\n      num = num - 1000\n    elseif num >= 900 then\n      roman =\
    \ roman .. \"cm\"\n      num = num - 900\n    elseif num >= 500 then\n      roman\
    \ = roman .. \"d\"\n      num = num - 500\n    elseif num >= 400 then\n      roman\
    \ = roman .. \"cd\"\n      num = num - 400\n    elseif num >= 100 then\n     \
    \ roman = roman .. \"c\"\n      num = num - 100\n    elseif num >= 90 then\n \
    \     roman = roman .. \"xc\"\n      num = num - 90\n    elseif num >= 50 then\n\
    \      roman = roman .. \"l\"\n      num = num - 50\n    elseif num >= 40 then\n\
    \      roman = roman .. \"xl\"\n      num = num - 40\n    elseif num >= 10 then\n\
    \      roman = roman .. \"x\"\n      num = num - 10\n    elseif num >= 9 then\n\
    \      roman = roman .. \"ix\"\n      num = num - 9\n    elseif num >= 5 then\n\
    \      roman = roman .. \"v\"\n      num = num - 5\n    elseif num >= 4 then\n\
    \      roman = roman .. \"iv\"\n      num = num - 4\n    elseif num >= 1 then\n\
    \      roman = roman .. \"i\"\n      num = num - 1\n    end\n  end\n  return roman\n\
    end", "    local roman_numerals = {\n        {'m', 1000},\n        {'cm', 900},\n\
    \        {'d', 500},\n        {'cd', 400},\n        {'c', 100},\n        {'xc',\
    \ 90},\n        {'l', 50},\n        {'xl', 40},\n        {'x', 10},\n        {'ix',\
    \ 9},\n        {'v', 5},\n        {'iv', 4},\n        {'i', 1}\n    }\n    local\
    \ roman_string = ''\n    for _, numeral in ipairs(roman_numerals) do\n       \
    \ local roman, value = numeral[1], numeral[2]\n        while number >= value do\n\
    \            roman_string = roman_string .. roman\n            number = number\
    \ - value\n        end\n    end\n    return roman_string\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_numeral = ''\n \
    \   for _, pair in ipairs(roman_numerals) do\n        local arabic, numeral =\
    \ table.unpack(pair)\n        while number >= arabic do\n            roman_numeral\
    \ = roman_numeral .. numeral\n            number = number - arabic\n        end\n\
    \    end\n    return roman_numeral\nend", "  local roman_numerals = {\n    {1000,\
    \ 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n\
    \    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n\
    \    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result = ''\n  for\
    \ _, pair in ipairs(roman_numerals) do\n    local arabic, roman = pair[1], pair[2]\n\
    \    while number >= arabic do\n      result = result .. roman\n      number =\
    \ number - arabic\n    end\n  end\n  return result\nend", "    local roman_numeral\
    \ = \"\"\n    local numeral_table = {\n        {1000, \"m\"},\n        {900, \"\
    cm\"},\n        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"},\n\
    \        {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n        {10,\
    \ \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"},\n \
    \       {1, \"i\"}\n    }\n    for i = 1, #numeral_table do\n        while number\
    \ >= numeral_table[i][1] do\n            roman_numeral = roman_numeral .. numeral_table[i][2]\n\
    \            number = number - numeral_table[i][1]\n        end\n    end\n   \
    \ return roman_numeral\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, letter = numeral[1], numeral[2]\n        while number\
    \ >= value do\n            result = result .. letter\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_numeral = ''\n \
    \   for _, pair in ipairs(roman_numerals) do\n        local arabic, numeral =\
    \ table.unpack(pair)\n        while number >= arabic do\n            roman_numeral\
    \ = roman_numeral .. numeral\n            number = number - arabic\n        end\n\
    \    end\n    return roman_numeral\nend", "    local roman_numerals = {\n    \
    \    {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_numeral = ''\n \
    \   for _, pair in ipairs(roman_numerals) do\n        local arabic, numeral =\
    \ table.unpack(pair)\n        while number >= arabic do\n            roman_numeral\
    \ = roman_numeral .. numeral\n            number = number - arabic\n        end\n\
    \    end\n    return roman_numeral\nend", "  local roman_numerals = {\n    {1000,\
    \ 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n\
    \    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n\
    \    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result = ''\n  for\
    \ _, pair in ipairs(roman_numerals) do\n    local arabic, roman = table.unpack(pair)\n\
    \    while number >= arabic do\n      result = result .. roman\n      number =\
    \ number - arabic\n    end\n  end\n  return result\nend", "    local result =\
    \ ''\n    local num = number\n    while num > 0 do\n        if num >= 1000 then\n\
    \            result = result .. 'm'\n            num = num - 1000\n        elseif\
    \ num >= 900 then\n            result = result .. 'cm'\n            num = num\
    \ - 900\n        elseif num >= 500 then\n            result = result .. 'd'\n\
    \            num = num - 500\n        elseif num >= 400 then\n            result\
    \ = result .. 'cd'\n            num = num - 400\n        elseif num >= 100 then\n\
    \            result = result .. 'c'\n            num = num - 100\n        elseif\
    \ num >= 90 then\n            result = result .. 'xc'\n            num = num -\
    \ 90\n        elseif num >= 50 then\n            result = result .. 'l'\n    \
    \        num = num - 50\n        elseif num >= 40 then\n            result = result\
    \ .. 'xl'\n            num = num - 40\n        elseif num >= 10 then\n       \
    \     result = result .. 'x'\n            num = num - 10\n        elseif num >=\
    \ 9 then\n            result = result .. 'ix'\n            num = num - 9\n   \
    \     elseif num >= 5 then\n            result = result .. 'v'\n            num\
    \ = num - 5\n        elseif num >= 4 then\n            result = result .. 'iv'\n\
    \            num = num - 4\n        elseif num >= 1 then\n            result =\
    \ result .. 'i'\n            num = num - 1\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = table.unpack(pair)\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, letter = unpack(numeral)\n\
    \        while number >= value do\n            result = result .. letter\n   \
    \         number = number - value\n        end\n    end\n    return result\nend",
  "  local roman_numerals = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n\
    \    {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40,\
    \ 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1,\
    \ 'i'}\n  }\n  local result = ''\n  for i = 1, #roman_numerals do\n    local arabic,\
    \ roman = table.unpack(roman_numerals[i])\n    while number >= arabic do\n   \
    \   result = result .. roman\n      number = number - arabic\n    end\n  end\n\
    \  return result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = table.unpack(pair)\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        while number >= numeral[1] do\n\
    \            result = result .. numeral[2]\n            number = number - numeral[1]\n\
    \        end\n    end\n    return result\nend", "    local roman = \"\"\n    local\
    \ numbers = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}\n    local\
    \ romans = {\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\"\
    , \"ix\", \"v\", \"iv\", \"i\"}\n    for i = 1, #numbers do\n        while number\
    \ >= numbers[i] do\n            roman = roman .. romans[i]\n            number\
    \ = number - numbers[i]\n        end\n    end\n    return roman\nend", "    local\
    \ roman = \"\"\n    local num = number\n    while num > 0 do\n        if num >=\
    \ 1000 then\n            roman = roman .. \"m\"\n            num = num - 1000\n\
    \        elseif num >= 900 then\n            roman = roman .. \"cm\"\n       \
    \     num = num - 900\n        elseif num >= 500 then\n            roman = roman\
    \ .. \"d\"\n            num = num - 500\n        elseif num >= 400 then\n    \
    \        roman = roman .. \"cd\"\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            roman = roman .. \"c\"\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            roman = roman .. \"xc\"\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            roman =\
    \ roman .. \"l\"\n            num = num - 50\n        elseif num >= 40 then\n\
    \            roman = roman .. \"xl\"\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            roman = roman .. \"x\"\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            roman = roman .. \"ix\"\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            roman = roman\
    \ .. \"v\"\n            num = num - 5\n        elseif num >= 4 then\n        \
    \    roman = roman .. \"iv\"\n            num = num - 4\n        elseif num >=\
    \ 1 then\n            roman = roman .. \"i\"\n            num = num - 1\n    \
    \    end\n    end\n    return roman\nend", "    local roman_numerals = {\n   \
    \     {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        local value, symbol = numeral[1], numeral[2]\n        while number\
    \ >= value do\n            result = result .. symbol\n            number = number\
    \ - value\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local value, letter = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            result = result ..\
    \ letter\n            number = number - value\n        end\n    end\n    return\
    \ result\nend", "    local roman_numeral = \"\"\n    local numeral_table = {\n\
    \        {1000, \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n     \
    \   {400, \"cd\"},\n        {100, \"c\"},\n        {90, \"xc\"},\n        {50,\
    \ \"l\"},\n        {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n\
    \        {5, \"v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for\
    \ _, numeral in ipairs(numeral_table) do\n        local value, symbol = numeral[1],\
    \ numeral[2]\n        while number >= value do\n            roman_numeral = roman_numeral\
    \ .. symbol\n            number = number - value\n        end\n    end\n    return\
    \ roman_numeral\nend", "  local roman_numerals = {\n    {1000, 'm'},\n    {900,\
    \ 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n\
    \    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n\
    \    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result = ''\n  for _, pair in ipairs(roman_numerals)\
    \ do\n    local arabic, roman = pair[1], pair[2]\n    while number >= arabic do\n\
    \      result = result .. roman\n      number = number - arabic\n    end\n  end\n\
    \  return result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "  local roman_numerals\
    \ = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n\
    \    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n\
    \    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, pair in ipairs(roman_numerals) do\n    local arabic, roman =\
    \ pair[1], pair[2]\n    while number >= arabic do\n      result = result .. roman\n\
    \      number = number - arabic\n    end\n  end\n  return result\nend", "    local\
    \ roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500,\
    \ 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n    \
    \    {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local value,\
    \ symbol = numeral[1], numeral[2]\n        while number >= value do\n        \
    \    result = result .. symbol\n            number = number - value\n        end\n\
    \    end\n    return result\nend", "    local roman_numerals = {\n        {1000,\
    \ 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n   \
    \     {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = table.unpack(pair)\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local result =\
    \ \"\"\n    local num = number\n    while num > 0 do\n        if num >= 1000 then\n\
    \            result = result .. \"m\"\n            num = num - 1000\n        elseif\
    \ num >= 900 then\n            result = result .. \"cm\"\n            num = num\
    \ - 900\n        elseif num >= 500 then\n            result = result .. \"d\"\n\
    \            num = num - 500\n        elseif num >= 400 then\n            result\
    \ = result .. \"cd\"\n            num = num - 400\n        elseif num >= 100 then\n\
    \            result = result .. \"c\"\n            num = num - 100\n        elseif\
    \ num >= 90 then\n            result = result .. \"xc\"\n            num = num\
    \ - 90\n        elseif num >= 50 then\n            result = result .. \"l\"\n\
    \            num = num - 50\n        elseif num >= 40 then\n            result\
    \ = result .. \"xl\"\n            num = num - 40\n        elseif num >= 10 then\n\
    \            result = result .. \"x\"\n            num = num - 10\n        elseif\
    \ num >= 9 then\n            result = result .. \"ix\"\n            num = num\
    \ - 9\n        elseif num >= 5 then\n            result = result .. \"v\"\n  \
    \          num = num - 5\n        elseif num >= 4 then\n            result = result\
    \ .. \"iv\"\n            num = num - 4\n        elseif num >= 1 then\n       \
    \     result = result .. \"i\"\n            num = num - 1\n        end\n    end\n\
    \    return result\nend", "    local numeral = \"\"\n    local numeral_table =\
    \ {\n        { \"m\", 1000 },\n        { \"cm\", 900 },\n        { \"d\", 500\
    \ },\n        { \"cd\", 400 },\n        { \"c\", 100 },\n        { \"xc\", 90\
    \ },\n        { \"l\", 50 },\n        { \"xl\", 40 },\n        { \"x\", 10 },\n\
    \        { \"ix\", 9 },\n        { \"v\", 5 },\n        { \"iv\", 4 },\n     \
    \   { \"i\", 1 }\n    }\n    for i = 1, #numeral_table do\n        while number\
    \ >= numeral_table[i][2] do\n            numeral = numeral .. numeral_table[i][1]\n\
    \            number = number - numeral_table[i][2]\n        end\n    end\n   \
    \ return numeral\nend", "    local roman_numerals = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        while number >= numeral[1] do\n            result = result .. numeral[2]\n\
    \            number = number - numeral[1]\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    local numeral_map = {\n        {1000, \"m\"\
    },\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"},\n  \
    \      {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n        {40,\
    \ \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n\
    \        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for _, numeral in ipairs(numeral_map)\
    \ do\n        local arabic, roman = numeral[1], numeral[2]\n        while number\
    \ >= arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numeral\
    \ = \"\"\n    local num = number\n    local numeral_table = {\n        {1000,\
    \ \"m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"\
    },\n        {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n     \
    \   {40, \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"\
    v\"},\n        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for i = 1, #numeral_table\
    \ do\n        while num >= numeral_table[i][1] do\n            roman_numeral =\
    \ roman_numeral .. numeral_table[i][2]\n            num = num - numeral_table[i][1]\n\
    \        end\n    end\n    return roman_numeral\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1], pair[2]\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local roman_numeral = ''\n    for _, pair in ipairs(roman_numerals) do\n\
    \        local arabic, numeral = table.unpack(pair)\n        while number >= arabic\
    \ do\n            roman_numeral = roman_numeral .. numeral\n            number\
    \ = number - arabic\n        end\n    end\n    return roman_numeral\nend", " \
    \   local result = ''\n    local num = number\n    while num > 0 do\n        if\
    \ num >= 1000 then\n            result = result .. 'm'\n            num = num\
    \ - 1000\n        elseif num >= 900 then\n            result = result .. 'cm'\n\
    \            num = num - 900\n        elseif num >= 500 then\n            result\
    \ = result .. 'd'\n            num = num - 500\n        elseif num >= 400 then\n\
    \            result = result .. 'cd'\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            result = result .. 'c'\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            result = result .. 'xc'\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            result =\
    \ result .. 'l'\n            num = num - 50\n        elseif num >= 40 then\n \
    \           result = result .. 'xl'\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            result = result .. 'x'\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            result = result .. 'ix'\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            result = result\
    \ .. 'v'\n            num = num - 5\n        elseif num >= 4 then\n          \
    \  result = result .. 'iv'\n            num = num - 4\n        elseif num >= 1\
    \ then\n            result = result .. 'i'\n            num = num - 1\n      \
    \  end\n    end\n    return result\nend", "  local result = \"\"\n  local num\
    \ = number\n  while num > 0 do\n    if num >= 1000 then\n      result = result\
    \ .. \"m\"\n      num = num - 1000\n    elseif num >= 900 then\n      result =\
    \ result .. \"cm\"\n      num = num - 900\n    elseif num >= 500 then\n      result\
    \ = result .. \"d\"\n      num = num - 500\n    elseif num >= 400 then\n     \
    \ result = result .. \"cd\"\n      num = num - 400\n    elseif num >= 100 then\n\
    \      result = result .. \"c\"\n      num = num - 100\n    elseif num >= 90 then\n\
    \      result = result .. \"xc\"\n      num = num - 90\n    elseif num >= 50 then\n\
    \      result = result .. \"l\"\n      num = num - 50\n    elseif num >= 40 then\n\
    \      result = result .. \"xl\"\n      num = num - 40\n    elseif num >= 10 then\n\
    \      result = result .. \"x\"\n      num = num - 10\n    elseif num >= 9 then\n\
    \      result = result .. \"ix\"\n      num = num - 9\n    elseif num >= 5 then\n\
    \      result = result .. \"v\"\n      num = num - 5\n    elseif num >= 4 then\n\
    \      result = result .. \"iv\"\n      num = num - 4\n    elseif num >= 1 then\n\
    \      result = result .. \"i\"\n      num = num - 1\n    end\n  end\n  return\
    \ result\nend", "    local roman_numerals = {\n        {1000, 'm'},\n        {900,\
    \ 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n   \
    \     {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n\
    \        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n\
    \    }\n    local result = ''\n    for _, v in ipairs(roman_numerals) do\n   \
    \     while number >= v[1] do\n            result = result .. v[2]\n         \
    \   number = number - v[1]\n        end\n    end\n    return result\nend", " \
    \   local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n   \
    \     {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n\
    \        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local value,\
    \ symbol = numeral[1], numeral[2]\n        while number >= value do\n        \
    \    result = result .. symbol\n            number = number - value\n        end\n\
    \    end\n    return result\nend", "    local roman_numerals = {\n        {1000,\
    \ 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n   \
    \     {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        while number >= numeral[1] do\n            result = result .. numeral[2]\n\
    \            number = number - numeral[1]\n        end\n    end\n    return result\n\
    end", "    local result = ''\n    local numeral_map = {\n        {1000, 'm'},\n\
    \        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'},\n    }\n    for _, numeral in ipairs(numeral_map) do\n       \
    \ while number >= numeral[1] do\n            result = result .. numeral[2]\n \
    \           number = number - numeral[1]\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {'i', 'v'},\n        {'x', 'l'},\n\
    \        {'c', 'd'},\n        {'m'}\n    }\n    local roman_numeral = ''\n   \
    \ local num = number\n    local digit = 0\n    while num > 0 do\n        local\
    \ digit_value = num % 10\n        local digit_numeral = ''\n        if digit_value\
    \ == 9 then\n            digit_numeral = roman_numerals[digit + 1][1] .. roman_numerals[digit\
    \ + 2][1]\n        elseif digit_value >= 5 then\n            digit_numeral = roman_numerals[digit\
    \ + 1][2]\n            for i = 6, digit_value do\n                digit_numeral\
    \ = digit_numeral .. roman_numerals[digit + 1][1]\n            end\n        elseif\
    \ digit_value == 4 then\n            digit_numeral = roman_numerals[digit + 1][1]\
    \ .. roman_numerals[digit + 1][2]\n        else\n            for i = 1, digit_value\
    \ do\n                digit_numeral = digit_numeral .. roman_numerals[digit +\
    \ 1][1]\n            end\n        end\n        roman_numeral = digit_numeral ..\
    \ roman_numeral\n        num = math.floor(num / 10)\n        digit = digit + 1\n\
    \    end\n    return roman_numeral\nend", "    local result = ''\n    local num\
    \ = number\n    local numeral_map = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'},\n    }\n\
    \    for _, numeral in ipairs(numeral_map) do\n        local arabic, roman = table.unpack(numeral)\n\
    \        while num >= arabic do\n            result = result .. roman\n      \
    \      num = num - arabic\n        end\n    end\n    return result\nend", "  \
    \  local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n    \
    \    {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n\
    \        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local value,\
    \ letters = numeral[1], numeral[2]\n        while number >= value do\n       \
    \     result = result .. letters\n            number = number - value\n      \
    \  end\n    end\n    return result\nend", "    local roman_numerals = {\n    \
    \    {'m', 1000},\n        {'d', 500},\n        {'c', 100},\n        {'l', 50},\n\
    \        {'x', 10},\n        {'v', 5},\n        {'i', 1}\n    }\n    local result\
    \ = ''\n    for i = 1, #roman_numerals do\n        local numeral, value = unpack(roman_numerals[i])\n\
    \        local count = math.floor(number / value)\n        result = result ..\
    \ numeral:rep(count)\n        number = number % value\n    end\n    return result\n\
    end", "  local roman = ''\n  local num = number\n  local numeral = {'m', 'cm',\
    \ 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'}\n  local value =\
    \ {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}\n  for i = 1, #value\
    \ do\n    while num >= value[i] do\n      roman = roman .. numeral[i]\n      num\
    \ = num - value[i]\n    end\n  end\n  return roman\nend", "    local result =\
    \ ''\n    local num = number\n    while num > 0 do\n        if num >= 1000 then\n\
    \            result = result .. 'm'\n            num = num - 1000\n        elseif\
    \ num >= 900 then\n            result = result .. 'cm'\n            num = num\
    \ - 900\n        elseif num >= 500 then\n            result = result .. 'd'\n\
    \            num = num - 500\n        elseif num >= 400 then\n            result\
    \ = result .. 'cd'\n            num = num - 400\n        elseif num >= 100 then\n\
    \            result = result .. 'c'\n            num = num - 100\n        elseif\
    \ num >= 90 then\n            result = result .. 'xc'\n            num = num -\
    \ 90\n        elseif num >= 50 then\n            result = result .. 'l'\n    \
    \        num = num - 50\n        elseif num >= 40 then\n            result = result\
    \ .. 'xl'\n            num = num - 40\n        elseif num >= 10 then\n       \
    \     result = result .. 'x'\n            num = num - 10\n        elseif num >=\
    \ 9 then\n            result = result .. 'ix'\n            num = num - 9\n   \
    \     elseif num >= 5 then\n            result = result .. 'v'\n            num\
    \ = num - 5\n        elseif num >= 4 then\n            result = result .. 'iv'\n\
    \            num = num - 4\n        elseif num >= 1 then\n            result =\
    \ result .. 'i'\n            num = num - 1\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = table.unpack(pair)\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = table.unpack(pair)\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, letter = numeral[1], numeral[2]\n        while number >= value\
    \ do\n            result = result .. letter\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "  local roman_numerals = {\n\
    \    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100,\
    \ 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n  \
    \  {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, pair in ipairs(roman_numerals) do\n    local arabic, roman =\
    \ table.unpack(pair)\n    while number >= arabic do\n      result = result ..\
    \ roman\n      number = number - arabic\n    end\n  end\n  return result\nend",
  "  local roman_numeral = \"\"\n  local roman_numerals = {\n    {1000, \"m\"},\n\
    \    {900, \"cm\"},\n    {500, \"d\"},\n    {400, \"cd\"},\n    {100, \"c\"},\n\
    \    {90, \"xc\"},\n    {50, \"l\"},\n    {40, \"xl\"},\n    {10, \"x\"},\n  \
    \  {9, \"ix\"},\n    {5, \"v\"},\n    {4, \"iv\"},\n    {1, \"i\"}\n  }\n  for\
    \ _, pair in ipairs(roman_numerals) do\n    local arabic, roman = pair[1], pair[2]\n\
    \    while number >= arabic do\n      roman_numeral = roman_numeral .. roman\n\
    \      number = number - arabic\n    end\n  end\n  return roman_numeral\nend",
  "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n    \
    \    {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n\
    \        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = \"\"\n    for _, numeral in ipairs(roman_numerals) do\n        local value,\
    \ symbol = numeral[1], numeral[2]\n        while number >= value do\n        \
    \    result = result .. symbol\n            number = number - value\n        end\n\
    \    end\n    return result\nend", "    local roman_numerals = {\n        {1000,\
    \ 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n   \
    \     {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, numeral in ipairs(roman_numerals)\
    \ do\n        while number >= numeral[1] do\n            result = result .. numeral[2]\n\
    \            number = number - numeral[1]\n        end\n    end\n    return result\n\
    end", "    local roman = ''\n    local num = number\n    local numeral = {\n \
    \       {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    for i = 1, #numeral do\n    \
    \    local div = math.floor(num / numeral[i][1])\n        num = num - div * numeral[i][1]\n\
    \        roman = roman .. numeral[i][2]:rep(div)\n    end\n    return roman\n\
    end", "  local result = \"\"\n  local num = number\n  local numeral = {\n    {1000,\
    \ \"m\"},\n    {900, \"cm\"},\n    {500, \"d\"},\n    {400, \"cd\"},\n    {100,\
    \ \"c\"},\n    {90, \"xc\"},\n    {50, \"l\"},\n    {40, \"xl\"},\n    {10, \"\
    x\"},\n    {9, \"ix\"},\n    {5, \"v\"},\n    {4, \"iv\"},\n    {1, \"i\"}\n \
    \ }\n  for _, v in ipairs(numeral) do\n    while num >= v[1] do\n      result\
    \ = result .. v[2]\n      num = num - v[1]\n    end\n  end\n  return result\n\
    end", "  local roman = ''\n  local num = number\n  local digits = {'i', 'v', 'x',\
    \ 'l', 'c', 'd', 'm'}\n  local i = 1\n  while num > 0 do\n    local digit = num\
    \ % 10\n    if digit == 4 then\n      roman = digits[i] .. digits[i+1] .. roman\n\
    \    elseif digit == 9 then\n      roman = digits[i] .. digits[i+2] .. roman\n\
    \    else\n      local fives = digit >= 5 and digits[i+1] or ''\n      local ones\
    \ = digit % 5\n      roman = fives .. string.rep(digits[i], ones) .. roman\n \
    \   end\n    num = math.floor(num / 10)\n    i = i + 2\n  end\n  return roman\n\
    end", "  local roman_numeral = \"\"\n  local numeral_table = {\n    {1000, \"\
    m\"},\n    {900, \"cm\"},\n    {500, \"d\"},\n    {400, \"cd\"},\n    {100, \"\
    c\"},\n    {90, \"xc\"},\n    {50, \"l\"},\n    {40, \"xl\"},\n    {10, \"x\"\
    },\n    {9, \"ix\"},\n    {5, \"v\"},\n    {4, \"iv\"},\n    {1, \"i\"}\n  }\n\
    \  for _, numeral in ipairs(numeral_table) do\n    local value, letter = numeral[1],\
    \ numeral[2]\n    while number >= value do\n      roman_numeral = roman_numeral\
    \ .. letter\n      number = number - value\n    end\n  end\n  return roman_numeral\n\
    end", "    local roman_numerals = {\n        {'m', 1000},\n        {'cm', 900},\n\
    \        {'d', 500},\n        {'cd', 400},\n        {'c', 100},\n        {'xc',\
    \ 90},\n        {'l', 50},\n        {'xl', 40},\n        {'x', 10},\n        {'ix',\
    \ 9},\n        {'v', 5},\n        {'iv', 4},\n        {'i', 1}\n    }\n    local\
    \ result = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local\
    \ roman, value = numeral[1], numeral[2]\n        while number >= value do\n  \
    \          result = result .. roman\n            number = number - value\n   \
    \     end\n    end\n    return result\nend", "    local roman = \"\"\n    local\
    \ num = number\n    local numeral, value\n    for i = 1, #mini_roman_numerals\
    \ do\n        numeral = mini_roman_numerals[i]\n        value = mini_roman_values[i]\n\
    \        while num >= value do\n            roman = roman .. numeral\n       \
    \     num = num - value\n        end\n    end\n    return roman\nend", "    local\
    \ roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500,\
    \ 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n    \
    \    {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, pair in ipairs(roman_numerals) do\n        local arabic, roman\
    \ = pair[1], pair[2]\n        while number >= arabic do\n            result =\
    \ result .. roman\n            number = number - arabic\n        end\n    end\n\
    \    return result\nend", "    local roman = ''\n    local num = number\n    local\
    \ numeral_map = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n\
    \        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50,\
    \ 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n       \
    \ {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'},\n    }\n    for _, pair in\
    \ ipairs(numeral_map) do\n        local arabic, roman_numeral = table.unpack(pair)\n\
    \        while num >= arabic do\n            roman = roman .. roman_numeral\n\
    \            num = num - arabic\n        end\n    end\n    return roman\nend",
  "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n    \
    \    {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n\
    \        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_numeral\
    \ = ''\n    for _, pair in ipairs(roman_numerals) do\n        local decimal, numeral\
    \ = unpack(pair)\n        while number >= decimal do\n            roman_numeral\
    \ = roman_numeral .. numeral\n            number = number - decimal\n        end\n\
    \    end\n    return roman_numeral\nend", "    local roman = ''\n    local numbers\
    \ = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1}\n    local roman_numerals\
    \ = {'m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'}\n\
    \    for i, num in ipairs(numbers) do\n        while number >= num do\n      \
    \      roman = roman .. roman_numerals[i]\n            number = number - num\n\
    \        end\n    end\n    return roman\nend", "    local roman = \"\"\n    local\
    \ num = number\n    for i = 1, #roman_numerals do\n        local arabic, roman_numeral\
    \ = roman_numerals[i][1], roman_numerals[i][2]\n        while num >= arabic do\n\
    \            roman = roman .. roman_numeral\n            num = num - arabic\n\
    \        end\n    end\n    return roman\nend", "    local roman = \"\"\n    local\
    \ num = number\n    local numeral = {\n        {1000, \"m\"},\n        {900, \"\
    cm\"},\n        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"},\n\
    \        {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n        {10,\
    \ \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"},\n \
    \       {1, \"i\"}\n    }\n    for i = 1, #numeral do\n        while num >= numeral[i][1]\
    \ do\n            roman = roman .. numeral[i][2]\n            num = num - numeral[i][1]\n\
    \        end\n    end\n    return roman\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ numeral in ipairs(roman_numerals) do\n        local arabic, roman = numeral[1],\
    \ numeral[2]\n        while number >= arabic do\n            result = result ..\
    \ roman\n            number = number - arabic\n        end\n    end\n    return\
    \ result\nend", "  local roman_numerals = {\n    {1000, 'm'},\n    {900, 'cm'},\n\
    \    {500, 'd'},\n    {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n    {50,\
    \ 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n    {4,\
    \ 'iv'},\n    {1, 'i'}\n  }\n  local result = ''\n  for _, numeral in ipairs(roman_numerals)\
    \ do\n    while number >= numeral[1] do\n      result = result .. numeral[2]\n\
    \      number = number - numeral[1]\n    end\n  end\n  return result\nend", " \
    \ local roman_numerals = {\n    {'i', 'v'},\n    {'x', 'l'},\n    {'c', 'd'},\n\
    \    {'m'}\n  }\n  local result = ''\n  local digit = 1\n  while number > 0 do\n\
    \    local digit_value = number % 10\n    if digit_value > 0 then\n      local\
    \ roman_digit = roman_numerals[digit]\n      if digit_value <= 3 then\n      \
    \  result = roman_digit[1]:rep(digit_value) .. result\n      elseif digit_value\
    \ == 4 then\n        result = roman_digit[1] .. roman_digit[2] .. result\n   \
    \   elseif digit_value == 5 then\n        result = roman_digit[2] .. result\n\
    \      elseif digit_value <= 8 then\n        result = roman_digit[2] .. roman_digit[1]:rep(digit_value\
    \ - 5) .. result\n      else\n        result = roman_digit[1] .. roman_numerals[digit\
    \ + 1][1] .. result\n      end\n    end\n    number = math.floor(number / 10)\n\
    \    digit = digit + 1\n  end\n  return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1], pair[2]\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, numeral in ipairs(roman_numerals) do\n    \
    \    local value, letter = unpack(numeral)\n        while number >= value do\n\
    \            result = result .. letter\n            number = number - value\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_string = ''\n   \
    \ for _, pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1],\
    \ pair[2]\n        while number >= arabic do\n            roman_string = roman_string\
    \ .. roman\n            number = number - arabic\n        end\n    end\n    return\
    \ roman_string\nend", "    local roman_numerals = {\n        {1000, 'm'},\n  \
    \      {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for _,\
    \ pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1], pair[2]\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {'m', 1000},\n        {'cm', 900},\n\
    \        {'d', 500},\n        {'cd', 400},\n        {'c', 100},\n        {'xc',\
    \ 90},\n        {'l', 50},\n        {'xl', 40},\n        {'x', 10},\n        {'ix',\
    \ 9},\n        {'v', 5},\n        {'iv', 4},\n        {'i', 1}\n    }\n    local\
    \ result = ''\n    for _, numeral in ipairs(roman_numerals) do\n        local\
    \ numeral_string, numeral_value = numeral[1], numeral[2]\n        while number\
    \ >= numeral_value do\n            result = result .. numeral_string\n       \
    \     number = number - numeral_value\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = pair[1], pair[2]\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "  local roman_numerals = {\n\
    \    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100,\
    \ 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n  \
    \  {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, pair in ipairs(roman_numerals) do\n    local arabic, roman =\
    \ pair[1], pair[2]\n    while number >= arabic do\n      result = result .. roman\n\
    \      number = number - arabic\n    end\n  end\n  return result\nend", "    local\
    \ roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500,\
    \ 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n    \
    \    {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n\
    \        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result\
    \ = ''\n    for _, pair in ipairs(roman_numerals) do\n        local arabic, roman\
    \ = table.unpack(pair)\n        while number >= arabic do\n            result\
    \ = result .. roman\n            number = number - arabic\n        end\n    end\n\
    \    return result\nend", "    local roman = \"\"\n    local num = number\n  \
    \  while num > 0 do\n        if num >= 1000 then\n            roman = roman ..\
    \ \"m\"\n            num = num - 1000\n        elseif num >= 900 then\n      \
    \      roman = roman .. \"cm\"\n            num = num - 900\n        elseif num\
    \ >= 500 then\n            roman = roman .. \"d\"\n            num = num - 500\n\
    \        elseif num >= 400 then\n            roman = roman .. \"cd\"\n       \
    \     num = num - 400\n        elseif num >= 100 then\n            roman = roman\
    \ .. \"c\"\n            num = num - 100\n        elseif num >= 90 then\n     \
    \       roman = roman .. \"xc\"\n            num = num - 90\n        elseif num\
    \ >= 50 then\n            roman = roman .. \"l\"\n            num = num - 50\n\
    \        elseif num >= 40 then\n            roman = roman .. \"xl\"\n        \
    \    num = num - 40\n        elseif num >= 10 then\n            roman = roman\
    \ .. \"x\"\n            num = num - 10\n        elseif num >= 9 then\n       \
    \     roman = roman .. \"ix\"\n            num = num - 9\n        elseif num >=\
    \ 5 then\n            roman = roman .. \"v\"\n            num = num - 5\n    \
    \    elseif num >= 4 then\n            roman = roman .. \"iv\"\n            num\
    \ = num - 4\n        elseif num >= 1 then\n            roman = roman .. \"i\"\n\
    \            num = num - 1\n        end\n    end\n    return roman\nend", "  \
    \  local roman = \"\"\n    local num = number\n    while num > 0 do\n        if\
    \ num >= 1000 then\n            roman = roman .. \"m\"\n            num = num\
    \ - 1000\n        elseif num >= 900 then\n            roman = roman .. \"cm\"\n\
    \            num = num - 900\n        elseif num >= 500 then\n            roman\
    \ = roman .. \"d\"\n            num = num - 500\n        elseif num >= 400 then\n\
    \            roman = roman .. \"cd\"\n            num = num - 400\n        elseif\
    \ num >= 100 then\n            roman = roman .. \"c\"\n            num = num -\
    \ 100\n        elseif num >= 90 then\n            roman = roman .. \"xc\"\n  \
    \          num = num - 90\n        elseif num >= 50 then\n            roman =\
    \ roman .. \"l\"\n            num = num - 50\n        elseif num >= 40 then\n\
    \            roman = roman .. \"xl\"\n            num = num - 40\n        elseif\
    \ num >= 10 then\n            roman = roman .. \"x\"\n            num = num -\
    \ 10\n        elseif num >= 9 then\n            roman = roman .. \"ix\"\n    \
    \        num = num - 9\n        elseif num >= 5 then\n            roman = roman\
    \ .. \"v\"\n            num = num - 5\n        elseif num >= 4 then\n        \
    \    roman = roman .. \"iv\"\n            num = num - 4\n        elseif num >=\
    \ 1 then\n            roman = roman .. \"i\"\n            num = num - 1\n    \
    \    end\n    end\n    return roman\nend", "    local roman_numerals = {\n   \
    \     {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n\
    \        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n\
    \        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n\
    \        {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = pair[1], pair[2]\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numerals\
    \ = {\n        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n     \
    \   {400, 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n\
    \        {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n\
    \        {4, 'iv'},\n        {1, 'i'}\n    }\n    local result = ''\n    for i\
    \ = 1, #roman_numerals do\n        local arabic, roman = table.unpack(roman_numerals[i])\n\
    \        while number >= arabic do\n            result = result .. roman\n   \
    \         number = number - arabic\n        end\n    end\n    return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, v in ipairs(roman_numerals) do\n        while\
    \ number >= v[1] do\n            result = result .. v[2]\n            number =\
    \ number - v[1]\n        end\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    local num = number\n    local numeral_map = {\n        {1000, \"\
    m\"},\n        {900, \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"},\n\
    \        {100, \"c\"},\n        {90, \"xc\"},\n        {50, \"l\"},\n        {40,\
    \ \"xl\"},\n        {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n\
    \        {4, \"iv\"},\n        {1, \"i\"}\n    }\n    for _, pair in ipairs(numeral_map)\
    \ do\n        local div, numeral = table.unpack(pair)\n        while num >= div\
    \ do\n            result = result .. numeral\n            num = num - div\n  \
    \      end\n    end\n    return result\nend", "  local roman_numerals = {\n  \
    \  {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n    {400, 'cd'},\n    {100,\
    \ 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n    {10, 'x'},\n  \
    \  {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n  }\n  local result\
    \ = ''\n  for _, pair in ipairs(roman_numerals) do\n    local arabic, roman =\
    \ pair[1], pair[2]\n    while number >= arabic do\n      result = result .. roman\n\
    \      number = number - arabic\n    end\n  end\n  return result\nend", "  local\
    \ result = ''\n  local num = number\n  while num > 0 do\n    if num >= 1000 then\n\
    \      result = result .. 'm'\n      num = num - 1000\n    elseif num >= 900 then\n\
    \      result = result .. 'cm'\n      num = num - 900\n    elseif num >= 500 then\n\
    \      result = result .. 'd'\n      num = num - 500\n    elseif num >= 400 then\n\
    \      result = result .. 'cd'\n      num = num - 400\n    elseif num >= 100 then\n\
    \      result = result .. 'c'\n      num = num - 100\n    elseif num >= 90 then\n\
    \      result = result .. 'xc'\n      num = num - 90\n    elseif num >= 50 then\n\
    \      result = result .. 'l'\n      num = num - 50\n    elseif num >= 40 then\n\
    \      result = result .. 'xl'\n      num = num - 40\n    elseif num >= 10 then\n\
    \      result = result .. 'x'\n      num = num - 10\n    elseif num >= 9 then\n\
    \      result = result .. 'ix'\n      num = num - 9\n    elseif num >= 5 then\n\
    \      result = result .. 'v'\n      num = num - 5\n    elseif num >= 4 then\n\
    \      result = result .. 'iv'\n      num = num - 4\n    elseif num >= 1 then\n\
    \      result = result .. 'i'\n      num = num - 1\n    end\n  end\n  return result\n\
    end", "    local roman_numerals = {\n        {1000, 'm'},\n        {900, 'cm'},\n\
    \        {500, 'd'},\n        {400, 'cd'},\n        {100, 'c'},\n        {90,\
    \ 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n        {10, 'x'},\n      \
    \  {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n        {1, 'i'}\n    }\n\
    \    local result = ''\n    for _, pair in ipairs(roman_numerals) do\n       \
    \ local arabic, roman = pair[1], pair[2]\n        while number >= arabic do\n\
    \            result = result .. roman\n            number = number - arabic\n\
    \        end\n    end\n    return result\nend", "    local roman_numerals = {\n\
    \        {1000, 'm'},\n        {900, 'cm'},\n        {500, 'd'},\n        {400,\
    \ 'cd'},\n        {100, 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n     \
    \   {40, 'xl'},\n        {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n \
    \       {4, 'iv'},\n        {1, 'i'}\n    }\n    local roman_string = ''\n   \
    \ for _, pair in ipairs(roman_numerals) do\n        local arabic, roman = pair[1],\
    \ pair[2]\n        while number >= arabic do\n            roman_string = roman_string\
    \ .. roman\n            number = number - arabic\n        end\n    end\n    return\
    \ roman_string\nend", "    local roman_numerals = {\n        {1000, 'm'},\n  \
    \      {900, 'cm'},\n        {500, 'd'},\n        {400, 'cd'},\n        {100,\
    \ 'c'},\n        {90, 'xc'},\n        {50, 'l'},\n        {40, 'xl'},\n      \
    \  {10, 'x'},\n        {9, 'ix'},\n        {5, 'v'},\n        {4, 'iv'},\n   \
    \     {1, 'i'}\n    }\n    local result = ''\n    for _, pair in ipairs(roman_numerals)\
    \ do\n        local arabic, roman = table.unpack(pair)\n        while number >=\
    \ arabic do\n            result = result .. roman\n            number = number\
    \ - arabic\n        end\n    end\n    return result\nend", "    local roman_numeral\
    \ = \"\"\n    local roman_numerals = {\n        {1000, \"m\"},\n        {900,\
    \ \"cm\"},\n        {500, \"d\"},\n        {400, \"cd\"},\n        {100, \"c\"\
    },\n        {90, \"xc\"},\n        {50, \"l\"},\n        {40, \"xl\"},\n     \
    \   {10, \"x\"},\n        {9, \"ix\"},\n        {5, \"v\"},\n        {4, \"iv\"\
    },\n        {1, \"i\"}\n    }\n    for _, pair in ipairs(roman_numerals) do\n\
    \        local arabic, roman = pair[1], pair[2]\n        while number >= arabic\
    \ do\n            roman_numeral = roman_numeral .. roman\n            number =\
    \ number - arabic\n        end\n    end\n    return roman_numeral\nend", "  local\
    \ roman_numerals = {\n    {1000, 'm'},\n    {900, 'cm'},\n    {500, 'd'},\n  \
    \  {400, 'cd'},\n    {100, 'c'},\n    {90, 'xc'},\n    {50, 'l'},\n    {40, 'xl'},\n\
    \    {10, 'x'},\n    {9, 'ix'},\n    {5, 'v'},\n    {4, 'iv'},\n    {1, 'i'}\n\
    \  }\n  local result = ''\n  for _, pair in ipairs(roman_numerals) do\n    local\
    \ arabic, roman = pair[1], pair[2]\n    while number >= arabic do\n      result\
    \ = result .. roman\n      number = number - arabic\n    end\n  end\n  return\
    \ result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

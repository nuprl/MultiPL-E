---
name: HumanEval_143_words_in_sentence
language: lua
prompt: |
  -- You are given a string representing a sentence,
  -- the sentence contains some words separated by a space,
  -- and you have to return a string that contains the words from the original sentence,
  -- whose lengths are prime numbers,
  -- the order of the words in the new string should be the same as the original one.
  -- Example 1:
  -- >>> words_in_sentence('This is a test')
  -- 'is'
  -- Example 2:
  -- >>> words_in_sentence('lets go for swimming')
  -- 'go for'
  -- Constraints:
  -- * 1 <= len(sentence) <= 100
  -- * sentence contains only letters
  local function words_in_sentence(sentence)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = words_in_sentence
      lu.assertEquals(candidate('This is a test'), 'is')
      lu.assertEquals(candidate('lets go for swimming'), 'go for')
      lu.assertEquals(candidate('there is no place available here'), 'there is no place')
      lu.assertEquals(candidate('Hi I am Hussein'), 'Hi am Hussein')
      lu.assertEquals(candidate('go for it'), 'go for it')
      lu.assertEquals(candidate('here'), '')
      lu.assertEquals(candidate('here is'), 'is')
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      local result = {}
      local function is_prime(n)
          if n < 2 then
              return false
          end
          if primes[n] ~= nil then
              return primes[n]
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  primes[n] = false
                  return false
              end
          end
          primes[n] = true
          return true
      end
      for word in sentence:gmatch('%S+') do
          table.insert(words, word)
      end
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local function is_prime(n)
      if n == 1 then return false end
      for i = 2, math.sqrt(n) do
        if n % i == 0 then return false end
      end
      return true
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, index in ipairs(primes) do
          table.insert(result, words[index])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%S+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local result = {}
      for i = 1, #words do
          local word = words[i]
          local is_prime = true
          for j = 2, #word - 1 do
              if word:sub(j, j) == word:sub(1, 1) then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              result[#result + 1] = word
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              primes[#primes + 1] = i
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  result[#result + 1] = word
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i = 1, #words do
          local word = words[i]
          local is_prime = true
          for j = 2, #word do
              if word:len() % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local words = {}
      for word in sentence:gmatch('%w+') do
          local len = #word
          for _, prime in ipairs(primes) do
              if len == prime then
                  table.insert(words, word)
                  break
              end
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  table.insert(result, word)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local result = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  table.insert(result, word)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      local result = {}
      local is_prime = true
      local word = ''
      local sentence_length = string.len(sentence)
      local sentence_index = 1
      local word_index = 1
      local word_length = 0
      local prime_index = 1
      local prime_length = 0
      local result_index = 1
      local result_length = 0
      local result_word = ''
      local result_word_index = 1
      local result_word_length = 0
      local result_word_char = ''
      local result_word_char_index = 1
      local result_word_char_length = 0
      local result_word_char_code = 0
      local result_word_char_code_index = 1
      local result_word_char_code_length = 0
      local result_word_char_code_char = ''
      local result_word_char_code_char_index = 1
      local result_word_char_code_char_length = 0
      local result_word_char_code_char_code = 0
      local result_word_char_code_char_code_index = 1
      local result_word_char_code_char_code_length = 0
      local result_word_char_code_char_code_char = ''
      local result_word_char_code_char_code_char_index = 1
      local result_word_char_code_char_code_char_length = 0
      local result_word_char_code_char_code_char_code = 0
      local result_word_char_code_char_code_char_code_index = 1
      local result_word_char_code_char_code_char_code_length = 0
      local result_word_char_code_char_code_char_code_char = ''
      local result_word_char_code_char_code_char_code_char_index = 1
      local result_word_char_code_char_code_char_code_char_length = 0
      local result_word_char_code_char_code_char_
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 2, 100 do
      local is_prime = true
      for j = 2, i - 1 do
        if i % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        table.insert(primes, i)
      end
    end
    local result = {}
    for _, word in ipairs(words) do
      for _, prime in ipairs(primes) do
        if #word == prime then
          table.insert(result, word)
          break
        end
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      for i = 1, #words do
          local word = words[i]
          local is_prime = true
          for j = 2, #word do
              if word % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 2, #words do
      local is_prime = true
      for j = 2, i - 1 do
        if i % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              primes[#primes + 1] = i
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  result[#result + 1] = word
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local primes = {}
    local result = {}
    local function is_prime(num)
      if num == 1 then return false end
      for i = 2, num - 1 do
        if num % i == 0 then return false end
      end
      return true
    end
    for i = 1, #sentence do
      if sentence:sub(i, i) == ' ' then
        table.insert(words, sentence:sub(1, i - 1))
        sentence = sentence:sub(i + 1)
        i = 0
      end
    end
    table.insert(words, sentence)
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, index in ipairs(primes) do
          table.insert(result, words[index])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%S+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, index in ipairs(primes) do
          table.insert(result, words[index])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local result = {}
      for w in sentence:gmatch('%w+') do
          table.insert(words, w)
      end
      for _, w in ipairs(words) do
          if is_prime(#w) then
              table.insert(result, w)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local result = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      for i = 1, #words do
          local word = words[i]
          local length = #word
          local is_prime = true
          for j = 2, length - 1 do
              if length % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              result[#result + 1] = word
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  table.insert(result, word)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      words[#words + 1] = word
    end
    local result = {}
    for i = 1, #words do
      local word = words[i]
      local is_prime = true
      for j = 2, #word - 1 do
        if word:len() % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        result[#result + 1] = word
      end
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 2, #words do
      local is_prime = true
      for j = 2, i - 1 do
        if i % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      local result = {}
      local function is_prime(n)
          if n < 2 then
              return false
          end
          if primes[n] ~= nil then
              return primes[n]
          end
          for i = 2, math.floor(math.sqrt(n)) do
              if n % i == 0 then
                  primes[n] = false
                  return false
              end
          end
          primes[n] = true
          return true
      end
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, index in ipairs(primes) do
          table.insert(result, words[index])
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      words[#words + 1] = word
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        result[#result + 1] = word
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  table.insert(result, word)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local primes = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              primes[#primes + 1] = word
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local function is_prime(n)
      if n < 2 then
        return false
      end
      for i = 2, math.sqrt(n) do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n <= 1 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = sentence:split(' ')
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      local result = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      for i = 1, #words do
          local word = words[i]
          local is_prime = true
          for j = 2, word:len() - 1 do
              if word:len() % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              result[#result + 1] = word
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              primes[#primes + 1] = words[i]
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      local result = {}
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(primes, word)
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(primes, word)
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%S+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local function word_length_is_prime(word)
          return is_prime(#word)
      end
      local prime_words = {}
      for _, word in ipairs(words) do
          if word_length_is_prime(word) then
              table.insert(prime_words, word)
          end
      end
      return table.concat(prime_words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      words[#words + 1] = word
    end
    local primes = {}
    for i = 2, #words do
      local is_prime = true
      for j = 2, i - 1 do
        if i % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        primes[#primes + 1] = i
      end
    end
    local result = {}
    for _, index in ipairs(primes) do
      result[#result + 1] = words[index]
    end
    return table.concat(result, ' ')
  end
- |2-
    local function is_prime(n)
      if n < 2 then
        return false
      end
      for i = 2, math.sqrt(n) do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    local words = {}
    for word in sentence:gmatch('%w+') do
      if is_prime(#word) then
        table.insert(words, word)
      end
    end
    return table.concat(words, ' ')
  end
- |2-
      local words = {}
      local result = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      for i = 1, #words do
          local word = words[i]
          local is_prime = true
          for j = 2, word:len() - 1 do
              if word:len() % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              result[#result + 1] = word
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              primes[#primes + 1] = i
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          result[#result + 1] = words[i]
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%S+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local res = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(res, word)
          end
      end
      return table.concat(res, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for i = 1, #words do
          local word = words[i]
          local len = #word
          local is_prime = true
          for j = 2, len - 1 do
              if len % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 2, #words do
      local is_prime = true
      for j = 2, i - 1 do
        if i % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.floor(math.sqrt(n)) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, index in ipairs(primes) do
          table.insert(result, words[index])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  result[#result + 1] = word
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      words[#words + 1] = word
    end
    local result = {}
    for i = 1, #words do
      local word = words[i]
      local is_prime = true
      for j = 2, #word - 1 do
        if word:sub(j, j) == word:sub(1, 1) then
          is_prime = false
          break
        end
      end
      if is_prime then
        result[#result + 1] = word
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      if is_prime(#word) then
        table.insert(words, word)
      end
    end
    return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%S+') do
      if is_prime(#word) then
        table.insert(words, word)
      end
    end
    return table.concat(words, ' ')
  end
- |2-
    local function is_prime(n)
      if n < 2 then
        return false
      end
      for i = 2, math.floor(math.sqrt(n)) do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    local words = {}
    for word in sentence:gmatch('%w+') do
      if is_prime(#word) then
        table.insert(words, word)
      end
    end
    return table.concat(words, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      local result = {}
      for i = 1, #words do
          local word = words[i]
          local length = #word
          local is_prime = true
          for j = 2, length - 1 do
              if length % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              result[#result + 1] = word
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local result = {}
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for word in sentence:gmatch('%w+') do
          words[#words + 1] = word
      end
      for i = 1, #words do
          for j = 1, #primes do
              if #words[i] == primes[j] then
                  result[#result + 1] = words[i]
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      for i = 1, #sentence do
          if sentence:sub(i, i) == ' ' then
              table.insert(words, sentence:sub(1, i - 1))
              sentence = sentence:sub(i + 1)
              i = 0
          end
      end
      table.insert(words, sentence)
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, 100 do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, word in ipairs(words) do
          for _, prime in ipairs(primes) do
              if #word == prime then
                  table.insert(result, word)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local primes = {}
      local result = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      for i = 1, #words do
          local length = #words[i]
          local is_prime = true
          for j = 2, length - 1 do
              if length % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local function is_prime(n)
      if n < 2 then
        return false
      end
      for i = 2, math.floor(math.sqrt(n)) do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          local is_prime = true
          for j = 2, i - 1 do
              if i % j == 0 then
                  is_prime = false
                  break
              end
          end
          if is_prime then
              table.insert(primes, i)
          end
      end
      local result = {}
      for _, i in ipairs(primes) do
          table.insert(result, words[i])
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local function is_prime(n)
      if n < 2 then
        return false
      end
      for i = 2, math.sqrt(n) do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    local result = {}
    for _, word in ipairs(words) do
      if is_prime(#word) then
        table.insert(result, word)
      end
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 1, #words do
      if is_prime(#words[i]) then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(primes, word)
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
    local words = {}
    for word in sentence:gmatch('%w+') do
      table.insert(words, word)
    end
    local primes = {}
    for i = 2, #words do
      local is_prime = true
      for j = 2, i - 1 do
        if i % j == 0 then
          is_prime = false
          break
        end
      end
      if is_prime then
        table.insert(primes, words[i])
      end
    end
    return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 1, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          if is_prime(#word) then
              table.insert(result, word)
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in sentence:gmatch('%w+') do
          table.insert(words, word)
      end
      local primes = {}
      for i = 2, #words do
          if is_prime(#words[i]) then
              table.insert(primes, words[i])
          end
      end
      return table.concat(primes, ' ')
  end
- |2-
      local words = {}
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for word in sentence:gmatch('%w+') do
          if is_prime(#word) then
              table.insert(words, word)
          end
      end
      return table.concat(words, ' ')
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

name: HumanEval_143_words_in_sentence
language: lua
prompt: "-- You are given a string representing a sentence,\n-- the sentence contains\
  \ some words separated by a space,\n-- and you have to return a string that contains\
  \ the words from the original sentence,\n-- whose lengths are prime numbers,\n--\
  \ the order of the words in the new string should be the same as the original one.\n\
  -- >>> words_in_sentence('This is a test')\n-- 'is'\n-- >>> words_in_sentence('lets\
  \ go for swimming')\n-- 'go for'\n-- Constraints:\n-- * 1 <= len(sentence) <= 100\n\
  -- * sentence contains only letters\nlocal function words_in_sentence(sentence)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = words_in_sentence\n\
  \    lu.assertEquals(candidate('This is a test'), 'is')\n    lu.assertEquals(candidate('lets\
  \ go for swimming'), 'go for')\n    lu.assertEquals(candidate('there is no place\
  \ available here'), 'there is no place')\n    lu.assertEquals(candidate('Hi I am\
  \ Hussein'), 'Hi am Hussein')\n    lu.assertEquals(candidate('go for it'), 'go for\
  \ it')\n    lu.assertEquals(candidate('here'), '')\n    lu.assertEquals(candidate('here\
  \ is'), 'is')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local words = {}\n    for\
    \ word in sentence:gmatch('%w+') do\n        local len = #word\n        if primes[len]\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ i = 2, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local function is_prime(n)\n        if n < 2 then\n            return false\n\
    \        end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local words = {}\n    for word in sentence:gmatch('%w+') do\n  \
    \      if is_prime(#word) then\n            table.insert(words, word)\n      \
    \  end\n    end\n    return table.concat(words, ' ')\nend", "  local words = {}\n\
    \  for word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n  end\n\
    \  local primes = {}\n  for i, word in ipairs(words) do\n    if is_prime(#word)\
    \ then\n      table.insert(primes, word)\n    end\n  end\n  return table.concat(primes,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for _,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n \
    \     table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n \
    \     table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local primes = {}\n  for i = 1,\
    \ #words do\n    if is_prime(#words[i]) then\n      table.insert(primes, words[i])\n\
    \    end\n  end\n  return table.concat(primes, ' ')\nend", "    local words =\
    \ {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for i = 1, #words do\n        if is_prime(#words[i])\
    \ then\n            table.insert(primes, words[i])\n        end\n    end\n   \
    \ return table.concat(primes, ' ')\nend", "    local words = {}\n    for word\
    \ in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n \
    \   local primes = {}\n    for i = 2, #words do\n        local is_prime = true\n\
    \        for j = 2, i - 1 do\n            if i % j == 0 then\n               \
    \ is_prime = false\n                break\n            end\n        end\n    \
    \    if is_prime then\n            table.insert(primes, i)\n        end\n    end\n\
    \    local result = {}\n    for _, i in ipairs(primes) do\n        table.insert(result,\
    \ words[i])\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n \
    \     table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+') do\n \
    \   table.insert(words, word)\n  end\n  local result = {}\n  for i, word in ipairs(words)\
    \ do\n    if is_prime(#word) then\n      table.insert(result, word)\n    end\n\
    \  end\n  return table.concat(result, ' ')\nend", "    local words = {}\n    for\
    \ word in sentence:gmatch('%w+') do\n        if is_prime(#word) then\n       \
    \     table.insert(words, word)\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "  local words\
    \ = {}\n  for word in sentence:gmatch('%w+') do\n    words[#words + 1] = word\n\
    \  end\n  local primes = {}\n  for i = 1, #words do\n    if is_prime(#words[i])\
    \ then\n      primes[#primes + 1] = words[i]\n    end\n  end\n  return table.concat(primes,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+') do\n \
    \   table.insert(words, word)\n  end\n  local primes = {}\n  for _, word in ipairs(words)\
    \ do\n    if is_prime(#word) then\n      table.insert(primes, word)\n    end\n\
    \  end\n  return table.concat(primes, ' ')\nend", "    local words = {}\n    for\
    \ word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n\
    \    local result = {}\n    for _, word in ipairs(words) do\n        if is_prime(#word)\
    \ then\n            table.insert(result, word)\n        end\n    end\n    return\
    \ table.concat(result, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local result = {}\n  for _, word\
    \ in ipairs(words) do\n    if is_prime(#word) then\n      table.insert(result,\
    \ word)\n    end\n  end\n  return table.concat(result, ' ')\nend", "    local\
    \ words = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        if is_prime(#word) then\n            table.insert(words, word)\n\
    \        end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ i, word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \   local words = {}\n    local primes = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        words[#words + 1] = word\n        primes[#primes + 1] = is_prime(#word)\n\
    \    end\n    local result = {}\n    for i = 1, #words do\n        if primes[i]\
    \ then\n            result[#result + 1] = words[i]\n        end\n    end\n   \
    \ return table.concat(result, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local primes = {}\n  for _, word\
    \ in ipairs(words) do\n    if is_prime(#word) then\n      table.insert(primes,\
    \ word)\n    end\n  end\n  return table.concat(primes, ' ')\nend", "  local words\
    \ = {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n\
    \  end\n  local primes = {}\n  for i = 1, #words do\n    if is_prime(#words[i])\
    \ then\n      table.insert(primes, words[i])\n    end\n  end\n  return table.concat(primes,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local result = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(result, word)\n   \
    \     end\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n < 2 then\n    \
    \        return false\n        end\n        for i = 2, math.sqrt(n) do\n     \
    \       if n % i == 0 then\n                return false\n            end\n  \
    \      end\n        return true\n    end\n    local result = {}\n    for _, word\
    \ in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        local\
    \ is_prime = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime then\n            table.insert(primes, i)\n  \
    \      end\n    end\n    local result = {}\n    for _, i in ipairs(primes) do\n\
    \        table.insert(result, words[i])\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local result = {}\n    for _,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \ local words = {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word)\
    \ then\n      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+') do\n \
    \   words[#words + 1] = word\n  end\n  local primes = {}\n  for i = 1, #words\
    \ do\n    if is_prime(#words[i]) then\n      primes[#primes + 1] = words[i]\n\
    \    end\n  end\n  return table.concat(primes, ' ')\nend", "    local words =\
    \ {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for i, word in ipairs(words) do\n       \
    \ if is_prime(#word) then\n            table.insert(primes, word)\n        end\n\
    \    end\n    return table.concat(primes, ' ')\nend", "    local words = {}\n\
    \    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local result = {}\n    for _, word in ipairs(words) do\n       \
    \ if is_prime(#word) then\n            table.insert(result, word)\n        end\n\
    \    end\n    return table.concat(result, ' ')\nend", "  local words = {}\n  for\
    \ word in sentence:gmatch(\"%w+\") do\n    table.insert(words, word)\n  end\n\
    \  local primes = {}\n  for i = 1, #words do\n    if is_prime(#words[i]) then\n\
    \      table.insert(primes, words[i])\n    end\n  end\n  return table.concat(primes,\
    \ \" \")\nend", "    local function is_prime(n)\n        if n < 2 then\n     \
    \       return false\n        end\n        for i = 2, math.sqrt(n) do\n      \
    \      if n % i == 0 then\n                return false\n            end\n   \
    \     end\n        return true\n    end\n    local words = {}\n    for word in\
    \ sentence:gmatch('%w+') do\n        if is_prime(#word) then\n            table.insert(words,\
    \ word)\n        end\n    end\n    return table.concat(words, ' ')\nend", "  \
    \  local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        local\
    \ is_prime = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime then\n            table.insert(primes, i)\n  \
    \      end\n    end\n    local result = {}\n    for _, prime in ipairs(primes)\
    \ do\n        table.insert(result, words[prime])\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n \
    \     table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local function is_prime(n)\n\
    \        if n < 2 then\n            return false\n        end\n        for i =\
    \ 2, math.sqrt(n) do\n            if n % i == 0 then\n                return false\n\
    \            end\n        end\n        return true\n    end\n    local result\
    \ = {}\n    for _, word in ipairs(words) do\n        if is_prime(#word) then\n\
    \            table.insert(result, word)\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "  local words\
    \ = {}\n  for word in sentence:gmatch(\"%w+\") do\n    table.insert(words, word)\n\
    \  end\n  local primes = {}\n  for i, word in ipairs(words) do\n    if is_prime(#word)\
    \ then\n      table.insert(primes, word)\n    end\n  end\n  return table.concat(primes,\
    \ \" \")\nend", "  local words = {}\n  for word in sentence:gmatch('%w+') do\n\
    \    if is_prime(#word) then\n      table.insert(words, word)\n    end\n  end\n\
    \  return table.concat(words, ' ')\nend", "    local words = {}\n    for word\
    \ in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n \
    \   local primes = {}\n    for _, word in ipairs(words) do\n        if is_prime(#word)\
    \ then\n            table.insert(primes, word)\n        end\n    end\n    return\
    \ table.concat(primes, ' ')\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  \
    \  local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local result = {}\n    for _, word in ipairs(words) do\n\
    \        for _, prime in ipairs(primes) do\n            if #word == prime then\n\
    \                table.insert(result, word)\n            end\n        end\n  \
    \  end\n    return table.concat(result, ' ')\nend", "    local words = {}\n  \
    \  for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for i = 1, #words do\n        if is_prime(#words[i])\
    \ then\n            table.insert(primes, words[i])\n        end\n    end\n   \
    \ return table.concat(primes, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local function is_prime(n)\n   \
    \ if n < 2 then\n      return false\n    end\n    for i = 2, math.sqrt(n) do\n\
    \      if n % i == 0 then\n        return false\n      end\n    end\n    return\
    \ true\n  end\n  local result = {}\n  for _, word in ipairs(words) do\n    if\
    \ is_prime(#word) then\n      table.insert(result, word)\n    end\n  end\n  return\
    \ table.concat(result, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ _, word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \   local function is_prime(n)\n        if n < 2 then\n            return false\n\
    \        end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local words = {}\n    for word in sentence:gmatch('%w+') do\n  \
    \      if is_prime(#word) then\n            table.insert(words, word)\n      \
    \  end\n    end\n    return table.concat(words, ' ')\nend", "    local words =\
    \ {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word) then\n\
    \            table.insert(words, word)\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for _,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n < 2 then\n    \
    \        return false\n        end\n        for i = 2, math.floor(math.sqrt(n))\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local result = {}\n  \
    \  for _, word in ipairs(words) do\n        if is_prime(#word) then\n        \
    \    table.insert(result, word)\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        words[#words + 1] = word\n    end\n    local result = {}\n    for i =\
    \ 1, #words do\n        local word = words[i]\n        local is_prime = true\n\
    \        for j = 2, #word - 1 do\n            if word:len() % j == 0 then\n  \
    \              is_prime = false\n                break\n            end\n    \
    \    end\n        if is_prime then\n            result[#result + 1] = word\n \
    \       end\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    local primes = {}\n    local result = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        words[#words + 1] = word\n        if is_prime(#word) then\n    \
    \        primes[#primes + 1] = word\n        end\n    end\n    for _, word in\
    \ ipairs(words) do\n        for _, prime in ipairs(primes) do\n            if\
    \ word == prime then\n                result[#result + 1] = word\n           \
    \ end\n        end\n    end\n    return table.concat(result, ' ')\nend", "  local\
    \ words = {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word)\
    \ then\n      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local primes = {}\n  for i = 1,\
    \ #words do\n    if is_prime(#words[i]) then\n      table.insert(primes, words[i])\n\
    \    end\n  end\n  return table.concat(primes, ' ')\nend", "    local words =\
    \ {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for _, word in ipairs(words) do\n       \
    \ if is_prime(#word) then\n            table.insert(primes, word)\n        end\n\
    \    end\n    return table.concat(primes, ' ')\nend", "    local words = {}\n\
    \    for word in sentence:gmatch('%w+') do\n        if is_prime(#word) then\n\
    \            table.insert(words, word)\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local result = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(result, word)\n   \
    \     end\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local result = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(result, word)\n   \
    \     end\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n < 2 then\n    \
    \        return false\n        end\n        for i = 2, math.floor(math.sqrt(n))\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local result = {}\n  \
    \  for _, word in ipairs(words) do\n        if is_prime(#word) then\n        \
    \    table.insert(result, word)\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "  local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41,\
    \ 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  local words = {}\n  for word\
    \ in sentence:gmatch('%w+') do\n    local len = #word\n    if primes[len] then\n\
    \      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch(\"%w+\") do\n\
    \    if is_prime(#word) then\n      table.insert(words, word)\n    end\n  end\n\
    \  return table.concat(words, \" \")\nend", "  local words = {}\n  for word in\
    \ sentence:gmatch('%w+') do\n    table.insert(words, word)\n  end\n  local primes\
    \ = {}\n  for i = 1, #words do\n    if is_prime(#words[i]) then\n      table.insert(primes,\
    \ words[i])\n    end\n  end\n  return table.concat(primes, ' ')\nend", "    local\
    \ function is_prime(n)\n        if n < 2 then\n            return false\n    \
    \    end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local words = {}\n    for word in sentence:gmatch('%w+') do\n  \
    \      if is_prime(#word) then\n            table.insert(words, word)\n      \
    \  end\n    end\n    return table.concat(words, ' ')\nend", "  local words = {}\n\
    \  for word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n  end\n\
    \  local result = {}\n  for _, word in ipairs(words) do\n    if is_prime(#word)\
    \ then\n      table.insert(result, word)\n    end\n  end\n  return table.concat(result,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch(\"%w+\") do\n\
    \    table.insert(words, word)\n  end\n  local primes = {}\n  for i = 1, #words\
    \ do\n    if is_prime(#words[i]) then\n      table.insert(primes, words[i])\n\
    \    end\n  end\n  return table.concat(primes, \" \")\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n < 2 then\n    \
    \        return false\n        end\n        for i = 2, math.sqrt(n) do\n     \
    \       if n % i == 0 then\n                return false\n            end\n  \
    \      end\n        return true\n    end\n    local result = {}\n    for _, word\
    \ in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n <= 1 then\n   \
    \         return false\n        end\n        for i = 2, math.floor(math.sqrt(n))\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local result = {}\n  \
    \  for _, word in ipairs(words) do\n        if is_prime(#word) then\n        \
    \    table.insert(result, word)\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    local primes = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n        if is_prime(#word) then\n   \
    \         table.insert(primes, word)\n        end\n    end\n    return table.concat(primes,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%S+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local function\
    \ is_prime(n)\n        if n == 1 then\n            return false\n        end\n\
    \        for i = 2, n - 1 do\n            if n % i == 0 then\n               \
    \ return false\n            end\n        end\n        return true\n    end\n \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    if is_prime(#word) then\n      table.insert(words, word)\n    end\n\
    \  end\n  return table.concat(words, ' ')\nend", "    local words = {}\n    for\
    \ word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n\
    \    local primes = {}\n    for i = 1, #words do\n        if is_prime(#words[i])\
    \ then\n            table.insert(primes, words[i])\n        end\n    end\n   \
    \ return table.concat(primes, ' ')\nend", "    local words = {}\n    for word\
    \ in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n \
    \   local result = {}\n    for _, word in ipairs(words) do\n        if is_prime(#word)\
    \ then\n            table.insert(result, word)\n        end\n    end\n    return\
    \ table.concat(result, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ _, word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \ local words = {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word)\
    \ then\n      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+') do\n \
    \   table.insert(words, word)\n  end\n  local primes = {}\n  for i = 1, #words\
    \ do\n    if is_prime(#words[i]) then\n      table.insert(primes, words[i])\n\
    \    end\n  end\n  return table.concat(primes, ' ')\nend", "  local words = {}\n\
    \  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n      table.insert(words,\
    \ word)\n    end\n  end\n  return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    local primes = {}\n    local result = {}\n    local i = 1\n    for\
    \ word in string.gmatch(sentence, \"%S+\") do\n        words[i] = word\n     \
    \   i = i + 1\n    end\n    for i = 1, #words do\n        if is_prime(#words[i])\
    \ then\n            table.insert(primes, words[i])\n        end\n    end\n   \
    \ return table.concat(primes, \" \")\nend", "    local words = {}\n    local primes\
    \ = {}\n    local primes_count = 0\n    local result = ''\n    for word in sentence:gmatch('%w+')\
    \ do\n        words[#words + 1] = word\n        local word_len = word:len()\n\
    \        if not primes[word_len] then\n            local is_prime = true\n   \
    \         for i = 2, word_len - 1 do\n                if word_len % i == 0 then\n\
    \                    is_prime = false\n                    break\n           \
    \     end\n            end\n            if is_prime then\n                primes[word_len]\
    \ = true\n                primes_count = primes_count + 1\n            end\n \
    \       end\n    end\n    for i = 1, #words do\n        if primes[words[i]:len()]\
    \ then\n            result = result .. ' ' .. words[i]\n        end\n    end\n\
    \    return result:sub(2)\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local result = {}\n    for\
    \ _, word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \   local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97}\n    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        local len = #word\n        for _, prime in ipairs(primes) do\n \
    \           if len == prime then\n                table.insert(words, word)\n\
    \                break\n            end\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 2, #words do\n        local is_prime = true\n        for j = 2, i - 1 do\n\
    \            if i % j == 0 then\n                is_prime = false\n          \
    \      break\n            end\n        end\n        if is_prime then\n       \
    \     table.insert(primes, i)\n        end\n    end\n    local result = {}\n \
    \   for _, index in ipairs(primes) do\n        table.insert(result, words[index])\n\
    \    end\n    return table.concat(result, ' ')\nend", "    local words = {}\n\
    \    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for i = 2, #words do\n        local is_prime\
    \ = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n      \
    \          is_prime = false\n                break\n            end\n        end\n\
    \        if is_prime then\n            table.insert(primes, i)\n        end\n\
    \    end\n    local result = {}\n    for _, i in ipairs(primes) do\n        table.insert(result,\
    \ words[i])\n    end\n    return table.concat(result, ' ')\nend", "    local result\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(result, word)\n        end\n    end\n    return\
    \ table.concat(result, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ i = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local primes\
    \ = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97}\n    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        local len = #word\n        for _, prime in ipairs(primes) do\n \
    \           if len == prime then\n                table.insert(words, word)\n\
    \                break\n            end\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        words[#words + 1] = word\n    end\n    local primes = {}\n    for _,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            primes[#primes\
    \ + 1] = word\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ i = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%S+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        local\
    \ is_prime = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime then\n            table.insert(primes, i)\n  \
    \      end\n    end\n    local result = {}\n    for _, i in ipairs(primes) do\n\
    \        table.insert(result, words[i])\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%S+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n\
    \  end\n  local primes = {}\n  for _, word in ipairs(words) do\n    if is_prime(#word)\
    \ then\n      table.insert(primes, word)\n    end\n  end\n  return table.concat(primes,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "  local words = {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words,\
    \ word)\n  end\n  local primes = {}\n  for i = 1, #words do\n    if is_prime(#words[i])\
    \ then\n      table.insert(primes, words[i])\n    end\n  end\n  return table.concat(primes,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "  local words = {}\n  for word in sentence:gmatch('%S+') do\n    if is_prime(#word)\
    \ then\n      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "    local function\
    \ is_prime(n)\n        if n < 2 then\n            return false\n        end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n        \
    \        return false\n            end\n        end\n        return true\n   \
    \ end\n    local words = {}\n    for word in sentence:gmatch('%w+') do\n     \
    \   if is_prime(#word) then\n            table.insert(words, word)\n        end\n\
    \    end\n    return table.concat(words, ' ')\nend", "    local words = {}\n \
    \   for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for _, word in ipairs(words) do\n       \
    \ if is_prime(#word) then\n            table.insert(primes, word)\n        end\n\
    \    end\n    return table.concat(primes, ' ')\nend", "  local words = {}\n  for\
    \ word in sentence:gmatch('%S+') do\n    if is_prime(#word) then\n      table.insert(words,\
    \ word)\n    end\n  end\n  return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    local primes = {}\n    local result = {}\n    local i = 1\n    for\
    \ word in string.gmatch(sentence, '%w+') do\n        words[i] = word\n       \
    \ i = i + 1\n    end\n    for j = 1, #words do\n        if is_prime(#words[j])\
    \ then\n            primes[#primes + 1] = words[j]\n        end\n    end\n   \
    \ for k = 1, #primes do\n        result[k] = primes[k]\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    local primes = {}\n\
    \    local result = {}\n    for word in sentence:gmatch('%w+') do\n        words[#words\
    \ + 1] = word\n        local length = #word\n        if not primes[length] then\n\
    \            primes[length] = is_prime(length)\n        end\n        if primes[length]\
    \ then\n            result[#result + 1] = word\n        end\n    end\n    return\
    \ table.concat(result, ' ')\nend", "    local function is_prime(n)\n        if\
    \ n == 1 then\n            return false\n        end\n        for i = 2, n - 1\
    \ do\n            if n % i == 0 then\n                return false\n         \
    \   end\n        end\n        return true\n    end\n    local words = {}\n   \
    \ for word in sentence:gmatch('%w+') do\n        if is_prime(#word) then\n   \
    \         table.insert(words, word)\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 2, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local result = {}\n  for i, word\
    \ in ipairs(words) do\n    if is_prime(#word) then\n      table.insert(result,\
    \ word)\n    end\n  end\n  return table.concat(result, ' ')\nend", "    local\
    \ primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97}\n    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        local len = #word\n        if primes[len] then\n            table.insert(words,\
    \ word)\n        end\n    end\n    return table.concat(words, ' ')\nend", "  local\
    \ words = {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words,\
    \ word)\n  end\n  local result = {}\n  for i, word in ipairs(words) do\n    if\
    \ is_prime(#word) then\n      table.insert(result, word)\n    end\n  end\n  return\
    \ table.concat(result, ' ')\nend", "    local words = {}\n    local primes = {}\n\
    \    local result = {}\n    for word in sentence:gmatch('%w+') do\n        words[#words\
    \ + 1] = word\n        primes[#primes + 1] = is_prime(#word)\n    end\n    for\
    \ i = 1, #words do\n        if primes[i] then\n            result[#result + 1]\
    \ = words[i]\n        end\n    end\n    return table.concat(result, ' ')\nend",
  "  local words = {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words,\
    \ word)\n  end\n  local primes = {}\n  for _, word in ipairs(words) do\n    if\
    \ is_prime(#word) then\n      table.insert(primes, word)\n    end\n  end\n  return\
    \ table.concat(primes, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        if is_prime(#word) then\n            table.insert(words, word)\n\
    \        end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%S+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        if is_prime(#word) then\n            table.insert(words, word)\n\
    \        end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n < 2 then\n    \
    \        return false\n        end\n        for i = 2, math.sqrt(n) do\n     \
    \       if n % i == 0 then\n                return false\n            end\n  \
    \      end\n        return true\n    end\n    local result = {}\n    for _, word\
    \ in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "  local words\
    \ = {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n\
    \      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n\
    \  end\n  local function is_prime(n)\n    if n <= 1 then\n      return false\n\
    \    end\n    for i = 2, math.sqrt(n) do\n      if n % i == 0 then\n        return\
    \ false\n      end\n    end\n    return true\n  end\n  local result = {}\n  for\
    \ _, word in ipairs(words) do\n    if is_prime(#word) then\n      table.insert(result,\
    \ word)\n    end\n  end\n  return table.concat(result, ' ')\nend", "    local\
    \ words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local result = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(result, word)\n   \
    \     end\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%S+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ _, word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \ local words = {}\n  for word in sentence:gmatch(\"%w+\") do\n    table.insert(words,\
    \ word)\n  end\n  local primes = {}\n  for i = 1, #words do\n    if is_prime(#words[i])\
    \ then\n      table.insert(primes, words[i])\n    end\n  end\n  return table.concat(primes,\
    \ \" \")\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        if is_prime(#word) then\n            table.insert(words, word)\n\
    \        end\n    end\n    return table.concat(words, ' ')\nend", "  local words\
    \ = {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n\
    \      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local result = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(result, word)\n   \
    \     end\n    end\n    return table.concat(result, ' ')\nend", "    local function\
    \ is_prime(n)\n        if n < 2 then\n            return false\n        end\n\
    \        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n        \
    \        return false\n            end\n        end\n        return true\n   \
    \ end\n    local words = {}\n    for word in sentence:gmatch('%w+') do\n     \
    \   if is_prime(#word) then\n            table.insert(words, word)\n        end\n\
    \    end\n    return table.concat(words, ' ')\nend", "  local words = {}\n  for\
    \ word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n  end\n  local\
    \ result = {}\n  for i, word in ipairs(words) do\n    if is_prime(#word) then\n\
    \      table.insert(result, word)\n    end\n  end\n  return table.concat(result,\
    \ ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+') do\n \
    \   if is_prime(#word) then\n      table.insert(words, word)\n    end\n  end\n\
    \  return table.concat(words, ' ')\nend", "    local words = {}\n    for word\
    \ in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n \
    \   local primes = {}\n    for i = 2, #words do\n        local is_prime = true\n\
    \        for j = 2, i - 1 do\n            if i % j == 0 then\n               \
    \ is_prime = false\n                break\n            end\n        end\n    \
    \    if is_prime then\n            table.insert(primes, i)\n        end\n    end\n\
    \    local result = {}\n    for _, i in ipairs(primes) do\n        table.insert(result,\
    \ words[i])\n    end\n    return table.concat(result, ' ')\nend", "  local words\
    \ = {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n\
    \      table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    local primes = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n        if is_prime(#word) then\n   \
    \         table.insert(primes, word)\n        end\n    end\n    return table.concat(primes,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i\
    \ = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        local\
    \ is_prime = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime then\n            table.insert(primes, i)\n  \
    \      end\n    end\n    local result = {}\n    for _, i in ipairs(primes) do\n\
    \        table.insert(result, words[i])\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for _,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \ local words = {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words,\
    \ word)\n  end\n  local result = {}\n  for i, word in ipairs(words) do\n    if\
    \ is_prime(#word) then\n      table.insert(result, word)\n    end\n  end\n  return\
    \ table.concat(result, ' ')\nend", "    local primes = {2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n  \
    \  local words = {}\n    for word in sentence:gmatch('%S+') do\n        local\
    \ len = word:len()\n        for _, prime in ipairs(primes) do\n            if\
    \ len == prime then\n                table.insert(words, word)\n             \
    \   break\n            end\n        end\n    end\n    return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        if is_prime(#word) then\n            table.insert(words, word)\n    \
    \    end\n    end\n    return table.concat(words, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    if is_prime(#word) then\n \
    \     table.insert(words, word)\n    end\n  end\n  return table.concat(words,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local result = {}\n    for _,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+')\
    \ do\n        table.insert(words, word)\n    end\n    local primes = {}\n    for\
    \ i = 1, #words do\n        if is_prime(#words[i]) then\n            table.insert(primes,\
    \ words[i])\n        end\n    end\n    return table.concat(primes, ' ')\nend",
  "    local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    local result = {}\n    for word in sentence:gmatch('%w+') do\n   \
    \     words[#words + 1] = word\n    end\n    for i = 1, #words do\n        if\
    \ is_prime(#words[i]) then\n            result[#result + 1] = words[i]\n     \
    \   end\n    end\n    return table.concat(result, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "    local function\
    \ is_prime(n)\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local words = {}\n    for word in sentence:gmatch('%w+') do\n  \
    \      if is_prime(#word) then\n            table.insert(words, word)\n      \
    \  end\n    end\n    return table.concat(words, ' ')\nend", "    local words =\
    \ {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for i = 2, #words do\n        if is_prime(#words[i])\
    \ then\n            table.insert(primes, words[i])\n        end\n    end\n   \
    \ return table.concat(primes, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    table.insert(words, word)\n  end\n  local primes = {}\n  for _, word\
    \ in ipairs(words) do\n    if is_prime(#word) then\n      table.insert(primes,\
    \ word)\n    end\n  end\n  return table.concat(primes, ' ')\nend", "    local\
    \ words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for _, word in ipairs(words) do\n\
    \        if is_prime(#word) then\n            table.insert(primes, word)\n   \
    \     end\n    end\n    return table.concat(primes, ' ')\nend", "    local words\
    \ = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local primes = {}\n    for i = 2, #words do\n        if\
    \ is_prime(#words[i]) then\n            table.insert(primes, words[i])\n     \
    \   end\n    end\n    return table.concat(primes, ' ')\nend", "  local words =\
    \ {}\n  for word in sentence:gmatch('%w+') do\n    table.insert(words, word)\n\
    \  end\n  local result = {}\n  for i, word in ipairs(words) do\n    if is_prime(#word)\
    \ then\n      table.insert(result, word)\n    end\n  end\n  return table.concat(result,\
    \ ' ')\nend", "    local words = {}\n    for word in sentence:gmatch('%w+') do\n\
    \        table.insert(words, word)\n    end\n    local primes = {}\n    for i,\
    \ word in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(primes,\
    \ word)\n        end\n    end\n    return table.concat(primes, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        table.insert(words,\
    \ word)\n    end\n    local function is_prime(n)\n        if n <= 1 then\n   \
    \         return false\n        end\n        for i = 2, math.sqrt(n) do\n    \
    \        if n % i == 0 then\n                return false\n            end\n \
    \       end\n        return true\n    end\n    local result = {}\n    for _, word\
    \ in ipairs(words) do\n        if is_prime(#word) then\n            table.insert(result,\
    \ word)\n        end\n    end\n    return table.concat(result, ' ')\nend", " \
    \   local words = {}\n    for word in sentence:gmatch('%w+') do\n        if is_prime(#word)\
    \ then\n            table.insert(words, word)\n        end\n    end\n    return\
    \ table.concat(words, ' ')\nend", "  local words = {}\n  for word in sentence:gmatch('%w+')\
    \ do\n    if is_prime(#word) then\n      table.insert(words, word)\n    end\n\
    \  end\n  return table.concat(words, ' ')\nend", "    local words = {}\n    for\
    \ word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n\
    \    local function is_prime(n)\n        if n < 2 then\n            return false\n\
    \        end\n        for i = 2, math.sqrt(n) do\n            if n % i == 0 then\n\
    \                return false\n            end\n        end\n        return true\n\
    \    end\n    local result = {}\n    for _, word in ipairs(words) do\n       \
    \ if is_prime(#word) then\n            table.insert(result, word)\n        end\n\
    \    end\n    return table.concat(result, ' ')\nend", "    local words = {}\n\
    \    for word in sentence:gmatch('%w+') do\n        table.insert(words, word)\n\
    \    end\n    local primes = {}\n    for i = 1, #words do\n        if is_prime(#words[i])\
    \ then\n            table.insert(primes, words[i])\n        end\n    end\n   \
    \ return table.concat(primes, ' ')\nend", "    local words = {}\n    for word\
    \ in sentence:gmatch('%w+') do\n        table.insert(words, word)\n    end\n \
    \   local primes = {}\n    for _, word in ipairs(words) do\n        if is_prime(#word)\
    \ then\n            table.insert(primes, word)\n        end\n    end\n    return\
    \ table.concat(primes, ' ')\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

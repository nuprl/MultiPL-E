name: HumanEval_77_iscube
language: lua
prompt: "-- Write a function that takes an integer a and returns true \n-- if this\
  \ ingeger is a cube of some integer number.\n-- Note: you may assume the input is\
  \ always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n-- false\n\
  -- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n-- true\n\
  -- >>> iscube(180)\n-- false\nlocal function iscube(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
  \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
  \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64), true)\n\
  \    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
  \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- TODO: implement this function\n    return false\nend", "   \
    \ -- your code here\n    if a == 0 then\n        return true\n    end\n    if\
    \ a < 0 then\n        a = -a\n    end\n    local i = 1\n    while i * i * i <=\
    \ a do\n        if i * i * i == a then\n            return true\n        end\n\
    \        i = i + 1\n    end\n    return false\nend", "  -- your code here\n  if\
    \ a == 0 then\n    return true\n  end\n  if a < 0 then\n    a = -a\n  end\n  local\
    \ i = 1\n  while i * i * i <= a do\n    if i * i * i == a then\n      return true\n\
    \    end\n    i = i + 1\n  end\n  return false\nend", "  -- your code here\nend",
  "    -- TODO: implement this function\n    return false\nend", "    -- TODO: write\
    \ your code here\nend", "    return a == 0 or a == 1 or a == -1 or math.sqrt(a)\
    \ % 1 == 0\nend", "\tlocal b = math.floor(math.pow(a, 1/3))\n\treturn math.pow(b,\
    \ 3) == a\nend", "    -- TODO: implement this function\n    return false\nend",
  "    if a == 0 then\n        return true\n    end\n    if a < 0 then\n        a\
    \ = -a\n    end\n    local x = math.floor(math.pow(a, 1/3))\n    return x * x\
    \ * x == a\nend", "    -- your code here\n    return false\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    -- TODO: implement this function\nend",
  "    -- TODO: implement this function\nend", "    local b = math.floor(math.pow(a,\
    \ 1/3))\n    return b * b * b == a\nend", "    -- TODO: implement this function\n\
    \    return false\nend", "  -- your code here\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    -- TODO: implement this function\n  \
    \  return false\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    local\
    \ b = math.floor(math.pow(a, 1/3))\n    return b*b*b == a\nend", "    -- TODO:\
    \ implement this function\nend", "    -- your code here\n    return false\nend",
  "\tlocal b = math.floor(math.pow(a, 1/3))\n\treturn b*b*b == a\nend", "    local\
    \ b = math.floor(math.pow(a, 1/3))\n    return b * b * b == a\nend", "    -- your\
    \ code here\n    return false\nend", "\treturn math.floor(math.pow(a, 1/3))^3\
    \ == a\nend", "    -- your code here\n    return true\nend", "    -- your code\
    \ here\n    if a == 0 then\n        return true\n    end\n    if a < 0 then\n\
    \        a = -a\n    end\n    local x = math.floor(math.pow(a, 1/3))\n    return\
    \ x * x * x == a\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    if a\
    \ == 0 then\n        return true\n    end\n    if a < 0 then\n        a = -a\n\
    \    end\n    local x = math.floor(math.pow(a, 1/3))\n    return x * x * x ==\
    \ a\nend", "    if a == 0 then\n        return true\n    end\n    if a < 0 then\n\
    \        a = -a\n    end\n    local x = math.floor(math.pow(a, 1/3))\n    return\
    \ x * x * x == a\nend", "    -- your code here\n    local x = math.sqrt(a)\n \
    \   if x == math.floor(x) then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    return math.abs(a) ==\
    \ math.abs(a)^(1/3)\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    return\
    \ (a == 0) or (a == 1) or (a == -1) or (math.sqrt(a) % 1 == 0)\nend", "\treturn\
    \ math.sqrt(a) % 1 == 0\nend", "    -- your code here\nend", "    if a == 0 then\n\
    \        return true\n    end\n    if a < 0 then\n        a = -a\n    end\n  \
    \  local i = 0\n    while i * i * i <= a do\n        if i * i * i == a then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "    if a < 0 then\n        a = -a\n    end\n    if a == 0 then\n        return\
    \ true\n    end\n    local x = math.floor(math.pow(a, 1/3))\n    return x*x*x\
    \ == a\nend", "\t-- TODO: implement this function\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    -- TODO: implement this function\n\
    \    return false\nend", "\tif a == 0 then\n\t\treturn true\n\tend\n\tif a < 0\
    \ then\n\t\ta = -a\n\tend\n\tlocal i = 1\n\twhile i * i * i <= a do\n\t\tif i\
    \ * i * i == a then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "    if a < 0 then\n        a = -a\n    end\n    if a == 0 then\n        return\
    \ true\n    end\n    local i = 1\n    while i * i * i <= a do\n        if i *\
    \ i * i == a then\n            return true\n        end\n        i = i + 1\n \
    \   end\n    return false\nend", "    -- your code here\n    return false\nend",
  "    -- TODO: implement this function\n    return false\nend", "  local n = math.floor(math.pow(a,\
    \ 1/3))\n  return n*n*n == a\nend", "    return a == 0 or a == 1 or a == -1 or\
    \ math.pow(math.ceil(math.pow(a, 1/3)), 3) == a\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    return a == 0 or a == 1 or a ==\
    \ -1 or math.sqrt(a) % 1 == 0\nend", "    -- TODO: implement this function\n \
    \   return false\nend", "    return math.abs(a) == math.abs(a)^(1/3)\nend", " \
    \   -- TODO: implement this function\n    return false\nend", "    -- TODO: implement\
    \ this function\n    local b = math.sqrt(a)\n    local c = math.pow(b, 3)\n  \
    \  if c == a then\n        return true\n    else\n        return false\n    end\n\
    end", "    -- TODO: implement this function\nend", "    -- TODO: implement the\
    \ function\n    return false\nend", "    if a < 0 then\n        a = -a\n    end\n\
    \    local b = math.floor(math.pow(a, 1/3))\n    return b * b * b == a\nend",
  "    -- your code here\n    return false\nend", "    -- your code here\n    if a\
    \ < 0 then\n        a = -a\n    end\n    if a == 0 then\n        return true\n\
    \    end\n    local i = 1\n    while i * i * i <= a do\n        if i * i * i ==\
    \ a then\n            return true\n        end\n        i = i + 1\n    end\n \
    \   return false\nend", "    -- TODO: implement this function\n    -- Hint: you\
    \ may use the math.sqrt function\n    -- Hint: you may use the math.modf function\n\
    \    -- Hint: you may use the math.abs function\n    -- Hint: you may use the\
    \ math.floor function\n    -- Hint: you may use the math.ceil function\n    --\
    \ Hint: you may use the math.pow function\n    -- Hint: you may use the math.fmod\
    \ function\n    -- Hint: you may use the math.pi function\n    -- Hint: you may\
    \ use the math.exp function\n    -- Hint: you may use the math.log function\n\
    \    -- Hint: you may use the math.log10 function\n    -- Hint: you may use the\
    \ math.sin function\n    -- Hint: you may use the math.cos function\n    -- Hint:\
    \ you may use the math.tan function\n    -- Hint: you may use the math.asin function\n\
    \    -- Hint: you may use the math.acos function\n    -- Hint: you may use the\
    \ math.atan function\n    -- Hint: you may use the math.sinh function\n    --\
    \ Hint: you may use the math.cosh function\n    -- Hint: you may use the math.tanh\
    \ function\n    -- Hint: you may use the math.deg function\n    -- Hint: you may\
    \ use the math.rad function\n    -- Hint: you may use the math.random function\n\
    \    -- Hint: you may use the math.randomseed function\n    -- Hint: you may use\
    \ the math.max function\n    -- Hint: you may use the math.min function\n    --\
    \ Hint: you may use the math.mod function\n    -- Hint: you may use the math.frexp\
    \ function\n    -- Hint: you may use the math.ldexp function\n    -- Hint: you\
    \ may use the math.ult function\n    -- Hint: you may use the math.huge function\n\
    \    -- Hint: you may use the math.type function\n    -- Hint: you may use the\
    \ math.tointeger function\n    -- Hint: you may use the math.tonumber function\n\
    \    -- Hint: you may use the math.", "    return math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "\treturn math.sqrt(a) % 1 == 0\nend", "    return a ==\
    \ 0 or a == 1 or a == -1 or a == 8 or a == 27 or a == -8 or a == -27\nend", " \
    \   -- TODO: implement this function\n    return false\nend", "  -- your code\
    \ here\nend", "    -- TODO: implement this function\n    return false\nend", " \
    \   -- your code here\nend", "    -- TODO: implement this function\n    return\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "    return a == 0 or a == 1 or a == -1 or math.sqrt(a) % 1 == 0\nend", "    --\
    \ TODO: implement this function\n    return false\nend", "    -- your code here\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    return\
    \ a == 0 or a == 1 or a == -1 or a == 8 or a == 27 or a == -8 or a == -27\nend",
  "    return math.abs(a) == math.abs(a)^(1/3)\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    -- TODO: implement this function\n  \
    \  return false\nend", "    -- TODO: write your code here\n    return false\n\
    end", "    -- TODO: implement this function\nend", "    if a == 0 then\n     \
    \   return true\n    end\n    local x = math.floor(math.pow(math.abs(a), 1/3))\n\
    \    return x*x*x == a\nend", "    -- TODO: implement this function\n    return\
    \ false\nend", "  return a == 0 or a == 1 or a == -1 or math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    local x = math.floor(math.pow(a, 1/3))\n    return math.pow(x, 3) ==\
    \ a\nend", "    local b = math.floor(math.pow(a, 1/3))\n    return math.pow(b,\
    \ 3) == a\nend", "    local b = math.floor(math.pow(a, 1/3))\n    return a ==\
    \ b*b*b\nend", "    local x = math.floor(math.pow(a, 1/3))\n    return x * x *\
    \ x == a\nend", "    -- TODO: implement this function\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    -- TODO: implement this function\n\
    end", "    -- TODO: implement this function\n    return false\nend", "  if a ==\
    \ 0 then\n    return true\n  end\n  if a < 0 then\n    a = -a\n  end\n  local\
    \ x = math.floor(math.pow(a, 1/3))\n  return a == x * x * x\nend", "    return\
    \ a == 0 or a == 1 or a == -1 or math.sqrt(a) % 1 == 0\nend", "    if a == 0 then\
    \ return true end\n    if a < 0 then a = -a end\n    local x = math.floor(math.pow(a,\
    \ 1/3))\n    return x * x * x == a\nend", "  -- TODO: implement this function\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    -- your\
    \ code here\n    return false\nend", "    -- TODO: implement this function\n \
    \   return false\nend", "    -- TODO: implement the function\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    -- TODO: implement this function\n  \
    \  return false\nend", "    return a == 0 or a == 1 or a == -1 or math.sqrt(a)\
    \ % 1 == 0\nend", "    if a == 0 then\n        return true\n    end\n    if a\
    \ < 0 then\n        a = -a\n    end\n    local n = math.floor(math.pow(a, 1/3))\n\
    \    return n*n*n == a\nend", "    local b = math.sqrt(a)\n    return b*b*b ==\
    \ a\nend", "    -- your code here\n    return false\nend", "    if a == 0 then\n\
    \        return true\n    end\n    if a < 0 then\n        a = -a\n    end\n  \
    \  local x = math.floor(math.pow(a, 1/3))\n    return x * x * x == a\nend", " \
    \   -- TODO: implement this function\n    return false\nend", "    -- your code\
    \ here\n    return false\nend", "    return math.sqrt(a) % 1 == 0\nend", "   \
    \ -- TODO: implement this function\n    local b = math.sqrt(a)\n    if b == math.floor(b)\
    \ then\n        local c = math.sqrt(b)\n        if c == math.floor(c) then\n \
    \           return true\n        else\n            return false\n        end\n\
    \    else\n        return false\n    end\nend", "\t-- TODO: implement this function\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    if a\
    \ == 0 then\n        return true\n    end\n    if a < 0 then\n        a = -a\n\
    \    end\n    local x = math.floor(math.pow(a, 1/3))\n    return x*x*x == a\n\
    end", "    -- TODO: implement the function\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    -- TODO: implement this function\n  \
    \  return false\nend", "    local i = 1\n    while i * i * i <= a do\n       \
    \ if i * i * i == a then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "    if a < 0 then\n        a = -a\n \
    \   end\n    if a == 0 then\n        return true\n    end\n    local b = math.floor(math.pow(a,\
    \ 1/3))\n    return b * b * b == a\nend", "    -- your code here\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    local\
    \ x = math.floor(math.pow(a, 1/3))\n    return x*x*x == a\nend", "    local b\
    \ = math.sqrt(a)\n    if math.floor(b) == b then\n        return true\n    else\n\
    \        return false\n    end\nend", "  -- your code here\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    -- TODO: implement this function\n  \
    \  local i = 0\n    while i*i*i < a do\n        i = i + 1\n    end\n    if i*i*i\
    \ == a then\n        return true\n    else\n        return false\n    end\nend",
  "    -- TODO: implement the function\nend", "  -- your code here\n  local b = math.sqrt(a)\n\
    \  if b == math.floor(b) then\n    return true\n  else\n    return false\n  end\n\
    end", "    return math.abs(a) == math.abs(a)^(1/3)\nend", "\tlocal b = math.floor(math.pow(a,\
    \ 1/3))\n\treturn b*b*b == a\nend", "    -- your code here\nend", "    -- your\
    \ code here\n    local b = math.sqrt(a)\n    if b == math.floor(b) then\n    \
    \    return true\n    else\n        return false\n    end\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "\t-- your code here\nend", "    -- your code\
    \ here\n    if a == 0 then\n        return true\n    end\n    if a < 0 then\n\
    \        a = -a\n    end\n    local x = math.floor(math.pow(a, 1/3))\n    return\
    \ math.pow(x, 3) == a\nend", "    -- your code here\n    return false\nend", " \
    \   -- TODO: implement this function\n    return false\nend", "    -- your code\
    \ here\nend", "    -- TODO: implement this function\nend", "    if a < 0 then\n\
    \        a = -a\n    end\n    if a == 0 then\n        return true\n    end\n \
    \   local i = 1\n    while i * i * i <= a do\n        if i * i * i == a then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "    -- TODO: implement this function\n    if a == 0 then\n        return true\n\
    \    end\n    if a < 0 then\n        a = -a\n    end\n    local i = 1\n    while\
    \ i * i * i <= a do\n        if i * i * i == a then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    if a ==\
    \ 0 then\n        return true\n    end\n    if a < 0 then\n        a = -a\n  \
    \  end\n    local x = math.floor(math.pow(a, 1/3))\n    return x * x * x == a\n\
    end", "    -- your code here\n    return false\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    -- TODO: implement this function\n\
    \    -- HINT: you may use math.sqrt\n    -- HINT: you may use math.floor\n   \
    \ -- HINT: you may use math.pow\n    -- HINT: you may use math.abs\n    local\
    \ b = math.sqrt(math.abs(a))\n    if math.floor(b) == b and math.pow(b, 3) ==\
    \ math.abs(a) then\n        return true\n    else\n        return false\n    end\n\
    end", "    -- your code here\n    return false\nend", "    return math.sqrt(a)\
    \ % 1 == 0\nend", "    -- TODO: implement this function\n    return false\nend",
  "    -- Write your code here\n    return false\nend", "    -- TODO: implement the\
    \ function\nend", "    if a == 0 then\n        return true\n    end\n    if a\
    \ < 0 then\n        a = -a\n    end\n    local i = 1\n    while i * i * i <= a\
    \ do\n        if i * i * i == a then\n            return true\n        end\n \
    \       i = i + 1\n    end\n    return false\nend", "  -- TODO: implement this\
    \ function\nend", "    -- TODO: implement this function\n    return false\nend",
  "    -- TODO: implement this function\n    return false\nend", "    -- your code\
    \ here\n    return false\nend", "    if a == 0 then\n        return true\n   \
    \ end\n    if a < 0 then\n        a = -a\n    end\n    local x = math.floor(math.pow(a,\
    \ 1/3))\n    return x*x*x == a\nend", "    if a==0 then\n        return true\n\
    \    end\n    if a<0 then\n        a=-a\n    end\n    local i=1\n    while i*i*i<=a\
    \ do\n        if i*i*i==a then\n            return true\n        end\n       \
    \ i=i+1\n    end\n    return false\nend", "    -- your code here\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    -- your\
    \ code here\n    return false\nend", "    -- TODO: implement this function\n \
    \   return false\nend", "    if a == 0 then return true end\n    if a < 0 then\
    \ a = -a end\n    local x = math.floor(math.pow(a, 1/3))\n    return x*x*x ==\
    \ a\nend", "    -- TODO: implement this function\n    return false\nend", "  \
    \  -- TODO: implement this function\n    return false\nend", "    -- TODO: implement\
    \ this function\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    -- TODO: implement iscube function\n    if a == 0 then\n        return\
    \ true\n    end\n    if a < 0 then\n        a = -a\n    end\n    local i = 1\n\
    \    while i * i * i <= a do\n        if i * i * i == a then\n            return\
    \ true\n        end\n        i = i + 1\n    end\n    return false\nend", "   \
    \ -- your code here\nend", "    -- your code here\nend", "    return a == 0 or\
    \ a == 1 or a == -1 or (a > 0 and a % math.floor(math.pow(a, 1/3)) == 0)\nend",
  "    local b = math.ceil(math.pow(a, 1/3))\n    return b * b * b == a\nend", "\t\
    return a == 0 or (a > 0 and math.pow(math.floor(math.pow(a, 1/3)), 3) == a)\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    if a\
    \ == 0 then\n        return true\n    end\n    if a < 0 then\n        a = -a\n\
    \    end\n    local i = 1\n    while i * i * i <= a do\n        if i * i * i ==\
    \ a then\n            return true\n        end\n        i = i + 1\n    end\n \
    \   return false\nend", "    -- your code here\n    if a == 0 then\n        return\
    \ true\n    end\n    if a < 0 then\n        a = -a\n    end\n    local i = 1\n\
    \    while i*i*i <= a do\n        if i*i*i == a then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    if a == 0 then return\
    \ true end\n    if a < 0 then a = -a end\n    local x = math.floor(math.pow(a,\
    \ 1/3))\n    return x*x*x == a\nend", "    -- your code here\n    if a == 0 then\n\
    \        return true\n    end\n    if a < 0 then\n        a = -a\n    end\n  \
    \  local x = math.floor(math.pow(a, 1/3))\n    if math.pow(x, 3) == a then\n \
    \       return true\n    else\n        return false\n    end\nend", "    -- TODO:\
    \ implement this function\n    if a == 0 then\n        return true\n    end\n\
    \    if a < 0 then\n        a = -a\n    end\n    local i = 1\n    while i * i\
    \ * i <= a do\n        if i * i * i == a then\n            return true\n     \
    \   end\n        i = i + 1\n    end\n    return false\nend", "    return math.pow(math.floor(math.pow(a,\
    \ 1/3)), 3) == a\nend", "    local x = math.floor(math.pow(a, 1/3))\n    return\
    \ x * x * x == a\nend", "    -- TODO: implement this function\n    local x = math.floor(math.pow(a,1/3))\n\
    \    if math.pow(x,3) == a then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    return math.sqrt(a) % 1 == 0\nend", "    -- your code here\n    local\
    \ n = math.floor(math.cbrt(a))\n    return a == n * n * n\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    -- TODO: implement this\
    \ function.\n    -- Hint: you may use the math.sqrt function.\n    return false\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

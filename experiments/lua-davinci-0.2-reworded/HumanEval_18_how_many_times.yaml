name: HumanEval_18_how_many_times
language: lua
prompt: "-- Find how many times a given substring can be found in the original string.\
  \ Count overlaping cases.\n-- >>> how_many_times('', 'a')\n-- 0\n-- >>> how_many_times('aaa',\
  \ 'a')\n-- 3\n-- >>> how_many_times('aaaa', 'aa')\n-- 3\nlocal function how_many_times(string,\
  \ substring)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = how_many_times\n\
  \    lu.assertEquals(candidate('', 'x'), 0)\n    lu.assertEquals(candidate('xyxyxyx',\
  \ 'x'), 4)\n    lu.assertEquals(candidate('cacacacac', 'cac'), 4)\n    lu.assertEquals(candidate('john\
  \ doe', 'john'), 1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count = 0\n    local i = 1\n    local j = 1\n    while i\
    \ <= #string do\n        if string:sub(i, i + #substring - 1) == substring then\n\
    \            count = count + 1\n            i = i + #substring\n        else\n\
    \            i = i + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "  local count = 0\n  local i = 1\n  while true do\n    local j = string.find(string,\
    \ substring, i, true)\n    if j == nil then\n      break\n    end\n    count =\
    \ count + 1\n    i = j + 1\n  end\n  return count\nend", "    local count = 0\n\
    \    local pos = 1\n    while true do\n        pos = string.find(string, substring,\
    \ pos, true)\n        if not pos then\n            break\n        end\n      \
    \  count = count + 1\n        pos = pos + 1\n    end\n    return count\nend",
  "    local count = 0\n    local start = 1\n    local index = string.find(string,\
    \ substring, start)\n    while index do\n        count = count + 1\n        start\
    \ = index + 1\n        index = string.find(string, substring, start)\n    end\n\
    \    return count\nend", "    local count = 0\n    local start = 1\n    while\
    \ true do\n        local pos = string:find(substring, start, true)\n        if\
    \ not pos then\n            break\n        end\n        count = count + 1\n  \
    \      start = pos + 1\n    end\n    return count\nend", "  local count = 0\n\
    \  local i = 1\n  while i <= #string do\n    local j = string:find(substring,\
    \ i, true)\n    if j == nil then\n      break\n    end\n    count = count + 1\n\
    \    i = j + 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= #string do\n    local j = string:find(substring, i, true)\n    if\
    \ j then\n      count = count + 1\n      i = j + 1\n    else\n      break\n  \
    \  end\n  end\n  return count\nend", "  local count = 0\n  local index = 1\n \
    \ while index <= #string do\n    local i, j = string:find(substring, index, true)\n\
    \    if i == nil then\n      break\n    end\n    count = count + 1\n    index\
    \ = j + 1\n  end\n  return count\nend", "    local count = 0\n    local i = 1\n\
    \    while true do\n        local j = string.find(string, substring, i, true)\n\
    \        if j == nil then\n            break\n        end\n        count = count\
    \ + 1\n        i = j + 1\n    end\n    return count\nend", "    local count =\
    \ 0\n    local start = 1\n    local last_start = 1\n    while true do\n      \
    \  start = string.find(string, substring, start, true)\n        if start == nil\
    \ then\n            break\n        end\n        count = count + 1\n        start\
    \ = start + 1\n    end\n    return count\nend", "    local count = 0\n    local\
    \ i = 1\n    while i <= #string do\n        local j = string.find(string, substring,\
    \ i, true)\n        if j == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = j + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local i = 1\n    local j = 1\n    while i <= #string do\n\
    \        if string:sub(i, i + #substring - 1) == substring then\n            count\
    \ = count + 1\n            i = i + #substring\n        else\n            i = i\
    \ + 1\n        end\n    end\n    return count\nend", "  local count = 0\n  local\
    \ i = 0\n  while true do\n    i = string:find(substring, i + 1, true)\n    if\
    \ i == nil then\n      break\n    end\n    count = count + 1\n  end\n  return\
    \ count\nend", "  local count = 0\n  local i = 1\n  local j = 1\n  while i <=\
    \ #string do\n    if string:sub(i, i + #substring - 1) == substring then\n   \
    \   count = count + 1\n      i = i + #substring\n    else\n      i = i + 1\n \
    \   end\n  end\n  return count\nend", "    local count = 0\n    local i = 1\n\
    \    while i <= #string do\n        local j = string.find(string, substring, i,\
    \ true)\n        if j == nil then\n            break\n        end\n        count\
    \ = count + 1\n        i = j + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    local i = 0\n    while true do\n        i = string.find(string,\
    \ substring, i + 1, true)\n        if i == nil then\n            break\n     \
    \   end\n        count = count + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    local start = 1\n    while true do\n        local pos = string:find(substring,\
    \ start, true)\n        if not pos then\n            break\n        end\n    \
    \    count = count + 1\n        start = pos + 1\n    end\n    return count\nend",
  "  local count = 0\n  local start_index = 1\n  while true do\n    local start_index,\
    \ end_index = string.find(string, substring, start_index)\n    if start_index\
    \ == nil then break end\n    count = count + 1\n    start_index = end_index +\
    \ 1\n  end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i\
    \ <= #string do\n    local j = string:find(substring, i, true)\n    if j then\n\
    \      count = count + 1\n      i = j + 1\n    else\n      break\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    local start = 1\n    while true\
    \ do\n        local i = string.find(string, substring, start, true)\n        if\
    \ i == nil then\n            break\n        end\n        count = count + 1\n \
    \       start = i + 1\n    end\n    return count\nend", "    local count = 0\n\
    \    local start = 1\n    while true do\n        local pos = string:find(substring,\
    \ start, true)\n        if not pos then\n            break\n        end\n    \
    \    count = count + 1\n        start = pos + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j then\n           \
    \ count = count + 1\n            i = j + 1\n        else\n            break\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    local\
    \ last_index = 0\n    while true do\n        local index = string:find(substring,\
    \ last_index + 1, true)\n        if not index then\n            break\n      \
    \  end\n        count = count + 1\n        last_index = index\n    end\n    return\
    \ count\nend", "  local count = 0\n  local index = 1\n  while index <= #string\
    \ do\n    local i, j = string:find(substring, index, true)\n    if i == nil then\n\
    \      break\n    end\n    count = count + 1\n    index = j + 1\n  end\n  return\
    \ count\nend", "    local count = 0\n    local i = 1\n    while i <= #string do\n\
    \        local j = string.find(string, substring, i, true)\n        if j == nil\
    \ then\n            break\n        end\n        count = count + 1\n        i =\
    \ j + 1\n    end\n    return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= #string do\n    local j = string:find(substring, i, true)\n    if\
    \ j == nil then\n      break\n    end\n    count = count + 1\n    i = j + 1\n\
    \  end\n  return count\nend", "    local count = 0\n    local i = 1\n    while\
    \ true do\n        local j = string.find(string, substring, i, true)\n       \
    \ if j == nil then\n            break\n        end\n        count = count + 1\n\
    \        i = j + 1\n    end\n    return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while i <= #string do\n    local j = string:find(substring, i, true)\n\
    \    if j then\n      count = count + 1\n      i = j + 1\n    else\n      break\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    local start_index\
    \ = 1\n    while true do\n        local start_index, end_index = string.find(string,\
    \ substring, start_index)\n        if start_index == nil then\n            break\n\
    \        end\n        count = count + 1\n        start_index = end_index + 1\n\
    \    end\n    return count\nend", "\tlocal count = 0\n\tlocal pos = 1\n\twhile\
    \ true do\n\t\tpos = string:find(substring, pos, true)\n\t\tif not pos then break\
    \ end\n\t\tcount = count + 1\n\t\tpos = pos + 1\n\tend\n\treturn count\nend",
  "    local count = 0\n    local start = 1\n    while true do\n        local pos\
    \ = string:find(substring, start, true)\n        if not pos then\n           \
    \ break\n        end\n        count = count + 1\n        start = pos + 1\n   \
    \ end\n    return count\nend", "    local count = 0\n    local i = 1\n    while\
    \ i <= #string do\n        local j = string.find(string, substring, i, true)\n\
    \        if j then\n            count = count + 1\n            i = j + 1\n   \
    \     else\n            break\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    local pos = 1\n    while true do\n        local new_pos\
    \ = string:find(substring, pos, true)\n        if new_pos then\n            count\
    \ = count + 1\n            pos = new_pos + 1\n        else\n            break\n\
    \        end\n    end\n    return count\nend", "  if string == '' or substring\
    \ == '' then\n    return 0\n  end\n  local count = 0\n  local i = 1\n  while i\
    \ <= #string do\n    local j = string.find(string, substring, i, true)\n    if\
    \ j then\n      count = count + 1\n      i = j + 1\n    else\n      break\n  \
    \  end\n  end\n  return count\nend", "    local count = 0\n    local index = 1\n\
    \    while index <= #string do\n        local i, j = string.find(string, substring,\
    \ index, true)\n        if i then\n            count = count + 1\n           \
    \ index = j + 1\n        else\n            break\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    local i = 1\n    while true do\n    \
    \    local j = string.find(string, substring, i, true)\n        if j == nil then\n\
    \            break\n        end\n        count = count + 1\n        i = j + 1\n\
    \    end\n    return count\nend", "  local count = 0\n  local i = 1\n  while i\
    \ <= #string do\n    local j = string:find(substring, i, true)\n    if j == nil\
    \ then break end\n    count = count + 1\n    i = j + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local start = 1\n  while true do\n    local index\
    \ = string:find(substring, start, true)\n    if not index then\n      break\n\
    \    end\n    count = count + 1\n    start = index + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 0\n  while i < #string do\n    local j =\
    \ string:find(substring, i + 1, true)\n    if j then\n      count = count + 1\n\
    \      i = j\n    else\n      break\n    end\n  end\n  return count\nend", " \
    \   local count = 0\n    local index = 0\n    while true do\n        index = string.find(string,\
    \ substring, index + 1, true)\n        if index == nil then\n            break\n\
    \        end\n        count = count + 1\n    end\n    return count\nend", "  local\
    \ count = 0\n  local i = 0\n  while true do\n    i = string:find(substring, i\
    \ + 1, true)\n    if i == nil then\n      break\n    end\n    count = count +\
    \ 1\n  end\n  return count\nend", "  local count = 0\n  local start_index = 1\n\
    \  while true do\n    local start_index, end_index = string.find(string, substring,\
    \ start_index)\n    if start_index == nil then\n      break\n    end\n    count\
    \ = count + 1\n    start_index = end_index + 1\n  end\n  return count\nend", " \
    \   local count = 0\n    local i = 0\n    while true do\n        i = string:find(substring,\
    \ i + 1, true)\n        if i == nil then break end\n        count = count + 1\n\
    \    end\n    return count\nend", "    local count = 0\n    local i = 1\n    while\
    \ i <= #string do\n        local j = string.find(string, substring, i, true)\n\
    \        if j == nil then\n            break\n        end\n        count = count\
    \ + 1\n        i = j + 1\n    end\n    return count\nend", "  local count = 0\n\
    \  local i = 1\n  while true do\n    local j = string.find(string, substring,\
    \ i, true)\n    if j == nil then\n      break\n    end\n    count = count + 1\n\
    \    i = j + 1\n  end\n  return count\nend", "    local count = 0\n    local i\
    \ = 1\n    while i <= #string do\n        local j = string.find(string, substring,\
    \ i, true)\n        if j == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = j + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local i = 1\n    while i <= #string do\n        local j\
    \ = string.find(string, substring, i, true)\n        if j == nil then\n      \
    \      break\n        end\n        count = count + 1\n        i = j + 1\n    end\n\
    \    return count\nend", "    local count = 0\n    local start = 1\n    while\
    \ true do\n        local pos = string:find(substring, start, true)\n        if\
    \ not pos then\n            break\n        end\n        count = count + 1\n  \
    \      start = pos + 1\n    end\n    return count\nend", "    local count = 0\n\
    \    local i = 1\n    while true do\n        local j = string.find(string, substring,\
    \ i, true)\n        if j == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = j + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local index = 1\n    while index <= #string do\n      \
    \  local i, j = string.find(string, substring, index, true)\n        if i then\n\
    \            count = count + 1\n            index = j + 1\n        else\n    \
    \        break\n        end\n    end\n    return count\nend", "  local count =\
    \ 0\n  local start = 1\n  while true do\n    local pos = string:find(substring,\
    \ start, true)\n    if not pos then break end\n    count = count + 1\n    start\
    \ = pos + 1\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #string\
    \ do\n    if string:sub(i, i + #substring - 1) == substring then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for i = 1, #string do\n        if string:sub(i, i + #substring - 1) == substring\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  local start = 1\n  while true do\n    local start_index\
    \ = string.find(string, substring, start, true)\n    if start_index == nil then\n\
    \      break\n    end\n    count = count + 1\n    start = start_index + 1\n  end\n\
    \  return count\nend", "    local count = 0\n    local i = 1\n    while i <= #string\
    \ do\n        local j = string.find(string, substring, i, true)\n        if j\
    \ == nil then\n            break\n        end\n        count = count + 1\n   \
    \     i = j + 1\n    end\n    return count\nend", "    local count = 0\n    local\
    \ start = 1\n    while true do\n        local pos = string:find(substring, start,\
    \ true)\n        if not pos then break end\n        count = count + 1\n      \
    \  start = pos + 1\n    end\n    return count\nend", "    local count = 0\n  \
    \  local start = 1\n    while true do\n        local pos = string:find(substring,\
    \ start, true)\n        if not pos then\n            break\n        end\n    \
    \    count = count + 1\n        start = pos + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "    local count = 0\n    local index = 1\n    while index <= #string do\n     \
    \   local i, j = string.find(string, substring, index, true)\n        if i then\n\
    \            count = count + 1\n            index = j + 1\n        else\n    \
    \        break\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    local i = 1\n    while i <= #string do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j then\n            count = count + 1\n    \
    \        i = j + 1\n        else\n            break\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    local i = 1\n    local j = 1\n\
    \    while i <= #string do\n        if string:sub(i, i + #substring - 1) == substring\
    \ then\n            count = count + 1\n            i = i + #substring\n      \
    \  else\n            i = i + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j == nil then\n    \
    \        break\n        end\n        count = count + 1\n        i = j + 1\n  \
    \  end\n    return count\nend", "    local count = 0\n    local start = 1\n  \
    \  while true do\n        local pos = string:find(substring, start, true)\n  \
    \      if not pos then\n            break\n        end\n        count = count\
    \ + 1\n        start = pos + 1\n    end\n    return count\nend", "  local count\
    \ = 0\n  local i = 0\n  while true do\n    i = string:find(substring, i + 1, true)\n\
    \    if i == nil then\n      break\n    end\n    count = count + 1\n  end\n  return\
    \ count\nend", "    local count = 0\n    local i = 0\n    while true do\n    \
    \    i = string:find(substring, i + 1, true)\n        if i == nil then\n     \
    \       break\n        end\n        count = count + 1\n    end\n    return count\n\
    end", "  local count = 0\n  local index = 0\n  while true do\n    index = string.find(string,\
    \ substring, index + 1, true)\n    if not index then\n      break\n    end\n \
    \   count = count + 1\n  end\n  return count\nend", "    local count = 0\n   \
    \ local i = 0\n    while true do\n        i = string:find(substring, i + 1, true)\n\
    \        if i == nil then\n            break\n        end\n        count = count\
    \ + 1\n    end\n    return count\nend", "  local count = 0\n  local start = 1\n\
    \  while true do\n    local index = string:find(substring, start, true)\n    if\
    \ not index then\n      break\n    end\n    count = count + 1\n    start = index\
    \ + 1\n  end\n  return count\nend", "    local count = 0\n    local i = 0\n  \
    \  while true do\n        local j = string.find(string, substring, i + 1, true)\n\
    \        if j == nil then\n            break\n        end\n        count = count\
    \ + 1\n        i = j\n    end\n    return count\nend", "    local count = 0\n\
    \    local i = 1\n    while true do\n        local j = string.find(string, substring,\
    \ i, true)\n        if j == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = j + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local i = 1\n    while i <= #string do\n        local j\
    \ = string.find(string, substring, i, true)\n        if j == nil then\n      \
    \      break\n        end\n        count = count + 1\n        i = j + 1\n    end\n\
    \    return count\nend", "    local count = 0\n    local index = 1\n    while\
    \ index <= #string do\n        local next_index = string:find(substring, index,\
    \ true)\n        if next_index then\n            count = count + 1\n         \
    \   index = next_index + 1\n        else\n            break\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    local index = 1\n   \
    \ while true do\n        local next_index = string:find(substring, index, true)\n\
    \        if next_index then\n            count = count + 1\n            index\
    \ = next_index + 1\n        else\n            break\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    local start = 1\n    while true\
    \ do\n        local pos = string:find(substring, start, true)\n        if not\
    \ pos then break end\n        count = count + 1\n        start = pos + 1\n   \
    \ end\n    return count\nend", "    local count = 0\n    local i = 1\n    while\
    \ true do\n        local j = string.find(string, substring, i, true)\n       \
    \ if j == nil then\n            break\n        end\n        count = count + 1\n\
    \        i = j + 1\n    end\n    return count\nend", "    local count = 0\n  \
    \  local i = 1\n    while true do\n        local j = string.find(string, substring,\
    \ i, true)\n        if j == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = j + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local start_pos = 1\n    while true do\n        local pos\
    \ = string:find(substring, start_pos, true)\n        if not pos then break end\n\
    \        count = count + 1\n        start_pos = pos + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local i = 1\n    local j = 1\n    while i <= #string\
    \ do\n        if string:sub(i, i + #substring - 1) == substring then\n       \
    \     count = count + 1\n            i = i + #substring\n        else\n      \
    \      i = i + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "    local count = 0\n    local start = 1\n    while true do\n        local index\
    \ = string:find(substring, start, true)\n        if not index then\n         \
    \   break\n        end\n        count = count + 1\n        start = index + 1\n\
    \    end\n    return count\nend", "    local count = 0\n    local i = 1\n    while\
    \ true do\n        i = string.find(string, substring, i, true)\n        if i ==\
    \ nil then\n            break\n        end\n        count = count + 1\n      \
    \  i = i + 1\n    end\n    return count\nend", "    local count = 0\n    local\
    \ i = 1\n    while true do\n        local j = string.find(string, substring, i,\
    \ true)\n        if j == nil then\n            break\n        end\n        count\
    \ = count + 1\n        i = j + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    local start = 1\n    while true do\n        local index = string:find(substring,\
    \ start, true)\n        if not index then\n            break\n        end\n  \
    \      count = count + 1\n        start = index + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local index = 1\n    while index <= #string do\n\
    \        local i, j = string.find(string, substring, index, true)\n        if\
    \ i then\n            count = count + 1\n            index = j + 1\n        else\n\
    \            break\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    local index = 0\n    while true do\n        index = string.find(string,\
    \ substring, index + 1, true)\n        if index == nil then\n            break\n\
    \        end\n        count = count + 1\n    end\n    return count\nend", "  \
    \  local count = 0\n    local start = 1\n    while true do\n        local index\
    \ = string:find(substring, start, true)\n        if not index then\n         \
    \   break\n        end\n        count = count + 1\n        start = index + 1\n\
    \    end\n    return count\nend", "  local count = 0\n  local i = 1\n  while i\
    \ <= #string do\n    local j = string:find(substring, i, true)\n    if j then\n\
    \      count = count + 1\n      i = j + 1\n    else\n      break\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  local start = 1\n  while true do\n\
    \    local pos = string:find(substring, start, true)\n    if not pos then break\
    \ end\n    count = count + 1\n    start = pos + 1\n  end\n  return count\nend",
  "  local count = 0\n  local start_index = 1\n  while true do\n    local start_index,\
    \ end_index = string.find(string, substring, start_index)\n    if start_index\
    \ == nil then\n      break\n    end\n    count = count + 1\n    start_index =\
    \ end_index + 1\n  end\n  return count\nend", "  local count = 0\n  local start_index\
    \ = 1\n  while true do\n    local start_index, end_index = string.find(string,\
    \ substring, start_index)\n    if start_index == nil then\n      break\n    end\n\
    \    count = count + 1\n    start_index = end_index + 1\n  end\n  return count\n\
    end", "    local count = 0\n    local start = 1\n    while true do\n        local\
    \ index = string:find(substring, start, true)\n        if not index then\n   \
    \         break\n        end\n        count = count + 1\n        start = index\
    \ + 1\n    end\n    return count\nend", "    local count = 0\n    local i = 0\n\
    \    while true do\n        i = string.find(string, substring, i + 1, true)\n\
    \        if i == nil then\n            break\n        end\n        count = count\
    \ + 1\n    end\n    return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ i <= #string do\n    local j = string:find(substring, i, true)\n    if j ==\
    \ nil then\n      break\n    end\n    count = count + 1\n    i = j + 1\n  end\n\
    \  return count\nend", "    local count = 0\n    local i = 1\n    while i <= #string\
    \ do\n        local j = string.find(string, substring, i, true)\n        if j\
    \ == nil then\n            break\n        end\n        count = count + 1\n   \
    \     i = j + 1\n    end\n    return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while true do\n    local j = string.find(string, substring, i, true)\n\
    \    if j == nil then\n      break\n    end\n    count = count + 1\n    i = j\
    \ + 1\n  end\n  return count\nend", "    local count = 0\n    local start = 1\n\
    \    while true do\n        local pos = string:find(substring, start, true)\n\
    \        if not pos then\n            break\n        end\n        count = count\
    \ + 1\n        start = pos + 1\n    end\n    return count\nend", "    local count\
    \ = 0\n    local index = 0\n    while true do\n        index = string.find(string,\
    \ substring, index + 1, true)\n        if index == nil then\n            break\n\
    \        end\n        count = count + 1\n    end\n    return count\nend", "  local\
    \ count = 0\n  local start_index = 1\n  while true do\n    local start_index,\
    \ end_index = string.find(string, substring, start_index)\n    if start_index\
    \ == nil then\n      break\n    end\n    count = count + 1\n    start_index =\
    \ end_index + 1\n  end\n  return count\nend", "    local count = 0\n    local\
    \ i = 0\n    while true do\n        i = string.find(string, substring, i + 1,\
    \ true)\n        if i == nil then\n            break\n        end\n        count\
    \ = count + 1\n    end\n    return count\nend", "  local count = 0\n  local i\
    \ = 1\n  while i <= #string do\n    local j = string.find(string, substring, i,\
    \ true)\n    if j then\n      count = count + 1\n      i = j + 1\n    else\n \
    \     break\n    end\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, #string - #substring + 1 do\n    if string:sub(i, i + #substring - 1) ==\
    \ substring then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j == nil then\n    \
    \        break\n        end\n        count = count + 1\n        i = j + 1\n  \
    \  end\n    return count\nend", "  local count = 0\n  local i = 1\n  while true\
    \ do\n    local start, finish = string.find(string, substring, i)\n    if start\
    \ then\n      count = count + 1\n      i = finish + 1\n    else\n      break\n\
    \    end\n  end\n  return count\nend", "    local i = 0\n    local count = 0\n\
    \    while true do\n        i = string.find(string, substring, i + 1, true)\n\
    \        if i == nil then\n            break\n        end\n        count = count\
    \ + 1\n    end\n    return count\nend", "  local count = 0\n  local i = 1\n  while\
    \ true do\n    i = string.find(string, substring, i, true)\n    if i == nil then\
    \ break end\n    count = count + 1\n    i = i + 1\n  end\n  return count\nend",
  "    local count = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then break end\n        count = count\
    \ + 1\n        i = j + 1\n    end\n    return count\nend", "  local count = 0\n\
    \  local i = 0\n  local j = 0\n  while i < string.len(string) do\n    j = string.find(string,\
    \ substring, i, true)\n    if j == nil then\n      break\n    end\n    count =\
    \ count + 1\n    i = j + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  local i = 0\n  while true do\n    i = string:find(substring, i+1, true)\n \
    \   if i == nil then break end\n    count = count + 1\n  end\n  return count\n\
    end", "  local count = 0\n  local i = 1\n  while true do\n    local j = string.find(string,\
    \ substring, i, true)\n    if j == nil then\n      break\n    end\n    count =\
    \ count + 1\n    i = j + 1\n  end\n  return count\nend", "    local count = 0\n\
    \    local i = 1\n    while true do\n        i = string.find(string, substring,\
    \ i, true)\n        if i == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = i + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local start_index = 1\n    while true do\n        local\
    \ start_index, end_index = string.find(string, substring, start_index)\n     \
    \   if start_index == nil then\n            break\n        end\n        count\
    \ = count + 1\n        start_index = end_index + 1\n    end\n    return count\n\
    end", "  local count = 0\n  local start_index = 1\n  while true do\n    local\
    \ start_index, end_index = string.find(string, substring, start_index)\n    if\
    \ start_index == nil then\n      break\n    end\n    count = count + 1\n    start_index\
    \ = end_index + 1\n  end\n  return count\nend", "  local count = 0\n  local start\
    \ = 1\n  while true do\n    local pos = string:find(substring, start, true)\n\
    \    if not pos then\n      break\n    end\n    count = count + 1\n    start =\
    \ pos + 1\n  end\n  return count\nend", "    local count = 0\n    local last_found\
    \ = 0\n    while true do\n        local found = string.find(string, substring,\
    \ last_found + 1, true)\n        if found == nil then\n            break\n   \
    \     end\n        count = count + 1\n        last_found = found\n    end\n  \
    \  return count\nend", "    local count = 0\n    local i = 1\n    while i <= #string\
    \ do\n        local j = string.find(string, substring, i, true)\n        if j\
    \ == nil then\n            break\n        end\n        count = count + 1\n   \
    \     i = j + 1\n    end\n    return count\nend", "    local count = 0\n    local\
    \ i = 1\n    while true do\n        local j = string.find(string, substring, i,\
    \ true)\n        if j == nil then\n            break\n        end\n        count\
    \ = count + 1\n        i = j + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #string do\n        if string:sub(i, i + #substring\
    \ - 1) == substring then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    local i = 1\n    local j =\
    \ 1\n    while i <= #string do\n        if string:sub(i, i + #substring - 1) ==\
    \ substring then\n            count = count + 1\n            i = i + #substring\n\
    \        else\n            i = i + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= #string do\n    local j\
    \ = string:find(substring, i, true)\n    if j then\n      count = count + 1\n\
    \      i = j + 1\n    else\n      break\n    end\n  end\n  return count\nend",
  "    local count = 0\n    local i = 1\n    while true do\n        i = string.find(string,\
    \ substring, i, true)\n        if i == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = i + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j then\n           \
    \ count = count + 1\n            i = j + 1\n        else\n            break\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #string do\n        if string:sub(i, i + #substring - 1) == substring then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    local start = 1\n    while true do\n        local index\
    \ = string:find(substring, start, true)\n        if not index then\n         \
    \   break\n        end\n        count = count + 1\n        start = index + 1\n\
    \    end\n    return count\nend", "  local count = 0\n  local index = 1\n  while\
    \ index <= #string do\n    local i, j = string.find(string, substring, index,\
    \ true)\n    if i == nil then\n      break\n    end\n    count = count + 1\n \
    \   index = j + 1\n  end\n  return count\nend", "  local count = 0\n  local i\
    \ = 1\n  while i <= #string do\n    local j = string:find(substring, i, true)\n\
    \    if j then\n      count = count + 1\n      i = j + 1\n    else\n      break\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  local start = 1\n\
    \  local stop = #substring\n  while start <= #string do\n    if string:sub(start,\
    \ stop) == substring then\n      count = count + 1\n      start = start + 1\n\
    \      stop = stop + 1\n    else\n      start = start + 1\n      stop = stop +\
    \ 1\n    end\n  end\n  return count\nend", "    local count = 0\n    local start\
    \ = 1\n    while true do\n        local index = string:find(substring, start,\
    \ true)\n        if not index then\n            break\n        end\n        count\
    \ = count + 1\n        start = index + 1\n    end\n    return count\nend", " \
    \ local count = 0\n  local start = 1\n  while true do\n    local index = string:find(substring,\
    \ start, true)\n    if not index then\n      break\n    end\n    count = count\
    \ + 1\n    start = index + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  local i = 0\n  while true do\n    i = string:find(substring, i + 1, true)\n\
    \    if i == nil then\n      break\n    end\n    count = count + 1\n  end\n  return\
    \ count\nend", "    local count = 0\n    local i = 1\n    while i <= #string do\n\
    \        local j = string.find(string, substring, i, true)\n        if j then\n\
    \            count = count + 1\n            i = j + 1\n        else\n        \
    \    break\n        end\n    end\n    return count\nend", "    local count = 0\n\
    \    local start_pos = 1\n    while true do\n        local pos = string:find(substring,\
    \ start_pos, true)\n        if not pos then\n            break\n        end\n\
    \        count = count + 1\n        start_pos = pos + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local start_index = 1\n    while true do\n   \
    \     local index = string.find(string, substring, start_index, true)\n      \
    \  if index then\n            count = count + 1\n            start_index = index\
    \ + 1\n        else\n            break\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  local i = 1\n  while true do\n    local j = string.find(string,\
    \ substring, i, true)\n    if j == nil then break end\n    count = count + 1\n\
    \    i = j + 1\n  end\n  return count\nend", "    local count = 0\n    local start\
    \ = 1\n    while true do\n        local from, to = string.find(string, substring,\
    \ start, true)\n        if from == nil then\n            break\n        end\n\
    \        count = count + 1\n        start = to + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local i = 0\n    while true do\n        i = string:find(substring,\
    \ i + 1, true)\n        if i == nil then\n            break\n        end\n   \
    \     count = count + 1\n    end\n    return count\nend", "    local count = 0\n\
    \    local index = 1\n    while true do\n        index = string.find(string, substring,\
    \ index, true)\n        if index == nil then\n            break\n        end\n\
    \        count = count + 1\n        index = index + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local i = 1\n    while i <= #string do\n     \
    \   local j = string.find(string, substring, i, true)\n        if j == nil then\n\
    \            break\n        end\n        count = count + 1\n        i = j + 1\n\
    \    end\n    return count\nend", "    local count = 0\n    local i = 1\n    while\
    \ i <= #string do\n        local j = string.find(string, substring, i, true)\n\
    \        if j then\n            count = count + 1\n            i = j + 1\n   \
    \     else\n            break\n        end\n    end\n    return count\nend", " \
    \   if string == '' or substring == '' then\n        return 0\n    end\n    local\
    \ count = 0\n    local i = 1\n    while i <= #string do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j then\n            count = count + 1\n    \
    \        i = j + 1\n        else\n            break\n        end\n    end\n  \
    \  return count\nend", "  local count = 0\n  local i = 0\n  while true do\n  \
    \  i = string:find(substring, i + 1, true)\n    if i == nil then\n      break\n\
    \    end\n    count = count + 1\n  end\n  return count\nend", "    local count\
    \ = 0\n    local start = 1\n    while true do\n        local pos = string:find(substring,\
    \ start, true)\n        if not pos then\n            break\n        end\n    \
    \    count = count + 1\n        start = pos + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 0\n    while true do\n        i = string.find(string,\
    \ substring, i + 1, true)\n        if i == nil then\n            break\n     \
    \   end\n        count = count + 1\n    end\n    return count\nend", "  local\
    \ count = 0\n  local i = 1\n  while true do\n    local j = string.find(string,\
    \ substring, i, true)\n    if j == nil then\n      break\n    end\n    count =\
    \ count + 1\n    i = j + 1\n  end\n  return count\nend", "    local count = 0\n\
    \    local index = 1\n    while true do\n        index = string.find(string, substring,\
    \ index, true)\n        if index == nil then\n            break\n        end\n\
    \        count = count + 1\n        index = index + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local i = 0\n    while true do\n        i = string.find(string,\
    \ substring, i + 1, true)\n        if i == nil then\n            break\n     \
    \   end\n        count = count + 1\n    end\n    return count\nend", "  local\
    \ count = 0\n  local start = 1\n  local finish = #substring\n  while finish <=\
    \ #string do\n    if string:sub(start, finish) == substring then\n      count\
    \ = count + 1\n    end\n    start = start + 1\n    finish = finish + 1\n  end\n\
    \  return count\nend", "    local count = 0\n    local last_found = 0\n    while\
    \ true do\n        local found = string.find(string, substring, last_found + 1,\
    \ true)\n        if not found then\n            break\n        end\n        count\
    \ = count + 1\n        last_found = found\n    end\n    return count\nend", " \
    \   local count = 0\n    local i = 0\n    while true do\n        i = string.find(string,\
    \ substring, i + 1, true)\n        if i == nil then\n            break\n     \
    \   end\n        count = count + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    local i = 0\n    while true do\n        i = string.find(string,\
    \ substring, i + 1, true)\n        if i == nil then\n            break\n     \
    \   end\n        count = count + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j then\n           \
    \ count = count + 1\n            i = j + 1\n        else\n            break\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  local start\
    \ = 1\n  while true do\n    local from, to = string.find(string, substring, start,\
    \ true)\n    if from == nil then break end\n    count = count + 1\n    start =\
    \ to + 1\n  end\n  return count\nend", "    local count = 0\n    local start =\
    \ 1\n    while true do\n        local index = string:find(substring, start, true)\n\
    \        if not index then\n            break\n        end\n        count = count\
    \ + 1\n        start = index + 1\n    end\n    return count\nend", "  local count\
    \ = 0\n  local start = 1\n  while true do\n    local pos = string:find(substring,\
    \ start, true)\n    if not pos then break end\n    count = count + 1\n    start\
    \ = pos + 1\n  end\n  return count\nend", "    local count = 0\n    local index\
    \ = 1\n    while true do\n        local i, j = string.find(string, substring,\
    \ index, true)\n        if i == nil then\n            break\n        end\n   \
    \     count = count + 1\n        index = j + 1\n    end\n    return count\nend",
  "  local count = 0\n  local i = 0\n  while true do\n    i = string:find(substring,\
    \ i + 1, true)\n    if i == nil then break end\n    count = count + 1\n  end\n\
    \  return count\nend", "    local count = 0\n    local index = 1\n    while index\
    \ <= #string do\n        local i, j = string.find(string, substring, index, true)\n\
    \        if i then\n            count = count + 1\n            index = j + 1\n\
    \        else\n            break\n        end\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j == nil then\n    \
    \        break\n        end\n        count = count + 1\n        i = j + 1\n  \
    \  end\n    return count\nend", "    local count = 0\n    local start = 1\n  \
    \  while true do\n        local index = string:find(substring, start, true)\n\
    \        if not index then\n            break\n        end\n        count = count\
    \ + 1\n        start = index + 1\n    end\n    return count\nend", "    local\
    \ count = 0\n    local index = 1\n    while true do\n        local i, j = string.find(string,\
    \ substring, index, true)\n        if i == nil then\n            break\n     \
    \   end\n        count = count + 1\n        index = j + 1\n    end\n    return\
    \ count\nend", "    local count = 0\n    local start_index = 1\n    while true\
    \ do\n        local start_index, end_index = string.find(string, substring, start_index)\n\
    \        if start_index == nil then\n            break\n        end\n        count\
    \ = count + 1\n        start_index = end_index + 1\n    end\n    return count\n\
    end", "    local count = 0\n    local i = 1\n    while true do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j == nil then\n    \
    \        break\n        end\n        count = count + 1\n        i = j + 1\n  \
    \  end\n    return count\nend", "    local count = 0\n    local start = 1\n  \
    \  while true do\n        local pos = string:find(substring, start, true)\n  \
    \      if not pos then\n            break\n        end\n        count = count\
    \ + 1\n        start = pos + 1\n    end\n    return count\nend", "    local count\
    \ = 0\n    local start = 1\n    while true do\n        local pos = string:find(substring,\
    \ start, true)\n        if not pos then\n            break\n        end\n    \
    \    count = count + 1\n        start = pos + 1\n    end\n    return count\nend",
  "    local count = 0\n    local i = 1\n    while i <= #string do\n        local\
    \ j = string.find(string, substring, i, true)\n        if j == nil then\n    \
    \        break\n        end\n        count = count + 1\n        i = j + 1\n  \
    \  end\n    return count\nend", "    local count = 0\n    local start = 1\n  \
    \  while true do\n        local pos = string:find(substring, start, true)\n  \
    \      if not pos then\n            break\n        end\n        count = count\
    \ + 1\n        start = pos + 1\n    end\n    return count\nend", "    local count\
    \ = 0\n    local start = 1\n    while true do\n        local pos = string:find(substring,\
    \ start, true)\n        if not pos then break end\n        count = count + 1\n\
    \        start = pos + 1\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #string do\n        if string:sub(i, i + #substring - 1) ==\
    \ substring then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  local s, e = string.find(string, substring)\n\
    \  while s do\n    count = count + 1\n    s, e = string.find(string, substring,\
    \ e + 1)\n  end\n  return count\nend", "    local count = 0\n    local i = 1\n\
    \    while i <= #string do\n        local j = string.find(string, substring, i,\
    \ true)\n        if j then\n            count = count + 1\n            i = j +\
    \ 1\n        else\n            break\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  local i = 1\n  while i <= #string do\n    local j\
    \ = string:find(substring, i, true)\n    if j == nil then break end\n    count\
    \ = count + 1\n    i = j + 1\n  end\n  return count\nend", "  local count = 0\n\
    \  local i = 1\n  local j = 1\n  while i <= #string do\n    if string:sub(i, i\
    \ + #substring - 1) == substring then\n      count = count + 1\n      i = i +\
    \ #substring\n    else\n      i = i + 1\n    end\n  end\n  return count\nend",
  "    local count = 0\n    local pos = 1\n    while true do\n        pos = string:find(substring,\
    \ pos, true)\n        if not pos then\n            break\n        end\n      \
    \  count = count + 1\n        pos = pos + 1\n    end\n    return count\nend",
  "  local count = 0\n  local i = 1\n  while i <= #string do\n    local j = string:find(substring,\
    \ i, true)\n    if j == nil then\n      break\n    end\n    count = count + 1\n\
    \    i = j + 1\n  end\n  return count\nend", "    local count = 0\n    local index\
    \ = 1\n    local length = #substring\n    while index <= #string do\n        local\
    \ i, j = string:find(substring, index, true)\n        if i then\n            count\
    \ = count + 1\n            index = j + 1\n        else\n            break\n  \
    \      end\n    end\n    return count\nend", "  local count = 0\n  local i = 1\n\
    \  while i <= #string do\n    local j = string:find(substring, i, true)\n    if\
    \ j then\n      count = count + 1\n      i = j + 1\n    else\n      break\n  \
    \  end\n  end\n  return count\nend", "    local count = 0\n    local start = 1\n\
    \    while true do\n        local pos = string:find(substring, start, true)\n\
    \        if not pos then\n            break\n        end\n        count = count\
    \ + 1\n        start = pos + 1\n    end\n    return count\nend", "  local count\
    \ = 0\n  local start = 1\n  while true do\n    local pos = string:find(substring,\
    \ start, true)\n    if not pos then\n      break\n    end\n    count = count +\
    \ 1\n    start = pos + 1\n  end\n  return count\nend", "  local count = 0\n  local\
    \ i = 1\n  while true do\n    local j = string.find(string, substring, i, true)\n\
    \    if not j then break end\n    count = count + 1\n    i = j + 1\n  end\n  return\
    \ count\nend", "    local count = 0\n    local i = 1\n    while true do\n    \
    \    local j = string.find(string, substring, i, true)\n        if not j then\
    \ break end\n        count = count + 1\n        i = j + 1\n    end\n    return\
    \ count\nend", "    local count = 0\n    local i = 1\n    while i <= #string do\n\
    \        local j = string.find(string, substring, i, true)\n        if j then\n\
    \            count = count + 1\n            i = j + 1\n        else\n        \
    \    break\n        end\n    end\n    return count\nend", "    local count = 0\n\
    \    local start = 1\n    while true do\n        local index = string:find(substring,\
    \ start, true)\n        if not index then\n            break\n        end\n  \
    \      count = count + 1\n        start = index + 1\n    end\n    return count\n\
    end", "  local count = 0\n  local index = 1\n  while true do\n    local next_index\
    \ = string:find(substring, index, true)\n    if next_index then\n      count =\
    \ count + 1\n      index = next_index + 1\n    else\n      break\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  local index = 1\n  while index <=\
    \ #string do\n    local i, j = string:find(substring, index, true)\n    if i ==\
    \ nil then\n      break\n    end\n    count = count + 1\n    index = j + 1\n \
    \ end\n  return count\nend", "  local count = 0\n  local i = 1\n  while i <= #string\
    \ do\n    local j = string:find(substring, i, true)\n    if j == nil then break\
    \ end\n    count = count + 1\n    i = j + 1\n  end\n  return count\nend", "  \
    \  local count = 0\n    local i = 1\n    while true do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "  local count = 0\n  local start = 1\n  while true do\n    local index = string:find(substring,\
    \ start, true)\n    if not index then\n      break\n    end\n    count = count\
    \ + 1\n    start = index + 1\n  end\n  return count\nend", "    local count =\
    \ 0\n    local i = 1\n    while i <= #string do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "  local count = 0\n  local start_index = 1\n  while true do\n    local start_index,\
    \ end_index = string.find(string, substring, start_index)\n    if start_index\
    \ == nil then\n      break\n    end\n    count = count + 1\n    start_index =\
    \ end_index + 1\n  end\n  return count\nend", "    local count = 0\n    local\
    \ i = 1\n    while i <= #string do\n        local j = string.find(string, substring,\
    \ i, true)\n        if j == nil then\n            break\n        end\n       \
    \ count = count + 1\n        i = j + 1\n    end\n    return count\nend", "   \
    \ local count = 0\n    local i = 1\n    while i <= #string do\n        local j\
    \ = string.find(string, substring, i, true)\n        if j == nil then break end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "  local count = 0\n  local start = 1\n  while true do\n    local pos = string:find(substring,\
    \ start, true)\n    if not pos then\n      break\n    end\n    count = count +\
    \ 1\n    start = pos + 1\n  end\n  return count\nend", "    local count = 0\n\
    \    local start = 1\n    while true do\n        local index = string:find(substring,\
    \ start, true)\n        if not index then break end\n        count = count + 1\n\
    \        start = index + 1\n    end\n    return count\nend", "    local count\
    \ = 0\n    local i = 1\n    while i <= #string do\n        local j = string.find(string,\
    \ substring, i, true)\n        if j == nil then\n            break\n        end\n\
    \        count = count + 1\n        i = j + 1\n    end\n    return count\nend",
  "  local count = 0\n  local index = 1\n  while true do\n    index = string.find(string,\
    \ substring, index, true)\n    if not index then\n      break\n    end\n    count\
    \ = count + 1\n    index = index + 1\n  end\n  return count\nend", "    local\
    \ count = 0\n    local i = 0\n    while true do\n        i = string:find(substring,\
    \ i + 1, true)\n        if i == nil then\n            break\n        end\n   \
    \     count = count + 1\n    end\n    return count\nend", "  local count = 0\n\
    \  local i = 1\n  local j = 1\n  local n = #string\n  local m = #substring\n \
    \ while i <= n do\n    if string:sub(i, i + m - 1) == substring then\n      count\
    \ = count + 1\n      i = i + m\n    else\n      i = i + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    local i = 1\n    while true do\n    \
    \    local j = string.find(string, substring, i, true)\n        if j == nil then\n\
    \            break\n        end\n        count = count + 1\n        i = j + 1\n\
    \    end\n    return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

---
name: HumanEval_18_how_many_times
language: lua
prompt: |
  -- Find how many times a given substring can be found in the original string. Count overlaping cases.
  -- >>> how_many_times('', 'a')
  -- 0
  -- >>> how_many_times('aaa', 'a')
  -- 3
  -- >>> how_many_times('aaaa', 'aa')
  -- 3
  local function how_many_times(string, substring)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = how_many_times
      lu.assertEquals(candidate('', 'x'), 0)
      lu.assertEquals(candidate('xyxyxyx', 'x'), 4)
      lu.assertEquals(candidate('cacacacac', 'cac'), 4)
      lu.assertEquals(candidate('john doe', 'john'), 1)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local count = 0
      local i = 1
      local j = 1
      while i <= #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
              i = i + #substring
          else
              i = i + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local pos = 1
      while true do
          pos = string.find(string, substring, pos, true)
          if not pos then
              break
          end
          count = count + 1
          pos = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      local index = string.find(string, substring, start)
      while index do
          count = count + 1
          start = index + 1
          index = string.find(string, substring, start)
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
    local count = 0
    local index = 1
    while index <= #string do
      local i, j = string:find(substring, index, true)
      if i == nil then
        break
      end
      count = count + 1
      index = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      local last_start = 1
      while true do
          start = string.find(string, substring, start, true)
          if start == nil then
              break
          end
          count = count + 1
          start = start + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      local j = 1
      while i <= #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
              i = i + #substring
          else
              i = i + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i + 1, true)
      if i == nil then
        break
      end
      count = count + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    local j = 1
    while i <= #string do
      if string:sub(i, i + #substring - 1) == substring then
        count = count + 1
        i = i + #substring
      else
        i = i + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then break end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local i = string.find(string, substring, start, true)
          if i == nil then
              break
          end
          count = count + 1
          start = i + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local last_index = 0
      while true do
          local index = string:find(substring, last_index + 1, true)
          if not index then
              break
          end
          count = count + 1
          last_index = index
      end
      return count
  end
- |2-
    local count = 0
    local index = 1
    while index <= #string do
      local i, j = string:find(substring, index, true)
      if i == nil then
        break
      end
      count = count + 1
      index = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
      local count = 0
      local start_index = 1
      while true do
          local start_index, end_index = string.find(string, substring, start_index)
          if start_index == nil then
              break
          end
          count = count + 1
          start_index = end_index + 1
      end
      return count
  end
- "\tlocal count = 0\n\tlocal pos = 1\n\twhile true do\n\t\tpos = string:find(substring,
  pos, true)\n\t\tif not pos then break end\n\t\tcount = count + 1\n\t\tpos = pos
  + 1\n\tend\n\treturn count\nend"
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local pos = 1
      while true do
          local new_pos = string:find(substring, pos, true)
          if new_pos then
              count = count + 1
              pos = new_pos + 1
          else
              break
          end
      end
      return count
  end
- |2-
    if string == '' or substring == '' then
      return 0
    end
    local count = 0
    local i = 1
    while i <= #string do
      local j = string.find(string, substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
      local count = 0
      local index = 1
      while index <= #string do
          local i, j = string.find(string, substring, index, true)
          if i then
              count = count + 1
              index = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then break end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local index = string:find(substring, start, true)
      if not index then
        break
      end
      count = count + 1
      start = index + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 0
    while i < #string do
      local j = string:find(substring, i + 1, true)
      if j then
        count = count + 1
        i = j
      else
        break
      end
    end
    return count
  end
- |2-
      local count = 0
      local index = 0
      while true do
          index = string.find(string, substring, index + 1, true)
          if index == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i + 1, true)
      if i == nil then
        break
      end
      count = count + 1
    end
    return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then
        break
      end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string:find(substring, i + 1, true)
          if i == nil then break end
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while index <= #string do
          local i, j = string.find(string, substring, index, true)
          if i then
              count = count + 1
              index = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local pos = string:find(substring, start, true)
      if not pos then break end
      count = count + 1
      start = pos + 1
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #string do
      if string:sub(i, i + #substring - 1) == substring then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      for i = 1, #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local start_index = string.find(string, substring, start, true)
      if start_index == nil then
        break
      end
      count = count + 1
      start = start_index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then break end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while index <= #string do
          local i, j = string.find(string, substring, index, true)
          if i then
              count = count + 1
              index = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      local j = 1
      while i <= #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
              i = i + #substring
          else
              i = i + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i + 1, true)
      if i == nil then
        break
      end
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string:find(substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local index = 0
    while true do
      index = string.find(string, substring, index + 1, true)
      if not index then
        break
      end
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string:find(substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local index = string:find(substring, start, true)
      if not index then
        break
      end
      count = count + 1
      start = index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          local j = string.find(string, substring, i + 1, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while index <= #string do
          local next_index = string:find(substring, index, true)
          if next_index then
              count = count + 1
              index = next_index + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while true do
          local next_index = string:find(substring, index, true)
          if next_index then
              count = count + 1
              index = next_index + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then break end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start_pos = 1
      while true do
          local pos = string:find(substring, start_pos, true)
          if not pos then break end
          count = count + 1
          start_pos = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      local j = 1
      while i <= #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
              i = i + #substring
          else
              i = i + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          i = string.find(string, substring, i, true)
          if i == nil then
              break
          end
          count = count + 1
          i = i + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while index <= #string do
          local i, j = string.find(string, substring, index, true)
          if i then
              count = count + 1
              index = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local index = 0
      while true do
          index = string.find(string, substring, index + 1, true)
          if index == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local pos = string:find(substring, start, true)
      if not pos then break end
      count = count + 1
      start = pos + 1
    end
    return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then
        break
      end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then
        break
      end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 0
      while true do
          index = string.find(string, substring, index + 1, true)
          if index == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then
        break
      end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string.find(string, substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
    local count = 0
    for i = 1, #string - #substring + 1 do
      if string:sub(i, i + #substring - 1) == substring then
        count = count + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local start, finish = string.find(string, substring, i)
      if start then
        count = count + 1
        i = finish + 1
      else
        break
      end
    end
    return count
  end
- |2-
      local i = 0
      local count = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      i = string.find(string, substring, i, true)
      if i == nil then break end
      count = count + 1
      i = i + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then break end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 0
    local j = 0
    while i < string.len(string) do
      j = string.find(string, substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i+1, true)
      if i == nil then break end
      count = count + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          i = string.find(string, substring, i, true)
          if i == nil then
              break
          end
          count = count + 1
          i = i + 1
      end
      return count
  end
- |2-
      local count = 0
      local start_index = 1
      while true do
          local start_index, end_index = string.find(string, substring, start_index)
          if start_index == nil then
              break
          end
          count = count + 1
          start_index = end_index + 1
      end
      return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then
        break
      end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local pos = string:find(substring, start, true)
      if not pos then
        break
      end
      count = count + 1
      start = pos + 1
    end
    return count
  end
- |2-
      local count = 0
      local last_found = 0
      while true do
          local found = string.find(string, substring, last_found + 1, true)
          if found == nil then
              break
          end
          count = count + 1
          last_found = found
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      local j = 1
      while i <= #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
              i = i + #substring
          else
              i = i + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          i = string.find(string, substring, i, true)
          if i == nil then
              break
          end
          count = count + 1
          i = i + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
    local count = 0
    local index = 1
    while index <= #string do
      local i, j = string.find(string, substring, index, true)
      if i == nil then
        break
      end
      count = count + 1
      index = j + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
    local count = 0
    local start = 1
    local stop = #substring
    while start <= #string do
      if string:sub(start, stop) == substring then
        count = count + 1
        start = start + 1
        stop = stop + 1
      else
        start = start + 1
        stop = stop + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local index = string:find(substring, start, true)
      if not index then
        break
      end
      count = count + 1
      start = index + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i + 1, true)
      if i == nil then
        break
      end
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local start_pos = 1
      while true do
          local pos = string:find(substring, start_pos, true)
          if not pos then
              break
          end
          count = count + 1
          start_pos = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local start_index = 1
      while true do
          local index = string.find(string, substring, start_index, true)
          if index then
              count = count + 1
              start_index = index + 1
          else
              break
          end
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if j == nil then break end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local from, to = string.find(string, substring, start, true)
          if from == nil then
              break
          end
          count = count + 1
          start = to + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string:find(substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while true do
          index = string.find(string, substring, index, true)
          if index == nil then
              break
          end
          count = count + 1
          index = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      if string == '' or substring == '' then
          return 0
      end
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i + 1, true)
      if i == nil then
        break
      end
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local index = 1
      while true do
          index = string.find(string, substring, index, true)
          if index == nil then
              break
          end
          count = count + 1
          index = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    local finish = #substring
    while finish <= #string do
      if string:sub(start, finish) == substring then
        count = count + 1
      end
      start = start + 1
      finish = finish + 1
    end
    return count
  end
- |2-
      local count = 0
      local last_found = 0
      while true do
          local found = string.find(string, substring, last_found + 1, true)
          if not found then
              break
          end
          count = count + 1
          last_found = found
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string.find(string, substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local from, to = string.find(string, substring, start, true)
      if from == nil then break end
      count = count + 1
      start = to + 1
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local pos = string:find(substring, start, true)
      if not pos then break end
      count = count + 1
      start = pos + 1
    end
    return count
  end
- |2-
      local count = 0
      local index = 1
      while true do
          local i, j = string.find(string, substring, index, true)
          if i == nil then
              break
          end
          count = count + 1
          index = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 0
    while true do
      i = string:find(substring, i + 1, true)
      if i == nil then break end
      count = count + 1
    end
    return count
  end
- |2-
      local count = 0
      local index = 1
      while index <= #string do
          local i, j = string.find(string, substring, index, true)
          if i then
              count = count + 1
              index = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local index = 1
      while true do
          local i, j = string.find(string, substring, index, true)
          if i == nil then
              break
          end
          count = count + 1
          index = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start_index = 1
      while true do
          local start_index, end_index = string.find(string, substring, start_index)
          if start_index == nil then
              break
          end
          count = count + 1
          start_index = end_index + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then break end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
      local count = 0
      for i = 1, #string do
          if string:sub(i, i + #substring - 1) == substring then
              count = count + 1
          end
      end
      return count
  end
- |2-
    local count = 0
    local s, e = string.find(string, substring)
    while s do
      count = count + 1
      s, e = string.find(string, substring, e + 1)
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then break end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    local j = 1
    while i <= #string do
      if string:sub(i, i + #substring - 1) == substring then
        count = count + 1
        i = i + #substring
      else
        i = i + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local pos = 1
      while true do
          pos = string:find(substring, pos, true)
          if not pos then
              break
          end
          count = count + 1
          pos = pos + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then
        break
      end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local index = 1
      local length = #substring
      while index <= #string do
          local i, j = string:find(substring, index, true)
          if i then
              count = count + 1
              index = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j then
        count = count + 1
        i = j + 1
      else
        break
      end
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local pos = string:find(substring, start, true)
          if not pos then
              break
          end
          count = count + 1
          start = pos + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local pos = string:find(substring, start, true)
      if not pos then
        break
      end
      count = count + 1
      start = pos + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    while true do
      local j = string.find(string, substring, i, true)
      if not j then break end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if not j then break end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j then
              count = count + 1
              i = j + 1
          else
              break
          end
      end
      return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then
              break
          end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
    local count = 0
    local index = 1
    while true do
      local next_index = string:find(substring, index, true)
      if next_index then
        count = count + 1
        index = next_index + 1
      else
        break
      end
    end
    return count
  end
- |2-
    local count = 0
    local index = 1
    while index <= #string do
      local i, j = string:find(substring, index, true)
      if i == nil then
        break
      end
      count = count + 1
      index = j + 1
    end
    return count
  end
- |2-
    local count = 0
    local i = 1
    while i <= #string do
      local j = string:find(substring, i, true)
      if j == nil then break end
      count = count + 1
      i = j + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local index = string:find(substring, start, true)
      if not index then
        break
      end
      count = count + 1
      start = index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local start_index = 1
    while true do
      local start_index, end_index = string.find(string, substring, start_index)
      if start_index == nil then
        break
      end
      count = count + 1
      start_index = end_index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then break end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local start = 1
    while true do
      local pos = string:find(substring, start, true)
      if not pos then
        break
      end
      count = count + 1
      start = pos + 1
    end
    return count
  end
- |2-
      local count = 0
      local start = 1
      while true do
          local index = string:find(substring, start, true)
          if not index then break end
          count = count + 1
          start = index + 1
      end
      return count
  end
- |2-
      local count = 0
      local i = 1
      while i <= #string do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
- |2-
    local count = 0
    local index = 1
    while true do
      index = string.find(string, substring, index, true)
      if not index then
        break
      end
      count = count + 1
      index = index + 1
    end
    return count
  end
- |2-
      local count = 0
      local i = 0
      while true do
          i = string:find(substring, i + 1, true)
          if i == nil then
              break
          end
          count = count + 1
      end
      return count
  end
- |2-
    local count = 0
    local i = 1
    local j = 1
    local n = #string
    local m = #substring
    while i <= n do
      if string:sub(i, i + m - 1) == substring then
        count = count + 1
        i = i + m
      else
        i = i + 1
      end
    end
    return count
  end
- |2-
      local count = 0
      local i = 1
      while true do
          local j = string.find(string, substring, i, true)
          if j == nil then
              break
          end
          count = count + 1
          i = j + 1
      end
      return count
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

---
name: HumanEval_88_sort_array
language: lua
prompt: |
  -- Given a table of non-negative integers, return a colua of the given table after sorting,
  -- you will sort the given table in ascending order if the sum( first index value, last index value) is odd,
  -- or sort it in descending order if the sum( first index value, last index value) is even.
  -- Note:
  -- * don't change the given table.
  -- Examples:
  -- >>> sort_array({})
  -- {}
  -- >>> sort_array({5})
  -- {5}
  -- >>> sort_array({2, 4, 3, 0, 1, 5})
  -- {0, 1, 2, 3, 4, 5}
  -- >>> sort_array({2, 4, 3, 0, 1, 5, 6})
  -- {6, 5, 4, 3, 2, 1, 0}
  local function sort_array(array)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = sort_array
      lu.assertEquals(candidate({}), {})
      lu.assertEquals(candidate({5}), {5})
      lu.assertEquals(candidate({2, 4, 3, 0, 1, 5}), {0, 1, 2, 3, 4, 5})
      lu.assertEquals(candidate({2, 4, 3, 0, 1, 5, 6}), {6, 5, 4, 3, 2, 1, 0})
      lu.assertEquals(candidate({2, 1}), {1, 2})
      lu.assertEquals(candidate({15, 42, 87, 32, 11, 0}), {0, 11, 15, 32, 42, 87})
      lu.assertEquals(candidate({21, 14, 23, 11}), {23, 21, 14, 11})
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    local function compare(a, b)
      if sum % 2 == 0 then
        return a > b
      else
        return a < b
      end
    end
    table.sort(array, compare)
    return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function sort(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, sort)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      -- your code here
      if #array == 0 then
          return array
      end
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      -- your code here
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function sort_func(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, sort_func)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    local function sort(a, b)
      if sum % 2 == 0 then
        return a > b
      else
        return a < b
      end
    end
    table.sort(array, sort)
    return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    if sum % 2 == 0 then
      table.sort(array, function(a, b) return a > b end)
    else
      table.sort(array)
    end
    return array
  end
- |2-
    local sum = array[1] + array[#array]
    if sum % 2 == 0 then
      table.sort(array, function(a, b) return a > b end)
    else
      table.sort(array)
    end
    return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + i + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
    local sum = 0
    for i, v in ipairs(array) do
      sum = sum + v
    end
    if sum % 2 == 0 then
      table.sort(array, function(a, b) return a > b end)
    else
      table.sort(array, function(a, b) return a < b end)
    end
    return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      -- your code here
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      -- Write your code here
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      if #array == 0 then
          return array
      end
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = 0
      local len = #array
      for i = 1, len do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
    if #array == 0 then
      return array
    end
    local sum = array[1] + array[#array]
    local order = sum % 2 == 0 and function(a, b) return a > b end or function(a, b) return a < b end
    table.sort(array, order)
    return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    if sum % 2 == 0 then
      table.sort(array, function(a, b) return a > b end)
    else
      table.sort(array)
    end
    return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      if #array == 0 then
          return array
      end
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      -- your code here
      local sum = 0
      local len = #array
      for i = 1, len do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      if #array == 0 then
          return array
      end
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      local result = {}
      if sum % 2 == 0 then
          for i = #array, 1, -1 do
              table.insert(result, array[i])
          end
      else
          for i = 1, #array do
              table.insert(result, array[i])
          end
      end
      return result
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function cmp(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
    -- your code here
    local sum = array[1] + array[#array]
    local odd = false
    if sum % 2 == 1 then
      odd = true
    end
    local function compare(a, b)
      if odd then
        return a < b
      else
        return a > b
      end
    end
    table.sort(array, compare)
    return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local compare = is_odd and function(a, b) return a < b end or function(a, b) return a > b end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local sort_func = sum % 2 == 0 and function(a, b) return a > b end or function(a, b) return a < b end
      table.sort(array, sort_func)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      -- Write your code here
      local sum = 0
      local len = #array
      for i = 1, len do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          for i = 1, len do
              for j = i + 1, len do
                  if array[i] < array[j] then
                      array[i], array[j] = array[j], array[i]
                  end
              end
          end
      else
          for i = 1, len do
              for j = i + 1, len do
                  if array[i] > array[j] then
                      array[i], array[j] = array[j], array[i]
                  end
              end
          end
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      -- Write your code here
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local compare = is_odd and function(a, b) return a < b end or function(a, b) return a > b end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      if #array == 0 then
          return array
      end
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    local is_odd = sum % 2 == 1
    local function cmp(a, b)
      if is_odd then
        return a < b
      else
        return a > b
      end
    end
    table.sort(array, cmp)
    return array
  end
- |2-
      -- Write your code here
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      -- Write your code here
      local sum = 0
      local new_array = {}
      for i, v in ipairs(array) do
          sum = sum + v
          new_array[i] = v
      end
      if sum % 2 == 0 then
          table.sort(new_array, function(a, b) return a > b end)
      else
          table.sort(new_array)
      end
      return new_array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      if #array == 0 then
          return array
      end
      local sum = array[1] + array[#array]
      local sort_func = sum % 2 == 0 and function(a, b) return a > b end or function(a, b) return a < b end
      table.sort(array, sort_func)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function sort_func(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, sort_func)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    local function compare(a, b)
      if sum % 2 == 0 then
        return a > b
      else
        return a < b
      end
    end
    table.sort(array, compare)
    return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function sort(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, sort)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function cmp(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, cmp)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
    local sum = array[1] + array[#array]
    if sum % 2 == 0 then
      table.sort(array, function(a, b) return a > b end)
    else
      table.sort(array)
    end
    return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function sort(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, sort)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function sort(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, sort)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      local new_array = {}
      for i = 1, #array do
          new_array[i] = array[i]
      end
      if sum % 2 == 0 then
          table.sort(new_array, function(a, b) return a > b end)
      else
          table.sort(new_array, function(a, b) return a < b end)
      end
      return new_array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local is_odd = sum % 2 == 1
      local function compare(a, b)
          if is_odd then
              return a < b
          else
              return a > b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array)
      end
      return array
  end
- |2-
      local sum = 0
      for i, v in ipairs(array) do
          sum = sum + v
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
- |2-
      -- your code here
      local sum = 0
      for i = 1, #array do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      -- Write your code here
      local sum = 0
      local len = #array
      for i = 1, len do
          sum = sum + array[i]
      end
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      -- your code here
      local sum = array[1] + array[#array]
      if sum % 2 == 0 then
          table.sort(array, function(a, b) return a > b end)
      else
          table.sort(array, function(a, b) return a < b end)
      end
      return array
  end
- |2-
      local sum = array[1] + array[#array]
      local function compare(a, b)
          if sum % 2 == 0 then
              return a > b
          else
              return a < b
          end
      end
      table.sort(array, compare)
      return array
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

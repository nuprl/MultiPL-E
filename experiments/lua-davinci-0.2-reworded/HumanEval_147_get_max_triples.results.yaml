language: lua
name: HumanEval_147_get_max_triples
results:
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.040 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_hx9lm_n.lua:32:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp_hx9lm_n.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n \
    \       if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count + 1\n \
    \       end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n do\n    for j = i + 1, n do\n      for k = j + 1, n do\n \
    \       if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count + 1\n \
    \       end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local cnt = 0\n\
    \  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          cnt = cnt + 1\n    \
    \    end\n      end\n    end\n  end\n  return cnt\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 1
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if a[i] + a[j] + a[k] % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_hx9lm_n.lua:32:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp_hx9lm_n.lua:32: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n\tlocal\
    \ a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count =\
    \ 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n\tlocal\
    \ a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal cnt = 0\n\
    \tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n do\n\
    \t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcnt = cnt + 1\n\t\t\t\
    \tend\n\t\t\tend\n\t\tend\n\tend\n\treturn cnt\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n\tlocal\
    \ a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count =\
    \ 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ sum = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (i * i - i + 1 + j * j - j + 1 +\
    \ k * k - k + 1) % 3 == 0 then\n                    sum = sum + 1\n          \
    \      end\n            end\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ cnt = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n        \
    \    for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    cnt = cnt + 1\n                end\n            end\n   \
    \     end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_max_triples\n    lu.assertEquals(candidate(5), 1)\n    lu.assertEquals(candidate(6),\
    \ 4)\n    lu.assertEquals(candidate(10), 36)\n    lu.assertEquals(candidate(100),\
    \ 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local count =\
    \ 0\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1,\
    \ n do\n        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          count = count\
    \ + 1\n        end\n      end\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n do\n        for j = i + 1, n do\n            for\
    \ k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n   \
    \                 count = count + 1\n                end\n            end\n  \
    \      end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n  local\
    \ a = {}\n  for i = 1, n do\n    a[i] = i * i - i + 1\n  end\n  local cnt = 0\n\
    \  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n\
    \        if (a[i] + a[j] + a[k]) % 3 == 0 then\n          cnt = cnt + 1\n    \
    \    end\n      end\n    end\n  end\n  return cnt\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.030 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n\tlocal\
    \ a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count =\
    \ 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1,\
    \ n do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count\
    \ + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.020 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '
- exit_code: 0
  program: "-- You are given a positive integer n. You have to create an integer table\
    \ a of length n.\n-- For each i (1 \u2264 i \u2264 n), the value of a[i] = i *\
    \ i - i + 1.\n-- Return the number of triples (a[i], a[j], a[k]) of a where i\
    \ < j < k, \n-- and a[i] + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>>\
    \ get_max_triples(5)\n-- 1\n-- Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The\
    \ only valid triple is (1, 7, 13).\nlocal function get_max_triples(n)\n    local\
    \ a = {}\n    for i = 1, n do\n        a[i] = i * i - i + 1\n    end\n    local\
    \ count = 0\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n      \
    \      for k = j + 1, n do\n                if (a[i] + a[j] + a[k]) % 3 == 0 then\n\
    \                    count = count + 1\n                end\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_max_triples\n    lu.assertEquals(candidate(5),\
    \ 1)\n    lu.assertEquals(candidate(6), 4)\n    lu.assertEquals(candidate(10),\
    \ 36)\n    lu.assertEquals(candidate(100), 53361)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.010 seconds, 1 success, 0 failures

    OK

    '

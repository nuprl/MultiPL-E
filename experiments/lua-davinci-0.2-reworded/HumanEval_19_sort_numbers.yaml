---
name: HumanEval_19_sort_numbers
language: lua
prompt: |
  -- Input is a space-delimited string of numberals from 'zero' to 'nine'.
  -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.
  -- Return the string with numbers sorted from smallest to largest
  -- >>> sort_numbers('three one five')
  -- 'one three five'
  local function sort_numbers(numbers)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = sort_numbers
      lu.assertEquals(candidate(''), '')
      lu.assertEquals(candidate('three'), 'three')
      lu.assertEquals(candidate('three five nine'), 'three five nine')
      lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four five seven eight nine')
      lu.assertEquals(candidate('six five four three two one zero'), 'zero one two three four five six')
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local num_list = {}
      local num_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num_map[num])
      end
      table.sort(num_list)
      local num_str = ''
      for _, num in ipairs(num_list) do
          for k, v in pairs(num_map) do
              if v == num then
                  num_str = num_str .. ' ' .. k
              end
          end
      end
      return num_str:sub(2)
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = numeral_map[num]
      end
      table.sort(nums)
      local sorted_numbers = {}
      for i, num in ipairs(nums) do
          for numeral, value in pairs(numeral_map) do
              if value == num then
                  sorted_numbers[i] = numeral
              end
          end
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local number_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local numbers_list = {}
      for number in numbers:gmatch('%a+') do
          table.insert(numbers_list, number_map[number])
      end
      table.sort(numbers_list)
      local sorted_numbers = {}
      for _, number in ipairs(numbers_list) do
          for k, v in pairs(number_map) do
              if v == number then
                  table.insert(sorted_numbers, k)
              end
          end
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch("%S+") do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, " ")
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local num_str = ''
      for _, num in ipairs(nums) do
          for numeral, numeral_num in pairs(numeral_map) do
              if num == numeral_num then
                  num_str = num_str .. numeral .. ' '
              end
          end
      end
      return num_str:sub(1, -2)
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      local num_str = ''
      for num in numbers:gmatch('%S+') do
          table.insert(nums, tonumber(num_to_numeral[num]))
      end
      table.sort(nums)
      for _, num in ipairs(nums) do
          num_str = num_str .. ' ' .. numeral_to_num[num]
      end
      return num_str:sub(2)
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch("%S+") do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, " ")
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          local n = numeral_map[num]
          if n then
              table.insert(nums, n)
          end
      end
      table.sort(nums)
      local result = {}
      for _, n in ipairs(nums) do
          for num, numeral in pairs(numeral_map) do
              if numeral == n then
                  table.insert(result, num)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local numeral_map = {
          ['zero'] = 0,
          ['one'] = 1,
          ['two'] = 2,
          ['three'] = 3,
          ['four'] = 4,
          ['five'] = 5,
          ['six'] = 6,
          ['seven'] = 7,
          ['eight'] = 8,
          ['nine'] = 9,
      }
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          for numeral, value in pairs(numeral_map) do
              if value == num then
                  table.insert(result, numeral)
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          table.insert(result, num)
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num_map[num])
      end
      table.sort(nums)
      local sorted = {}
      for _, num in ipairs(nums) do
          for k, v in pairs(num_map) do
              if v == num then
                  table.insert(sorted, k)
              end
          end
      end
      return table.concat(sorted, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      table.insert(num_list, num)
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, num)
      end
      table.sort(nums, function(a, b)
          return tonumber(a) < tonumber(b)
      end)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local num_map = {
      ['zero'] = 0,
      ['one'] = 1,
      ['two'] = 2,
      ['three'] = 3,
      ['four'] = 4,
      ['five'] = 5,
      ['six'] = 6,
      ['seven'] = 7,
      ['eight'] = 8,
      ['nine'] = 9
    }
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num_map[num])
    end
    table.sort(nums)
    local result = {}
    for _, num in ipairs(nums) do
      for word, value in pairs(num_map) do
        if value == num then
          table.insert(result, word)
        end
      end
    end
    return table.concat(result, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local numeral_map_inv = {}
      for k, v in pairs(numeral_map) do
          numeral_map_inv[v] = k
      end
      local result = {}
      for _, num in ipairs(nums) do
          table.insert(result, numeral_map_inv[num])
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch("%S+") do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, " ")
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      local n = tonumber(num)
      if n then
        table.insert(nums, n)
      end
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%a+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      num_list[#num_list + 1] = num
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local numbers_table = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_table, number)
      end
      table.sort(numbers_table)
      return table.concat(numbers_table, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local numeral_map = {
      zero = 0,
      one = 1,
      two = 2,
      three = 3,
      four = 4,
      five = 5,
      six = 6,
      seven = 7,
      eight = 8,
      nine = 9
    }
    local nums = {}
    for num in numbers:gmatch('%w+') do
      table.insert(nums, numeral_map[num])
    end
    table.sort(nums)
    local sorted_numbers = {}
    for _, num in ipairs(nums) do
      for k, v in pairs(numeral_map) do
        if v == num then
          table.insert(sorted_numbers, k)
        end
      end
    end
    return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local numeral_map = {
      ['zero'] = 0,
      ['one'] = 1,
      ['two'] = 2,
      ['three'] = 3,
      ['four'] = 4,
      ['five'] = 5,
      ['six'] = 6,
      ['seven'] = 7,
      ['eight'] = 8,
      ['nine'] = 9
    }
    local nums = {}
    for num in numbers:gmatch('%w+') do
      table.insert(nums, numeral_map[num])
    end
    table.sort(nums)
    local sorted_numbers = {}
    for _, num in ipairs(nums) do
      for numeral, value in pairs(numeral_map) do
        if value == num then
          table.insert(sorted_numbers, numeral)
        end
      end
    end
    return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums, function(a, b)
          return number_to_numeral[a] < number_to_numeral[b]
      end)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      nums[#nums+1] = num
    end
    table.sort(nums, function(a, b)
      return numbers_to_digits[a] < numbers_to_digits[b]
    end)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch("%w+") do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, " ")
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums, function(a, b)
          return number_to_numeral[a] < number_to_numeral[b]
      end)
      return table.concat(nums, ' ')
  end
- |2-
    local numbers_table = {}
    for num in numbers:gmatch('%S+') do
      table.insert(numbers_table, num)
    end
    table.sort(numbers_table)
    return table.concat(numbers_table, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_map = {
          ['zero'] = 0,
          ['one'] = 1,
          ['two'] = 2,
          ['three'] = 3,
          ['four'] = 4,
          ['five'] = 5,
          ['six'] = 6,
          ['seven'] = 7,
          ['eight'] = 8,
          ['nine'] = 9,
      }
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num_map[num])
      end
      table.sort(num_list)
      local result = {}
      for _, num in ipairs(num_list) do
          for k, v in pairs(num_map) do
              if v == num then
                  table.insert(result, k)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          local n = tonumber(num)
          if n then
              nums[#nums + 1] = n
          else
              local n = num_map[num]
              if n then
                  nums[#nums + 1] = n
              end
          end
      end
      table.sort(nums)
      local result = {}
      for i = 1, #nums do
          result[i] = tostring(nums[i])
      end
      return table.concat(result, ' ')
  end
- |2-
      local numeral_to_number = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9,
      }
      local numbers_list = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_list, numeral_to_number[number])
      end
      table.sort(numbers_list)
      local result = {}
      for _, number in ipairs(numbers_list) do
          for numeral, numeral_number in pairs(numeral_to_number) do
              if numeral_number == number then
                  table.insert(result, numeral)
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          local num_val = num_to_numeral[num]
          if num_val then
              table.insert(num_list, num_val)
          end
      end
      table.sort(num_list)
      local sorted_numbers = {}
      for _, num_val in ipairs(num_list) do
          table.insert(sorted_numbers, numeral_to_num[num_val])
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local num_table = {}
      for num in numbers:gmatch("%S+") do
          table.insert(num_table, num)
      end
      table.sort(num_table)
      return table.concat(num_table, " ")
  end
- |2-
    local numeral_map = {
      zero = 0,
      one = 1,
      two = 2,
      three = 3,
      four = 4,
      five = 5,
      six = 6,
      seven = 7,
      eight = 8,
      nine = 9
    }
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, numeral_map[num])
    end
    table.sort(nums)
    local numeral_map_inv = {}
    for k, v in pairs(numeral_map) do
      numeral_map_inv[v] = k
    end
    local result = {}
    for _, num in ipairs(nums) do
      table.insert(result, numeral_map_inv[num])
    end
    return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local numeral_map = {
      zero = 0,
      one = 1,
      two = 2,
      three = 3,
      four = 4,
      five = 5,
      six = 6,
      seven = 7,
      eight = 8,
      nine = 9
    }
    local nums = {}
    for num in numbers:gmatch('%w+') do
      table.insert(nums, numeral_map[num])
    end
    table.sort(nums)
    local num_str = ''
    for _, num in ipairs(nums) do
      for numeral, value in pairs(numeral_map) do
        if value == num then
          num_str = num_str .. numeral .. ' '
        end
      end
    end
    return num_str:sub(1, -2)
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local num_map = {
      ['zero'] = 0,
      ['one'] = 1,
      ['two'] = 2,
      ['three'] = 3,
      ['four'] = 4,
      ['five'] = 5,
      ['six'] = 6,
      ['seven'] = 7,
      ['eight'] = 8,
      ['nine'] = 9
    }
    local nums = {}
    for num in numbers:gmatch('%w+') do
      table.insert(nums, num_map[num])
    end
    table.sort(nums)
    local result = {}
    for _, num in ipairs(nums) do
      for k, v in pairs(num_map) do
        if v == num then
          table.insert(result, k)
        end
      end
    end
    return table.concat(result, ' ')
  end
- |2-
      local num_list = {}
      local num_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num_map[num])
      end
      table.sort(num_list)
      local result = {}
      for _, num in ipairs(num_list) do
          for k, v in pairs(num_map) do
              if v == num then
                  table.insert(result, k)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch("%w+") do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, " ")
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local numbers_table = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_table, number)
      end
      table.sort(numbers_table)
      return table.concat(numbers_table, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      num_list[#num_list + 1] = num
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- "\tlocal nums = {}\n\tfor num in numbers:gmatch('%w+') do\n\t\tnums[#nums+1] = num\n\tend\n\ttable.sort(nums,
  function(a, b)\n\t\treturn tonumber(a) < tonumber(b)\n\tend)\n\treturn table.concat(nums,
  ' ')\nend"
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      nums[#nums+1] = num
    end
    table.sort(nums, function(a, b)
      return number_to_numeral[a] < number_to_numeral[b]
    end)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_table = {}
      for num in numbers:gmatch("%w+") do
          table.insert(num_table, num)
      end
      table.sort(num_table)
      return table.concat(num_table, " ")
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      nums[#nums+1] = num
    end
    table.sort(nums, function(a, b)
      return numeral_to_number(a) < numeral_to_number(b)
    end)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local num_table = {}
    for num in numbers:gmatch("%S+") do
      table.insert(num_table, num)
    end
    table.sort(num_table)
    return table.concat(num_table, " ")
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      num_list[#num_list + 1] = num
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local numbers_table = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_table, number)
      end
      table.sort(numbers_table)
      return table.concat(numbers_table, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          for k, v in pairs(num_map) do
              if v == num then
                  table.insert(result, k)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      nums[#nums+1] = num
    end
    table.sort(nums, function(a, b)
      return num_to_int(a) < num_to_int(b)
    end)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch("%S+") do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, " ")
  end
- |2-
    local nums = {}
    for num in numbers:gmatch("%S+") do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, " ")
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in string.gmatch(numbers, "%S+") do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, " ")
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      table.insert(num_list, num)
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums, function(a, b)
          return num_to_numeral[a] < num_to_numeral[b]
      end)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          for k, v in pairs(num_map) do
              if v == num then
                  table.insert(result, k)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- "\tlocal nums = {}\n\tfor num in numbers:gmatch('%S+') do\n\t\ttable.insert(nums,
  num)\n\tend\n\ttable.sort(nums, function(a, b)\n\t\treturn number_to_numeral[a]
  < number_to_numeral[b]\n\tend)\n\treturn table.concat(nums, ' ')\nend"
- |2-
    local numeral_map = {
      zero = 0,
      one = 1,
      two = 2,
      three = 3,
      four = 4,
      five = 5,
      six = 6,
      seven = 7,
      eight = 8,
      nine = 9
    }
    local numbers_table = {}
    for number in numbers:gmatch('%S+') do
      table.insert(numbers_table, numeral_map[number])
    end
    table.sort(numbers_table)
    local sorted_numbers = {}
    for _, number in ipairs(numbers_table) do
      for numeral, numeral_number in pairs(numeral_map) do
        if number == numeral_number then
          table.insert(sorted_numbers, numeral)
        end
      end
    end
    return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch("%S+") do
          local n = tonumber(num)
          if n then
              nums[#nums + 1] = n
          else
              local n = number_to_numeral[num]
              if n then
                  nums[#nums + 1] = n
              else
                  return nil, "invalid number: " .. num
              end
          end
      end
      table.sort(nums)
      local sorted = {}
      for i, n in ipairs(nums) do
          sorted[i] = numeral_to_number[n]
      end
      return table.concat(sorted, " ")
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums, function(a, b)
      return numeral_to_number(a) < numeral_to_number(b)
    end)
    return table.concat(nums, ' ')
  end
- |2-
      local numbers_table = {}
      local numbers_sorted = {}
      local numbers_sorted_string = ''
      local number_map = {
          ['zero'] = 0,
          ['one'] = 1,
          ['two'] = 2,
          ['three'] = 3,
          ['four'] = 4,
          ['five'] = 5,
          ['six'] = 6,
          ['seven'] = 7,
          ['eight'] = 8,
          ['nine'] = 9
      }
      for number in numbers:gmatch('%w+') do
          table.insert(numbers_table, number_map[number])
      end
      table.sort(numbers_table)
      for _, number in ipairs(numbers_table) do
          table.insert(numbers_sorted, number)
      end
      for _, number in ipairs(numbers_sorted) do
          for number_string, number_value in pairs(number_map) do
              if number == number_value then
                  numbers_sorted_string = numbers_sorted_string .. number_string .. ' '
              end
          end
      end
      return numbers_sorted_string:sub(1, -2)
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%a+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          local n = tonumber(num)
          if n then
              table.insert(nums, n)
          end
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      nums[#nums+1] = num
    end
    table.sort(nums, function(a, b)
      return num_to_int(a) < num_to_int(b)
    end)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%a+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_table = {}
      local num_string = ""
      local num_list = {}
      local num_list_sorted = {}
      local num_list_sorted_string = ""
      local num_list_sorted_string_final = ""
      local num_list_sorted_string_final_final = ""
      local num_list_sorted_string_final_final_final = ""
      local num_list_sorted_string_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final = ""
      local num_list_sorted_string_final_final_final_final_final_final_final_final_final
- |2-
    local num_list = {}
    for num in numbers:gmatch('%w+') do
      table.insert(num_list, num)
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local numeral_to_number = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9,
      }
      local numbers_list = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_list, numeral_to_number[number])
      end
      table.sort(numbers_list)
      local sorted_numbers = {}
      for _, number in ipairs(numbers_list) do
          table.insert(sorted_numbers, number)
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%w+') do
      nums[#nums+1] = num
    end
    table.sort(nums, function(a, b)
      return number_to_numeral[a] < number_to_numeral[b]
    end)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      table.insert(num_list, num)
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%w+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local num_table = {}
    for num in numbers:gmatch("%w+") do
      table.insert(num_table, num)
    end
    table.sort(num_table)
    return table.concat(num_table, " ")
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%w+') do
      table.insert(num_list, num)
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums, function(a, b)
          return num_to_int(a) < num_to_int(b)
      end)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local num_table = {}
    for num in numbers:gmatch("%S+") do
      table.insert(num_table, num)
    end
    table.sort(num_table)
    return table.concat(num_table, " ")
  end
- |2-
      local nums = {}
      for num in numbers:gmatch("%S+") do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, " ")
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          for numeral, value in pairs(numeral_map) do
              if value == num then
                  table.insert(result, numeral)
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%a+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          for k, v in pairs(numeral_map) do
              if v == num then
                  table.insert(result, k)
                  break
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local numeral_map = {
      zero = 0,
      one = 1,
      two = 2,
      three = 3,
      four = 4,
      five = 5,
      six = 6,
      seven = 7,
      eight = 8,
      nine = 9
    }
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, numeral_map[num])
    end
    table.sort(nums)
    local result = {}
    for _, num in ipairs(nums) do
      for numeral, value in pairs(numeral_map) do
        if value == num then
          table.insert(result, numeral)
        end
      end
    end
    return table.concat(result, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local sorted = {}
    for number in numbers:gmatch('%S+') do
      table.insert(sorted, number)
    end
    table.sort(sorted, function(a, b)
      return number_to_numeral[a] < number_to_numeral[b]
    end)
    return table.concat(sorted, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local num_map = {
          ['zero'] = 0,
          ['one'] = 1,
          ['two'] = 2,
          ['three'] = 3,
          ['four'] = 4,
          ['five'] = 5,
          ['six'] = 6,
          ['seven'] = 7,
          ['eight'] = 8,
          ['nine'] = 9,
      }
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num_map[num])
      end
      table.sort(num_list)
      local num_str = ''
      for _, num in ipairs(num_list) do
          for k, v in pairs(num_map) do
              if v == num then
                  num_str = num_str .. k .. ' '
              end
          end
      end
      return num_str:sub(1, -2)
  end
- |2-
      local numeral_map = {
          ['zero'] = 0,
          ['one'] = 1,
          ['two'] = 2,
          ['three'] = 3,
          ['four'] = 4,
          ['five'] = 5,
          ['six'] = 6,
          ['seven'] = 7,
          ['eight'] = 8,
          ['nine'] = 9,
      }
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local numeral_map_reverse = {}
      for k, v in pairs(numeral_map) do
          numeral_map_reverse[v] = k
      end
      local result = {}
      for _, v in ipairs(nums) do
          table.insert(result, numeral_map_reverse[v])
      end
      return table.concat(result, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local numeral_to_number = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9,
      }
      local numbers_list = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_list, numeral_to_number[number])
      end
      table.sort(numbers_list)
      local sorted_numbers = {}
      for _, number in ipairs(numbers_list) do
          table.insert(sorted_numbers, number)
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- "\tlocal numbers_table = {}\n\tfor number in numbers:gmatch('%S+') do\n\t\ttable.insert(numbers_table,
  number)\n\tend\n\ttable.sort(numbers_table)\n\treturn table.concat(numbers_table,
  ' ')\nend"
- |2-
      local numeral_map = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9
      }
      local nums = {}
      for num in numbers:gmatch('%a+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local result = {}
      for _, num in ipairs(nums) do
          for numeral, value in pairs(numeral_map) do
              if value == num then
                  table.insert(result, numeral)
              end
          end
      end
      return table.concat(result, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%a+') do
          table.insert(nums, num)
      end
      table.sort(nums, function(a, b)
          return num_to_int(a) < num_to_int(b)
      end)
      return table.concat(nums, ' ')
  end
- |2-
      local numeral_to_number = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9,
      }
      local numbers_table = {}
      for number in numbers:gmatch('%w+') do
          table.insert(numbers_table, numeral_to_number[number])
      end
      table.sort(numbers_table)
      local sorted_numbers = {}
      for _, number in ipairs(numbers_table) do
          for numeral, numeral_number in pairs(numeral_to_number) do
              if number == numeral_number then
                  table.insert(sorted_numbers, numeral)
              end
          end
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          num_list[#num_list + 1] = num
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
      local sorted = {}
      for num in numbers:gmatch('%S+') do
          table.insert(sorted, num)
      end
      table.sort(sorted, function(a, b)
          return number_to_numeral[a] < number_to_numeral[b]
      end)
      return table.concat(sorted, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local numeral_to_number = {
          zero = 0,
          one = 1,
          two = 2,
          three = 3,
          four = 4,
          five = 5,
          six = 6,
          seven = 7,
          eight = 8,
          nine = 9,
      }
      local numbers_list = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_list, numeral_to_number[number])
      end
      table.sort(numbers_list)
      local sorted_numbers = {}
      for _, number in ipairs(numbers_list) do
          for numeral, numeral_number in pairs(numeral_to_number) do
              if number == numeral_number then
                  table.insert(sorted_numbers, numeral)
              end
          end
      end
      return table.concat(sorted_numbers, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%w+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local numeral_map = {
          ['zero'] = 0,
          ['one'] = 1,
          ['two'] = 2,
          ['three'] = 3,
          ['four'] = 4,
          ['five'] = 5,
          ['six'] = 6,
          ['seven'] = 7,
          ['eight'] = 8,
          ['nine'] = 9,
      }
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, numeral_map[num])
      end
      table.sort(nums)
      local numeral_map_inv = {}
      for k, v in pairs(numeral_map) do
          numeral_map_inv[v] = k
      end
      local result = {}
      for _, num in ipairs(nums) do
          table.insert(result, numeral_map_inv[num])
      end
      return table.concat(result, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          table.insert(nums, num)
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
      local nums = {}
      for num in numbers:gmatch('%S+') do
          nums[#nums + 1] = num
      end
      table.sort(nums)
      return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local numbers_list = {}
      for number in numbers:gmatch('%S+') do
          table.insert(numbers_list, number)
      end
      table.sort(numbers_list)
      return table.concat(numbers_list, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      table.insert(nums, num)
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
    local nums = {}
    for num in numbers:gmatch('%S+') do
      nums[#nums+1] = num
    end
    table.sort(nums)
    return table.concat(nums, ' ')
  end
- |2-
      local num_list = {}
      for num in numbers:gmatch('%S+') do
          table.insert(num_list, num)
      end
      table.sort(num_list)
      return table.concat(num_list, ' ')
  end
- |2-
    local num_list = {}
    for num in numbers:gmatch('%S+') do
      num_list[#num_list + 1] = num
    end
    table.sort(num_list)
    return table.concat(num_list, ' ')
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

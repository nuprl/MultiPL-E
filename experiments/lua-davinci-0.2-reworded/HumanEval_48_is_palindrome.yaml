---
name: HumanEval_48_is_palindrome
language: lua
prompt: |
  -- Checks if given string is a palindrome
  -- >>> is_palindrome('')
  -- true
  -- >>> is_palindrome('aba')
  -- true
  -- >>> is_palindrome('aaaaa')
  -- true
  -- >>> is_palindrome('zbcd')
  -- false
  local function is_palindrome(text)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = is_palindrome
      lu.assertEquals(candidate(''), true)
      lu.assertEquals(candidate('aba'), true)
      lu.assertEquals(candidate('aaaaa'), true)
      lu.assertEquals(candidate('zbcd'), false)
      lu.assertEquals(candidate('xywyx'), true)
      lu.assertEquals(candidate('xywyz'), false)
      lu.assertEquals(candidate('xywzx'), false)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len/2 do
          if text:sub(i, i) ~= text:sub(len-i+1, len-i+1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = string.len(text)
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      if text == '' then
          return true
      end
      local len = #text
      local half = math.floor(len / 2)
      local left = text:sub(1, half)
      local right = text:sub(len - half + 1, len)
      return left == right:reverse()
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    return text == string.reverse(text)
  end
- |2-
      local len = #text
      for i = 1, len/2 do
          if text:sub(i, i) ~= text:sub(len-i+1, len-i+1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      if len == 0 then
          return true
      end
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len/2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len do
          if string.sub(text, i, i) ~= string.sub(text, len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      if len == 0 then
          return true
      end
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      if len < 2 then
          return true
      end
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len/2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, math.floor(len / 2) do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      if text == string.reverse(text) then
          return true
      else
          return false
      end
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local n = #text
      for i = 1, n do
          if text:sub(i, i) ~= text:sub(n - i + 1, n - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = #text
      local half_len = math.floor(text_len / 2)
      for i = 1, half_len do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      return text == string.reverse(text)
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      return text == string.reverse(text)
  end
- |2-
      if text == '' then
          return true
      end
      local len = #text
      local mid = math.floor(len / 2)
      for i = 1, mid do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = #text
      for i = 1, text_len / 2 do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      if len < 2 then
          return true
      end
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, math.floor(len / 2) do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = #text
      for i = 1, text_len / 2 do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = text:len()
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      if #text <= 1 then
          return true
      end
      if text:sub(1, 1) == text:sub(-1, -1) then
          return is_palindrome(text:sub(2, -2))
      end
      return false
  end
- |2-
    local len = #text
    for i = 1, len do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local text_len = #text
    for i = 1, math.floor(text_len / 2) do
      if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len/2 do
          if text:sub(i, i) ~= text:sub(len-i+1, len-i+1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = string.len(text)
      for i = 1, text_len / 2 do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = text:len()
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      if len < 2 then
          return true
      end
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local text_len = #text
      for i = 1, text_len / 2 do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      if len < 2 then
          return true
      end
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = string.len(text)
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len/2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = text:len()
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      return text == string.reverse(text)
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if string.sub(text, i, i) ~= string.sub(text, len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = text:len()
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      return text == string.reverse(text)
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len // 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local length = #text
      for i = 1, length / 2 do
          if text:sub(i, i) ~= text:sub(length - i + 1, length - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = string.len(text)
    for i = 1, len / 2 do
      if string.sub(text, i, i) ~= string.sub(text, len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      if text == '' then
          return true
      end
      local first = text:sub(1, 1)
      local last = text:sub(-1, -1)
      if first ~= last then
          return false
      end
      return is_palindrome(text:sub(2, -2))
  end
- |2-
      local len = #text
      if len == 0 then
          return true
      end
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      if len == 0 then
          return true
      end
      local half = math.floor(len / 2)
      for i = 1, half do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = text:len()
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(text)
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = string.len(text)
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len/2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #text
    for i = 1, len / 2 do
      if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #text
      for i = 1, len do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = #text
      local half_len = math.floor(text_len / 2)
      for i = 1, half_len do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = #text
      for i = 1, text_len / 2 do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = text:len()
      for i = 1, len / 2 do
          if text:sub(i, i) ~= text:sub(len - i + 1, len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local text_len = #text
      for i = 1, text_len / 2 do
          if text:sub(i, i) ~= text:sub(text_len - i + 1, text_len - i + 1) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #text
      if len == 0 then
          return true
      end
      local i = 1
      local j = len
      while i < j do
          if text:sub(i, i) ~= text:sub(j, j) then
              return false
          end
          i = i + 1
          j = j - 1
      end
      return true
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

---
name: HumanEval_51_remove_vowels
language: lua
prompt: |
  -- remove_vowels is a function that takes string and returns string without vowels.
  -- >>> remove_vowels('')
  -- ''
  -- >>> remove_vowels('abcdef')
  -- 'bcdf'
  -- >>> remove_vowels('aaaaa')
  -- ''
  -- >>> remove_vowels('aaBAA')
  -- 'B'
  -- >>> remove_vowels('zbcd')
  -- 'zbcd'
  local function remove_vowels(text)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = remove_vowels
      lu.assertEquals(candidate(''), '')
      lu.assertEquals(candidate('abcdef\nghijklm'), 'bcdf\nghjklm')
      lu.assertEquals(candidate('fedcba'), 'fdcb')
      lu.assertEquals(candidate('eeeee'), '')
      lu.assertEquals(candidate('acBAA'), 'cB')
      lu.assertEquals(candidate('EcBOO'), 'cB')
      lu.assertEquals(candidate('ybcd'), 'ybcd')
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiou]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          if not contains(vowels, text:sub(i, i)) then
              result = result .. text:sub(i, i)
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' }
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for _, v in ipairs(vowels) do
              if char == v then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return string.gsub(text, '[aeiou]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
    local result = ''
    for i = 1, #text do
      local char = text:sub(i, i)
      if not table.contains(vowels, char) then
        result = result .. char
      end
    end
    return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not vowels:find(char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return (text:gsub('[aeiouAEIOU]', ''))
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local new_text = ''
      for i = 1, #text do
          if not is_vowel(text:sub(i, i)) then
              new_text = new_text .. text:sub(i, i)
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiou]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local c = text:sub(i, i)
          local is_vowel = false
          for _, v in ipairs(vowels) do
              if c == v then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              result = result .. c
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local text_without_vowels = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not vowels:find(char) then
              text_without_vowels = text_without_vowels .. char
          end
      end
      return text_without_vowels
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local result = ''
      for i = 1, #text do
          local c = text:sub(i, i)
          if not vowels:find(c) then
              result = result .. c
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not is_in(char, vowels) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not char:match('[aeiouAEIOU]') then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not vowels:find(char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local new_text = ''
      for i = 1, #text do
          if not vowels:find(text:sub(i, i)) then
              new_text = new_text .. text:sub(i, i)
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiou]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not is_vowel(char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for _, vowel in ipairs(vowels) do
              if char == vowel then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local c = text:sub(i, i)
          if not table.contains(vowels, c) then
              result = result .. c
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for _, vowel in ipairs(vowels) do
              if char == vowel then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local result = ''
      for i = 1, #text do
          local c = text:sub(i, i)
          if not vowels:find(c) then
              result = result .. c
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local new_text = ''
      for i = 1, #text do
          if not is_vowel(text:sub(i, i)) then
              new_text = new_text .. text:sub(i, i)
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return (text:gsub('[aeiouAEIOU]', ''))
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
    local result = ''
    for i = 1, #text do
      local char = text:sub(i, i)
      if not table.contains(vowels, char) then
        result = result .. char
      end
    end
    return result
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local c = text:sub(i, i)
          if not table.contains(vowels, c) then
              result = result .. c
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for _, v in ipairs(vowels) do
              if char == v then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for _, vowel in ipairs(vowels) do
              if char == vowel then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          if not vowels[text:sub(i, i)] then
              new_text = new_text .. text:sub(i, i)
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local c = text:sub(i, i)
          if not table.contains(vowels, c) then
              result = result .. c
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local found = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  found = true
                  break
              end
          end
          if not found then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              result = result .. char
          end
      end
      return result
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return string.gsub(text, '[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- "\treturn text:gsub('[aeiouAEIOU]', '')\nend"
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
    local result = ''
    for i = 1, #text do
      local char = text:sub(i, i)
      if not table.contains(vowels, char) then
        result = result .. char
      end
    end
    return result
  end
- |2-
    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
    local result = ''
    for i = 1, #text do
      local char = text:sub(i, i)
      if not table.contains(vowels, char) then
        result = result .. char
      end
    end
    return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = 'aeiouAEIOU'
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not vowels:find(char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local new_text = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          local is_vowel = false
          for j = 1, #vowels do
              if char == vowels[j] then
                  is_vowel = true
                  break
              end
          end
          if not is_vowel then
              new_text = new_text .. char
          end
      end
      return new_text
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiou]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return string.gsub(text, '[aeiou]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
- |2-
      return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
    return text:gsub('[aeiouAEIOU]', '')
  end
- |2-
      local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}
      local result = ''
      for i = 1, #text do
          local char = text:sub(i, i)
          if not table.contains(vowels, char) then
              result = result .. char
          end
      end
      return result
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

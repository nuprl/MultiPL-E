---
name: HumanEval_16_count_distinct_characters
language: lua
prompt: |
  -- Given a string, find out how many distinct characters (regardless of case) does it consist of
  -- >>> count_distinct_characters('xyzXYZ')
  -- 3
  -- >>> count_distinct_characters('Jerry')
  -- 4
  local function count_distinct_characters(string)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = count_distinct_characters
      lu.assertEquals(candidate(''), 0)
      lu.assertEquals(candidate('abcde'), 5)
      lu.assertEquals(candidate('abcdecadeCADE'), 5)
      lu.assertEquals(candidate('aaaaAAAAaaaa'), 1)
      lu.assertEquals(candidate('Jerry jERRY JeRRRY'), 5)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    local characters = {}
    for character in string:gmatch('.') do
      characters[character:lower()] = true
    end
    return table.length(characters)
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not characters[c] then
              characters[c] = true
          end
      end
      return #characters
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
    local count = 0
    local seen = {}
    for c in string:gmatch('.') do
      if not seen[c:lower()] then
        count = count + 1
        seen[c:lower()] = true
      end
    end
    return count
  end
- |2-
    local count = 0
    local characters = {}
    for i = 1, #string do
      local character = string:sub(i, i)
      if not characters[character] then
        count = count + 1
        characters[character] = true
      end
    end
    return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local count = 0
      local seen = {}
      for char in string:lower():gmatch('.') do
          if not seen[char] then
              count = count + 1
              seen[char] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local distinct_characters = {}
      for character in string:gmatch('.') do
          distinct_characters[character:lower()] = true
      end
      return table.length(distinct_characters)
  end
- |2-
    local count = 0
    local characters = {}
    for i = 1, #string do
      local character = string:sub(i, i)
      if not characters[character] then
        count = count + 1
        characters[character] = true
      end
    end
    return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local char_map = {}
      for char in string:gmatch('.') do
          char_map[char:lower()] = true
      end
      return table.length(char_map)
  end
- |2-
      local characters = {}
      local count = 0
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local chars = {}
      for c in string:gmatch('.') do
          chars[c:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local chars = {}
      for c in string:gmatch('.') do
          if not chars[c:lower()] then
              count = count + 1
              chars[c:lower()] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local count = 0
      local seen = {}
      for c in string:gmatch('.') do
          if not seen[c:lower()] then
              count = count + 1
              seen[c:lower()] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              characters[character] = true
          end
      end
      return #characters
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local set = {}
      for i = 1, #string do
          set[string.lower(string.sub(string, i, i))] = true
      end
      return #set
  end
- |2-
      local characters = {}
      for character in string:gmatch('.') do
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              characters[character] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local seen = {}
      for char in string:lower():gmatch('.') do
          if not seen[char] then
              count = count + 1
              seen[char] = true
          end
      end
      return count
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return table.length(chars)
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local char_set = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not char_set[char] then
              count = count + 1
              char_set[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for char in string:gmatch('.') do
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
    local chars = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
      local chars = {}
      local count = 0
      for i=1,#string do
          local char = string:sub(i,i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local set = {}
      for i = 1, #string do
          set[string.lower(string.sub(string, i, i))] = true
      end
      return #set
  end
- |2-
      local characters = {}
      for char in string:gmatch('.') do
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local chars = {}
      for char in string:gmatch('.') do
          if not chars[char:lower()] then
              chars[char:lower()] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for char in string:gmatch('.') do
          characters[char:lower()] = true
      end
      return table.length(characters)
  end
- |2-
      local chars = {}
      for c in string:gmatch('.') do
          chars[c:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
    local count = 0
    local seen = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if not seen[char] then
        count = count + 1
        seen[char] = true
      end
    end
    return count
  end
- |2-
      local char_set = {}
      for c in string:gmatch('.') do
          char_set[c:lower()] = true
      end
      return #char_set
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local chars = {}
      for c in string:gmatch('.') do
          if not chars[c:lower()] then
              count = count + 1
              chars[c:lower()] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
    local count = 0
    local characters = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if not characters[char] then
        count = count + 1
        characters[char] = true
      end
    end
    return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local count = 0
      local char_set = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not char_set[char] then
              count = count + 1
              char_set[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
      local set = {}
      for i = 1, #string do
          set[string.lower(string:sub(i, i))] = true
      end
      return #set
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
    local chars = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if not chars[char] then
        chars[char] = true
      end
    end
    return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              characters[character] = true
          end
      end
      return #characters
  end
- |2-
      local characters = {}
      for char in string:gmatch('.') do
          characters[char:lower()] = true
      end
      return table.length(characters)
  end
- |2-
      local count = 0
      local seen = {}
      for char in string:lower():gmatch('.') do
          if not seen[char] then
              count = count + 1
              seen[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local seen = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not seen[c] then
              count = count + 1
              seen[c] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for char in string:gmatch('.') do
          characters[char:lower()] = true
      end
      return table.length(characters)
  end
- |2-
    local seen = {}
    local count = 0
    for char in string:gmatch('.') do
      if not seen[char:lower()] then
        seen[char:lower()] = true
        count = count + 1
      end
    end
    return count
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
    local set = {}
    for i = 1, #string do
      set[string:sub(i, i)] = true
    end
    return #set
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          characters[c:lower()] = true
      end
      return #characters
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local characters = {}
      for character in string:gmatch('.') do
          characters[character:lower()] = true
      end
      return table.length(characters)
  end
- |2-
    local chars = {}
    for c in string:gmatch('.') do
      chars[c:lower()] = true
    end
    return #chars
  end
- |2-
      local count = 0
      local char_set = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not char_set[char] then
              count = count + 1
              char_set[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local char_map = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not char_map[char] then
              count = count + 1
              char_map[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local characters = {}
      for character in string:gmatch('.') do
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local count = 0
      local char_set = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not char_set[char] then
              count = count + 1
              char_set[char] = true
          end
      end
      return count
  end
- "\tlocal chars = {}\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif
  not chars[char] then\n\t\t\tchars[char] = true\n\t\tend\n\tend\n\treturn #chars\nend"
- |2-
    local characters = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if not characters[char] then
        characters[char] = true
      end
    end
    return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local count = 0
      local hash = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not hash[char] then
              hash[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local seen = {}
      for char in string:lower():gmatch('.') do
          if not seen[char] then
              count = count + 1
              seen[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
    local count = 0
    local seen = {}
    for char in string:lower():gmatch('.') do
      if not seen[char] then
        count = count + 1
        seen[char] = true
      end
    end
    return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return table.length(chars)
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not characters[c] then
              count = count + 1
              characters[c] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not chars[c] then
              chars[c] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
    local characters = {}
    for character in string:gmatch('.') do
      characters[character:lower()] = true
    end
    return table.length(characters)
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, string.len(string) do
          local char = string.sub(string, i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return table.getn(characters)
  end
- |2-
    local characters = {}
    for c in string:gmatch('.') do
      characters[c:lower()] = true
    end
    return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for c in string:gmatch('.') do
          characters[c:lower()] = true
      end
      return #characters
  end
- |2-
      local char_set = {}
      for char in string:gmatch('.') do
          char_set[char:lower()] = true
      end
      return #char_set
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not chars[c] then
              chars[c] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
    local count = 0
    local characters = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if not characters[char] then
        count = count + 1
        characters[char] = true
      end
    end
    return count
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              characters[character] = true
          end
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              characters[character] = true
          end
      end
      return #characters
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          characters[character:lower()] = true
      end
      return table.count(characters)
  end
- |2-
      local characters = {}
      for character in string:gmatch('.') do
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for character in string:gmatch('.') do
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for character in string:gmatch('.') do
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local characters = {}
      for c in string:gmatch('.') do
          characters[c:lower()] = true
      end
      return table.length(characters)
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local set = {}
      for i = 1, #string do
          set[string.lower(string:sub(i, i))] = true
      end
      return #set
  end
- |2-
      local t = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not t[c] then
              t[c] = true
          end
      end
      return #t
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
- |2-
      local char_set = {}
      for c in string:gmatch('.') do
          char_set[c:lower()] = true
      end
      return #char_set
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return table.length(chars)
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
    local characters = {}
    for i = 1, #string do
      local character = string:sub(i, i)
      characters[character:lower()] = true
    end
    return #characters
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('%a') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          characters[character:lower()] = true
      end
      return #characters
  end
- |2-
      local char_set = {}
      for char in string:gmatch('.') do
          char_set[char:lower()] = true
      end
      return #char_set
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local characters = {}
      for char in string:gmatch('.') do
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
    local chars = {}
    for char in string:gmatch('.') do
      chars[char:lower()] = true
    end
    return table.length(chars)
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return table.length(chars)
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not chars[c] then
              chars[c] = true
          end
      end
      return #chars
  end
- |2-
      local char_set = {}
      for char in string:gmatch('.') do
          char_set[char:lower()] = true
      end
      return #char_set
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local chars = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not chars[char] then
              chars[char] = true
          end
      end
      return #chars
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              characters[char] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return table.length(chars)
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return table.length(chars)
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local chars = {}
      for char in string:gmatch('.') do
          if not chars[char:lower()] then
              chars[char:lower()] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local count = 0
      local chars = {}
      for i = 1, string.len(string) do
          local char = string.sub(string, i, i)
          if not chars[char] then
              chars[char] = true
              count = count + 1
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if not characters[c] then
              characters[c] = true
          end
      end
      return #characters
  end
- |2-
      local chars = {}
      for char in string:gmatch('.') do
          chars[char:lower()] = true
      end
      return #chars
  end
- |2-
      local count = 0
      local seen = {}
      for char in string:lower():gmatch('.') do
          if not seen[char] then
              count = count + 1
              seen[char] = true
          end
      end
      return count
  end
- |2-
    local char_set = {}
    for char in string:gmatch('.') do
      char_set[char:lower()] = true
    end
    return #char_set
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local character = string:sub(i, i)
          if not characters[character] then
              count = count + 1
              characters[character] = true
          end
      end
      return count
  end
- |2-
      local count = 0
      local seen = {}
      for char in string:lower():gmatch('.') do
          if not seen[char] then
              count = count + 1
              seen[char] = true
          end
      end
      return count
  end
- |2-
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          characters[char:lower()] = true
      end
      return #characters
  end
- |2-
      local count = 0
      local characters = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if not characters[char] then
              count = count + 1
              characters[char] = true
          end
      end
      return count
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

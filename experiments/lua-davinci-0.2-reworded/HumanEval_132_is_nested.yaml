name: HumanEval_132_is_nested
language: lua
prompt: "-- Create a function that takes a string as input which contains only square\
  \ brackets.\n-- The function should return true if and only if there is a valid\
  \ subsequence of brackets \n-- where at least one bracket in the subsequence is\
  \ nested.\n-- >>> is_nested('[[]]')\n-- true\n-- >>> is_nested('[]]]]]]][[[[[]')\n\
  -- false\n-- >>> is_nested('[][]')\n-- false\n-- >>> is_nested('[]')\n-- false\n\
  -- >>> is_nested('[[][]]')\n-- true\n-- >>> is_nested('[[]][[')\n-- true\nlocal\
  \ function is_nested(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_nested\n\
  \    lu.assertEquals(candidate('[[]]'), true)\n    lu.assertEquals(candidate('[]]]]]]][[[[[]'),\
  \ false)\n    lu.assertEquals(candidate('[][]'), false)\n    lu.assertEquals(candidate('[]'),\
  \ false)\n    lu.assertEquals(candidate('[[[[]]]]'), true)\n    lu.assertEquals(candidate('[]]]]]]]]]]'),\
  \ false)\n    lu.assertEquals(candidate('[][][[]]'), true)\n    lu.assertEquals(candidate('[[]'),\
  \ false)\n    lu.assertEquals(candidate('[]]'), false)\n    lu.assertEquals(candidate('[[]][['),\
  \ true)\n    lu.assertEquals(candidate('[[][]]'), true)\n    lu.assertEquals(candidate(''),\
  \ false)\n    lu.assertEquals(candidate('[[[[[[[['), false)\n    lu.assertEquals(candidate(']]]]]]]]'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local stack = {}\n  for i = 1, #string do\n    local c = string:sub(i,\
    \ i)\n    if c == '[' then\n      table.insert(stack, c)\n    elseif c == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        if string[i] == '[' then\n            table.insert(stack, string[i])\n\
    \        elseif string[i] == ']' then\n            if #stack == 0 then\n     \
    \           return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack > 0\nend", "  local\
    \ stack = Stack:new()\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char == '[' then\n      stack:push(char)\n    elseif char == ']'\
    \ then\n      if stack:is_empty() then\n        return false\n      else\n   \
    \     stack:pop()\n      end\n    end\n  end\n  return not stack:is_empty()\n\
    end", "  local stack = {}\n  for i = 1, #string do\n    if string[i] == '[' then\n\
    \      table.insert(stack, string[i])\n    elseif string[i] == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack > 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n  \
    \  local c = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack,\
    \ c)\n    elseif c == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = Stack:new()\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = Stack:new()\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '['\
    \ then\n      stack:push(char)\n    elseif char == ']' then\n      if stack:is_empty()\
    \ then\n        return false\n      else\n        stack:pop()\n      end\n   \
    \ end\n  end\n  return not stack:is_empty()\nend", "    local stack = {}\n   \
    \ for i = 1, #string do\n        local char = string:sub(i, i)\n        if char\
    \ == '[' then\n            stack[#stack + 1] = char\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                stack[#stack] = nil\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ 1, char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack, 1)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n  \
    \  local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    table.insert(stack, char)\n        elseif char == ']' then\n            if\
    \ #stack == 0 then\n                return false\n            else\n         \
    \       table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack > 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n        if\
    \ string[i] == '[' then\n            stack:push('[')\n        elseif string[i]\
    \ == ']' then\n            if stack:is_empty() then\n                return false\n\
    \            else\n                stack:pop()\n            end\n        end\n\
    \    end\n    return stack:is_empty()\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char == '[' then\n   \
    \         table.insert(stack, char)\n        elseif char == ']' then\n       \
    \     if #stack == 0 then\n                return false\n            else\n  \
    \              table.remove(stack)\n            end\n        end\n    end\n  \
    \  return #stack > 0\nend", "  local stack = {}\n  for i = 1, #string do\n   \
    \ local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c == '[' then\n         \
    \   stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack > 0\nend", "  local stack\
    \ = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if c == '['\
    \ then\n      table.insert(stack, c)\n    elseif c == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n \
    \ for i = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n\
    \      table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0\
    \ then\n        return false\n      else\n        table.remove(stack)\n      end\n\
    \    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n  for i = 1,\
    \ #string do\n    if string[i] == '[' then\n      table.insert(stack, string[i])\n\
    \    elseif string[i] == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n \
    \       local char = string:sub(i, i)\n        if char == '[' then\n         \
    \   stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = Stack()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "  local stack = {}\n\
    \  for i = 1, #string do\n    if string[i] == '[' then\n      stack[#stack + 1]\
    \ = '['\n    elseif string[i] == ']' then\n      if #stack == 0 then\n       \
    \ return false\n      else\n        stack[#stack] = nil\n      end\n    end\n\
    \  end\n  return #stack == 0\nend", "    local stack = Stack()\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = Stack()\n    for i = 1, #string do\n        if string[i] == '['\
    \ then\n            stack:push(string[i])\n        elseif string[i] == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "    local stack = Stack()\n    for i\
    \ = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = Stack:new()\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return not stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack > 0\nend", "    local stack\
    \ = Stack:new()\n    for i = 1, #string do\n        if string[i] == '[' then\n\
    \            stack:push(string[i])\n        elseif string[i] == ']' then\n   \
    \         if stack:is_empty() then\n                return false\n           \
    \ else\n                stack:pop()\n            end\n        end\n    end\n \
    \   return not stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c == '[' then\n         \
    \   table.insert(stack, c)\n        elseif c == ']' then\n            if #stack\
    \ == 0 then\n                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "  local stack = {}\n\
    \  for i = 1, #string do\n    if string[i] == '[' then\n      table.insert(stack,\
    \ string[i])\n    elseif string[i] == ']' then\n      if #stack == 0 then\n  \
    \      return false\n      else\n        table.remove(stack)\n      end\n    end\n\
    \  end\n  return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local c = string:sub(i, i)\n    if c == '[' then\n      stack[#stack\
    \ + 1] = c\n    elseif c == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        stack[#stack] = nil\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "  local stack = {}\n  for i =\
    \ 1, #string do\n    if string[i] == '[' then\n      stack[#stack + 1] = '['\n\
    \    elseif string[i] == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        stack[#stack] = nil\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack > 0\nend", "    local stack = Stack()\n    local open_brackets = {['[']\
    \ = true}\n    local close_brackets = {[']'] = true}\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if open_brackets[char] then\n\
    \            stack:push(char)\n        elseif close_brackets[char] then\n    \
    \        if stack:is_empty() then\n                return false\n            else\n\
    \                stack:pop()\n            end\n        end\n    end\n    return\
    \ not stack:is_empty()\nend", "    local stack = Stack:new()\n    for i=1, #string\
    \ do\n        local char = string:sub(i,i)\n        if char == '[' then\n    \
    \        stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \ local stack = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n\
    \    if char == '[' then\n      table.insert(stack, char)\n    elseif char ==\
    \ ']' then\n      if #stack == 0 then\n        return false\n      else\n    \
    \    table.remove(stack)\n      end\n    end\n  end\n  return #stack == 0\nend",
  "    local stack = Stack:new()\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return not stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack > 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "  local stack = {}\n  for i =\
    \ 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    if string[i] == '[' then\n      stack[#stack + 1] = string[i]\n    elseif\
    \ string[i] == ']' then\n      if #stack == 0 then\n        return false\n   \
    \   else\n        stack[#stack] = nil\n      end\n    end\n  end\n  return #stack\
    \ > 0\nend", "    local stack = Stack()\n    for i = 1, #string do\n        local\
    \ c = string:sub(i, i)\n        if c == '[' then\n            stack:push(c)\n\
    \        elseif c == ']' then\n            if stack:is_empty() then\n        \
    \        return false\n            else\n                stack:pop()\n       \
    \     end\n        end\n    end\n    return not stack:is_empty()\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack:new()\n    for i = 1, #string do\n\
    \        if string[i] == '[' then\n            stack:push(string[i])\n       \
    \ elseif string[i] == ']' then\n            if stack:is_empty() then\n       \
    \         return false\n            else\n                stack:pop()\n      \
    \      end\n        end\n    end\n    return not stack:is_empty()\nend", "   \
    \ local stack = Stack:new()\n    for i = 1, #string do\n        if string[i] ==\
    \ '[' then\n            stack:push(string[i])\n        elseif string[i] == ']'\
    \ then\n            if stack:is_empty() then\n                return false\n \
    \           else\n                stack:pop()\n            end\n        end\n\
    \    end\n    return not stack:is_empty()\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack > 0\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c == '[' then\n         \
    \   table.insert(stack, c)\n        elseif c == ']' then\n            if #stack\
    \ == 0 then\n                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack:new()\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack > 0 then\n                table.remove(stack)\n\
    \            else\n                return false\n            end\n        end\n\
    \    end\n    return #stack > 0\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n  \
    \  if string[i] == '[' then\n      table.insert(stack, string[i])\n    elseif\
    \ string[i] == ']' then\n      if #stack == 0 then\n        return false\n   \
    \   else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    if string[i] ==\
    \ '[' then\n      stack[#stack + 1] = '['\n    elseif string[i] == ']' then\n\
    \      if #stack == 0 then\n        return false\n      else\n        stack[#stack]\
    \ = nil\n      end\n    end\n  end\n  return #stack == 0\nend", "    local stack\
    \ = Stack()\n    for i = 1, #string do\n        local c = string:sub(i, i)\n \
    \       if c == '[' then\n            stack:push(c)\n        elseif c == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack:new()\n    for i = 1, #string do\n\
    \        local char = string:sub(i, i)\n        if char == '[' then\n        \
    \    stack:push(char)\n        elseif char == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack > 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n      \
    \  if c == '[' then\n            table.insert(stack, c)\n        elseif c == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack > 0\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char == '[' then\n   \
    \         table.insert(stack, char)\n        elseif char == ']' then\n       \
    \     if #stack == 0 then\n                return false\n            else\n  \
    \              table.remove(stack)\n            end\n        end\n    end\n  \
    \  return #stack > 0\nend", "  local stack = Stack:new()\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char == '[' then\n      stack:push(char)\n\
    \    elseif char == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return stack:is_empty()\n\
    end", "    local stack = Stack:new()\n    for i = 1, #string do\n        if string[i]\
    \ == '[' then\n            stack:push(string[i])\n        elseif string[i] ==\
    \ ']' then\n            if stack:is_empty() then\n                return false\n\
    \            else\n                stack:pop()\n            end\n        end\n\
    \    end\n    return stack:is_empty()\nend", "  local stack = Stack:new()\n  for\
    \ i = 1, #string do\n    if string[i] == '[' then\n      stack:push(string[i])\n\
    \    elseif string[i] == ']' then\n      if stack:is_empty() then\n        return\
    \ false\n      else\n        stack:pop()\n      end\n    end\n  end\n  return\
    \ stack:is_empty()\nend", "    local stack = Stack()\n    for i = 1, #string do\n\
    \        if string[i] == '[' then\n            stack:push(string[i])\n       \
    \ elseif string[i] == ']' then\n            if stack:is_empty() then\n       \
    \         return false\n            else\n                stack:pop()\n      \
    \      end\n        end\n    end\n    return stack:is_empty()\nend", "    local\
    \ stack = Stack()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = Stack:new()\n\
    \    local is_nested = false\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    if stack:is_empty() then\n        return\
    \ false\n    else\n        return true\n    end\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = Stack:new()\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            stack:push(char)\n        elseif char == ']' then\n            if\
    \ stack:is_empty() then\n                return false\n            else\n    \
    \            stack:pop()\n            end\n        end\n    end\n    return not\
    \ stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack > 0 then\n         \
    \       table.remove(stack)\n            else\n                return false\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "  local stack = {}\n  for i =\
    \ 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack,\
    \ c)\n    elseif c == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "  local stack = Stack:new()\n  for i = 1, #string do\n \
    \   local char = string:sub(i, i)\n    if char == '[' then\n      stack:push(char)\n\
    \    elseif char == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return not stack:is_empty()\n\
    end", "  local stack = Stack:new()\n  for i = 1, #string do\n    local char =\
    \ string:sub(i, i)\n    if char == '[' then\n      stack:push(char)\n    elseif\
    \ char == ']' then\n      if stack:is_empty() then\n        return false\n   \
    \   else\n        stack:pop()\n      end\n    end\n  end\n  return not stack:is_empty()\n\
    end", "    local stack = Stack()\n    for i = 1, #string do\n        local c =\
    \ string:sub(i, i)\n        if c == '[' then\n            stack:push(c)\n    \
    \    elseif c == ']' then\n            if stack:is_empty() then\n            \
    \    return false\n            else\n                stack:pop()\n           \
    \ end\n        end\n    end\n    return not stack:is_empty()\nend", "  local stack\
    \ = Stack:new()\n  for i = 1, #string do\n    if string[i] == '[' then\n     \
    \ stack:push(string[i])\n    elseif string[i] == ']' then\n      if stack:is_empty()\
    \ then\n        return false\n      else\n        stack:pop()\n      end\n   \
    \ end\n  end\n  return stack:is_empty()\nend", "\tlocal stack = Stack:new()\n\t\
    for i = 1, #string do\n\t\tlocal c = string:sub(i, i)\n\t\tif c == '[' then\n\t\
    \t\tstack:push(c)\n\t\telseif c == ']' then\n\t\t\tif stack:empty() then\n\t\t\
    \t\treturn false\n\t\t\telse\n\t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\
    \treturn not stack:empty()\nend", "\tlocal stack = Stack:new()\n\tfor i = 1, #string\
    \ do\n\t\tif string[i] == '[' then\n\t\t\tstack:push('[')\n\t\telseif string[i]\
    \ == ']' then\n\t\t\tif stack:is_empty() then\n\t\t\t\treturn false\n\t\t\telse\n\
    \t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\treturn not stack:is_empty()\n\
    end", "    local stack = Stack()\n    for i = 1, #string do\n        local char\
    \ = string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return not stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack > 0\nend", "  local stack\
    \ = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char\
    \ == '[' then\n      table.insert(stack, char)\n    elseif char == ']' then\n\
    \      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack ~= 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "  local stack = Stack()\n  for\
    \ i = 1, #string do\n    if string[i] == '[' then\n      stack:push(string[i])\n\
    \    elseif string[i] == ']' then\n      if stack:is_empty() then\n        return\
    \ false\n      else\n        stack:pop()\n      end\n    end\n  end\n  return\
    \ not stack:is_empty()\nend", "  local stack = Stack()\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char == '[' then\n      stack:push(char)\n\
    \    elseif char == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return not stack:is_empty()\n\
    end", "    local stack = Stack:new()\n    for i = 1, #string do\n        local\
    \ c = string:sub(i, i)\n        if c == '[' then\n            stack:push(c)\n\
    \        elseif c == ']' then\n            if stack:is_empty() then\n        \
    \        return false\n            else\n                stack:pop()\n       \
    \     end\n        end\n    end\n    return not stack:is_empty()\nend", "    local\
    \ stack = Stack()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n\
    \        if char == '[' then\n            table.insert(stack, char)\n        elseif\
    \ char == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "    local stack = Stack()\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            stack:push(char)\n        elseif char == ']' then\n            if\
    \ stack:is_empty() then\n                return false\n            else\n    \
    \            stack:pop()\n            end\n        end\n    end\n    return not\
    \ stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack:new()\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            stack:push(c)\n        elseif c ==\
    \ ']' then\n            if stack:is_empty() then\n                return false\n\
    \            else\n                stack:pop()\n            end\n        end\n\
    \    end\n    return not stack:is_empty()\nend", "    local stack = Stack()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "    local stack = {}\n    for i = 1,\
    \ #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n \
    \           table.insert(stack, c)\n        elseif c == ']' then\n           \
    \ if #stack == 0 then\n                return false\n            else\n      \
    \          table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = Stack()\n    for _, char in ipairs(string)\
    \ do\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return stack:is_empty()\nend", "  local stack = {}\n  for\
    \ i = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      table.insert(stack, char)\n    elseif char == ']' then\n      if #stack\
    \ == 0 then\n        return false\n      else\n        table.remove(stack)\n \
    \     end\n    end\n  end\n  return #stack == 0\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "    local stack = Stack()\n    for i\
    \ = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "  local stack = {}\n  for i = 1, #string\
    \ do\n    if string[i] == '[' then\n      table.insert(stack, string[i])\n   \
    \ elseif string[i] == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack()\n    for _, c in ipairs(string) do\n        if c == '[' then\n\
    \            stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            table.insert(stack, char)\n   \
    \     elseif char == ']' then\n            if #stack == 0 then\n             \
    \   return false\n            else\n                table.remove(stack)\n    \
    \        end\n        end\n    end\n    return #stack > 0\nend", "    local stack\
    \ = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n      \
    \  if c == '[' then\n            table.insert(stack, c)\n        elseif c == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack == 0\nend", "    local stack = Stack:new()\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            stack:push(char)\n        elseif char == ']' then\n  \
    \          if stack:is_empty() then\n                return false\n          \
    \  else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "  local stack = Stack:new()\n  for i\
    \ = 1, #string do\n    if string[i] == '[' then\n      stack:push('[')\n    elseif\
    \ string[i] == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return stack:is_empty()\n\
    end", "    local stack = Stack:new()\n    for i = 1, #string do\n        local\
    \ c = string:sub(i, i)\n        if c == '[' then\n            stack:push(c)\n\
    \        elseif c == ']' then\n            if stack:is_empty() then\n        \
    \        return false\n            else\n                stack:pop()\n       \
    \     end\n        end\n    end\n    return not stack:is_empty()\nend", "    local\
    \ stack = Stack:new()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            stack:push(c)\n        elseif c == ']' then\n        \
    \    if stack:is_empty() then\n                return false\n            else\n\
    \                stack:pop()\n            end\n        end\n    end\n    return\
    \ not stack:is_empty()\nend", "    local stack = Stack()\n    for i = 1, #string\
    \ do\n        if string[i] == '[' then\n            stack:push(string[i])\n  \
    \      elseif string[i] == ']' then\n            if stack:is_empty() then\n  \
    \              return false\n            else\n                stack:pop()\n \
    \           end\n        end\n    end\n    return stack:is_empty()\nend", "\t\
    local stack = {}\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\
    \t\tif char == '[' then\n\t\t\ttable.insert(stack, char)\n\t\telseif char == ']'\
    \ then\n\t\t\tif #stack == 0 then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\t\
    table.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn #stack > 0\nend", " \
    \   local stack = Stack:new()\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return not stack:is_empty()\nend", " \
    \   local stack = Stack:new()\n    for i = 1, #string do\n        if string[i]\
    \ == '[' then\n            stack:push(string[i])\n        elseif string[i] ==\
    \ ']' then\n            if stack:is_empty() then\n                return false\n\
    \            else\n                stack:pop()\n            end\n        end\n\
    \    end\n    return stack:is_empty()\nend", "    local stack = Stack:new()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "  local stack = Stack:new()\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n\
    \      stack:push(char)\n    elseif char == ']' then\n      if stack:is_empty()\
    \ then\n        return false\n      else\n        stack:pop()\n      end\n   \
    \ end\n  end\n  return not stack:is_empty()\nend", "  local stack = {}\n  for\
    \ i = 1, #string do\n    if string[i] == '[' then\n      table.insert(stack, string[i])\n\
    \    elseif string[i] == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  if string[i] == '[' then\n            table.insert(stack, string[i])\n    \
    \    elseif string[i] == ']' then\n            if #stack == 0 then\n         \
    \       return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack > 0\nend", "    local\
    \ stack = Stack:new()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "    local stack = Stack()\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "    local stack = Stack:new()\n    local\
    \ is_nested = false\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    if stack:is_empty() then\n        return false\n    else\n\
    \        return true\n    end\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char == '[' then\n   \
    \         table.insert(stack, char)\n        elseif char == ']' then\n       \
    \     if #stack == 0 then\n                return false\n            else\n  \
    \              table.remove(stack)\n            end\n        end\n    end\n  \
    \  return #stack > 0\nend", "\tlocal stack = Stack:new()\n\tfor i = 1, #string\
    \ do\n\t\tlocal c = string:sub(i, i)\n\t\tif c == '[' then\n\t\t\tstack:push(c)\n\
    \t\telseif c == ']' then\n\t\t\tif stack:is_empty() then\n\t\t\t\treturn false\n\
    \t\t\telse\n\t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\treturn not stack:is_empty()\n\
    end", "    local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c\
    \ = string:sub(i, i)\n    if c == '[' then\n      table.insert(stack, c)\n   \
    \ elseif c == ']' then\n      if #stack == 0 then\n        return false\n    \
    \  else\n        table.remove(stack)\n      end\n    end\n  end\n  return #stack\
    \ == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local c = string:sub(i,\
    \ i)\n    if c == '[' then\n      table.insert(stack, c)\n    elseif c == ']'\
    \ then\n      if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            table.insert(stack, char)\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack > 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "  local stack = Stack:new()\n  for i = 1, #string do\n \
    \   local c = string:sub(i, i)\n    if c == '[' then\n      stack:push(c)\n  \
    \  elseif c == ']' then\n      if stack:is_empty() then\n        return false\n\
    \      else\n        stack:pop()\n      end\n    end\n  end\n  return not stack:is_empty()\n\
    end", "\tlocal stack = {}\n\tfor i = 1, #string do\n\t\tlocal c = string:sub(i,\
    \ i)\n\t\tif c == '[' then\n\t\t\ttable.insert(stack, c)\n\t\telseif c == ']'\
    \ then\n\t\t\tif #stack == 0 then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\t\
    table.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn #stack > 0\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = Stack:new()\n\
    \  for i = 1, #string do\n    if string[i] == '[' then\n      stack:push(string[i])\n\
    \    elseif string[i] == ']' then\n      if stack:is_empty() then\n        return\
    \ false\n      else\n        stack:pop()\n      end\n    end\n  end\n  return\
    \ stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string do\n \
    \       local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack > 0 then\n                table.remove(stack)\n            else\n\
    \                return false\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "  local stack = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack, char)\n\
    \    elseif char == ']' then\n      if #stack == 0 then\n        return false\n\
    \      else\n        table.remove(stack)\n      end\n    end\n  end\n  return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack > 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    local c = string:sub(i, i)\n    if\
    \ c == '[' then\n      table.insert(stack, c)\n    elseif c == ']' then\n    \
    \  if #stack == 0 then\n        return false\n      else\n        table.remove(stack)\n\
    \      end\n    end\n  end\n  return #stack == 0\nend", "    local stack = Stack:new()\n\
    \    local open_brackets = {'[', '{', '('}\n    local close_brackets = {']', '}',\
    \ ')'}\n    local bracket_pairs = {[']'] = '[', ['}'] = '{', [')'] = '('}\n  \
    \  for i = 1, #string do\n        local char = string:sub(i, i)\n        if table.contains(open_brackets,\
    \ char) then\n            stack:push(char)\n        elseif table.contains(close_brackets,\
    \ char) then\n            if stack:is_empty() then\n                return false\n\
    \            end\n            local top = stack:pop()\n            if bracket_pairs[char]\
    \ ~= top then\n                return false\n            end\n        end\n  \
    \  end\n    return not stack:is_empty()\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            stack[#stack\
    \ + 1] = char\n        elseif char == ']' then\n            if #stack == 0 then\n\
    \                return false\n            else\n                stack[#stack]\
    \ = nil\n            end\n        end\n    end\n    return #stack == 0\nend",
  "    local stack = Stack:new()\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return stack:is_empty()\nend", "    local\
    \ stack = Stack()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            table.insert(stack, c)\n        elseif c == ']' then\n\
    \            if #stack == 0 then\n                return false\n            else\n\
    \                table.remove(stack)\n            end\n        end\n    end\n\
    \    return #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "  local\
    \ stack = {}\n  for i = 1, #string do\n    if string[i] == '[' then\n      table.insert(stack,\
    \ string[i])\n    elseif string[i] == ']' then\n      if #stack == 0 then\n  \
    \      return false\n      else\n        table.remove(stack)\n      end\n    end\n\
    \  end\n  return #stack == 0\nend", "  local stack = Stack:new()\n  for i = 1,\
    \ #string do\n    local char = string:sub(i, i)\n    if char == '[' then\n   \
    \   stack:push(char)\n    elseif char == ']' then\n      if stack:is_empty() then\n\
    \        return false\n      else\n        stack:pop()\n      end\n    end\n \
    \ end\n  return not stack:is_empty()\nend", "    local stack = Stack()\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            stack:push(char)\n        elseif char == ']' then\n  \
    \          if stack:is_empty() then\n                return false\n          \
    \  else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return not stack:is_empty()\nend", "    local stack = Stack()\n    for i\
    \ = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "    local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  if string[i] == '[' then\n            table.insert(stack, 1, ']')\n       \
    \ elseif string[i] == ']' then\n            if #stack == 0 then\n            \
    \    return false\n            else\n                table.remove(stack, 1)\n\
    \            end\n        end\n    end\n    return #stack > 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char ==\
    \ '[' then\n            table.insert(stack, char)\n        elseif char == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack)\n            end\n        end\n\
    \    end\n    return #stack > 0\nend", "    local stack = {}\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c == '[' then\n         \
    \   table.insert(stack, c)\n        elseif c == ']' then\n            if #stack\
    \ == 0 then\n                return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack()\n    for i = 1, #string do\n        if string[i] == '[' then\n\
    \            stack:push(string[i])\n        elseif string[i] == ']' then\n   \
    \         if stack:is_empty() then\n                return false\n           \
    \ else\n                stack:pop()\n            end\n        end\n    end\n \
    \   return stack:is_empty()\nend", "    local stack = Stack()\n    for i = 1,\
    \ #string do\n        if string[i] == '[' then\n            stack:push('[')\n\
    \        elseif string[i] == ']' then\n            if stack:is_empty() then\n\
    \                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return stack:is_empty()\nend", " \
    \   local stack = Stack:new()\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return not stack:is_empty()\nend", " \
    \   local stack = Stack:new()\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char == '[' then\n            stack:push(char)\n\
    \        elseif char == ']' then\n            if stack:is_empty() then\n     \
    \           return false\n            else\n                stack:pop()\n    \
    \        end\n        end\n    end\n    return not stack:is_empty()\nend", " \
    \   local stack = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c == '[' then\n            table.insert(stack, c)\n        elseif\
    \ c == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                table.remove(stack)\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "  local stack = {}\n  for i\
    \ = 1, #string do\n    local c = string:sub(i, i)\n    if c == '[' then\n    \
    \  table.insert(stack, c)\n    elseif c == ']' then\n      if #stack == 0 then\n\
    \        return false\n      else\n        table.remove(stack)\n      end\n  \
    \  end\n  end\n  return #stack == 0\nend", "    local stack = Stack:new()\n  \
    \  for i = 1, #string do\n        local c = string:sub(i, i)\n        if c ==\
    \ '[' then\n            stack:push(c)\n        elseif c == ']' then\n        \
    \    if stack:is_empty() then\n                return false\n            else\n\
    \                stack:pop()\n            end\n        end\n    end\n    return\
    \ not stack:is_empty()\nend", "    local stack = {}\n    for i = 1, #string do\n\
    \        local c = string:sub(i, i)\n        if c == '[' then\n            table.insert(stack,\
    \ c)\n        elseif c == ']' then\n            if #stack == 0 then\n        \
    \        return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack == 0\nend", "    local\
    \ stack = Stack:new()\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char == '[' then\n            stack:push(char)\n        elseif\
    \ char == ']' then\n            if stack:is_empty() then\n                return\
    \ false\n            else\n                stack:pop()\n            end\n    \
    \    end\n    end\n    return not stack:is_empty()\nend", "    local stack = {}\n\
    \    for i = 1, #string do\n        local char = string:sub(i, i)\n        if\
    \ char == '[' then\n            stack[#stack + 1] = char\n        elseif char\
    \ == ']' then\n            if #stack == 0 then\n                return false\n\
    \            else\n                stack[#stack] = nil\n            end\n    \
    \    end\n    end\n    return #stack == 0\nend", "    local stack = {}\n    for\
    \ i = 1, #string do\n        local c = string:sub(i, i)\n        if c == '[' then\n\
    \            table.insert(stack, c)\n        elseif c == ']' then\n          \
    \  if #stack == 0 then\n                return false\n            else\n     \
    \           table.remove(stack)\n            end\n        end\n    end\n    return\
    \ #stack == 0\nend", "    local stack = {}\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char == '[' then\n            table.insert(stack,\
    \ char)\n        elseif char == ']' then\n            if #stack == 0 then\n  \
    \              return false\n            else\n                table.remove(stack)\n\
    \            end\n        end\n    end\n    return #stack > 0\nend", "    local\
    \ stack = {}\n    for i = 1, #string do\n        if string[i] == '[' then\n  \
    \          table.insert(stack, 1, string[i])\n        elseif string[i] == ']'\
    \ then\n            if #stack == 0 then\n                return false\n      \
    \      else\n                table.remove(stack, 1)\n            end\n       \
    \ end\n    end\n    return #stack == 0\nend", "    local stack = Stack()\n   \
    \ for i = 1, #string do\n        local char = string:sub(i, i)\n        if char\
    \ == '[' then\n            stack:push(char)\n        elseif char == ']' then\n\
    \            if stack:is_empty() then\n                return false\n        \
    \    else\n                stack:pop()\n            end\n        end\n    end\n\
    \    return stack:is_empty()\nend", "    local stack = Stack()\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char == '[' then\n\
    \            stack:push(char)\n        elseif char == ']' then\n            if\
    \ stack:is_empty() then\n                return false\n            else\n    \
    \            stack:pop()\n            end\n        end\n    end\n    return not\
    \ stack:is_empty()\nend", "  local stack = {}\n  for i = 1, #string do\n    local\
    \ char = string:sub(i, i)\n    if char == '[' then\n      table.insert(stack,\
    \ char)\n    elseif char == ']' then\n      if #stack == 0 then\n        return\
    \ false\n      else\n        table.remove(stack)\n      end\n    end\n  end\n\
    \  return #stack == 0\nend", "    local stack = Stack()\n    for i = 1, #string\
    \ do\n        local c = string:sub(i, i)\n        if c == '[' then\n         \
    \   stack:push(c)\n        elseif c == ']' then\n            if stack:is_empty()\
    \ then\n                return false\n            else\n                stack:pop()\n\
    \            end\n        end\n    end\n    return not stack:is_empty()\nend",
  "  local stack = Stack:new()\n  for i = 1, #string do\n    if string[i] == '[' then\n\
    \      stack:push(string[i])\n    elseif string[i] == ']' then\n      if stack:is_empty()\
    \ then\n        return false\n      else\n        stack:pop()\n      end\n   \
    \ end\n  end\n  return stack:is_empty()\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

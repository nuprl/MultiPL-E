---
name: HumanEval_132_is_nested
language: lua
prompt: "-- Create a function that takes a string as input which contains only square
  brackets.\n-- The function should return true if and only if there is a valid subsequence
  of brackets \n-- where at least one bracket in the subsequence is nested.\n-- >>>
  is_nested('[[]]')\n-- true\n-- >>> is_nested('[]]]]]]][[[[[]')\n-- false\n-- >>>
  is_nested('[][]')\n-- false\n-- >>> is_nested('[]')\n-- false\n-- >>> is_nested('[[][]]')\n--
  true\n-- >>> is_nested('[[]][[')\n-- true\nlocal function is_nested(string)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = is_nested
      lu.assertEquals(candidate('[[]]'), true)
      lu.assertEquals(candidate('[]]]]]]][[[[[]'), false)
      lu.assertEquals(candidate('[][]'), false)
      lu.assertEquals(candidate('[]'), false)
      lu.assertEquals(candidate('[[[[]]]]'), true)
      lu.assertEquals(candidate('[]]]]]]]]]]'), false)
      lu.assertEquals(candidate('[][][[]]'), true)
      lu.assertEquals(candidate('[[]'), false)
      lu.assertEquals(candidate('[]]'), false)
      lu.assertEquals(candidate('[[]][['), true)
      lu.assertEquals(candidate('[[][]]'), true)
      lu.assertEquals(candidate(''), false)
      lu.assertEquals(candidate('[[[[[[[['), false)
      lu.assertEquals(candidate(']]]]]]]]'), false)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          if string[i] == '[' then
              table.insert(stack, string[i])
          elseif string[i] == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack[#stack + 1] = char
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  stack[#stack] = nil
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, 1, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack, 1)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push('[')
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        stack[#stack + 1] = '['
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          stack[#stack] = nil
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        stack[#stack + 1] = c
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          stack[#stack] = nil
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        stack[#stack + 1] = '['
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          stack[#stack] = nil
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = Stack()
      local open_brackets = {['['] = true}
      local close_brackets = {[']'] = true}
      for i = 1, #string do
          local char = string:sub(i, i)
          if open_brackets[char] then
              stack:push(char)
          elseif close_brackets[char] then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i=1, #string do
          local char = string:sub(i,i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        stack[#stack + 1] = string[i]
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          stack[#stack] = nil
        end
      end
    end
    return #stack > 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack > 0 then
                  table.remove(stack)
              else
                  return false
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        stack[#stack + 1] = '['
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          stack[#stack] = nil
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      if string[i] == '[' then
        stack:push(string[i])
      elseif string[i] == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = Stack:new()
      local is_nested = false
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      if stack:is_empty() then
          return false
      else
          return true
      end
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack > 0 then
                  table.remove(stack)
              else
                  return false
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      if string[i] == '[' then
        stack:push(string[i])
      elseif string[i] == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return stack:is_empty()
  end
- "\tlocal stack = Stack:new()\n\tfor i = 1, #string do\n\t\tlocal c = string:sub(i,
  i)\n\t\tif c == '[' then\n\t\t\tstack:push(c)\n\t\telseif c == ']' then\n\t\t\tif
  stack:empty() then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\treturn
  not stack:empty()\nend"
- "\tlocal stack = Stack:new()\n\tfor i = 1, #string do\n\t\tif string[i] == '[' then\n\t\t\tstack:push('[')\n\t\telseif
  string[i] == ']' then\n\t\t\tif stack:is_empty() then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\treturn
  not stack:is_empty()\nend"
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack ~= 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = Stack()
    for i = 1, #string do
      if string[i] == '[' then
        stack:push(string[i])
      elseif string[i] == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
    local stack = Stack()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack()
      for _, char in ipairs(string) do
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack()
      for _, c in ipairs(string) do
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      if string[i] == '[' then
        stack:push('[')
      elseif string[i] == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- "\tlocal stack = {}\n\tfor i = 1, #string do\n\t\tlocal char = string:sub(i, i)\n\t\tif
  char == '[' then\n\t\t\ttable.insert(stack, char)\n\t\telseif char == ']' then\n\t\t\tif
  #stack == 0 then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn
  #stack > 0\nend"
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          if string[i] == '[' then
              table.insert(stack, string[i])
          elseif string[i] == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      local is_nested = false
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      if stack:is_empty() then
          return false
      else
          return true
      end
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- "\tlocal stack = Stack:new()\n\tfor i = 1, #string do\n\t\tlocal c = string:sub(i,
  i)\n\t\tif c == '[' then\n\t\t\tstack:push(c)\n\t\telseif c == ']' then\n\t\t\tif
  stack:is_empty() then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\tstack:pop()\n\t\t\tend\n\t\tend\n\tend\n\treturn
  not stack:is_empty()\nend"
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        stack:push(c)
      elseif c == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- "\tlocal stack = {}\n\tfor i = 1, #string do\n\t\tlocal c = string:sub(i, i)\n\t\tif
  c == '[' then\n\t\t\ttable.insert(stack, c)\n\t\telseif c == ']' then\n\t\t\tif
  #stack == 0 then\n\t\t\t\treturn false\n\t\t\telse\n\t\t\t\ttable.remove(stack)\n\t\t\tend\n\t\tend\n\tend\n\treturn
  #stack > 0\nend"
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      if string[i] == '[' then
        stack:push(string[i])
      elseif string[i] == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack > 0 then
                  table.remove(stack)
              else
                  return false
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack:new()
      local open_brackets = {'[', '{', '('}
      local close_brackets = {']', '}', ')'}
      local bracket_pairs = {[']'] = '[', ['}'] = '{', [')'] = '('}
      for i = 1, #string do
          local char = string:sub(i, i)
          if table.contains(open_brackets, char) then
              stack:push(char)
          elseif table.contains(close_brackets, char) then
              if stack:is_empty() then
                  return false
              end
              local top = stack:pop()
              if bracket_pairs[char] ~= top then
                  return false
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack[#stack + 1] = char
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  stack[#stack] = nil
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      if string[i] == '[' then
        table.insert(stack, string[i])
      elseif string[i] == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        stack:push(char)
      elseif char == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          if string[i] == '[' then
              table.insert(stack, 1, ']')
          elseif string[i] == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack, 1)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push(string[i])
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          if string[i] == '[' then
              stack:push('[')
          elseif string[i] == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local c = string:sub(i, i)
      if c == '[' then
        table.insert(stack, c)
      elseif c == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack:new()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack[#stack + 1] = char
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  stack[#stack] = nil
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              table.insert(stack, c)
          elseif c == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              table.insert(stack, char)
          elseif char == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack)
              end
          end
      end
      return #stack > 0
  end
- |2-
      local stack = {}
      for i = 1, #string do
          if string[i] == '[' then
              table.insert(stack, 1, string[i])
          elseif string[i] == ']' then
              if #stack == 0 then
                  return false
              else
                  table.remove(stack, 1)
              end
          end
      end
      return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return stack:is_empty()
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local char = string:sub(i, i)
          if char == '[' then
              stack:push(char)
          elseif char == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = {}
    for i = 1, #string do
      local char = string:sub(i, i)
      if char == '[' then
        table.insert(stack, char)
      elseif char == ']' then
        if #stack == 0 then
          return false
        else
          table.remove(stack)
        end
      end
    end
    return #stack == 0
  end
- |2-
      local stack = Stack()
      for i = 1, #string do
          local c = string:sub(i, i)
          if c == '[' then
              stack:push(c)
          elseif c == ']' then
              if stack:is_empty() then
                  return false
              else
                  stack:pop()
              end
          end
      end
      return not stack:is_empty()
  end
- |2-
    local stack = Stack:new()
    for i = 1, #string do
      if string[i] == '[' then
        stack:push(string[i])
      elseif string[i] == ']' then
        if stack:is_empty() then
          return false
        else
          stack:pop()
        end
      end
    end
    return stack:is_empty()
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

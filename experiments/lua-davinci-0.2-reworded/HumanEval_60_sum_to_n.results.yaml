---
name: HumanEval_60_sum_to_n
language: lua
results:
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n*(n+1)/2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n--
    465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n--
    55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n\tlocal sum = 0\n\tfor
    i = 1, n do\n\t\tsum = sum + i\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction
    test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),
    1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),
    66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),
    5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n*(n+1)/2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      if n == 1 then
        return 1
      else
        return n + sum_to_n(n-1)
      end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      if n == 1 then
        return 1
      else
        return n + sum_to_n(n-1)
      end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n--
    465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n--
    55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n\treturn n * (n + 1)
    / 2\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate
    = sum_to_n\n    lu.assertEquals(candidate(1), 1)\n    lu.assertEquals(candidate(6),
    21)\n    lu.assertEquals(candidate(11), 66)\n    lu.assertEquals(candidate(30),
    465)\n    lu.assertEquals(candidate(100), 5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      if n == 1 then
        return 1
      else
        return n + sum_to_n(n-1)
      end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n--
    465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n--
    55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n\tlocal sum = 0\n\tfor
    i = 1, n do\n\t\tsum = sum + i\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction
    test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),
    1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),
    66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),
    5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      if n == 1 then
        return 1
      else
        return n + sum_to_n(n-1)
      end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      local sum = 0
      for i = 1, n do
        sum = sum + i
      end
      return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: "-- sum_to_n is a function that sums numbers from 1 to n.\n-- >>> sum_to_n(30)\n--
    465\n-- >>> sum_to_n(100)\n-- 5050\n-- >>> sum_to_n(5)\n-- 15\n-- >>> sum_to_n(10)\n--
    55\n-- >>> sum_to_n(1)\n-- 1\nlocal function sum_to_n(n)\n\tlocal sum = 0\n\tfor
    i = 1, n do\n\t\tsum = sum + i\n\tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction
    test_humaneval()\nlocal candidate = sum_to_n\n    lu.assertEquals(candidate(1),
    1)\n    lu.assertEquals(candidate(6), 21)\n    lu.assertEquals(candidate(11),
    66)\n    lu.assertEquals(candidate(30), 465)\n    lu.assertEquals(candidate(100),
    5050)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        if n == 1 then
            return 1
        else
            return n + sum_to_n(n - 1)
        end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      if n == 1 then
        return 1
      else
        return n + sum_to_n(n-1)
      end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n*(n+1)/2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        local sum = 0
        for i = 1, n do
            sum = sum + i
        end
        return sum
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
        return n * (n + 1) / 2
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK
- program: |-
    -- sum_to_n is a function that sums numbers from 1 to n.
    -- >>> sum_to_n(30)
    -- 465
    -- >>> sum_to_n(100)
    -- 5050
    -- >>> sum_to_n(5)
    -- 15
    -- >>> sum_to_n(10)
    -- 55
    -- >>> sum_to_n(1)
    -- 1
    local function sum_to_n(n)
      if n == 1 then
        return 1
      else
        return n + sum_to_n(n-1)
      end
    end
    lu = require('luaunit')

    function test_humaneval()
    local candidate = sum_to_n
        lu.assertEquals(candidate(1), 1)
        lu.assertEquals(candidate(6), 21)
        lu.assertEquals(candidate(11), 66)
        lu.assertEquals(candidate(30), 465)
        lu.assertEquals(candidate(100), 5050)
    end

    os.exit(lu.LuaUnit.run())
  stdout: |
    .
    Ran 1 tests in 0.000 seconds, 1 success, 0 failures
    OK
  stderr: ''
  exit_code: 0
  status: OK

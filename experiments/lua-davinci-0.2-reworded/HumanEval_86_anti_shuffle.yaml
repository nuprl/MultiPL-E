---
name: HumanEval_86_anti_shuffle
language: lua
prompt: |
  -- Write a function that takes a string and returns an ordered version of it.
  -- Ordered version of string, is a string where all words (separated by space)
  -- are replaced by a new word where all the characters arranged in
  -- ascending order based on ascii value.
  -- Note: You should keep the order of words and blank spaces in the sentence.
  -- For example:
  -- >>> anti_shuffle('Hi')
  -- 'Hi'
  -- >>> anti_shuffle('hello')
  -- 'ehllo'
  -- >>> anti_shuffle('Hello World!!!')
  -- 'Hello !!!Wdlor'
  local function anti_shuffle(s)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = anti_shuffle
      lu.assertEquals(candidate('Hi'), 'Hi')
      lu.assertEquals(candidate('hello'), 'ehllo')
      lu.assertEquals(candidate('number'), 'bemnru')
      lu.assertEquals(candidate('abcd'), 'abcd')
      lu.assertEquals(candidate('Hello World!!!'), 'Hello !!!Wdlor')
      lu.assertEquals(candidate(''), '')
      lu.assertEquals(candidate('Hi. My name is Mister Robot. How are you?'), '.Hi My aemn is Meirst .Rboot How aer ?ouy')
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      for i, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      result[i] = table.concat(chars)
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      -- your code here
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      -- your code here
  end
- |2-
    local words = {}
    for w in s:gmatch('%S+') do
      table.insert(words, w)
    end
    local result = {}
    for i, w in ipairs(words) do
      local chars = {}
      for c in w:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      result[i] = table.concat(chars)
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local new_words = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(new_words, table.concat(chars))
      end
      return table.concat(new_words, ' ')
  end
- |2-
      local words = {}
      local result = ''
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      for i, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          result = result .. table.concat(chars)
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for j, c in ipairs(chars) do
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for j, c in ipairs(chars) do
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for _, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for _, c in ipairs(chars) do
        result = result .. c
      end
      result = result .. ' '
    end
    return result:sub(1, -2)
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local t = {}
      for w in s:gmatch('%w+') do
          table.insert(t, w:gsub('.', function(c) return c .. '\0' end))
      end
      return table.concat(t):gsub('%z', '')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          local new_word = table.concat(chars)
          table.insert(result, new_word)
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      local result = {}
      for _, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: Implement me
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c ~= ' ' then
              word = word .. c
          else
              table.insert(words, word)
              word = ''
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for j, c in ipairs(chars) do
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local t = {}
      for w in s:gmatch('%S+') do
          table.insert(t, w:gsub('.', function(c) return c .. '\0' end))
      end
      for i, w in ipairs(t) do
          t[i] = table.concat(w:gmatch('.'))
      end
      return table.concat(t, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local t = {}
      for word in s:gmatch('%S+') do
          table.insert(t, word:gsub('.', function(c)
              return string.char(c:byte() + 1)
          end))
      end
      return table.concat(t, ' ')
  end
- |2-
      -- TODO: Your code here
  end
- |2-
    local t = {}
    for w in s:gmatch('%S+') do
      table.insert(t, w:gsub('.', function(c) return string.char(c:byte() + 1) end))
    end
    return table.concat(t, ' ')
  end
- |2-
      local result = {}
      for word in s:gmatch('%S+') do
          table.insert(result, word:gsub('.', function(c)
              return string.char(string.byte(c) + 1)
          end))
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i = 1, #words do
          local word = words[i]
          local chars = {}
          for j = 1, #word do
              local c = word:sub(j, j)
              table.insert(chars, c)
          end
          table.sort(chars)
          for j = 1, #chars do
              local c = chars[j]
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%w+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
      -- TODO: Implement this function.
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      local t = {}
      for w in s:gmatch('%S+') do
          local t2 = {}
          for c in w:gmatch('.') do
              table.insert(t2, c)
          end
          table.sort(t2)
          table.insert(t, table.concat(t2))
      end
      return table.concat(t, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for _, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for _, c in ipairs(chars) do
        result = result .. c
      end
      result = result .. ' '
    end
    return result:sub(1, -2)
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      local result = {}
      for i, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          local new_word = table.concat(chars)
          table.insert(result, new_word)
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      local start = 1
      for i = 1, #s do
          if s:sub(i, i) == ' ' then
              table.insert(words, s:sub(start, i - 1))
              start = i + 1
          end
      end
      table.insert(words, s:sub(start, #s))
      local result = ''
      for i = 1, #words do
          local word = words[i]
          local chars = {}
          for j = 1, #word do
              table.insert(chars, word:sub(j, j))
          end
          table.sort(chars)
          for j = 1, #chars do
              result = result .. chars[j]
          end
          if i ~= #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for j, c in ipairs(chars) do
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      local t = {}
      for w in s:gmatch('%S+') do
          table.insert(t, w:gsub('.', function(c) return c .. '\0' end))
      end
      return table.concat(t):gsub('%z+', function(w)
          return w:gsub('.', function(c) return c .. '\0' end)
      end):gsub('%z', '')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for j, c in ipairs(chars) do
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    local words = {}
    for w in s:gmatch('%S+') do
      table.insert(words, w)
    end
    local result = {}
    for _, w in ipairs(words) do
      local chars = {}
      for c in w:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      words[i] = table.concat(chars)
    end
    return table.concat(words, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for j, c in ipairs(chars) do
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for j, c in ipairs(chars) do
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
    local words = {}
    for word in s:gmatch('%w+') do
      table.insert(words, word)
    end
    local t = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      t[i] = table.concat(chars)
    end
    local i = 1
    return s:gsub('%w+', function()
      local word = t[i]
      i = i + 1
      return word
    end)
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          result = result .. table.concat(chars) .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local new_words = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          local new_word = table.concat(chars)
          table.insert(new_words, new_word)
      end
      return table.concat(new_words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for j, c in ipairs(chars) do
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i = 1, #words do
          local word = words[i]
          local chars = {}
          for j = 1, #word do
              table.insert(chars, word:sub(j, j))
          end
          table.sort(chars)
          for j = 1, #chars do
              result = result .. chars[j]
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      words[i] = table.concat(chars)
    end
    return table.concat(words, ' ')
  end
- |2-
      local t = {}
      for w in s:gmatch('%S+') do
          table.insert(t, w:gsub('.', function(c) return c .. '\0' end))
      end
      return table.concat(t):gsub('\0', '')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local t = {}
      for w in s:gmatch('%S+') do
          table.insert(t, w:gsub('.', function(c) return '\0' .. c end))
      end
      return table.concat(t, ' '):gsub('\0.', function(c)
          return c:gsub('.', function(c) return c .. '\0' end):gsub('\0+', '')
      end):gsub('\0', '')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      result[i] = table.concat(chars)
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          table.insert(result, word:gsub('.', function(c)
              return string.char(c:byte() + 1)
          end))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    -- TODO: Implement me
  end
- |2-
      local t = {}
      for word in s:gmatch('%S+') do
          local new_word = {}
          for char in word:gmatch('.') do
              table.insert(new_word, char)
          end
          table.sort(new_word)
          table.insert(t, table.concat(new_word))
      end
      return table.concat(t, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for _, c in ipairs(chars) do
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function.
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      -- your code here
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    local words = {}
    for w in s:gmatch('%S+') do
      table.insert(words, w)
    end
    local result = {}
    for i, w in ipairs(words) do
      local chars = {}
      for c in w:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      local new_word = table.concat(chars)
      table.insert(result, new_word)
    end
    return table.concat(result, ' ')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      result[i] = table.concat(chars)
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for w in s:gmatch('%S+') do
      table.insert(words, w)
    end
    local result = {}
    for _, w in ipairs(words) do
      local letters = {}
      for l in w:gmatch('%a') do
        table.insert(letters, l)
      end
      table.sort(letters)
      table.insert(result, table.concat(letters))
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local new_words = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(new_words, table.concat(chars))
    end
    return table.concat(new_words, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i = 1, #words do
      local word = words[i]
      local chars = {}
      for j = 1, #word do
        local c = word:sub(j, j)
        table.insert(chars, c)
      end
      table.sort(chars)
      for j = 1, #chars do
        local c = chars[j]
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    local words = {}
    for w in s:gmatch('%S+') do
      table.insert(words, w)
    end
    for i, w in ipairs(words) do
      local chars = {}
      for c in w:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      words[i] = table.concat(chars)
    end
    return table.concat(words, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      for i, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      -- TODO: Write your code here
      return s
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i = 1, #words do
      local word = words[i]
      local chars = {}
      for j = 1, #word do
        table.insert(chars, word:sub(j, j))
      end
      table.sort(chars)
      for j = 1, #chars do
        result = result .. chars[j]
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
    local words = {}
    local word = ''
    for i = 1, #s do
      local c = s:sub(i, i)
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    for i = 1, #words do
      words[i] = table.concat(table.sort(words[i]:split('')))
    end
    return table.concat(words, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      local result = {}
      for _, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      local result = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      local result = {}
      for _, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local t = {}
      local res = ''
      for word in s:gmatch('%S+') do
          local sorted = word:gsub('.', function(c)
              table.insert(t, c)
              return ''
          end)
          table.sort(t)
          for i = 1, #t do
              sorted = sorted .. t[i]
          end
          t = {}
          res = res .. sorted .. ' '
      end
      return res:sub(1, -2)
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local result = ''
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      local new_word = table.concat(chars)
      result = result .. new_word
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
    local words = {}
    for w in s:gmatch('%S+') do
      table.insert(words, w)
    end
    local new_words = {}
    for _, w in ipairs(words) do
      local chars = {}
      for c in w:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      table.insert(new_words, table.concat(chars))
    end
    return table.concat(new_words, ' ')
  end
- |2-
      -- TODO: Implement me
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      local new_word = table.concat(chars)
      table.insert(result, new_word)
    end
    return table.concat(result, ' ')
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local t = {}
      for word in s:gmatch('%S+') do
          local w = {}
          for c in word:gmatch('.') do
              table.insert(w, c)
          end
          table.sort(w)
          table.insert(t, table.concat(w))
      end
      return table.concat(t, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i = 1, #words do
          local word = words[i]
          local chars = {}
          for j = 1, #word do
              table.insert(chars, word:sub(j, j))
          end
          table.sort(chars)
          result = result .. table.concat(chars)
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('%S') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
    -- TODO: Implement me!
  end
- |2-
      local words = {}
      local word = ''
      for i = 1, #s do
          if s:sub(i, i) == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. s:sub(i, i)
          end
      end
      table.insert(words, word)
      local result = ''
      for i = 1, #words do
          local chars = {}
          for j = 1, #words[i] do
              table.insert(chars, words[i]:sub(j, j))
          end
          table.sort(chars)
          for j = 1, #chars do
              result = result .. chars[j]
          end
          if i ~= #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          words[i] = table.concat(chars)
      end
      return table.concat(words, ' ')
  end
- |2-
      local t = {}
      for word in s:gmatch('%S+') do
          table.insert(t, word:gsub('.', function(c)
              return string.char(string.byte(c) + 1)
          end))
      end
      return table.concat(t, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for _, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for _, c in ipairs(chars) do
        result = result .. c
      end
      result = result .. ' '
    end
    return result:sub(1, -2)
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local chars = {}
      local result = ''
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      for i, word in ipairs(words) do
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          for j, char in ipairs(chars) do
              result = result .. char
          end
          chars = {}
          if i ~= #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: Your code here
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for i, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      result[i] = table.concat(chars)
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for j, c in ipairs(chars) do
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
    local t = {}
    for w in s:gmatch('%S+') do
      local c = {}
      for i in w:gmatch('.') do
        table.insert(c, i)
      end
      table.sort(c)
      table.insert(t, table.concat(c))
    end
    return table.concat(t, ' ')
  end
- |2-
    local t = {}
    for w in s:gmatch("%S+") do
      table.insert(t, w:gsub(".", function(c) return string.char(c:byte()) end))
    end
    return table.concat(t, " ")
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local new_words = {}
    for _, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      local new_word = ''
      for _, c in ipairs(chars) do
        new_word = new_word .. c
      end
      table.insert(new_words, new_word)
    end
    local new_s = ''
    for i, word in ipairs(new_words) do
      new_s = new_s .. word
      if i < #new_words then
        new_s = new_s .. ' '
      end
    end
    return new_s
  end
- |2-
      local words = {}
      for w in s:gmatch('%S+') do
          table.insert(words, w)
      end
      local result = {}
      for _, w in ipairs(words) do
          local chars = {}
          for c in w:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: your code here
  end
- |2-
    -- TODO: Your code here
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
    local words = {}
    local word = ''
    for c in s:gmatch('.') do
      if c == ' ' then
        table.insert(words, word)
        word = ''
      else
        word = word .. c
      end
    end
    table.insert(words, word)
    local result = ''
    for i, word in ipairs(words) do
      local chars = {}
      for c in word:gmatch('.') do
        table.insert(chars, c)
      end
      table.sort(chars)
      for j, c in ipairs(chars) do
        result = result .. c
      end
      if i < #words then
        result = result .. ' '
      end
    end
    return result
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          result = result .. table.concat(chars)
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for i, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for j, c in ipairs(chars) do
              result = result .. c
          end
          if i < #words then
              result = result .. ' '
          end
      end
      return result
  end
- |2-
    local words = {}
    for word in s:gmatch('%S+') do
      table.insert(words, word)
    end
    local result = {}
    for _, word in ipairs(words) do
      local chars = {}
      for char in word:gmatch('.') do
        table.insert(chars, char)
      end
      table.sort(chars)
      table.insert(result, table.concat(chars))
    end
    return table.concat(result, ' ')
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      local t = {}
      for w in s:gmatch('%S+') do
          table.insert(t, w:gsub('.', function(c) return c .. '\0' end))
      end
      return table.concat(t, ' '):gsub('\0', '')
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
      -- your code here
  end
- |2-
      -- TODO: Implement this function.
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
- |2-
    -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for _, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          table.insert(result, table.concat(chars))
      end
      return table.concat(result, ' ')
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      local words = {}
      for word in s:gmatch('%S+') do
          table.insert(words, word)
      end
      local result = {}
      for i, word in ipairs(words) do
          local chars = {}
          for char in word:gmatch('.') do
              table.insert(chars, char)
          end
          table.sort(chars)
          result[i] = table.concat(chars)
      end
      return table.concat(result, ' ')
  end
- |2-
      local t = {}
      local res = ''
      for w in s:gmatch('%S+') do
          table.insert(t, w)
      end
      for i, v in ipairs(t) do
          local tmp = {}
          for c in v:gmatch('.') do
              table.insert(tmp, c)
          end
          table.sort(tmp)
          res = res .. table.concat(tmp)
          if i ~= #t then
              res = res .. ' '
          end
      end
      return res
  end
- |2-
      local words = {}
      local word = ''
      for i = 1, #s do
          local c = s:sub(i, i)
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for i = 1, #word do
              local c = word:sub(i, i)
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, #result - 1)
  end
- |2-
      local words = {}
      local word = ''
      for c in s:gmatch('.') do
          if c == ' ' then
              table.insert(words, word)
              word = ''
          else
              word = word .. c
          end
      end
      table.insert(words, word)
      local result = ''
      for _, word in ipairs(words) do
          local chars = {}
          for c in word:gmatch('.') do
              table.insert(chars, c)
          end
          table.sort(chars)
          for _, c in ipairs(chars) do
              result = result .. c
          end
          result = result .. ' '
      end
      return result:sub(1, -2)
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

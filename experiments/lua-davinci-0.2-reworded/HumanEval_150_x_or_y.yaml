---
name: HumanEval_150_x_or_y
language: lua
prompt: "-- A simple program which should return the value of x if n is \n-- a prime
  number and should return the value of y otherwise.\n-- Examples:\n-- >>> x_or_y(7,
  34, 12)\n-- 34\n-- >>> x_or_y(15, 8, 5)\n-- 5\nlocal function x_or_y(n, x, y)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = x_or_y
      lu.assertEquals(candidate(7, 34, 12), 34)
      lu.assertEquals(candidate(15, 8, 5), 5)
      lu.assertEquals(candidate(3, 33, 5212), 33)
      lu.assertEquals(candidate(1259, 3, 52), 3)
      lu.assertEquals(candidate(7919, -1, 12), -1)
      lu.assertEquals(candidate(3609, 1245, 583), 583)
      lu.assertEquals(candidate(91, 56, 129), 129)
      lu.assertEquals(candidate(6, 34, 1234), 1234)
      lu.assertEquals(candidate(1, 2, 0), 0)
      lu.assertEquals(candidate(2, 2, 0), 2)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      -- TODO: implement this function
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if n % 2 == 0 then
          return y
      else
          return x
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    -- TODO: implement this function
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    -- TODO: Write your code here
    -- Hint: You can define an auxiliary function.
    return n
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      -- TODO: write your code here
      return 0
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      -- TODO: implement this function
      return y
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      -- TODO: Implement this function
  end
- "\tif is_prime(n) then\n\t\treturn x\n\telse\n\t\treturn y\n\tend\nend"
- |2-
    if n % 2 == 0 then
      return y
    else
      return x
    end
  end
- |2-
    if n % 2 == 0 then
      return y
    else
      return x
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
      if is_prime(n) then
          return x
      else
          return y
      end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
- |2-
    if is_prime(n) then
      return x
    else
      return y
    end
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

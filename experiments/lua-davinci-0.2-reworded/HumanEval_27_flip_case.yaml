name: HumanEval_27_flip_case
language: lua
prompt: "-- For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
  \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
  \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local flipped = ''\n    for i = 1, #string do\n        local char\
    \ = string:sub(i, i)\n        if char:match('%l') then\n            flipped =\
    \ flipped .. char:upper()\n        elseif char:match('%u') then\n            flipped\
    \ = flipped .. char:lower()\n        else\n            flipped = flipped .. char\n\
    \        end\n    end\n    return flipped\nend", "    local flipped = {}\n   \
    \ for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match('%a')\
    \ then\n            flipped[i] = char:lower() == char and char:upper() or char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "    return string:gsub(\"%a\", function(c)\n \
    \       return c == c:lower() and c:upper() or c:lower()\n    end)\nend", "  return\
    \ string:gsub('%a', function(char)\n    return char:lower() == char and char:upper()\
    \ or char:lower()\n  end)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%l') then\n\
    \            flipped[i] = char:upper()\n        elseif char:match('%u') then\n\
    \            flipped[i] = char:lower()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "    local\
    \ result = {}\n    for i = 1, #string do\n        local c = string:sub(i, i)\n\
    \        if c:match('%a') then\n            if c:match('%l') then\n          \
    \      result[i] = c:upper()\n            else\n                result[i] = c:lower()\n\
    \            end\n        else\n            result[i] = c\n        end\n    end\n\
    \    return table.concat(result)\nend", "    return string:gsub('%a', function(char)\n\
    \        return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "    return string:gsub('%a', function(char)\n        return char:lower()\
    \ == char and char:upper() or char:lower()\n    end)\nend", "    return string:gsub('%a',\
    \ function(char)\n        return char:lower() == char and char:upper() or char:lower()\n\
    \    end)\nend", "    local flipped = ''\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char:match('%a') then\n            if char:match('%l')\
    \ then\n                flipped = flipped .. char:upper()\n            else\n\
    \                flipped = flipped .. char:lower()\n            end\n        else\n\
    \            flipped = flipped .. char\n        end\n    end\n    return flipped\n\
    end", "    local new_string = ''\n    for i = 1, #string do\n        local char\
    \ = string:sub(i, i)\n        if char:match('%l') then\n            new_string\
    \ = new_string .. char:upper()\n        elseif char:match('%u') then\n       \
    \     new_string = new_string .. char:lower()\n        else\n            new_string\
    \ = new_string .. char\n        end\n    end\n    return new_string\nend", " \
    \ local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match('%u') then\n      flipped[i] = char:lower()\n    elseif\
    \ char:match('%l') then\n      flipped[i] = char:upper()\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend", "  return string:gsub(\"\
    %a\", function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend", "  return string:gsub('%a',\
    \ function(c)\n    return c == c:upper() and c:lower() or c:upper()\n  end)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match('%a') then\n            flipped[i] =\
    \ char:lower() == char and char:upper() or char:lower()\n        else\n      \
    \      flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "  return string:gsub('%a', function(char)\n    return char:lower() == char\
    \ and char:upper() or char:lower()\n  end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    if char:match('%u') then\n      return char:lower()\n  \
    \  else\n      return char:upper()\n    end\n  end)\nend", "  local flipped =\
    \ {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match('%l')\
    \ then\n      char = char:upper()\n    elseif char:match('%u') then\n      char\
    \ = char:lower()\n    end\n    flipped[i] = char\n  end\n  return table.concat(flipped)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c:lower() == c then\n            flipped[i] = c:upper()\n   \
    \     else\n            flipped[i] = c:lower()\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "    return string:gsub(\"%a\", function(c) return\
    \ c:lower() == c and c:upper() or c:lower() end)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        if char:lower() == char then\n            return\
    \ char:upper()\n        else\n            return char:lower()\n        end\n \
    \   end)\nend", "    local new_string = ''\n    for i = 1, #string do\n      \
    \  local char = string:sub(i, i)\n        if char:lower() == char then\n     \
    \       new_string = new_string .. char:upper()\n        else\n            new_string\
    \ = new_string .. char:lower()\n        end\n    end\n    return new_string\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:lower() == char then\n            flipped[i]\
    \ = char:upper()\n        else\n            flipped[i] = char:lower()\n      \
    \  end\n    end\n    return table.concat(flipped)\nend", "    return string:gsub('%a',\
    \ function(c)\n        return c == c:upper() and c:lower() or c:upper()\n    end)\n\
    end", "    return string:gsub('%a', function(c)\n        if c:lower() == c then\n\
    \            return c:upper()\n        else\n            return c:lower()\n  \
    \      end\n    end)\nend", "  local new_string = \"\"\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char == char:lower() then\n      new_string\
    \ = new_string .. char:upper()\n    else\n      new_string = new_string .. char:lower()\n\
    \    end\n  end\n  return new_string\nend", "  return string:gsub('%a', function(char)\n\
    \    return char:lower() == char and char:upper() or char:lower()\n  end)\nend",
  "  return string:gsub('%a', function(char)\n    return char:lower() == char and\
    \ char:upper() or char:lower()\n  end)\nend", "    return string:gsub('%a', function(c)\n\
    \        if c:lower() == c then\n            return c:upper()\n        else\n\
    \            return c:lower()\n        end\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:lower() == char and char:upper() or char:lower()\n\
    \  end)\nend", "    local flipped = {}\n    for i = 1, #string do\n        local\
    \ c = string:sub(i, i)\n        if c:match('%a') then\n            if c:match('%l')\
    \ then\n                c = c:upper()\n            else\n                c = c:lower()\n\
    \            end\n        end\n        flipped[i] = c\n    end\n    return table.concat(flipped)\n\
    end", "  return string:gsub(\"%a\", function(char)\n    return char:lower() ==\
    \ char and char:upper() or char:lower()\n  end)\nend", "    return string:gsub(\"\
    %a\", function(c)\n        return c == c:lower() and c:upper() or c:lower()\n\
    \    end)\nend", "  return string:gsub('%a', function(char)\n    return char:lower()\
    \ == char and char:upper() or char:lower()\n  end)\nend", "  return string:gsub('%a',\
    \ function(c)\n    return c == c:upper() and c:lower() or c:upper()\n  end)\n\
    end", "    return string:gsub('%a', function(char)\n        if char:lower() ==\
    \ char then\n            return char:upper()\n        else\n            return\
    \ char:lower()\n        end\n    end)\nend", "    return string:gsub('%a', function(c)\n\
    \        return c == c:upper() and c:lower() or c:upper()\n    end)\nend", " \
    \ return string:gsub('%a', function(char)\n    return char:lower() == char and\
    \ char:upper() or char:lower()\n  end)\nend", "    local flipped = {}\n    for\
    \ i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match('%a')\
    \ then\n            flipped[i] = char:lower() == char and char:upper() or char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "    return string:gsub('%a', function(char)\n\
    \        if char:lower() == char then\n            return char:upper()\n     \
    \   else\n            return char:lower()\n        end\n    end)\nend", "  return\
    \ string:gsub('%a', function(c)\n    return c == c:upper() and c:lower() or c:upper()\n\
    \  end)\nend", "  return string:gsub('%a', function(c)\n    return c == c:upper()\
    \ and c:lower() or c:upper()\n  end)\nend", "  return string:gsub('%a', function(c)\n\
    \    if c:lower() == c then\n      return c:upper()\n    else\n      return c:lower()\n\
    \    end\n  end)\nend", "  return string:gsub('%a', function(char)\n    return\
    \ char:lower() == char and char:upper() or char:lower()\n  end)\nend", "  return\
    \ string:gsub('%a', function(char)\n    return char:lower() == char and char:upper()\
    \ or char:lower()\n  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match('%l') then\n      flipped[i]\
    \ = char:upper()\n    elseif char:match('%u') then\n      flipped[i] = char:lower()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    local flipped = ''\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match('%l') then\n            flipped = flipped\
    \ .. char:upper()\n        elseif char:match('%u') then\n            flipped =\
    \ flipped .. char:lower()\n        else\n            flipped = flipped .. char\n\
    \        end\n    end\n    return flipped\nend", "    local flipped = ''\n   \
    \ for i = 1, #string do\n        local char = string:sub(i, i)\n        if char:match('%a')\
    \ then\n            if char:match('%l') then\n                flipped = flipped\
    \ .. char:upper()\n            else\n                flipped = flipped .. char:lower()\n\
    \            end\n        else\n            flipped = flipped .. char\n      \
    \  end\n    end\n    return flipped\nend", "    return string:gsub('%a', function(c)\n\
    \        return c == c:upper() and c:lower() or c:upper()\n    end)\nend", " \
    \   return string:gsub(\"%a\", function(char)\n        if char:lower() == char\
    \ then\n            return char:upper()\n        else\n            return char:lower()\n\
    \        end\n    end)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%l') then\n\
    \            char = char:upper()\n        elseif char:match('%u') then\n     \
    \       char = char:lower()\n        end\n        flipped[i] = char\n    end\n\
    \    return table.concat(flipped)\nend", "    return string:gsub('%a', function(char)\n\
    \        return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "    return string:gsub('%a', function(char)\n        return char:lower()\
    \ == char and char:upper() or char:lower()\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    if char:match('%u') then\n      return char:lower()\n  \
    \  else\n      return char:upper()\n    end\n  end)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        if char:lower() == char then\n            return\
    \ char:upper()\n        else\n            return char:lower()\n        end\n \
    \   end)\nend", "  return string:gsub('%a', function(c)\n    return c == c:upper()\
    \ and c:lower() or c:upper()\n  end)\nend", "    return string:gsub('%a', function(char)\n\
    \        return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "  return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%l') then\n\
    \            flipped[i] = char:upper()\n        elseif char:match('%u') then\n\
    \            flipped[i] = char:lower()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "  return\
    \ string:gsub('%a', function(char)\n    return char:upper() == char and char:lower()\
    \ or char:upper()\n  end)\nend", "    local flipped = ''\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%a') then\n\
    \            if char:match('%l') then\n                flipped = flipped .. char:upper()\n\
    \            else\n                flipped = flipped .. char:lower()\n       \
    \     end\n        else\n            flipped = flipped .. char\n        end\n\
    \    end\n    return flipped\nend", "    return string:gsub('%a', function(char)\n\
    \        return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        if char:lower()\
    \ == char then\n            return char:upper()\n        else\n            return\
    \ char:lower()\n        end\n    end)\nend", "    return string:gsub('%a', function(c)\n\
    \        if c:lower() == c then\n            return c:upper()\n        else\n\
    \            return c:lower()\n        end\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    if char:match('%l') then\n      return char:upper()\n  \
    \  else\n      return char:lower()\n    end\n  end)\nend", "  local flipped =\
    \ {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match('%l')\
    \ then\n      flipped[i] = char:upper()\n    elseif char:match('%u') then\n  \
    \    flipped[i] = char:lower()\n    else\n      flipped[i] = char\n    end\n \
    \ end\n  return table.concat(flipped)\nend", "    return string:gsub('%a', function(char)\n\
    \        if char:match('%l') then\n            return char:upper()\n        else\n\
    \            return char:lower()\n        end\n    end)\nend", "  return string:gsub(\"\
    %a\", function(c)\n    if c:lower() == c then\n      return c:upper()\n    else\n\
    \      return c:lower()\n    end\n  end)\nend", "  local flipped = {}\n  for i\
    \ = 1, #string do\n    local char = string:sub(i, i)\n    if char:match('%l')\
    \ then\n      char = char:upper()\n    elseif char:match('%u') then\n      char\
    \ = char:lower()\n    end\n    flipped[i] = char\n  end\n  return table.concat(flipped)\n\
    end", "  return string:gsub('%a', function(char)\n    if char:lower() == char\
    \ then\n      return char:upper()\n    else\n      return char:lower()\n    end\n\
    \  end)\nend", "    return string:gsub(\"%a\", function(c)\n        return c ==\
    \ c:lower() and c:upper() or c:lower()\n    end)\nend", "  return string:gsub(\"\
    %a\", function(c)\n    return c == c:lower() and c:upper() or c:lower()\n  end)\n\
    end", "    return string:gsub('%a', function(char)\n        return char:lower()\
    \ == char and char:upper() or char:lower()\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:lower() == char and char:upper() or char:lower()\n\
    \  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n    local char\
    \ = string:sub(i, i)\n    if char:match('%l') then\n      flipped[i] = char:upper()\n\
    \    elseif char:match('%u') then\n      flipped[i] = char:lower()\n    else\n\
    \      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\nend",
  "  return string:gsub(\"%a\", function(c)\n    return c == c:lower() and c:upper()\
    \ or c:lower()\n  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:lower() == char then\n      flipped[i]\
    \ = char:upper()\n    else\n      flipped[i] = char:lower()\n    end\n  end\n\
    \  return table.concat(flipped)\nend", "  return string:gsub('%a', function(c)\n\
    \    return c == c:upper() and c:lower() or c:upper()\n  end)\nend", "  return\
    \ string:gsub('%a', function(char)\n    return char:lower() == char and char:upper()\
    \ or char:lower()\n  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match('%l') then\n      flipped[i]\
    \ = char:upper()\n    elseif char:match('%u') then\n      flipped[i] = char:lower()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    return string:gsub('%a', function(char)\n        if char:lower() ==\
    \ char then\n            return char:upper()\n        else\n            return\
    \ char:lower()\n        end\n    end)\nend", "    return string:gsub(\"%a\", function(c)\n\
    \        if c:lower() == c then\n            return c:upper()\n        else\n\
    \            return c:lower()\n        end\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:lower() == char and char:upper() or char:lower()\n\
    \  end)\nend", "  local result = ''\n  for i = 1, #string do\n    local c = string:sub(i,\
    \ i)\n    if c:match('%a') then\n      if c:match('%l') then\n        result =\
    \ result .. c:upper()\n      else\n        result = result .. c:lower()\n    \
    \  end\n    else\n      result = result .. c\n    end\n  end\n  return result\n\
    end", "  return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend", "  return string:gsub(\"%a\", function(c)\n    return\
    \ c == c:lower() and c:upper() or c:lower()\n  end)\nend", "  return string:gsub(\"\
    %a\", function(char)\n    if char:lower() == char then\n      return char:upper()\n\
    \    else\n      return char:lower()\n    end\n  end)\nend", "  local flipped\
    \ = {}\n  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:lower()\
    \ == char then\n      flipped[i] = char:upper()\n    else\n      flipped[i] =\
    \ char:lower()\n    end\n  end\n  return table.concat(flipped)\nend", "    local\
    \ flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:lower() == char then\n            flipped[i] = char:upper()\n\
    \        else\n            flipped[i] = char:lower()\n        end\n    end\n \
    \   return table.concat(flipped)\nend", "    return string:gsub(\"%a\", function(c)\n\
    \        return c == c:lower() and c:upper() or c:lower()\n    end)\nend", " \
    \ return string:gsub(\"%a\", function(c)\n    return c == c:lower() and c:upper()\
    \ or c:lower()\n  end)\nend", "    return string:gsub('%a', function(char)\n \
    \       return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "  return string:gsub('%a', function(char)\n    if char:lower() == char\
    \ then\n      return char:upper()\n    else\n      return char:lower()\n    end\n\
    \  end)\nend", "    local result = ''\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char:match('%l') then\n            result\
    \ = result .. char:upper()\n        elseif char:match('%u') then\n           \
    \ result = result .. char:lower()\n        else\n            result = result ..\
    \ char\n        end\n    end\n    return result\nend", "    return string:gsub('%a',\
    \ function(c)\n        return c == c:upper() and c:lower() or c:upper()\n    end)\n\
    end", "  return string:gsub('%a', function(char)\n    if char:lower() == char\
    \ then\n      return char:upper()\n    else\n      return char:lower()\n    end\n\
    \  end)\nend", "    return string:gsub('%a', function(char)\n        return char:lower()\
    \ == char and char:upper() or char:lower()\n    end)\nend", "    return string:gsub('%a',\
    \ function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend", "  return\
    \ string:gsub('%a', function(c)\n    return c == c:upper() and c:lower() or c:upper()\n\
    \  end)\nend", "  return string:gsub('%a', function(char)\n    if char:lower()\
    \ == char then\n      return char:upper()\n    else\n      return char:lower()\n\
    \    end\n  end)\nend", "  return string:gsub(\"%a\", function(c)\n    if c:lower()\
    \ == c then\n      return c:upper()\n    else\n      return c:lower()\n    end\n\
    \  end)\nend", "    return string:gsub(\"%a\", function(c)\n        return c ==\
    \ c:lower() and c:upper() or c:lower()\n    end)\nend", "  return string:gsub(\"\
    %a\", function(char)\n    if char:match(\"%u\") then\n      return char:lower()\n\
    \    else\n      return char:upper()\n    end\n  end)\nend", "    local new_string\
    \ = ''\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:match('%a') then\n            if char:match('%l') then\n       \
    \         new_string = new_string .. char:upper()\n            else\n        \
    \        new_string = new_string .. char:lower()\n            end\n        else\n\
    \            new_string = new_string .. char\n        end\n    end\n    return\
    \ new_string\nend", "  local flipped = {}\n  for i = 1, #string do\n    local\
    \ char = string:sub(i, i)\n    if char:lower() == char then\n      flipped[i]\
    \ = char:upper()\n    else\n      flipped[i] = char:lower()\n    end\n  end\n\
    \  return table.concat(flipped)\nend", "  return string:gsub('%a', function(char)\n\
    \    return char:lower() == char and char:upper() or char:lower()\n  end)\nend",
  "    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%l') then\n            flipped[i] = char:upper()\n\
    \        elseif char:match('%u') then\n            flipped[i] = char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "  return string:gsub(\"%a\", function(c)\n   \
    \ return c == c:lower() and c:upper() or c:lower()\n  end)\nend", "    return\
    \ string:gsub('%a', function(char)\n        return char:lower() == char and char:upper()\
    \ or char:lower()\n    end)\nend", "    return string:gsub('%a', function(char)\n\
    \        return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "  return string:gsub(\"%a\", function(c)\n    if c:lower() == c then\n\
    \      return c:upper()\n    else\n      return c:lower()\n    end\n  end)\nend",
  "    return string:gsub('%a', function(char)\n        return char:lower() == char\
    \ and char:upper() or char:lower()\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:lower() == char and char:upper() or char:lower()\n\
    \  end)\nend", "  return string:gsub(\"%a\", function(char)\n    if char:lower()\
    \ == char then\n      return char:upper()\n    else\n      return char:lower()\n\
    \    end\n  end)\nend", "    local flipped = {}\n    for i = 1, #string do\n \
    \       local char = string:sub(i, i)\n        if char:lower() == char then\n\
    \            flipped[i] = char:upper()\n        else\n            flipped[i] =\
    \ char:lower()\n        end\n    end\n    return table.concat(flipped)\nend",
  "    local flipped = string:gsub('%a', function(char)\n        if char:match('%u')\
    \ then\n            return char:lower()\n        else\n            return char:upper()\n\
    \        end\n    end)\n    return flipped\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:lower() == char and char:upper() or char:lower()\n\
    \  end)\nend", "    return string:gsub(\"%a\", function(c)\n        if c:lower()\
    \ == c then\n            return c:upper()\n        else\n            return c:lower()\n\
    \        end\n    end)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%a') then\n\
    \            if char:match('%l') then\n                flipped[i] = char:upper()\n\
    \            else\n                flipped[i] = char:lower()\n            end\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "  return string:gsub('%a', function(char)\n  \
    \  if char:lower() == char then\n      return char:upper()\n    else\n      return\
    \ char:lower()\n    end\n  end)\nend", "    return string:gsub('%a', function(c)\n\
    \        return c == c:upper() and c:lower() or c:upper()\n    end)\nend", " \
    \   return string:gsub(\"%a\", function(c)\n        return c == c:lower() and\
    \ c:upper() or c:lower()\n    end)\nend", "    local flipped = {}\n    for i =\
    \ 1, #string do\n        local char = string:sub(i, i)\n        if char:lower()\
    \ == char then\n            flipped[i] = char:upper()\n        else\n        \
    \    flipped[i] = char:lower()\n        end\n    end\n    return table.concat(flipped)\n\
    end", "  return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match('%u') then\n      flipped[i]\
    \ = char:lower()\n    elseif char:match('%l') then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "    return string:gsub('%a', function(char)\n        return char:lower()\
    \ == char and char:upper() or char:lower()\n    end)\nend", "  return string:gsub(\"\
    %a\", function(c) return c == c:lower() and c:upper() or c:lower() end)\nend",
  "    return string:gsub('%a', function(c)\n        if c:lower() == c then\n    \
    \        return c:upper()\n        else\n            return c:lower()\n      \
    \  end\n    end)\nend", "  return string:gsub(\"%a\", function(c)\n    if c:lower()\
    \ == c then\n      return c:upper()\n    else\n      return c:lower()\n    end\n\
    \  end)\nend", "    return string:gsub(\"%a\", function(c)\n        if c:lower()\
    \ == c then\n            return c:upper()\n        else\n            return c:lower()\n\
    \        end\n    end)\nend", "  return string:gsub('%a', function(char)\n   \
    \ return char:lower() == char and char:upper() or char:lower()\n  end)\nend",
  "    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%a') then\n            flipped[i] = char:lower()\
    \ == char and char:upper() or char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend", "    return\
    \ string:gsub('%a', function(c)\n        return c == c:upper() and c:lower() or\
    \ c:upper()\n    end)\nend", "  return string:gsub('%a', function(char)\n    return\
    \ char:lower() == char and char:upper() or char:lower()\n  end)\nend", "    return\
    \ string:gsub('%a', function(c)\n        return c == c:upper() and c:lower() or\
    \ c:upper()\n    end)\nend", "  return string:gsub('%a', function(char)\n    return\
    \ char:lower() == char and char:upper() or char:lower()\n  end)\nend", "    return\
    \ string:gsub(\"%a\", function(c)\n        if c:lower() == c then\n          \
    \  return c:upper()\n        else\n            return c:lower()\n        end\n\
    \    end)\nend", "    return string:gsub(\"%a\", function(c)\n        return c\
    \ == c:lower() and c:upper() or c:lower()\n    end)\nend", "    return string:gsub('%a',\
    \ function(char)\n        return char:lower() == char and char:upper() or char:lower()\n\
    \    end)\nend", "    local flipped = {}\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char:match('%l') then\n            char\
    \ = char:upper()\n        elseif char:match('%u') then\n            char = char:lower()\n\
    \        end\n        flipped[i] = char\n    end\n    return table.concat(flipped)\n\
    end", "    return string:gsub(\"%a\", function(char)\n        return char:lower()\
    \ == char and char:upper() or char:lower()\n    end)\nend", "    local flipped\
    \ = {}\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:match('%l') then\n            flipped[i] = char:upper()\n      \
    \  elseif char:match('%u') then\n            flipped[i] = char:lower()\n     \
    \   else\n            flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "    local result = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match('%a') then\n            if char:match('%u')\
    \ then\n                char = char:lower()\n            else\n              \
    \  char = char:upper()\n            end\n        end\n        result[i] = char\n\
    \    end\n    return table.concat(result)\nend", "    return string:gsub(\"%a\"\
    , function(c)\n        if c:lower() == c then\n            return c:upper()\n\
    \        else\n            return c:lower()\n        end\n    end)\nend", "  return\
    \ string:gsub('%a', function(c)\n    return c == c:upper() and c:lower() or c:upper()\n\
    \  end)\nend", "    return string:gsub('%a', function(c)\n        if c:lower()\
    \ == c then\n            return c:upper()\n        else\n            return c:lower()\n\
    \        end\n    end)\nend", "  return string:gsub('%a', function(c)\n    return\
    \ c == c:upper() and c:lower() or c:upper()\n  end)\nend", "    return string:gsub(\"\
    %a\", function(char)\n        if char:lower() == char then\n            return\
    \ char:upper()\n        else\n            return char:lower()\n        end\n \
    \   end)\nend", "    return string:gsub('%a', function(c)\n        return c ==\
    \ c:upper() and c:lower() or c:upper()\n    end)\nend", "  local result = ''\n\
    \  for i = 1, #string do\n    local char = string:sub(i, i)\n    if char:match('%a')\
    \ then\n      if char:match('%l') then\n        char = char:upper()\n      else\n\
    \        char = char:lower()\n      end\n    end\n    result = result .. char\n\
    \  end\n  return result\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%l') then\n\
    \            flipped[i] = char:upper()\n        elseif char:match('%u') then\n\
    \            flipped[i] = char:lower()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "    local\
    \ flipped = ''\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%a') then\n            flipped = flipped .. char:gsub('%a',\
    \ function(c)\n                return c == c:lower() and c:upper() or c:lower()\n\
    \            end)\n        else\n            flipped = flipped .. char\n     \
    \   end\n    end\n    return flipped\nend", "  return string:gsub('%a', function(c)\n\
    \    return c == c:upper() and c:lower() or c:upper()\n  end)\nend", "  local\
    \ flipped = ''\n  for i = 1, #string do\n    local char = string:sub(i, i)\n \
    \   if char == char:lower() then\n      flipped = flipped .. char:upper()\n  \
    \  else\n      flipped = flipped .. char:lower()\n    end\n  end\n  return flipped\n\
    end", "    return string:gsub(\"%a\", function(c)\n        if c:lower() == c then\n\
    \            return c:upper()\n        else\n            return c:lower()\n  \
    \      end\n    end)\nend", "  return string:gsub('%a', function(c)\n    return\
    \ c == c:upper() and c:lower() or c:upper()\n  end)\nend", "    return string:gsub(\"\
    %a\", function(c)\n        return c == c:lower() and c:upper() or c:lower()\n\
    \    end)\nend", "    return string:gsub('%a', function(char)\n        return\
    \ char:lower() == char and char:upper() or char:lower()\n    end)\nend", "  return\
    \ string:gsub(\"%a\", function(c)\n    return c == c:lower() and c:upper() or\
    \ c:lower()\n  end)\nend", "  local flipped = {}\n  for i = 1, #string do\n  \
    \  local char = string:sub(i, i)\n    if char:match('%l') then\n      char = char:upper()\n\
    \    elseif char:match('%u') then\n      char = char:lower()\n    end\n    flipped[i]\
    \ = char\n  end\n  return table.concat(flipped)\nend", "  return string:gsub('%a',\
    \ function(c)\n    return c == c:upper() and c:lower() or c:upper()\n  end)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local c = string:sub(i,\
    \ i)\n        if c:lower() == c then\n            flipped[i] = c:upper()\n   \
    \     else\n            flipped[i] = c:lower()\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "  return string:gsub('%a', function(char)\n  \
    \  if char:lower() == char then\n      return char:upper()\n    else\n      return\
    \ char:lower()\n    end\n  end)\nend", "  return string:gsub('%a', function(c)\n\
    \    return c == c:upper() and c:lower() or c:upper()\n  end)\nend", "    return\
    \ string:gsub('%a', function(c)\n        return c == c:upper() and c:lower() or\
    \ c:upper()\n    end)\nend", "  return string:gsub(\"%a\", function(c)\n    if\
    \ c:lower() == c then\n      return c:upper()\n    else\n      return c:lower()\n\
    \    end\n  end)\nend", "  return string:gsub('%a', function(char)\n    return\
    \ char:lower() == char and char:upper() or char:lower()\n  end)\nend", "  return\
    \ string:gsub('%a', function(c)\n    return c == c:upper() and c:lower() or c:upper()\n\
    \  end)\nend", "    local flipped = {}\n    for i = 1, #string do\n        local\
    \ char = string:sub(i, i)\n        if char:match('%l') then\n            flipped[i]\
    \ = char:upper()\n        elseif char:match('%u') then\n            flipped[i]\
    \ = char:lower()\n        else\n            flipped[i] = char\n        end\n \
    \   end\n    return table.concat(flipped)\nend", "    return string:gsub(\"%a\"\
    , function(char)\n        if char:lower() == char then\n            return char:upper()\n\
    \        else\n            return char:lower()\n        end\n    end)\nend", " \
    \ return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend", "    local flipped = {}\n    for i = 1, #string\
    \ do\n        local char = string:sub(i, i)\n        if char:match('%l') then\n\
    \            flipped[i] = char:upper()\n        elseif char:match('%u') then\n\
    \            flipped[i] = char:lower()\n        else\n            flipped[i] =\
    \ char\n        end\n    end\n    return table.concat(flipped)\nend", "  return\
    \ string:gsub('%a', function(char)\n    if char:match('%l') then\n      return\
    \ char:upper()\n    else\n      return char:lower()\n    end\n  end)\nend", " \
    \   return string:gsub('%a', function(char)\n        if char:lower() == char then\n\
    \            return char:upper()\n        else\n            return char:lower()\n\
    \        end\n    end)\nend", "    return string:gsub('%a', function(char)\n \
    \       return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "  local flipped = {}\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match('%l') then\n      flipped[i] = char:upper()\n    elseif\
    \ char:match('%u') then\n      flipped[i] = char:lower()\n    else\n      flipped[i]\
    \ = char\n    end\n  end\n  return table.concat(flipped)\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:lower() == char and char:upper() or char:lower()\n\
    \  end)\nend", "  return string:gsub('%a', function(c)\n    return c == c:upper()\
    \ and c:lower() or c:upper()\n  end)\nend", "    local flipped = {}\n    for i\
    \ = 1, #string do\n        local char = string:sub(i, i)\n        if char:match('%l')\
    \ then\n            flipped[i] = char:upper()\n        elseif char:match('%u')\
    \ then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend", "    local\
    \ flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%l') then\n            flipped[i] = char:upper()\n\
    \        elseif char:match('%u') then\n            flipped[i] = char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend", "  return string:gsub('%a', function(char)\n  \
    \  if char:lower() == char then\n      return char:upper()\n    else\n      return\
    \ char:lower()\n    end\n  end)\nend", "    return string:gsub(\"%a\", function(c)\n\
    \        if c:lower() == c then\n            return c:upper()\n        else\n\
    \            return c:lower()\n        end\n    end)\nend", "    local new_string\
    \ = ''\n    for i = 1, #string do\n        local char = string:sub(i, i)\n   \
    \     if char:lower() == char then\n            new_string = new_string .. char:upper()\n\
    \        else\n            new_string = new_string .. char:lower()\n        end\n\
    \    end\n    return new_string\nend", "  return string:gsub(\"%a\", function(c)\n\
    \    if c:lower() == c then\n      return c:upper()\n    else\n      return c:lower()\n\
    \    end\n  end)\nend", "    return string:gsub(\"%a\", function(c)\n        if\
    \ c:lower() == c then\n            return c:upper()\n        else\n          \
    \  return c:lower()\n        end\n    end)\nend", "  return string:gsub('%a',\
    \ function(char)\n    return char:upper() == char and char:lower() or char:upper()\n\
    \  end)\nend", "  local flipped = {}\n  for i=1,#string do\n    local char = string:sub(i,i)\n\
    \    if char:lower() == char then\n      flipped[i] = char:upper()\n    else\n\
    \      flipped[i] = char:lower()\n    end\n  end\n  return table.concat(flipped)\n\
    end", "  return string:gsub(\"%a\", function(c)\n    return c == c:lower() and\
    \ c:upper() or c:lower()\n  end)\nend", "  local flipped = ''\n  for i = 1, #string\
    \ do\n    local char = string:sub(i, i)\n    if char:match('%l') then\n      flipped\
    \ = flipped .. char:upper()\n    elseif char:match('%u') then\n      flipped =\
    \ flipped .. char:lower()\n    else\n      flipped = flipped .. char\n    end\n\
    \  end\n  return flipped\nend", "  local result = ''\n  for i = 1, #string do\n\
    \    local char = string:sub(i, i)\n    if char:match('%l') then\n      result\
    \ = result .. char:upper()\n    elseif char:match('%u') then\n      result = result\
    \ .. char:lower()\n    else\n      result = result .. char\n    end\n  end\n \
    \ return result\nend", "    return string:gsub('%a', function(c)\n        if c:lower()\
    \ == c then\n            return c:upper()\n        else\n            return c:lower()\n\
    \        end\n    end)\nend", "  return string:gsub(\"%a\", function(char)\n \
    \   if char:match(\"%u\") then\n      return char:lower()\n    else\n      return\
    \ char:upper()\n    end\n  end)\nend", "    local flipped = {}\n    for i = 1,\
    \ #string do\n        local char = string:sub(i, i)\n        if char:match('%l')\
    \ then\n            flipped[i] = char:upper()\n        elseif char:match('%u')\
    \ then\n            flipped[i] = char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend", "    local\
    \ flipped = ''\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%a') then\n            if char:match('%l') then\n\
    \                flipped = flipped .. char:upper()\n            else\n       \
    \         flipped = flipped .. char:lower()\n            end\n        else\n \
    \           flipped = flipped .. char\n        end\n    end\n    return flipped\n\
    end", "    return string:gsub(\"%a\", function(c)\n        if c:lower() == c then\n\
    \            return c:upper()\n        else\n            return c:lower()\n  \
    \      end\n    end)\nend", "  local flipped = {}\n  for i = 1, #string do\n \
    \   local char = string:sub(i, i)\n    if char:match('%u') then\n      flipped[i]\
    \ = char:lower()\n    elseif char:match('%l') then\n      flipped[i] = char:upper()\n\
    \    else\n      flipped[i] = char\n    end\n  end\n  return table.concat(flipped)\n\
    end", "  return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend", "    return string:gsub('%a', function(char)\n \
    \       return char:lower() == char and char:upper() or char:lower()\n    end)\n\
    end", "    local flipped = {}\n    for i = 1, #string do\n        local char =\
    \ string:sub(i, i)\n        if char:match('%a') then\n            flipped[i] =\
    \ char:lower() == char and char:upper() or char:lower()\n        else\n      \
    \      flipped[i] = char\n        end\n    end\n    return table.concat(flipped)\n\
    end", "  return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

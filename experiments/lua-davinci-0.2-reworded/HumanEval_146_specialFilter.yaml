name: HumanEval_146_specialFilter
language: lua
prompt: "-- Write a function that takes a table of numbers as input and returns \n\
  -- the number of elements in the table that are greater than 10 and both \n-- first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n-- For example:\n-- >>>\
  \ specialFilter({15, -73, 14, -15})\n-- 1\n-- >>> specialFilter({33, -2, -3, 45,\
  \ 21, 109})\n-- 2\nlocal function specialFilter(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = specialFilter\n\
  \    lu.assertEquals(candidate({5, -2, 1, -5}), 0)\n    lu.assertEquals(candidate({15,\
  \ -73, 14, -15}), 1)\n    lu.assertEquals(candidate({33, -2, -3, 45, 21, 109}),\
  \ 2)\n    lu.assertEquals(candidate({43, -12, 93, 125, 121, 109}), 4)\n    lu.assertEquals(candidate({71,\
  \ -2, -33, 75, 21, 19}), 3)\n    lu.assertEquals(candidate({1}), 0)\n    lu.assertEquals(candidate({}),\
  \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and num // 10 % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n    \
    \        count = count + 1\n        end\n    end\n    return count\nend", "  \
    \  local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num\
    \ % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "  local count = 0\n  for _,\
    \ num in ipairs(nums) do\n    if num > 10 and math.abs(num) % 10 % 2 == 1 and\
    \ num % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n   \
    \ if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and (num // 10) % 2 == 1 then\n        \
    \    count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i, v in ipairs(nums) do\n        if v > 10 and math.abs(v)\
    \ % 10 % 2 == 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for k, v in pairs(nums) do\n        if v > 10 and v %\
    \ 2 == 1 and math.floor(v / 10) % 2 == 1 and v % 10 % 2 == 1 then\n          \
    \  count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1\
    \ and num % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local\
    \ num = nums[i]\n    if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 ==\
    \ 1 then\n      count = count + 1\n    end\n  end\n  return count\nend", "   \
    \ local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and num\
    \ % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num\
    \ > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2\
    \ == 1 then\n      count = count + 1\n    end\n  end\n  return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "  local count = 0\n  for\
    \ _, num in ipairs(nums) do\n    if num > 10 and num % 2 == 1 and num // 10 %\
    \ 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num >\
    \ 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 ==\
    \ 1 then\n      count = count + 1\n    end\n  end\n  return count\nend", "   \
    \ local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n    \
    \    if num > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums\
    \ do\n        local num = nums[i]\n        if num > 10 and math.abs(num) % 10\
    \ % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and\
    \ num % 10 % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ (num % 2 == 1) and (math.floor(num / 10) % 2 == 1) then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums\
    \ do\n        local num = nums[i]\n        if num > 10 and math.abs(num) % 10\
    \ % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and num % 10 % 2 == 1 then\n      \
    \      count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, v in ipairs(nums) do\n        if v > 10 and math.abs(v)\
    \ % 10 % 2 == 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and isOdd(num %\
    \ 10) and isOdd(num // 10) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and math.abs(num) % 10 % 2 ==\
    \ 1 and num % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for i = 1, #nums do\n     \
    \   local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n\
    \    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n   \
    \   count = count + 1\n    end\n  end\n  return count\nend", "  local count =\
    \ 0\n  for _, num in ipairs(nums) do\n    if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 and num % 10 % 2 == 1 then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and (num %\
    \ 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i, v in ipairs(nums) do\n\
    \        if v > 10 and v % 2 == 1 and math.floor(v / 10) % 2 == 1 and v % 10 %\
    \ 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n     \
    \   if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n      \
    \      count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "\tlocal count = 0\n\tfor i = 1, #nums do\n\t\tlocal num\
    \ = nums[i]\n\t\tif num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1\
    \ then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num // 10 % 10 % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        if nums[i] > 10 and nums[i] % 2 == 1 and math.floor(nums[i]\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i, v in ipairs(nums) do\n\
    \        if v > 10 and math.abs(v) % 10 % 2 == 1 and math.floor(math.abs(v) /\
    \ 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n  \
    \  if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) /\
    \ 10) % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "  local count = 0\n  for\
    \ i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ local num = nums[i]\n        if num > 10 and num % 2 == 1 and num // 10 % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 then\n            local first = num % 10\n            local last = num\
    \ // 10\n            if first % 2 == 1 and last % 2 == 1 then\n              \
    \  count = count + 1\n            end\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 ==\
    \ 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for\
    \ _, num in ipairs(nums) do\n    if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 and\
    \ nums[i] % 2 == 1 and nums[i] % 10 % 2 == 1 then\n            count = count +\
    \ 1\n        end\n    end\n    return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num %\
    \ 2 == 1 and num // 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i, v in ipairs(nums) do\n        if v > 10 and math.abs(v) % 10\
    \ % 2 == 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and\
    \ (num // 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and (num // 10) % 2 == 1 then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i, v in ipairs(nums) do\n        if v > 10 and v\
    \ % 2 == 1 and math.floor(v / 10) % 2 == 1 and v % 10 % 2 == 1 then\n        \
    \    count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 %\
    \ 2 == 1 and num % 2 == 1 then\n            count = count + 1\n        end\n \
    \   end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i, v in ipairs(nums) do\n\
    \        if v > 10 and math.abs(v) % 10 % 2 == 1 and math.floor(math.abs(v) /\
    \ 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i = 1, #nums do\n        local\
    \ num = nums[i]\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  if nums[i] > 10 and nums[i] % 2 == 1 and nums[i] % 10 == 1 then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10)\
    \ % 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n\
    \    if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n     \
    \ count = count + 1\n    end\n  end\n  return count\nend", "    local count =\
    \ 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n      \
    \      count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num %\
    \ 2 == 1 and num % 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for i, num in ipairs(nums)\
    \ do\n        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n     \
    \       count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and num % 2 == 1 and (num % 10) % 2 ==\
    \ 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 %\
    \ 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "  -- your code here\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 ==\
    \ 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n\
    \    if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num\
    \ % 10 % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 %\
    \ 2 == 1 and num % 2 == 1 then\n            count = count + 1\n        end\n \
    \   end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for\
    \ _, num in ipairs(nums) do\n    if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 and num % 10 % 2 == 1 then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1\
    \ and math.floor(math.abs(num) / 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local num\
    \ = nums[i]\n    if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for i, v in ipairs(nums) do\n        if v > 10 and math.abs(v)\
    \ % 10 % 2 == 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i, v in ipairs(nums) do\n        if v > 10 and math.abs(v) % 10\
    \ % 2 == 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num > 10\
    \ and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n   \
    \ if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for\
    \ i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local num\
    \ = nums[i]\n    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 ==\
    \ 1 then\n      count = count + 1\n    end\n  end\n  return count\nend", "   \
    \ local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n    \
    \    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and num // 10 % 2 == 1 then\n            count = count + 1\n  \
    \      end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #nums do\n    local num = nums[i]\n    if num > 10 and math.abs(num) % 10 %\
    \ 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n     \
    \   if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) /\
    \ 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n          \
    \  count = count + 1\n        end\n    end\n    return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and\
    \ num % 2 == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n          \
    \  count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num %\
    \ 2 == 1 and num // 10 % 2 == 1 then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "\tlocal count = 0\n\tfor _, num in ipairs(nums)\
    \ do\n\t\tif num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for k, v in pairs(nums) do\n        if v > 10 and math.abs(v)\
    \ % 10 % 2 == 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i, num in ipairs(nums) do\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and num % 2\
    \ == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for i = 1, #nums do\n    local num\
    \ = nums[i]\n    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 ==\
    \ 1 then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1 then\n          \
    \  count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num %\
    \ 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n      \
    \      count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 and math.abs(nums[i]) % 2 == 1 and math.abs(nums[i] % 10) % 2 == 1 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for _, v in ipairs(nums) do\n    if v > 10 and math.abs(v) % 10 % 2 ==\
    \ 1 and math.floor(math.abs(v) / 10) % 2 == 1 then\n      count = count + 1\n\
    \    end\n  end\n  return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and num % 2 == 1 and num // 10 % 2 == 1\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ isOdd(num % 10) and isOdd(num // 10) then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for i\
    \ = 1, #nums do\n        local num = nums[i]\n        if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num // 10 % 2 == 1 then\n            count = count + 1\n \
    \       end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and isFirstAndLastDigitsOdd(num)\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and num // 10 % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and num\
    \ % 10 % 2 == 1 then\n            count = count + 1\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ local num = nums[i]\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and\
    \ math.floor(math.abs(num) / 10) % 2 == 1 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i = 1, #nums do\n      \
    \  local num = nums[i]\n        if num > 10 and num % 2 == 1 and math.floor(num\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for i, v in ipairs(nums) do\n\
    \        if v > 10 and math.abs(v) % 10 % 2 == 1 and math.floor(math.abs(v) /\
    \ 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n   \
    \ return count\nend", "    local count = 0\n    for i, num in ipairs(nums) do\n\
    \        if num > 10 and isOdd(num) and isOdd(num % 10) then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1\
    \ and num % 10 % 2 == 1 then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local num = nums[i]\n        if num > 10 and math.abs(num) % 10 % 2 ==\
    \ 1 and num % 2 == 1 then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n\
    \    if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num %\
    \ 10 % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1\
    \ and math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1\
    \ and math.floor(num / 10) % 2 == 1 then\n            count = count + 1\n    \
    \    end\n    end\n    return count\nend", "    local count = 0\n    for i = 1,\
    \ #nums do\n        local num = nums[i]\n        if num > 10 and num % 2 == 1\
    \ and num // 10 % 2 == 1 then\n            count = count + 1\n        end\n  \
    \  end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 and math.abs(num) % 10 % 2 == 1 and num // 10 % 10 %\
    \ 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for _, num in ipairs(nums) do\n    if num\
    \ > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 % 2 == 1\
    \ and math.floor(math.abs(num) / 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 %\
    \ 2 == 1 and num % 2 == 1 then\n            count = count + 1\n        end\n \
    \   end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        local n = nums[i]\n        if n > 10 and n % 2 == 1 and (n % 10) % 2\
    \ == 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if num >\
    \ 10 and num % 2 == 1 and (num % 10) % 2 == 1 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for _, num in ipairs(nums) do\n        if num > 10 and math.abs(num) % 10 %\
    \ 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "    local count =\
    \ 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and\
    \ math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend", "    local count\
    \ = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and num % 2 == 1\
    \ and (num % 10) % 2 == 1 then\n            count = count + 1\n        end\n \
    \   end\n    return count\nend", "  local count = 0\n  for _, num in ipairs(nums)\
    \ do\n    if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 and\
    \ math.fmod(nums[i], 2) == 1 and math.fmod(math.floor(nums[i] / 10), 2) == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num) / 10) % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n  \
    \      if num > 10 and num % 2 == 1 and math.floor(num / 10) % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \   local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ num % 2 == 1 and math.floor(num / 10) % 2 == 1 and num % 10 % 2 == 1 then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n   \
    \     if num > 10 and math.abs(num) % 10 % 2 == 1 and math.floor(math.abs(num)\
    \ / 10) % 2 == 1 then\n            count = count + 1\n        end\n    end\n \
    \   return count\nend", "    local count = 0\n    for _, num in ipairs(nums) do\n\
    \        if num > 10 and num % 2 == 1 and (num // 10) % 2 == 1 then\n        \
    \    count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n        if\
    \ num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n           \
    \ count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 and nums[i] % 2\
    \ == 1 and nums[i] % 10 % 2 == 1 then\n            count = count + 1\n       \
    \ end\n    end\n    return count\nend", "    local count = 0\n    for _, num in\
    \ ipairs(nums) do\n        if num > 10 and num % 2 == 1 and (num // 10) % 2 ==\
    \ 1 then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        local num = nums[i]\n\
    \        if num > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    local num = nums[i]\n    if num\
    \ > 10 and math.abs(num) % 10 % 2 == 1 and num % 2 == 1 then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for _,\
    \ num in ipairs(nums) do\n        if num > 10 and num % 2 == 1 and num // 10 %\
    \ 2 == 1 then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        if nums[i]\
    \ > 10 and nums[i] % 2 == 1 and math.floor(nums[i] / 10) % 2 == 1 then\n     \
    \       count = count + 1\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for _, num in ipairs(nums) do\n    if num > 10 and math.abs(num)\
    \ % 10 % 2 == 1 and num % 2 == 1 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

---
name: HumanEval_138_is_equal_to_sum_even
language: lua
prompt: |
  -- Evaluate whether the given number n can be written as the sum of exactly 4 positive even numbers
  -- Example
  -- >>> is_equal_to_sum_even(4)
  -- false
  -- >>> is_equal_to_sum_even(6)
  -- false
  -- >>> is_equal_to_sum_even(8)
  -- true
  local function is_equal_to_sum_even(n)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = is_equal_to_sum_even
      lu.assertEquals(candidate(4), false)
      lu.assertEquals(candidate(6), false)
      lu.assertEquals(candidate(8), true)
      lu.assertEquals(candidate(10), true)
      lu.assertEquals(candidate(11), false)
      lu.assertEquals(candidate(12), true)
      lu.assertEquals(candidate(13), false)
      lu.assertEquals(candidate(16), true)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local count = 0
      for i = 2, n - 2, 2 do
          for j = 2, n - i - 2, 2 do
              for k = 2, n - i - j - 2, 2 do
                  for l = 2, n - i - j - k - 2, 2 do
                      if i + j + k + l == n then
                          count = count + 1
                      end
                  end
              end
          end
      end
      return count == 1
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
    local sum = 0
    for i = 1, n do
      if i % 2 == 0 then
        sum = sum + i
      end
      if sum == n then
        return true
      end
    end
    return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while sum < n do
          sum = sum + i
          count = count + 1
          i = i + 2
      end
      return sum == n and count == 4
  end
- |2-
      local count = 0
      for i = 1, n do
          if n % i == 0 and i % 2 == 0 then
              count = count + 1
          end
      end
      return count == 4
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while sum < n do
          sum = sum + i
          count = count + 1
          i = i + 2
      end
      return sum == n and count == 4
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if n < 4 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local a = n / 4
      local b = n / 2
      local c = n / 4 * 3
      local d = n
      if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d % 2 == 1 then
          return false
      end
      return true
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while sum < n do
          sum = sum + i
          count = count + 1
          i = i + 2
      end
      return sum == n and count == 4
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      for i = 2, n/2 do
          if is_equal_to_sum_even(n - i) then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
              if sum == n and count == 4 then
                  return true
              end
          end
      end
      return false
  end
- |2-
      local function is_equal_to_sum_even_helper(n, a, b, c, d)
          if n == 0 then
              return true
          elseif n < 0 then
              return false
          elseif a > n then
              return false
          elseif b > n then
              return is_equal_to_sum_even_helper(n, a + 2, a + 2, a + 2, a + 2)
          elseif c > n then
              return is_equal_to_sum_even_helper(n, a, a + 2, a + 2, a + 2)
          elseif d > n then
              return is_equal_to_sum_even_helper(n, a, b, a + 2, a + 2)
          else
              return is_equal_to_sum_even_helper(n, a, b, c, a + 2) or is_equal_to_sum_even_helper(n - a, a, b, c, d) or is_equal_to_sum_even_helper(n - b, a, b, c, d) or is_equal_to_sum_even_helper(n - c, a, b, c, d) or is_equal_to_sum_even_helper(n - d, a, b, c, d)
          end
      end
      return is_equal_to_sum_even_helper(n, 2, 2, 2, 2)
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      return is_equal_to_sum(n, 4, is_even)
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      return is_equal_to_sum(n, 4, is_even)
  end
- |2-
      -- TODO: Implement this function
  end
- "\tlocal sum = 0\n\tlocal count = 0\n\tfor i = 2, n, 2 do\n\t\tsum = sum + i\n\t\tcount
  = count + 1\n\t\tif sum == n and count == 4 then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
    local function is_equal_to_sum_even_helper(n, a, b, c, d)
      if n == 0 then
        return true
      elseif n < 0 then
        return false
      else
        return is_equal_to_sum_even_helper(n - a, a, b, c, d) or
               is_equal_to_sum_even_helper(n - b, a, b, c, d) or
               is_equal_to_sum_even_helper(n - c, a, b, c, d) or
               is_equal_to_sum_even_helper(n - d, a, b, c, d)
      end
    end
    return is_equal_to_sum_even_helper(n, 2, 4, 6, 8)
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      if n == 4 then
          return false
      end
      return true
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      local function is_equal_to_sum_even_helper(n, k)
          if n == 0 and k == 0 then
              return true
          elseif n > 0 and k > 0 then
              return is_equal_to_sum_even_helper(n - 2, k - 1) or is_equal_to_sum_even_helper(n, k - 1)
          else
              return false
          end
      end
      return is_equal_to_sum_even_helper(n, 4)
  end
- |2-
      return n % 2 == 0 and n % 4 ~= 0
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while i <= n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
          end
          if sum == n and count == 4 then
              return true
          end
          i = i + 1
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while sum < n do
          sum = sum + i
          i = i + 2
          count = count + 1
      end
      if sum == n and count == 4 then
          return true
      else
          return false
      end
  end
- |2-
    local sum = 0
    local count = 0
    for i = 1, n do
      if i % 2 == 0 then
        sum = sum + i
        count = count + 1
      end
      if sum == n and count == 4 then
        return true
      end
    end
    return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while i <= n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
          end
          if sum == n and count == 4 then
              return true
          end
          i = i + 1
      end
      return false
  end
- |2-
      return is_equal_to_sum(n, 4, function(x) return x % 2 == 0 end)
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- YOUR CODE HERE
      return false
  end
- |2-
      if n < 4 then
          return false
      end
      local i = 2
      local sum = 0
      while i <= n do
          sum = sum + i
          if sum == n then
              return true
          end
          i = i + 2
      end
      return false
  end
- |2-
      -- YOUR CODE HERE
      if n == 0 then
          return true
      elseif n < 0 then
          return false
      else
          return is_equal_to_sum_even(n - 2)
      end
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      if n == 4 then
          return false
      end
      if n == 6 then
          return false
      end
      if n == 8 then
          return true
      end
      return is_equal_to_sum_even(n - 2)
  end
- |2-
      -- TODO: implement here
  end
- "\tlocal sum = 0\n\tlocal count = 0\n\tfor i = 1, n do\n\t\tif i % 2 == 0 then\n\t\t\tsum
  = sum + i\n\t\t\tcount = count + 1\n\t\tend\n\t\tif sum == n and count == 4 then\n\t\t\treturn
  true\n\t\tend\n\tend\n\treturn false\nend"
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    local sum = 0
    for i = 1, n do
      if i % 2 == 0 then
        sum = sum + i
      end
      if sum == n then
        return true
      end
    end
    return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local a = 1
      local b = 1
      local c = 1
      local d = 1
      while a <= n do
          while b <= n do
              while c <= n do
                  while d <= n do
                      if a + b + c + d == n then
                          return true
                      end
                      d = d + 2
                  end
                  c = c + 2
                  d = 1
              end
              b = b + 2
              c = 1
          end
          a = a + 2
          b = 1
      end
      return false
  end
- |2-
      return n % 2 == 0 and n % 4 ~= 0
  end
- |2-
      local count = 0
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
    if n % 2 == 1 then
      return false
    end
    local sum = 0
    for i = 2, n, 2 do
      sum = sum + i
      if sum == n then
        return true
      end
    end
    return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local n = n / 2
      local a = n - 3
      local b = n - 2
      local c = n - 1
      local d = n
      if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d % 2 == 1 then
          return false
      end
      return true
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 1, n / 2 do
          if n % i == 0 then
              sum = sum + i
          end
      end
      return sum == n
  end
- |2-
    return n % 2 == 0 and n >= 8
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: Implement this function
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
      end
      if sum == n then
          return true
      else
          return false
      end
  end
- |2-
      for i = 1, n do
          for j = 1, n do
              for k = 1, n do
                  for l = 1, n do
                      if i + j + k + l == n and i % 2 == 0 and j % 2 == 0 and k % 2 == 0 and l % 2 == 0 then
                          return true
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      if n < 4 then
          return false
      end
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum > n then
              return false
          end
          if sum == n then
              return true
          end
      end
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement the function
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
      end
      if sum == n then
          return true
      else
          return false
      end
  end
- "\tlocal sum = 0\n\tlocal count = 0\n\tfor i = 2, n do\n\t\tif i % 2 == 0 then\n\t\t\tsum
  = sum + i\n\t\t\tcount = count + 1\n\t\tend\n\t\tif sum == n and count == 4 then\n\t\t\treturn
  true\n\t\tend\n\tend\n\treturn false\nend"
- |2-
      if n < 4 then
          return false
      end
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      if n <= 0 then
          return false
      end
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local result = false
      for i = 1, n/2 do
          for j = 1, n/2 do
              for k = 1, n/2 do
                  for l = 1, n/2 do
                      if i + j + k + l == n then
                          result = true
                      end
                  end
              end
          end
      end
      return result
  end
- |2-
      if n < 4 then
          return false
      end
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n - 2, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- your code here
      local sum = 0
      local count = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
          end
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      local function is_equal_to_sum_even_helper(n, count)
          if n == 0 and count == 4 then
              return true
          elseif n == 0 or count == 4 then
              return false
          else
              return is_equal_to_sum_even_helper(n - 2, count + 1)
          end
      end
      return is_equal_to_sum_even_helper(n, 0)
  end
- |2-
      local i = 0
      local j = 0
      local k = 0
      local l = 0
      for i = 0, n do
          for j = 0, n do
              for k = 0, n do
                  for l = 0, n do
                      if i + j + k + l == n and i % 2 == 0 and j % 2 == 0 and k % 2 == 0 and l % 2 == 0 then
                          return true
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      -- Write your code here
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
      end
      if sum == n then
          return true
      else
          return false
      end
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    if n % 2 == 1 then
      return false
    end
    if n == 4 then
      return false
    end
    if n == 6 then
      return false
    end
    return true
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n then
              if count == 4 then
                  return true
              else
                  return false
              end
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
    local function is_equal_to_sum_even_helper(n, sum, count)
      if count == 4 then
        return sum == n
      else
        for i = 2, n - sum, 2 do
          if is_equal_to_sum_even_helper(n, sum + i, count + 1) then
            return true
          end
        end
        return false
      end
    end
    return is_equal_to_sum_even_helper(n, 0, 0)
  end
- |2-
      local function is_equal_to_sum_even_helper(n, count)
          if n == 0 and count == 4 then
              return true
          elseif n < 0 or count > 4 then
              return false
          else
              return is_equal_to_sum_even_helper(n - 2, count + 1)
          end
      end
      return is_equal_to_sum_even_helper(n, 0)
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: Implement this function
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while i <= n do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
          i = i + 2
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
    if n % 2 == 1 then
      return false
    end
    local count = 0
    for i = 2, n, 2 do
      count = count + 1
      if count == 4 then
        return true
      end
    end
    return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- your code here
      if n % 2 == 0 then
          return true
      else
          return false
      end
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      for i = 2, n / 2 do
          if is_equal_to_sum_even(n - i) then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      for i = 2, n - 6, 2 do
          for j = i + 2, n - 4, 2 do
              for k = j + 2, n - 2, 2 do
                  for l = k + 2, n, 2 do
                      if i + j + k + l == n then
                          return true
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local function is_equal_to_sum_even_helper(n, num_evens)
          if n == 0 then
              return num_evens == 4
          elseif n < 0 then
              return false
          else
              return is_equal_to_sum_even_helper(n - 2, num_evens + 1)
          end
      end
      return is_equal_to_sum_even_helper(n, 0)
  end
- |2-
      -- TODO: implement the function
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n == 0 then
          return true
      elseif n < 0 then
          return false
      else
          return is_equal_to_sum_even(n - 2)
      end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement the function
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
    -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local a = n / 4
      local b = n / 2
      local c = n / 4 * 3
      local d = n
      if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d % 2 == 1 then
          return false
      end
      return true
  end
- |2-
      local count = 0
      for i = 2, n, 2 do
          count = count + 1
          if count == 4 then
              return true
          end
      end
      return false
  end
- |2-
    -- TODO: implement the function
  end
- |2-
    if n % 2 == 1 then
      return false
    end
    local a = n / 4
    local b = n / 2
    local c = n / 4 * 3
    local d = n
    return is_equal_to_sum(a, b, c, d)
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      local sum = 0
      local count = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
          end
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      local count = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
          end
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: Implement this function
  end
- |2-
      -- TODO: Implement me
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local a = n / 4
      local b = n / 2
      local c = n / 4 * 3
      local d = n
      if a % 2 == 1 or b % 2 == 1 or c % 2 == 1 or d % 2 == 1 then
          return false
      end
      return true
  end
- |2-
    local sum = 0
    local count = 0
    local i = 2
    while sum < n do
      sum = sum + i
      i = i + 2
      count = count + 1
    end
    if sum == n and count == 4 then
      return true
    else
      return false
    end
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    -- TODO: implement this function
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      for i = 2, n, 2 do
          sum = sum + i
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      local function is_equal_to_sum_even_helper(n, count)
          if count == 0 then
              return n == 0
          else
              for i = 2, n, 2 do
                  if is_equal_to_sum_even_helper(n - i, count - 1) then
                      return true
                  end
              end
              return false
          end
      end
      return is_equal_to_sum_even_helper(n, 4)
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- "\tlocal sum = 0\n\tfor i = 1, n do\n\t\tif i % 2 == 0 then\n\t\t\tsum = sum + i\n\t\tend\n\tend\n\treturn
  sum == n\nend"
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      -- TODO: Implement this function
      return false
  end
- |2-
      -- TODO: implement this function
  end
- |2-
      local function is_equal_to_sum_even_helper(n, count)
          if count == 0 then
              return n == 0
          else
              for i = 2, n, 2 do
                  if is_equal_to_sum_even_helper(n - i, count - 1) then
                      return true
                  end
              end
              return false
          end
      end
      return is_equal_to_sum_even_helper(n, 4)
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      local sum = 0
      local count = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
              count = count + 1
          end
          if sum == n and count == 4 then
              return true
          end
      end
      return false
  end
- |2-
      local sum = 0
      for i = 1, n do
          if i % 2 == 0 then
              sum = sum + i
          end
          if sum == n then
              return true
          end
      end
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      if n % 2 == 1 then
          return false
      end
      local sum = 0
      local count = 0
      for i = 2, n, 2 do
          sum = sum + i
          count = count + 1
          if sum == n then
              return true
          end
          if sum > n then
              return false
          end
      end
      return false
  end
- |2-
      local sum = 0
      local count = 0
      local i = 2
      while sum < n do
          sum = sum + i
          count = count + 1
          i = i + 2
      end
      return sum == n and count == 4
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement the function
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
    local sum = 0
    local count = 0
    for i = 2, n, 2 do
      sum = sum + i
      count = count + 1
      if sum == n and count == 4 then
        return true
      end
    end
    return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
- |2-
      -- TODO: implement this function
      return false
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

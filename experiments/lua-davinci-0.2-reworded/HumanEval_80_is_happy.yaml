name: HumanEval_80_is_happy
language: lua
prompt: "-- You are given a string s.\n-- Your task is to check if the string is haplua\
  \ or not.\n-- A string is haplua if its length is at least 3 and every 3 consecutive\
  \ letters are distinct\n-- For example:\n-- >>> is_happy(a)\n-- false\n-- >>> is_happy(aa)\n\
  -- false\n-- >>> is_happy(abcd)\n-- true\n-- >>> is_happy(aabb)\n-- false\n-- >>>\
  \ is_happy(adb)\n-- true\n-- >>> is_happy(xyy)\n-- false\nlocal function is_happy(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_happy\n\
  \    lu.assertEquals(candidate('a'), false)\n    lu.assertEquals(candidate('aa'),\
  \ false)\n    lu.assertEquals(candidate('abcd'), true)\n    lu.assertEquals(candidate('aabb'),\
  \ false)\n    lu.assertEquals(candidate('adb'), true)\n    lu.assertEquals(candidate('xyy'),\
  \ false)\n    lu.assertEquals(candidate('iopaxpoi'), true)\n    lu.assertEquals(candidate('iopaxioi'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n\
    \    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i +\
    \ 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n\
    \    end\n  end\n  return true\nend", "    if #s < 3 then\n        return false\n\
    \    end\n    local c1 = s:sub(1,1)\n    local c2 = s:sub(2,2)\n    local c3 =\
    \ s:sub(3,3)\n    if c1 == c2 or c2 == c3 or c1 == c3 then\n        return false\n\
    \    end\n    return true\nend", "    if #s < 3 then\n        return false\n \
    \   end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n            return false\n        end\n    end\n    return true\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n           \
    \ return false\n        end\n    end\n    return true\nend", "    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n            return false\n        end\n    end\n\
    \    return true\nend", "    if #s < 3 then\n        return false\n    end\n \
    \   local i = 1\n    while i < #s do\n        if s:sub(i, i + 2):match('(.)%1')\
    \ then\n            return false\n        end\n        i = i + 1\n    end\n  \
    \  return true\nend", "    local n = #s\n    if n < 3 then\n        return false\n\
    \    end\n    for i = 1, n - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n            return false\n        end\n    end\n    return true\n\
    end", "    local len = string.len(s)\n    if len < 3 then\n        return false\n\
    \    end\n    local i = 1\n    while i <= len - 2 do\n        if s[i] == s[i +\
    \ 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n            return false\n\
    \        end\n        i = i + 1\n    end\n    return true\nend", "    local n\
    \ = #s\n    if n < 3 then\n        return false\n    end\n    for i = 1, n - 2\
    \ do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n           \
    \ return false\n        end\n    end\n    return true\nend", "    -- your code\
    \ here\nend", "    -- your code here\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "\tif #s < 3 then\n\t\treturn false\n\tend\n\tfor i = 1,\
    \ #s - 2 do\n\t\tif s:sub(i, i + 2):match(\"(.)%1\") then\n\t\t\treturn false\n\
    \t\tend\n\tend\n\treturn true\nend", "    if #s < 3 then\n        return false\n\
    \    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n            return false\n        end\n    end\n    return true\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        if s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n\
    \        end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "    -- your code here\nend", "    local len = string.len(s)\n\
    \    if len < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n\
    \        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n\
    \            return false\n        end\n    end\n    return true\nend", "  --\
    \ your code here\nend", "  local len = #s\n  if len < 3 then\n    return false\n\
    \  end\n  for i = 1, len - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or\
    \ s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i\
    \ + 2) then\n      return false\n    end\n  end\n  return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2)\
    \ or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local len = string.len(s)\n\
    \    if len < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n\
    \        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n\
    \            return false\n        end\n    end\n    return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i + 2):match('(.)%1%1') then\n            return false\n     \
    \   end\n    end\n    return true\nend", "    -- your code here\n    if #s < 3\
    \ then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n            return false\n        end\n    end\n\
    \    return true\nend", "    -- your code here\nend", "  local len = #s\n  if\
    \ len < 3 then\n    return false\n  end\n  for i = 1, len - 2 do\n    if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n    end\n  end\n\
    \  return true\nend", "    if #s < 3 then\n        return false\n    end\n   \
    \ local last = s:sub(1, 3)\n    for i = 4, #s do\n        local cur = s:sub(i\
    \ - 2, i)\n        if cur == last then\n            return false\n        end\n\
    \        last = cur\n    end\n    return true\nend", "    if #s < 3 then\n   \
    \     return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i +\
    \ 2):match('(.)%1') then\n            return false\n        end\n    end\n   \
    \ return true\nend", "    if #s < 3 then\n        return false\n    end\n    for\
    \ i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  local\
    \ n = s:len()\n  if n < 3 then\n    return false\n  end\n  for i = 1, n - 2 do\n\
    \    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i +\
    \ 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n\
    \    end\n  end\n  return true\nend", "  -- your code here\nend", "    if #s <\
    \ 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or\
    \ s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local len = #s\n    if len\
    \ < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n       \
    \ if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2)\
    \ or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "  if #s < 3 then\n    return false\n\
    \  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\") then\n\
    \      return false\n    end\n  end\n  return true\nend", "    -- your code here\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        local a, b, c = s:sub(i, i), s:sub(i + 1, i + 1), s:sub(i + 2,\
    \ i + 2)\n        if a == b or b == c or a == c then\n            return false\n\
    \        end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "    -- your code here\nend", "  if #s < 3 then\n    return false\n  end\n\
    \  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \      return false\n    end\n  end\n  return true\nend", "    -- your code here\n\
    end", "    -- your code here\n    if #s < 3 then\n        return false\n    end\n\
    \    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  if\
    \ #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n    end\n  end\n\
    \  return true\nend", "    if #s < 3 then\n        return false\n    end\n   \
    \ for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    local\
    \ len = #s\n    if len < 3 then\n        return false\n    end\n    for i = 1,\
    \ len - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) ==\
    \ s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n   \
    \         return false\n        end\n    end\n    return true\nend", "    if #s\
    \ < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n        end\n\
    \    end\n    return true\nend", "  -- your code here\nend", "    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "  if #s < 3 then\n    return false\n  end\n\
    \  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \      return false\n    end\n  end\n  return true\nend", "  -- your code here\n\
    end", "    -- Write your code here\n    return false\nend", "  if #s < 3 then\n\
    \    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"\
    (.)%1%1\") then\n      return false\n    end\n  end\n  return true\nend", "  --\
    \ your code here\nend", "    local len = string.len(s)\n    if len < 3 then\n\
    \        return false\n    end\n    local i = 1\n    while i <= len - 2 do\n \
    \       if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n\
    \            return false\n        end\n        i = i + 1\n    end\n    return\
    \ true\nend", "    local len = string.len(s)\n    if len < 3 then\n        return\
    \ false\n    end\n    local i = 1\n    while i < len do\n        if s[i] == s[i+1]\
    \ or s[i] == s[i+2] or s[i+1] == s[i+2] then\n            return false\n     \
    \   end\n        i = i + 3\n    end\n    return true\nend", "  if #s < 3 then\n\
    \    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"\
    (.)%1\") then\n      return false\n    end\n  end\n  return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n     \
    \   end\n    end\n    return true\nend", "    -- your code here\nend", "  if #s\
    \ < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i\
    \ + 2):match(\"(.)%1\") then\n      return false\n    end\n  end\n  return true\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n           \
    \ return false\n        end\n    end\n    return true\nend", "    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n            return false\n        end\n    end\n\
    \    return true\nend", "  if #s < 3 then\n    return false\n  end\n  for i =\
    \ 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\") then\n      return false\n\
    \    end\n  end\n  return true\nend", "    -- your code here\n    return false\n\
    end", "    local len = #s\n    if len < 3 then\n        return false\n    end\n\
    \    local i = 1\n    while i < len do\n        if s:sub(i, i + 2) == s:sub(i\
    \ + 1, i + 3) then\n            return false\n        end\n        i = i + 1\n\
    \    end\n    return true\nend", "  -- your code here\nend", "  local len = string.len(s)\n\
    \  if len < 3 then\n    return false\n  end\n  for i = 1, len - 2 do\n    if s[i]\
    \ == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n      return false\n\
    \    end\n  end\n  return true\nend", "    -- your code here\nend", "  return\
    \ false\nend", "  -- your code here\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "  if #s < 3 then\n    return false\n  end\n  for i = 1,\
    \ #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  -- your code here\nend", "  \
    \  local len = #s\n    if len < 3 then\n        return false\n    end\n    for\
    \ i = 1, len - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2)\
    \ or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 3, #s do\n        if s:sub(i - 2, i) == s:sub(i\
    \ - 1, i + 1) then\n            return false\n        end\n    end\n    return\
    \ true\nend", "  -- your code here\nend", "  -- your code here\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n     \
    \   end\n    end\n    return true\nend", "    if #s < 3 then\n        return false\n\
    \    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n            return false\n        end\n    end\n    return true\n\
    end", "  if s:len() < 3 then\n    return false\n  end\n  for i = 1, s:len() -\
    \ 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i +\
    \ 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local len = string.len(s)\n  if len <\
    \ 3 then\n    return false\n  end\n  local prev = string.sub(s, 1, 1)\n  local\
    \ curr = string.sub(s, 2, 2)\n  for i = 3, len do\n    local next = string.sub(s,\
    \ i, i)\n    if prev == curr or curr == next or prev == next then\n      return\
    \ false\n    end\n    prev = curr\n    curr = next\n  end\n  return true\nend",
  "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n \
    \       if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i\
    \ + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return\
    \ false\n        end\n    end\n    return true\nend", "  if #s < 3 then\n    return\
    \ false\n  end\n  local last = s:sub(1, 3)\n  for i = 4, #s do\n    local cur\
    \ = s:sub(i - 2, i)\n    if cur == last then\n      return false\n    end\n  \
    \  last = cur\n  end\n  return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    local a, b, c = s:sub(1, 1), s:sub(2, 2), s:sub(3, 3)\n\
    \    if a == b or b == c or a == c then\n        return false\n    end\n    return\
    \ true\nend", "  -- your code here\nend", "    local len = #s\n    if len < 3\
    \ then\n        return false\n    end\n    local i = 1\n    while i <= len - 2\
    \ do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n           \
    \ return false\n        end\n        i = i + 1\n    end\n    return true\nend",
  "    local len = string.len(s)\n    if len < 3 then\n        return false\n    end\n\
    \    for i = 1, len - 2 do\n        if s[i] == s[i + 1] or s[i] == s[i + 2] or\
    \ s[i + 1] == s[i + 2] then\n            return false\n        end\n    end\n\
    \    return true\nend", "  -- your code here\nend", "    if #s < 3 then\n    \
    \    return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i +\
    \ 2):match(\"(.)%1\") then\n            return false\n        end\n    end\n \
    \   return true\nend", "    -- your code here\n    return false\nend", "  if #s\
    \ < 3 then\n    return false\n  end\n  local i = 1\n  while i < #s do\n    if\
    \ s:sub(i, i+2):match(\"(.)%1%1\") then\n      return false\n    end\n    i =\
    \ i + 1\n  end\n  return true\nend", "    local len = #s\n    if len < 3 then\n\
    \        return false\n    end\n    for i = 1, len - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "  -- your code here\nend", "    -- your code\
    \ here\n    return false\nend", "    -- your code here\nend", "    return false\n\
    end", "  -- your code here\n  if #s < 3 then\n    return false\n  end\n  for i\
    \ = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) ==\
    \ s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  if #s < 3 then\n   \
    \ return false\n  end\n  local last_char = s:sub(1, 1)\n  local last_last_char\
    \ = s:sub(2, 2)\n  for i = 3, #s do\n    local char = s:sub(i, i)\n    if char\
    \ == last_char or char == last_last_char then\n      return false\n    end\n \
    \   last_last_char = last_char\n    last_char = char\n  end\n  return true\nend",
  "  local len = string.len(s)\n  if len < 3 then\n    return false\n  end\n  for\
    \ i = 1, len - 2 do\n    if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] ==\
    \ s[i + 2] then\n      return false\n    end\n  end\n  return true\nend", "  --\
    \ your code here\nend", "    local len = #s\n    if len < 3 then\n        return\
    \ false\n    end\n    for i = 1, len - 2 do\n        if s:sub(i, i + 2):match('(.)%1')\
    \ then\n            return false\n        end\n    end\n    return true\nend",
  "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n \
    \       if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i\
    \ + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return\
    \ false\n        end\n    end\n    return true\nend", "  if #s < 3 then\n    return\
    \ false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\"\
    ) then\n      return false\n    end\n  end\n  return true\nend", "  -- your code\
    \ here\nend", "  -- your code here\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "    -- your code here\nend", "    -- your code here\nend", "    if #s <\
    \ 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or\
    \ s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "  if #s < 3 then\n    return false\n  end\n  for i = 1,\
    \ #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  if #s < 3 then\n    return false\n\
    \  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\") then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local len = string.len(s)\n\
    \  if len < 3 then\n    return false\n  end\n  for i = 1, len - 2 do\n    if s[i]\
    \ == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  -- your code here\n  local len = string.len(s)\n\
    \  if len < 3 then\n    return false\n  end\n  local i = 1\n  while i <= len -\
    \ 2 do\n    if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n\
    \      return false\n    end\n    i = i + 1\n  end\n  return true\nend", "  if\
    \ #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i,\
    \ i + 2):match('(.)%1') then\n      return false\n    end\n  end\n  return true\n\
    end", "    if s:len() < 3 then\n        return false\n    end\n    for i = 1,\
    \ s:len() - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i)\
    \ == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    local\
    \ len = string.len(s)\n    if len < 3 then\n        return false\n    end\n  \
    \  local i = 1\n    while i <= len - 2 do\n        if s[i] == s[i + 1] or s[i]\
    \ == s[i + 2] or s[i + 1] == s[i + 2] then\n            return false\n       \
    \ end\n        i = i + 1\n    end\n    return true\nend", "    local len = string.len(s)\n\
    \    if len < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n\
    \        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n\
    \            return false\n        end\n    end\n    return true\nend", "  if\
    \ #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n    end\n  end\n\
    \  return true\nend", "    if #s < 3 then\n        return false\n    end\n   \
    \ for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  local\
    \ len = #s\n  if len < 3 then\n    return false\n  end\n  for i = 1, len - 2 do\n\
    \    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i +\
    \ 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n\
    \    end\n  end\n  return true\nend", "    local len = #s\n    if len < 3 then\n\
    \        return false\n    end\n    for i = 1, len - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "  if #s < 3 then\n    return false\n  end\n\
    \  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \      return false\n    end\n  end\n  return true\nend", "  if #s < 3 then\n\
    \    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n      return false\n    end\n  end\n  return true\n\
    end", "  -- your code here\n  if #s < 3 then return false end\n  for i = 1, #s\
    \ - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  if #s < 3 then\n    return false\n\
    \  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \      return false\n    end\n  end\n  return true\nend", "    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n            return false\n        end\n    end\n\
    \    return true\nend", "    local len = #s\n    if len < 3 then\n        return\
    \ false\n    end\n    for i = 1, len - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "  if #s < 3 then\n    return false\n  end\n  for i = 1,\
    \ #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n      return\
    \ false\n    end\n  end\n  return true\nend", "    -- your code here\n    if #s\
    \ < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or\
    \ s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n           \
    \ return false\n        end\n    end\n    return true\nend", "  -- your code here\n\
    end", "  local len = #s\n  if len < 3 then\n    return false\n  end\n  local a\
    \ = s:sub(1, 1)\n  local b = s:sub(2, 2)\n  local c = s:sub(3, 3)\n  if a == b\
    \ or b == c or a == c then\n    return false\n  end\n  for i = 4, len do\n   \
    \ a = b\n    b = c\n    c = s:sub(i, i)\n    if a == b or b == c or a == c then\n\
    \      return false\n    end\n  end\n  return true\nend", "  -- your code here\n\
    end", "    if #s < 3 then\n        return false\n    end\n    for i = 1, #s -\
    \ 2 do\n        if s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n\
    \        end\n    end\n    return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "  if #s < 3 then\n    return false\n  end\n  for i = 1,\
    \ #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\") then\n      return false\n\
    \    end\n  end\n  return true\nend", "    if #s < 3 then\n        return false\n\
    \    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match('(.)%1')\
    \ then\n            return false\n        end\n    end\n    return true\nend",
  "    -- your code here\nend", "  if #s < 3 then\n    return false\n  end\n  local\
    \ last = s:sub(1, 3)\n  for i = 4, #s do\n    local c = s:sub(i, i)\n    if c\
    \ == last:sub(1, 1) or c == last:sub(2, 2) or c == last:sub(3, 3) then\n     \
    \ return false\n    end\n    last = last:sub(2, 3) .. c\n  end\n  return true\n\
    end", "  -- your code here\nend", "    -- your code here\nend", "    local len\
    \ = #s\n    if len < 3 then\n        return false\n    end\n    for i = 1, len\
    \ - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i\
    \ + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n           \
    \ return false\n        end\n    end\n    return true\nend", "    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "    -- your code here\n    if #s < 3 then\n\
    \        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "    -- your code here\nend", "    if #s < 3\
    \ then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "    if #s < 3 then\n        return false\n \
    \   end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"(.)%1\"\
    ) then\n            return false\n        end\n    end\n    return true\nend",
  "  if #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n      return false\n    end\n  end\n  return true\n\
    end", "  local n = #s\n  if n < 3 then\n    return false\n  end\n  local i = 1\n\
    \  while i <= n - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1%1\") then\n     \
    \ return false\n    end\n    i = i + 1\n  end\n  return true\nend", "    if #s\
    \ < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n        end\n\
    \    end\n    return true\nend", "    -- your code here\nend", "    if #s < 3\
    \ then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n            return false\n        end\n    end\n\
    \    return true\nend", "    if #s < 3 then\n        return false\n    end\n \
    \   for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  --\
    \ your code here\nend", "    -- your code here\n    local len = string.len(s)\n\
    \    if len < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n\
    \        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n\
    \            return false\n        end\n    end\n    return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2)\
    \ or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    -- your code here\nend", " \
    \ -- your code here\nend", "    local len = #s\n    if len < 3 then\n        return\
    \ false\n    end\n    for i = 1, len - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "  local n = #s\n  if n < 3 then\n    return false\n  end\n\
    \  local prev = s:sub(1, 3)\n  for i = 4, n do\n    local curr = s:sub(i - 2,\
    \ i)\n    if prev == curr then\n      return false\n    end\n    prev = curr\n\
    \  end\n  return true\nend", "    if #s < 3 then\n        return false\n    end\n\
    \    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    if\
    \ #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n     \
    \   if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2)\
    \ or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local n = #s\n    if n < 3\
    \ then\n        return false\n    end\n    for i = 1, n - 2 do\n        if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "  -- your code here\n  local len = string.len(s)\n\
    \  if len < 3 then\n    return false\n  end\n  for i = 1, len - 2 do\n    if s[i]\
    \ == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  if #s < 3 then\n    return false\n  end\n\
    \  local i = 1\n  while i <= #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\"\
    ) then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
  "  if #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i,\
    \ i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i +\
    \ 1, i + 1) == s:sub(i + 2, i + 2) then\n      return false\n    end\n  end\n\
    \  return true\nend", "    if #s < 3 then\n        return false\n    end\n   \
    \ for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"(.)%1\") then\n   \
    \         return false\n        end\n    end\n    return true\nend", "    if #s\
    \ < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n        if\
    \ s:sub(i, i + 2):match(\"(.)%1\") then\n            return false\n        end\n\
    \    end\n    return true\nend", "  if #s < 3 then\n    return false\n  end\n\
    \  for i = 1, #s - 2 do\n    if s:sub(i, i + 2):match(\"(.)%1\") then\n      return\
    \ false\n    end\n  end\n  return true\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "    local n = #s\n    if n < 3 then\n        return false\n    end\n  \
    \  for i = 1, n - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "    --\
    \ your code here\n    return false\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1\") then\n            return false\n        end\n    end\n    return true\n\
    end", "    local len = #s\n    if len < 3 then\n        return false\n    end\n\
    \    for i = 1, len - 2 do\n        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i,\
    \ i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n\
    \            return false\n        end\n    end\n    return true\nend", "  if\
    \ #s < 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i,\
    \ i + 2):match(\"(.)%1\") then\n      return false\n    end\n  end\n  return true\n\
    end", "    if #s < 3 then\n        return false\n    end\n    local last = s:sub(1,\
    \ 3)\n    for i = 4, #s do\n        local cur = s:sub(i - 2, i)\n        if cur\
    \ == last then\n            return false\n        end\n        last = cur\n  \
    \  end\n    return true\nend", "    local n = string.len(s)\n    if n < 3 then\n\
    \        return false\n    end\n    for i = 1, n - 2 do\n        if s[i] == s[i\
    \ + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local len = #s\n    if len\
    \ < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n       \
    \ if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2)\
    \ or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return false\n\
    \        end\n    end\n    return true\nend", "    -- your code here\n    local\
    \ len = string.len(s)\n    if len < 3 then\n        return false\n    end\n  \
    \  local i = 1\n    while i <= len - 2 do\n        if s[i] == s[i + 1] or s[i]\
    \ == s[i + 2] or s[i + 1] == s[i + 2] then\n            return false\n       \
    \ end\n        i = i + 1\n    end\n    return true\nend", "  -- your code here\n\
    end", "  -- your code here\n  return false\nend", "  if #s < 3 then\n    return\
    \ false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n      return false\n    end\n  end\n  return true\nend", " \
    \   if #s < 3 then\n        return false\n    end\n    for i = 1, #s - 2 do\n\
    \        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2,\
    \ i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return\
    \ false\n        end\n    end\n    return true\nend", "    if #s < 3 then\n  \
    \      return false\n    end\n    local last_char = s:sub(1, 1)\n    local second_last_char\
    \ = s:sub(2, 2)\n    for i = 3, #s do\n        local current_char = s:sub(i, i)\n\
    \        if current_char == last_char or current_char == second_last_char then\n\
    \            return false\n        end\n        second_last_char = last_char\n\
    \        last_char = current_char\n    end\n    return true\nend", "  -- your\
    \ code here\nend", "    -- your code here\n    return false\nend", "  if #s <\
    \ 3 then\n    return false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i +\
    \ 2):match(\"(.)%1\") then\n      return false\n    end\n  end\n  return true\n\
    end", "    local len = string.len(s)\n    if len < 3 then\n        return false\n\
    \    end\n    for i = 1, len - 2 do\n        if s[i] == s[i + 1] or s[i] == s[i\
    \ + 2] or s[i + 1] == s[i + 2] then\n            return false\n        end\n \
    \   end\n    return true\nend", "    local n = #s\n    if n < 3 then\n       \
    \ return false\n    end\n    for i = 1, n - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "    -- your code here\n    if #s < 3 then return false\
    \ end\n    for i = 1, #s - 2 do\n        if s:sub(i, i + 2):match(\"(.)%1\") then\
    \ return false end\n    end\n    return true\nend", "  if #s < 3 then\n    return\
    \ false\n  end\n  for i = 1, #s - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n      return false\n    end\n  end\n  return true\nend", " \
    \   -- your code here\n    return false\nend", "    if #s < 3 then\n        return\
    \ false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i) == s:sub(i\
    \ + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) ==\
    \ s:sub(i + 2, i + 2) then\n            return false\n        end\n    end\n \
    \   return true\nend", "  local n = #s\n  if n < 3 then\n    return false\n  end\n\
    \  local i = 1\n  while i <= n - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i +\
    \ 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i +\
    \ 2, i + 2) then\n      return false\n    end\n    i = i + 1\n  end\n  return\
    \ true\nend", "  local n = #s\n  if n < 3 then\n    return false\n  end\n  for\
    \ i = 1, n - 2 do\n    if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) ==\
    \ s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n   \
    \   return false\n    end\n  end\n  return true\nend", "    local len = #s\n \
    \   if len < 3 then\n        return false\n    end\n    for i = 1, len - 2 do\n\
    \        if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2,\
    \ i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then\n            return\
    \ false\n        end\n    end\n    return true\nend", "    if #s < 3 then\n  \
    \      return false\n    end\n    for i = 1, #s - 2 do\n        if s:sub(i, i)\
    \ == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1,\
    \ i + 1) == s:sub(i + 2, i + 2) then\n            return false\n        end\n\
    \    end\n    return true\nend", "  local len = s:len()\n  if len < 3 then\n \
    \   return false\n  end\n  local i = 1\n  while i <= len - 2 do\n    if s:sub(i,\
    \ i + 2):match('(.)%1') then\n      return false\n    end\n    i = i + 1\n  end\n\
    \  return true\nend", "    local len = #s\n    if len < 3 then\n        return\
    \ false\n    end\n    for i = 1, len - 2 do\n        if s:sub(i, i + 2):match(\"\
    (.)%1%1\") then\n            return false\n        end\n    end\n    return true\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

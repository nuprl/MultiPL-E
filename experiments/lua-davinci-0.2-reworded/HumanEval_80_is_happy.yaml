---
name: HumanEval_80_is_happy
language: lua
prompt: |
  -- You are given a string s.
  -- Your task is to check if the string is haplua or not.
  -- A string is haplua if its length is at least 3 and every 3 consecutive letters are distinct
  -- For example:
  -- >>> is_happy(a)
  -- false
  -- >>> is_happy(aa)
  -- false
  -- >>> is_happy(abcd)
  -- true
  -- >>> is_happy(aabb)
  -- false
  -- >>> is_happy(adb)
  -- true
  -- >>> is_happy(xyy)
  -- false
  local function is_happy(s)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = is_happy
      lu.assertEquals(candidate('a'), false)
      lu.assertEquals(candidate('aa'), false)
      lu.assertEquals(candidate('abcd'), true)
      lu.assertEquals(candidate('aabb'), false)
      lu.assertEquals(candidate('adb'), true)
      lu.assertEquals(candidate('xyy'), false)
      lu.assertEquals(candidate('iopaxpoi'), true)
      lu.assertEquals(candidate('iopaxioi'), false)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      local c1 = s:sub(1,1)
      local c2 = s:sub(2,2)
      local c3 = s:sub(3,3)
      if c1 == c2 or c2 == c3 or c1 == c3 then
          return false
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      local i = 1
      while i < #s do
          if s:sub(i, i + 2):match('(.)%1') then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
      local n = #s
      if n < 3 then
          return false
      end
      for i = 1, n - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      local i = 1
      while i <= len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
      local n = #s
      if n < 3 then
          return false
      end
      for i = 1, n - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
      -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- "\tif #s < 3 then\n\t\treturn false\n\tend\n\tfor i = 1, #s - 2 do\n\t\tif s:sub(i,
  i + 2):match(\"(.)%1\") then\n\t\t\treturn false\n\t\tend\n\tend\n\treturn true\nend"
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
    local len = #s
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match('(.)%1%1') then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
    local len = #s
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      local last = s:sub(1, 3)
      for i = 4, #s do
          local cur = s:sub(i - 2, i)
          if cur == last then
              return false
          end
          last = cur
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match('(.)%1') then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    local n = s:len()
    if n < 3 then
      return false
    end
    for i = 1, n - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          local a, b, c = s:sub(i, i), s:sub(i + 1, i + 1), s:sub(i + 2, i + 2)
          if a == b or b == c or a == c then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      -- your code here
  end
- |2-
      -- your code here
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      -- Write your code here
      return false
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1%1") then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      local i = 1
      while i <= len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      local i = 1
      while i < len do
          if s[i] == s[i+1] or s[i] == s[i+2] or s[i+1] == s[i+2] then
              return false
          end
          i = i + 3
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      -- your code here
      return false
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      local i = 1
      while i < len do
          if s:sub(i, i + 2) == s:sub(i + 1, i + 3) then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
    local len = string.len(s)
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
        return false
      end
    end
    return true
  end
- |2-
      -- your code here
  end
- |2-
    return false
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 3, #s do
          if s:sub(i - 2, i) == s:sub(i - 1, i + 1) then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if s:len() < 3 then
      return false
    end
    for i = 1, s:len() - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    local len = string.len(s)
    if len < 3 then
      return false
    end
    local prev = string.sub(s, 1, 1)
    local curr = string.sub(s, 2, 2)
    for i = 3, len do
      local next = string.sub(s, i, i)
      if prev == curr or curr == next or prev == next then
        return false
      end
      prev = curr
      curr = next
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    local last = s:sub(1, 3)
    for i = 4, #s do
      local cur = s:sub(i - 2, i)
      if cur == last then
        return false
      end
      last = cur
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      local a, b, c = s:sub(1, 1), s:sub(2, 2), s:sub(3, 3)
      if a == b or b == c or a == c then
          return false
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      local i = 1
      while i <= len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
      return false
  end
- |2-
    if #s < 3 then
      return false
    end
    local i = 1
    while i < #s do
      if s:sub(i, i+2):match("(.)%1%1") then
        return false
      end
      i = i + 1
    end
    return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
      -- your code here
      return false
  end
- |2-
      -- your code here
  end
- |2-
      return false
  end
- |2-
    -- your code here
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    local last_char = s:sub(1, 1)
    local last_last_char = s:sub(2, 2)
    for i = 3, #s do
      local char = s:sub(i, i)
      if char == last_char or char == last_last_char then
        return false
      end
      last_last_char = last_char
      last_char = char
    end
    return true
  end
- |2-
    local len = string.len(s)
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i + 2):match('(.)%1') then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1%1") then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
      -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
    local len = string.len(s)
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
    local len = string.len(s)
    if len < 3 then
      return false
    end
    local i = 1
    while i <= len - 2 do
      if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
        return false
      end
      i = i + 1
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match('(.)%1') then
        return false
      end
    end
    return true
  end
- |2-
      if s:len() < 3 then
          return false
      end
      for i = 1, s:len() - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      local i = 1
      while i <= len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    local len = #s
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
    if #s < 3 then return false end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      -- your code here
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
    local len = #s
    if len < 3 then
      return false
    end
    local a = s:sub(1, 1)
    local b = s:sub(2, 2)
    local c = s:sub(3, 3)
    if a == b or b == c or a == c then
      return false
    end
    for i = 4, len do
      a = b
      b = c
      c = s:sub(i, i)
      if a == b or b == c or a == c then
        return false
      end
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match('(.)%1') then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
    if #s < 3 then
      return false
    end
    local last = s:sub(1, 3)
    for i = 4, #s do
      local c = s:sub(i, i)
      if c == last:sub(1, 1) or c == last:sub(2, 2) or c == last:sub(3, 3) then
        return false
      end
      last = last:sub(2, 3) .. c
    end
    return true
  end
- |2-
    -- your code here
  end
- |2-
      -- your code here
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
    local n = #s
    if n < 3 then
      return false
    end
    local i = 1
    while i <= n - 2 do
      if s:sub(i, i + 2):match("(.)%1%1") then
        return false
      end
      i = i + 1
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
      -- your code here
      local len = string.len(s)
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
  end
- |2-
    -- your code here
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    local n = #s
    if n < 3 then
      return false
    end
    local prev = s:sub(1, 3)
    for i = 4, n do
      local curr = s:sub(i - 2, i)
      if prev == curr then
        return false
      end
      prev = curr
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      local n = #s
      if n < 3 then
          return false
      end
      for i = 1, n - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    -- your code here
    local len = string.len(s)
    if len < 3 then
      return false
    end
    for i = 1, len - 2 do
      if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
        return false
      end
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    local i = 1
    while i <= #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
      i = i + 1
    end
    return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      local n = #s
      if n < 3 then
          return false
      end
      for i = 1, n - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
      return false
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then
              return false
          end
      end
      return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      local last = s:sub(1, 3)
      for i = 4, #s do
          local cur = s:sub(i - 2, i)
          if cur == last then
              return false
          end
          last = cur
      end
      return true
  end
- |2-
      local n = string.len(s)
      if n < 3 then
          return false
      end
      for i = 1, n - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
      local len = string.len(s)
      if len < 3 then
          return false
      end
      local i = 1
      while i <= len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
          i = i + 1
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
    -- your code here
    return false
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      local last_char = s:sub(1, 1)
      local second_last_char = s:sub(2, 2)
      for i = 3, #s do
          local current_char = s:sub(i, i)
          if current_char == last_char or current_char == second_last_char then
              return false
          end
          second_last_char = last_char
          last_char = current_char
      end
      return true
  end
- |2-
    -- your code here
  end
- |2-
      -- your code here
      return false
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i + 2):match("(.)%1") then
        return false
      end
    end
    return true
  end
- |2-
      local len = string.len(s)
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2] then
              return false
          end
      end
      return true
  end
- |2-
      local n = #s
      if n < 3 then
          return false
      end
      for i = 1, n - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      -- your code here
      if #s < 3 then return false end
      for i = 1, #s - 2 do
          if s:sub(i, i + 2):match("(.)%1") then return false end
      end
      return true
  end
- |2-
    if #s < 3 then
      return false
    end
    for i = 1, #s - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      -- your code here
      return false
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    local n = #s
    if n < 3 then
      return false
    end
    local i = 1
    while i <= n - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
      i = i + 1
    end
    return true
  end
- |2-
    local n = #s
    if n < 3 then
      return false
    end
    for i = 1, n - 2 do
      if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
        return false
      end
    end
    return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
      if #s < 3 then
          return false
      end
      for i = 1, #s - 2 do
          if s:sub(i, i) == s:sub(i + 1, i + 1) or s:sub(i, i) == s:sub(i + 2, i + 2) or s:sub(i + 1, i + 1) == s:sub(i + 2, i + 2) then
              return false
          end
      end
      return true
  end
- |2-
    local len = s:len()
    if len < 3 then
      return false
    end
    local i = 1
    while i <= len - 2 do
      if s:sub(i, i + 2):match('(.)%1') then
        return false
      end
      i = i + 1
    end
    return true
  end
- |2-
      local len = #s
      if len < 3 then
          return false
      end
      for i = 1, len - 2 do
          if s:sub(i, i + 2):match("(.)%1%1") then
              return false
          end
      end
      return true
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

name: HumanEval_39_prime_fib
language: lua
prompt: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
  -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
  \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n  \
  \  lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n   \
  \ lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n  \
  \  lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
  \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10), 433494437)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local i = 1\n    local j = 1\n    local k = 0\n    local count\
    \ = 0\n    while count < n do\n        k = i + j\n        i = j\n        j = k\n\
    \        if is_prime(k) then\n            count = count + 1\n        end\n   \
    \ end\n    return k\nend", "    local fib_n = fib(n)\n    while not is_prime(fib_n)\
    \ do\n        n = n + 1\n        fib_n = fib(n)\n    end\n    return fib_n\nend",
  "    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n       \
    \ local t = i + j\n        i = j\n        j = t\n        if is_prime(t) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend", "\tlocal i =\
    \ 1\n\tlocal j = 1\n\tlocal k = 1\n\twhile k < n do\n\t\ti, j = j, i + j\n\t\t\
    if is_prime(j) then\n\t\t\tk = k + 1\n\t\tend\n\tend\n\treturn j\nend", "    local\
    \ i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n        i, j =\
    \ j, i + j\n        if is_prime(j) then\n            k = k + 1\n        end\n\
    \    end\n    return j\nend", "    local fib = fibonacci(n)\n    while not is_prime(fib)\
    \ do\n        fib = fibonacci(n)\n        n = n + 1\n    end\n    return fib\n\
    end", "    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n\
    \        i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n\
    \        end\n    end\n    return j\nend", "\tlocal i = 1\n\tlocal j = 1\n\tlocal\
    \ k = 1\n\tlocal count = 0\n\twhile count < n do\n\t\tk = i + j\n\t\ti = j\n\t\
    \tj = k\n\t\tif is_prime(k) then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\t\
    return k\nend", "  local a, b = 2, 3\n  local i = 2\n  while i < n do\n    a,\
    \ b = b, a + b\n    if is_prime(b) then\n      i = i + 1\n    end\n  end\n  return\
    \ b\nend", "  local i = 1\n  local j = 1\n  local k = 1\n  local count = 0\n \
    \ while count < n do\n    k = i + j\n    if is_prime(k) then\n      count = count\
    \ + 1\n    end\n    i = j\n    j = k\n  end\n  return k\nend", "    local i =\
    \ 1\n    local j = 1\n    local k = 1\n    while k < n do\n        i, j = j, i\
    \ + j\n        if is_prime(j) then\n            k = k + 1\n        end\n    end\n\
    \    return j\nend", "    local i = 1\n    local j = 1\n    local k = 1\n    while\
    \ k < n do\n        local t = i + j\n        i = j\n        j = t\n        if\
    \ is_prime(t) then\n            k = k + 1\n        end\n    end\n    return j\n\
    end", "    local i = 1\n    local j = 2\n    local k = 3\n    local count = 3\n\
    \    while count < n do\n        i = j\n        j = k\n        k = i + j\n   \
    \     if is_prime(k) then\n            count = count + 1\n        end\n    end\n\
    \    return k\nend", "    local i = 1\n    local j = 1\n    local k = 1\n    while\
    \ k < n do\n        i, j = j, i + j\n        if is_prime(j) then\n           \
    \ k = k + 1\n        end\n    end\n    return j\nend", "    local i = 1\n    local\
    \ j = 1\n    local k = 0\n    local count = 0\n    while count < n do\n      \
    \  k = i + j\n        i = j\n        j = k\n        if is_prime(k) then\n    \
    \        count = count + 1\n        end\n    end\n    return k\nend", "    local\
    \ i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n        i, j =\
    \ j, i + j\n        if is_prime(j) then\n            k = k + 1\n        end\n\
    \    end\n    return j\nend", "    local fib = fibonacci()\n    local prime =\
    \ prime_numbers()\n    local i = 1\n    local f, p\n    while i < n do\n     \
    \   f = fib()\n        p = prime()\n        if f == p then\n            i = i\
    \ + 1\n        end\n    end\n    return f\nend", "    local i = 0\n    local f\
    \ = 0\n    local f1 = 0\n    local f2 = 1\n    while i < n do\n        f = f1\
    \ + f2\n        f1 = f2\n        f2 = f\n        if is_prime(f) then\n       \
    \     i = i + 1\n        end\n    end\n    return f\nend", "    local i = 1\n\
    \    local j = 1\n    local k = 1\n    while k < n do\n        i, j = j, i + j\n\
    \        if is_prime(j) then\n            k = k + 1\n        end\n    end\n  \
    \  return j\nend", "    local a, b = 2, 3\n    local i = 2\n    while i < n do\n\
    \        a, b = b, a + b\n        if is_prime(b) then\n            i = i + 1\n\
    \        end\n    end\n    return b\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

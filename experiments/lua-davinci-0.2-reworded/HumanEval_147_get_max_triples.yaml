---
name: HumanEval_147_get_max_triples
language: lua
prompt: "-- You are given a positive integer n. You have to create an integer table
  a of length n.\n-- For each i (1 ≤ i ≤ n), the value of a[i] = i * i - i + 1.\n--
  Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n-- and a[i]
  + a[j] + a[k] is a multiple of 3.\n-- Example :\n-- >>> get_max_triples(5)\n-- 1\n--
  Explanation: \n-- a = [1, 3, 7, 13, 21]\n-- The only valid triple is (1, 7, 13).\nlocal
  function get_max_triples(n)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = get_max_triples
      lu.assertEquals(candidate(5), 1)
      lu.assertEquals(candidate(6), 4)
      lu.assertEquals(candidate(10), 36)
      lu.assertEquals(candidate(100), 53361)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n do
          for j = i + 1, n do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if a[i] + a[j] + a[k] % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n do
      for j = i + 1, n do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n do
      for j = i + 1, n do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n do
          for j = i + 1, n do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local cnt = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            cnt = cnt + 1
          end
        end
      end
    end
    return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if a[i] + a[j] + a[k] % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n do
          for j = i + 1, n do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n do
          for j = i + 1, n do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count
  = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n
  do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  count\nend"
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal cnt
  = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n
  do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcnt = cnt + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  cnt\nend"
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n do
          for j = i + 1, n do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count
  = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n
  do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  count\nend"
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local sum = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0 then
                      sum = sum + 1
                  end
              end
          end
      end
      return sum
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local cnt = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      cnt = cnt + 1
                  end
              end
          end
      end
      return cnt
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local count = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            count = count + 1
          end
        end
      end
    end
    return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n do
          for j = i + 1, n do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
    local a = {}
    for i = 1, n do
      a[i] = i * i - i + 1
    end
    local cnt = 0
    for i = 1, n - 2 do
      for j = i + 1, n - 1 do
        for k = j + 1, n do
          if (a[i] + a[j] + a[k]) % 3 == 0 then
            cnt = cnt + 1
          end
        end
      end
    end
    return cnt
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- "\tlocal a = {}\n\tfor i = 1, n do\n\t\ta[i] = i * i - i + 1\n\tend\n\tlocal count
  = 0\n\tfor i = 1, n - 2 do\n\t\tfor j = i + 1, n - 1 do\n\t\t\tfor k = j + 1, n
  do\n\t\t\t\tif (a[i] + a[j] + a[k]) % 3 == 0 then\n\t\t\t\t\tcount = count + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  count\nend"
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
- |2-
      local a = {}
      for i = 1, n do
          a[i] = i * i - i + 1
      end
      local count = 0
      for i = 1, n - 2 do
          for j = i + 1, n - 1 do
              for k = j + 1, n do
                  if (a[i] + a[j] + a[k]) % 3 == 0 then
                      count = count + 1
                  end
              end
          end
      end
      return count
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

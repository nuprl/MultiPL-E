---
name: HumanEval_75_is_multiply_prime
language: lua
prompt: "-- Write a function that returns true if the given number is the multiplication
  of 3 prime numbers\n-- and false otherwise.\n-- Knowing that (a) is less then 100.
  \n-- Example:\n-- >>> is_multiply_prime(30)\n-- true\n-- 30 = 2 * 3 * 5\nlocal function
  is_multiply_prime(a)\n"
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = is_multiply_prime
      lu.assertEquals(candidate(5), false)
      lu.assertEquals(candidate(30), true)
      lu.assertEquals(candidate(8), true)
      lu.assertEquals(candidate(10), false)
      lu.assertEquals(candidate(125), true)
      lu.assertEquals(candidate(105), true)
      lu.assertEquals(candidate(126), false)
      lu.assertEquals(candidate(729), false)
      lu.assertEquals(candidate(891), false)
      lu.assertEquals(candidate(1001), true)
  end

  os.exit(lu.LuaUnit.run())
completions:
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  l = 1\n\tlocal m = 1\n\tlocal n = 1\n\tlocal o = 1\n\tlocal p = 1\n\tlocal q = 1\n\tlocal
  r = 1\n\tlocal s = 1\n\tlocal t = 1\n\tlocal u = 1\n\tlocal v = 1\n\tlocal w = 1\n\tlocal
  x = 1\n\tlocal y = 1\n\tlocal z = 1\n\tlocal aa = 1\n\tlocal bb = 1\n\tlocal cc
  = 1\n\tlocal dd = 1\n\tlocal ee = 1\n\tlocal ff = 1\n\tlocal gg = 1\n\tlocal hh
  = 1\n\tlocal ii = 1\n\tlocal jj = 1\n\tlocal kk = 1\n\tlocal ll = 1\n\tlocal mm
  = 1\n\tlocal nn = 1\n\tlocal oo = 1\n\tlocal pp = 1\n\tlocal qq = 1\n\tlocal rr
  = 1\n\tlocal ss = 1\n\tlocal tt = 1\n\tlocal uu = 1\n\tlocal vv = 1\n\tlocal ww
  = 1\n\tlocal xx = 1\n\tlocal yy = 1\n\tlocal zz = 1\n\tlocal aaa = 1\n\tlocal bbb
  = 1\n\tlocal ccc = 1\n\tlocal ddd = 1\n\tlocal eee = 1\n\tlocal fff = 1\n\tlocal
  ggg = 1\n\tlocal hhh = 1\n\tlocal iii = 1\n\tlocal jjj = 1\n\tlocal kkk = 1\n\tlocal
  lll = 1\n\tlocal mmm = 1\n\tlocal nnn = 1\n\tlocal ooo = 1\n\tlocal ppp = 1\n\tlocal
  qqq = 1\n\tlocal rrr = 1\n\tlocal sss = 1\n\tlocal ttt = 1\n\tlocal uuu = 1\n\tlocal
  vvv = 1\n\tlocal www = 1\n\tlocal xxx = 1\n\tlocal yyy = 1\n"
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
    local function is_prime(n)
      if n == 1 then
        return false
      end
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 1, a do
      if is_prime(i) and a % i == 0 then
        for j = 1, a do
          if is_prime(j) and a % j == 0 and i ~= j then
            for k = 1, a do
              if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                if i * j * k == a then
                  return true
                end
              end
            end
          end
        end
      end
    end
    return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local i = 1
      local j = 1
      local k = 1
      local found = false
      while i <= #primes and not found do
          j = 1
          while j <= #primes and not found do
              k = 1
              while k <= #primes and not found do
                  if primes[i] * primes[j] * primes[k] == a then
                      found = true
                  end
                  k = k + 1
              end
              j = j + 1
          end
          i = i + 1
      end
      return found
  end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  is_prime(i) and a % i == 0 then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif is_prime(j)
  and a % j == 0 and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k)
  and a % k == 0 and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn
  true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(n)
          if n < 2 then return false end
          for i = 2, n - 1 do
              if n % i == 0 then return false end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and i ~= j then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile primes[i] do\n\t\twhile primes[j] do\n\t\t\twhile primes[k]
  do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\t\tk
  = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\t\tk = 1\n\t\tend\n\t\ti = i + 1\n\t\tj
  = 1\n\tend\n\treturn result\nend"
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(a)
          if a == 1 then
              return false
          end
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if a % i == 0 and is_prime(i) then
              for j = 2, a - 1 do
                  if a % j == 0 and is_prime(j) and i ~= j then
                      for k = 2, a - 1 do
                          if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(n)\n\t\tif n < 2 then\n\t\t\treturn false\n\t\tend\n\t\tfor
  i = 2, n-1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn
  true\n\tend\n\tlocal function is_multiply_prime_helper(a, b)\n\t\tif a == 1 then\n\t\t\treturn
  true\n\t\tend\n\t\tif is_prime(a) then\n\t\t\treturn is_multiply_prime_helper(b,
  a)\n\t\tend\n\t\tfor i = 2, a-1 do\n\t\t\tif a % i == 0 and is_prime(i) then\n\t\t\t\treturn
  is_multiply_prime_helper(a/i, b*i)\n\t\t\tend\n\t\tend\n\t\treturn false\n\tend\n\treturn
  is_multiply_prime_helper(a, 1)\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local i = 1
      local j = 1
      local k = 1
      local result = false
      while i <= #primes do
          while j <= #primes do
              while k <= #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
                  k = k + 1
              end
              j = j + 1
          end
          i = i + 1
      end
      return result
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and i * j < a then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and i * j * k == a then
                              return true
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
    for i = 1, #primes do
      for j = 1, #primes do
        for k = 1, #primes do
          if primes[i] * primes[j] * primes[k] == a then
            return true
          end
        end
      end
    end
    return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal function is_prime(a)\n\t\tif a == 1 then\n\t\t\treturn false\n\t\tend\n\t\tfor
  i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn
  true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif is_prime(i) and a % i == 0 then\n\t\t\tfor
  j = 2, a - 1 do\n\t\t\t\tif is_prime(j) and a % j == 0 and i ~= j then\n\t\t\t\t\tfor
  k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k) and a % k == 0 and i ~= k and j ~= k
  then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  is_prime(i) and a % i == 0 then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif is_prime(j)
  and a % j == 0 and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k)
  and a % k == 0 and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn
  true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes
  do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] ==
  a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local function is_prime(a)
          for i = 1, #primes do
              if a == primes[i] then
                  return true
              end
          end
          return false
      end
      for i = 1, #primes do
          if a % primes[i] == 0 then
              if is_prime(a / primes[i]) then
                  return true
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal is_multiply = false\n\tfor i = 1, #primes
  do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i]
  * primes[j] * primes[k] == a then\n\t\t\t\t\tis_multiply = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  is_multiply\nend"
- |2-
    local function is_prime(n)
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 2, a - 1 do
      if is_prime(i) and a % i == 0 then
        for j = 2, a - 1 do
          if is_prime(j) and a % j == 0 and i ~= j then
            for k = 2, a - 1 do
              if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                return true
              end
            end
          end
        end
      end
    end
    return false
  end
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local is_multiply = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      is_multiply = true
                  end
              end
          end
      end
      return is_multiply
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  flag = false\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k =
  1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tflag
  = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn flag\nend"
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if a % i == 0 and is_prime(i) then
              for j = 2, a - 1 do
                  if a % j == 0 and is_prime(j) and i ~= j then
                      for k = 2, a - 1 do
                          if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local function is_prime(n)
          if n < 2 then return false end
          for i = 2, n - 1 do
              if n % i == 0 then return false end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and i ~= j then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
    local function is_prime(n)
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 2, a - 1 do
      if a % i == 0 and is_prime(i) then
        for j = 2, a - 1 do
          if a % j == 0 and is_prime(j) and i ~= j then
            for k = 2, a - 1 do
              if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                if i * j * k == a then
                  return true
                end
              end
            end
          end
        end
      end
    end
    return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile i <= #primes do\n\t\twhile j <= #primes do\n\t\t\twhile
  k <= #primes do\n\t\t\t\tif a == primes[i] * primes[j] * primes[k] then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile i <= #primes do\n\t\twhile j <= #primes do\n\t\t\twhile
  k <= #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\twhile
  primes[i] < a do\n\t\twhile primes[j] < a do\n\t\t\twhile primes[k] < a do\n\t\t\t\tif
  primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\t\tk
  = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile i <= #primes do\n\t\twhile j <= #primes do\n\t\t\twhile
  k <= #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  is_multiply = false\n\twhile primes[i] do\n\t\twhile primes[j] do\n\t\t\twhile primes[k]
  do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tis_multiply
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\t\tk = 1\n\t\tend\n\t\ti
  = i + 1\n\t\tj = 1\n\tend\n\treturn is_multiply\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          if a % primes[i] == 0 then
              result = true
          end
      end
      return result
  end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
    local function is_prime(a)
      for i = 2, a - 1 do
        if a % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 2, a - 1 do
      if a % i == 0 and is_prime(i) then
        for j = 2, a - 1 do
          if a % j == 0 and is_prime(j) and i ~= j then
            for k = 2, a - 1 do
              if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                return true
              end
            end
          end
        end
      end
    end
    return false
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local b = a
      local c = 0
      for i = 2, b do
          if b % i == 0 then
              b = b / i
              c = c + 1
              if c == 3 then
                  return true
              end
          end
      end
      return false
  end
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(num)
          for i = 2, num - 1 do
              if num % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  found = false\n\twhile primes[i] < a do\n\t\twhile primes[j] < a do\n\t\t\twhile
  primes[k] < a do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tfound
  = true\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j
  + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn found\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local function is_multiply_prime_helper(a, b)
          if a == 1 then
              return true
          end
          if is_prime(a) then
              return true
          end
          for i = 2, a - 1 do
              if a % i == 0 and is_prime(i) then
                  return is_multiply_prime_helper(a / i, b + 1)
              end
          end
          return false
      end
      return is_multiply_prime_helper(a, 0)
  end
- |2-
    local function is_prime(n)
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 2, a - 1 do
      if is_prime(i) and a % i == 0 then
        for j = 2, a - 1 do
          if is_prime(j) and a % j == 0 and i ~= j then
            for k = 2, a - 1 do
              if is_prime(k) and a % k == 0 and k ~= i and k ~= j then
                return true
              end
            end
          end
        end
      end
    end
    return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif a == primes[i] * primes[j]
  * primes[k] then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tif a == 1 then\n\t\treturn false\n\tend\n\tlocal primes = {}\n\tlocal i = 2\n\twhile
  a > 1 do\n\t\tif a % i == 0 then\n\t\t\ttable.insert(primes, i)\n\t\t\ta = a / i\n\t\telse\n\t\t\ti
  = i + 1\n\t\tend\n\tend\n\treturn #primes == 3\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes
  do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] ==
  a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes
  do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] ==
  a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #prime_numbers do
          for j = 1, #prime_numbers do
              for k = 1, #prime_numbers do
                  if prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal is_multiply = false\n\tfor i = 1, #primes
  do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i]
  * primes[j] * primes[k] == a then\n\t\t\t\t\tis_multiply = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  is_multiply\nend"
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n-1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tlocal function is_multiply_prime_aux(a,
  b)\n\t\tif a == 1 then\n\t\t\treturn true\n\t\telseif is_prime(a) then\n\t\t\treturn
  is_multiply_prime_aux(b, b)\n\t\telse\n\t\t\tfor i = 2, a-1 do\n\t\t\t\tif a % i
  == 0 and is_prime(i) then\n\t\t\t\t\treturn is_multiply_prime_aux(a/i, b)\n\t\t\t\tend\n\t\t\tend\n\t\t\treturn
  false\n\t\tend\n\tend\n\treturn is_multiply_prime_aux(a, a)\nend"
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if a % i == 0 and is_prime(i) then
              for j = 2, a - 1 do
                  if a % j == 0 and is_prime(j) and i ~= j then
                      for k = 2, a - 1 do
                          if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                              return true
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n-1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a-1 do\n\t\tif a
  % i == 0 then\n\t\t\tif is_prime(i) then\n\t\t\t\tfor j = 2, a-1 do\n\t\t\t\t\tif
  a % j == 0 then\n\t\t\t\t\t\tif is_prime(j) then\n\t\t\t\t\t\t\tfor k = 2, a-1 do\n\t\t\t\t\t\t\t\tif
  a % k == 0 then\n\t\t\t\t\t\t\t\t\tif is_prime(k) then\n\t\t\t\t\t\t\t\t\t\tif i
  * j * k == a then\n\t\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local function is_prime(x)
          for i = 2, x - 1 do
              if x % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal function is_prime(n)\n\t\tif n == 1 then\n\t\t\treturn false\n\t\tend\n\t\tfor
  i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn
  true\n\tend\n\tlocal function is_multiply_prime(a)\n\t\tlocal function is_prime(n)\n\t\t\tif
  n == 1 then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\tfor i = 2, n - 1 do\n\t\t\t\tif
  n % i == 0 then\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\t\treturn true\n\t\tend\n\t\tlocal
  function is_multiply_prime(a)\n\t\t\tlocal function is_prime(n)\n\t\t\t\tif n ==
  1 then\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\t\tfor i = 2, n - 1 do\n\t\t\t\t\tif
  n % i == 0 then\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\treturn
  true\n\t\t\tend\n\t\t\tlocal function is_multiply_prime(a)\n\t\t\t\tlocal function
  is_prime(n)\n\t\t\t\t\tif n == 1 then\n\t\t\t\t\t\treturn false\n\t\t\t\t\tend\n\t\t\t\t\tfor
  i = 2, n - 1 do\n\t\t\t\t\t\tif n % i == 0 then\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\t\treturn
  true\n\t\t\t\tend\n\t\t\t\tlocal function is_multiply_prime(a)\n\t\t\t\t\tlocal
  function is_prime(n)\n\t\t\t\t\t\tif n == 1 then\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\tend\n\t\t\t\t\t\tfor
  i = 2, n - 1 do\n\t\t\t\t\t\t\tif n % i == 0 then\n\t\t\t\t\t\t\t\t"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal function is_prime(a)\n\t\tfor i = 1, #primes
  do\n\t\t\tif a == primes[i] then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn
  false\n\tend\n\tlocal function is_multiply_prime_rec(a, i)\n\t\tif a == 1 then\n\t\t\treturn
  true\n\t\tend\n\t\tif a % primes[i] == 0 then\n\t\t\treturn is_multiply_prime_rec(a
  / primes[i], i)\n\t\telse\n\t\t\treturn is_multiply_prime_rec(a, i + 1)\n\t\tend\n\tend\n\treturn
  is_multiply_prime_rec(a, 1)\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal prime_factors = {}\n\tlocal i = 1\n\twhile
  a > 1 do\n\t\tif a % primes[i] == 0 then\n\t\t\ttable.insert(prime_factors, primes[i])\n\t\t\ta
  = a / primes[i]\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\tif #prime_factors
  == 3 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal function is_prime(n)\n\t\tif n < 2 then\n\t\t\treturn false\n\t\tend\n\t\tfor
  i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn
  true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif is_prime(i) and a % i == 0 then\n\t\t\tfor
  j = 2, a - 1 do\n\t\t\t\tif is_prime(j) and a % j == 0 and i ~= j then\n\t\t\t\t\tfor
  k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k) and a % k == 0 and i ~= k and j ~= k
  then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal function is_prime(a)\n\t\tfor i = 1, #primes
  do\n\t\t\tif a == primes[i] then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\t\treturn
  false\n\tend\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k =
  1, #primes do\n\t\t\t\tif a == primes[i] * primes[j] * primes[k] then\n\t\t\t\t\treturn
  true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  found = false\n\twhile i <= #primes and not found do\n\t\tj = 1\n\t\twhile j <=
  #primes and not found do\n\t\t\tk = 1\n\t\t\twhile k <= #primes and not found do\n\t\t\t\tif
  a == primes[i] * primes[j] * primes[k] then\n\t\t\t\t\tfound = true\n\t\t\t\tend\n\t\t\t\tk
  = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn found\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes
  do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] ==
  a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  is_prime(i) and a % i == 0 then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif is_prime(j)
  and a % j == 0 and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k)
  and a % k == 0 and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn
  true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile i <= #primes do\n\t\twhile j <= #primes do\n\t\t\twhile
  k <= #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile primes[i] <= a do\n\t\tj = 1\n\t\twhile primes[j] <= a do\n\t\t\tk
  = 1\n\t\t\twhile primes[k] <= a do\n\t\t\t\tif primes[i] * primes[j] * primes[k]
  == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj
  = j + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn result\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
    local function is_prime(n)
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 2, a - 1 do
      if is_prime(i) and a % i == 0 then
        for j = 2, a - 1 do
          if is_prime(j) and a % j == 0 and i ~= j then
            for k = 2, a - 1 do
              if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                if i * j * k == a then
                  return true
                end
              end
            end
          end
        end
      end
    end
    return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal primes_count = #primes\n\tlocal i = 1\n\tlocal
  result = false\n\twhile i <= primes_count do\n\t\tif a % primes[i] == 0 then\n\t\t\ta
  = a / primes[i]\n\t\t\tif a == 1 then\n\t\t\t\tresult = true\n\t\t\t\tbreak\n\t\t\tend\n\t\telse\n\t\t\ti
  = i + 1\n\t\tend\n\tend\n\treturn result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if a % i == 0 and is_prime(i) then
              for j = 2, a - 1 do
                  if a % j == 0 and is_prime(j) and i ~= j then
                      for k = 2, a - 1 do
                          if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
    local result = false
    for i = 1, #primes do
      for j = 1, #primes do
        for k = 1, #primes do
          if primes[i] * primes[j] * primes[k] == a then
            result = true
          end
        end
      end
    end
    return result
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tlocal function is_multiply_prime_aux(a,
  b)\n\t\tif a == 1 then\n\t\t\treturn true\n\t\telseif is_prime(a) and is_prime(b)
  then\n\t\t\treturn true\n\t\telseif is_prime(a) and is_multiply_prime_aux(a / b,
  b) then\n\t\t\treturn true\n\t\telseif is_prime(b) and is_multiply_prime_aux(a,
  b + 1) then\n\t\t\treturn true\n\t\telse\n\t\t\treturn is_multiply_prime_aux(a,
  b + 1)\n\t\tend\n\tend\n\treturn is_multiply_prime_aux(a, 2)\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes
  do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] ==
  a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
    local function is_prime(a)
      if a == 1 then
        return false
      end
      for i = 2, a - 1 do
        if a % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 1, a do
      if is_prime(i) then
        for j = 1, a do
          if is_prime(j) then
            for k = 1, a do
              if is_prime(k) then
                if i * j * k == a then
                  return true
                end
              end
            end
          end
        end
      end
    end
    return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n-1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tlocal function is_multiply_prime_aux(a,
  b)\n\t\tif a == 1 then\n\t\t\treturn true\n\t\telseif is_prime(a) then\n\t\t\treturn
  is_multiply_prime_aux(b, b)\n\t\telse\n\t\t\tfor i = 2, a-1 do\n\t\t\t\tif a % i
  == 0 and is_prime(i) then\n\t\t\t\t\treturn is_multiply_prime_aux(a/i, b)\n\t\t\t\tend\n\t\t\tend\n\t\t\treturn
  false\n\t\tend\n\tend\n\treturn is_multiply_prime_aux(a, a)\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tlocal i = 1\n\twhile
  primes[i] <= a do\n\t\tif a % primes[i] == 0 then\n\t\t\ta = a / primes[i]\n\t\t\tif
  a == 1 then\n\t\t\t\tresult = true\n\t\t\tend\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local is_prime = function(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and i * j < a then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and i * j * k == a then
                              return true
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if a == primes[i] * primes[j] * primes[k] then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      local function is_multiply_prime_helper(a, b)
          if a == 1 then
              return true
          end
          if is_prime(a) then
              return is_multiply_prime_helper(b, a)
          end
          for i = 2, a - 1 do
              if a % i == 0 and is_prime(i) then
                  return is_multiply_prime_helper(a / i, b * i)
              end
          end
          return false
      end
      return is_multiply_prime_helper(a, 1)
  end
- |2-
      local function is_prime(n)
          if n <= 1 then
              return false
          elseif n <= 3 then
              return true
          elseif n % 2 == 0 or n % 3 == 0 then
              return false
          end
          local i = 5
          while i * i <= n do
              if n % i == 0 or n % (i + 2) == 0 then
                  return false
              end
              i = i + 6
          end
          return true
      end
      local function is_multiply_prime_helper(a, b, c)
          if a == b * c then
              return true
          elseif b > a then
              return false
          elseif is_prime(b) and is_prime(c) then
              return is_multiply_prime_helper(a, b + 1, c) or is_multiply_prime_helper(a, b, c + 1)
          else
              return is_multiply_prime_helper(a, b + 1, c)
          end
      end
      return is_multiply_prime_helper(a, 2, 2)
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local prime_factors = {}
      local i = 1
      while a > 1 do
          if a % primes[i] == 0 then
              table.insert(prime_factors, primes[i])
              a = a / primes[i]
          else
              i = i + 1
          end
      end
      if #prime_factors == 3 then
          return true
      else
          return false
      end
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local primes = {}
      for i = 1, a do
          if is_prime(i) then
              table.insert(primes, i)
          end
      end
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(n)\n\t\tif n <= 1 then\n\t\t\treturn false\n\t\telseif
  n == 2 then\n\t\t\treturn true\n\t\telseif n % 2 == 0 then\n\t\t\treturn false\n\t\telse\n\t\t\tfor
  i = 3, math.sqrt(n), 2 do\n\t\t\t\tif n % i == 0 then\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\tend\n\t\t\treturn
  true\n\t\tend\n\tend\n\tlocal function is_multiply_prime(a)\n\t\tif a <= 1 then\n\t\t\treturn
  false\n\t\telseif a == 2 then\n\t\t\treturn true\n\t\telseif a % 2 == 0 then\n\t\t\treturn
  false\n\t\telse\n\t\t\tfor i = 3, math.sqrt(a), 2 do\n\t\t\t\tif a % i == 0 then\n\t\t\t\t\tlocal
  b = a / i\n\t\t\t\t\tif is_prime(i) and is_prime(b) then\n\t\t\t\t\t\treturn true\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\t\treturn
  false\n\t\tend\n\tend\n\treturn is_multiply_prime(a)\nend"
- |2-
      local function is_prime(a)
          if a == 1 then
              return false
          end
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and i ~= j then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tlocal function is_multiply_prime(a)\n\t\tfor
  i = 2, a - 1 do\n\t\t\tif a % i == 0 and is_prime(i) then\n\t\t\t\tfor j = 2, a
  - 1 do\n\t\t\t\t\tif a % j == 0 and is_prime(j) and i ~= j then\n\t\t\t\t\t\tfor
  k = 2, a - 1 do\n\t\t\t\t\t\t\tif a % k == 0 and is_prime(k) and i ~= k and j ~=
  k then\n\t\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\treturn
  false\n\tend\n\treturn is_multiply_prime(a)\nend"
- |2-
    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
    local i = 1
    local j = 1
    local k = 1
    local found = false
    while primes[i] < a do
      while primes[j] < a do
        while primes[k] < a do
          if primes[i] * primes[j] * primes[k] == a then
            found = true
            break
          end
          k = k + 1
        end
        if found then
          break
        end
        j = j + 1
        k = 1
      end
      if found then
        break
      end
      i = i + 1
      j = 1
      k = 1
    end
    return found
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i, v in ipairs(primes)
  do\n\t\tif a % v == 0 then\n\t\t\tresult = true\n\t\t\tbreak\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif a == primes[i] * primes[j]
  * primes[k] then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif a == primes[i] * primes[j]
  * primes[k] then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
    local i = 1
    while primes[i] <= a do
      local j = 1
      while primes[j] <= a do
        local k = 1
        while primes[k] <= a do
          if primes[i] * primes[j] * primes[k] == a then
            return true
          end
          k = k + 1
        end
        j = j + 1
      end
      i = i + 1
    end
    return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tfor i = 1, #primes do\n\t\tfor j = 1, #primes
  do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] ==
  a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local function is_prime(a)
          if a == 1 then
              return false
          end
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if a % i == 0 and is_prime(i) then
              for j = 2, a - 1 do
                  if a % j == 0 and is_prime(j) and a % (i * j) == 0 and is_prime(a / (i * j)) then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {}\n\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif
  n % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor
  i = 2, a - 1 do\n\t\tif is_prime(i) then\n\t\t\ttable.insert(primes, i)\n\t\tend\n\tend\n\tfor
  i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif
  primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #prime_numbers do
          for j = 1, #prime_numbers do
              for k = 1, #prime_numbers do
                  if a == prime_numbers[i] * prime_numbers[j] * prime_numbers[k] then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  is_prime(i) and a % i == 0 then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif is_prime(j)
  and a % j == 0 and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k)
  and a % k == 0 and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn
  true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile i <= #primes do\n\t\twhile j <= #primes do\n\t\t\twhile
  k <= #primes do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- "\tlocal prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,
  53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #prime_numbers
  do\n\t\tfor j = 1, #prime_numbers do\n\t\t\tfor k = 1, #prime_numbers do\n\t\t\t\tif
  prime_numbers[i] * prime_numbers[j] * prime_numbers[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn result\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local n = 1
      local result = false
      while n <= #primes do
          local i = 1
          while i <= #primes do
              local j = 1
              while j <= #primes do
                  if primes[n] * primes[i] * primes[j] == a then
                      result = true
                  end
                  j = j + 1
              end
              i = i + 1
          end
          n = n + 1
      end
      return result
  end
- |2-
    local function is_prime(n)
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
- |2-
      local function is_prime(n)
          if n == 1 then
              return false
          end
          for i = 2, math.sqrt(n) do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a do
          if is_prime(i) and a % i == 0 then
              for j = 2, a do
                  if is_prime(j) and a % j == 0 and i ~= j then
                      for k = 2, a do
                          if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n-1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a-1 do\n\t\tif a
  % i == 0 then\n\t\t\tif is_prime(i) then\n\t\t\t\tfor j = 2, a-1 do\n\t\t\t\t\tif
  a % j == 0 then\n\t\t\t\t\t\tif is_prime(j) then\n\t\t\t\t\t\t\tfor k = 2, a-1 do\n\t\t\t\t\t\t\t\tif
  a % k == 0 then\n\t\t\t\t\t\t\t\t\tif is_prime(k) then\n\t\t\t\t\t\t\t\t\t\tif i
  * j * k == a then\n\t\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- "\tlocal function is_prime(a)\n\t\tif a == 1 then\n\t\t\treturn false\n\t\tend\n\t\tfor
  i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn
  true\n\tend\n\tlocal function is_multiply_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif
  is_prime(i) and a % i == 0 then\n\t\t\t\tfor j = 2, a - 1 do\n\t\t\t\t\tif is_prime(j)
  and a % j == 0 and i * j < a then\n\t\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\t\tif
  is_prime(k) and a % k == 0 and i * j * k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\treturn
  false\n\tend\n\treturn is_multiply_prime(a)\nend"
- |2-
    local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
    local result = false
    for i = 1, #primes do
      for j = 1, #primes do
        for k = 1, #primes do
          if primes[i] * primes[j] * primes[k] == a then
            result = true
          end
        end
      end
    end
    return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tfor
  j = 2, a - 1 do\n\t\t\tfor k = 2, a - 1 do\n\t\t\t\tif i * j * k == a and is_prime(i)
  and is_prime(j) and is_prime(k) then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local i = 1
      local j = 1
      local k = 1
      local result = false
      while primes[i] < a do
          while primes[j] < a do
              while primes[k] < a do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
                  k = k + 1
              end
              j = j + 1
          end
          i = i + 1
      end
      return result
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile primes[i] <= a do\n\t\twhile primes[j] <= a do\n\t\t\twhile
  primes[k] <= a do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  result = false\n\twhile primes[i] < a do\n\t\twhile primes[j] < a do\n\t\t\twhile
  primes[k] < a do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tresult
  = true\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn result\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal is_prime = false\n\tfor i = 1, #primes
  do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i]
  * primes[j] * primes[k] == a then\n\t\t\t\t\tis_prime = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  is_prime\nend"
- |2-
    local result = false
    local primes = {}
    local i = 2
    while i < a do
      if is_prime(i) then
        table.insert(primes, i)
      end
      i = i + 1
    end
    for i = 1, #primes do
      for j = i + 1, #primes do
        for k = j + 1, #primes do
          if primes[i] * primes[j] * primes[k] == a then
            result = true
          end
        end
      end
    end
    return result
  end
- |2-
      -- your code here
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tlocal i = 1\n\twhile
  primes[i] <= a do\n\t\tif a % primes[i] == 0 then\n\t\t\tif a / primes[i] == 1 then\n\t\t\t\tresult
  = true\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\ta = a / primes[i]\n\t\t\t\ti = 1\n\t\t\tend\n\t\telse\n\t\t\ti
  = i + 1\n\t\tend\n\tend\n\treturn result\nend"
- |2-
    local function is_prime(a)
      if a == 1 then
        return false
      end
      for i = 2, a - 1 do
        if a % i == 0 then
          return false
        end
      end
      return true
    end
    for i = 2, a - 1 do
      if is_prime(i) and a % i == 0 then
        for j = 2, a - 1 do
          if is_prime(j) and a % j == 0 and i ~= j then
            for k = 2, a - 1 do
              if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                if i * j * k == a then
                  return true
                end
              end
            end
          end
        end
      end
    end
    return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local function is_prime(a)
          for i = 2, a - 1 do
              if a % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and i ~= j then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local prime_numbers = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local is_multiply_prime = false
      for i = 1, #prime_numbers do
          if a % prime_numbers[i] == 0 then
              is_multiply_prime = true
          end
      end
      return is_multiply_prime
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  is_prime(i) and a % i == 0 then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif is_prime(j)
  and a % j == 0 and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif is_prime(k)
  and a % k == 0 and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j * k == a then\n\t\t\t\t\t\t\t\treturn
  true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tif a == 1 then\n\t\treturn false\n\tend\n\tlocal primes = {2, 3, 5, 7, 11, 13,
  17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}\n\tfor
  i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif
  primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {}\n\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif
  a % i == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor
  i = 2, a - 1 do\n\t\tif is_prime(i) then\n\t\t\ttable.insert(primes, i)\n\t\tend\n\tend\n\tfor
  i = 1, #primes do\n\t\tfor j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif
  primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\treturn true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, math.sqrt(n) do\n\t\t\tif n % i ==
  0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor
  i = 2, a do\n\t\tif a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a do\n\t\t\t\tif
  a % j == 0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- |2-
      for i = 2, a - 1 do
          if a % i == 0 then
              for j = 2, a - 1 do
                  if a % j == 0 and i ~= j then
                      for k = 2, a - 1 do
                          if a % k == 0 and i ~= k and j ~= k then
                              if i * j * k == a then
                                  return true
                              end
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif primes[i] * primes[j]
  * primes[k] == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if is_prime(i) and a % i == 0 then
              for j = 2, a - 1 do
                  if is_prime(j) and a % j == 0 and a % (i * j) == 0 then
                      for k = 2, a - 1 do
                          if is_prime(k) and a % k == 0 and a % (i * j * k) == 0 then
                              return true
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
      local primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}
      local result = false
      for i = 1, #primes do
          for j = 1, #primes do
              for k = 1, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      result = true
                  end
              end
          end
      end
      return result
  end
- |2-
      local function is_prime(n)
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
- "\tlocal function is_prime(n)\n\t\tfor i = 2, n - 1 do\n\t\t\tif n % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- |2-
      local primes = {}
      for i = 2, a do
          if is_prime(i) then
              table.insert(primes, i)
          end
      end
      for i = 1, #primes do
          for j = i, #primes do
              for k = j, #primes do
                  if primes[i] * primes[j] * primes[k] == a then
                      return true
                  end
              end
          end
      end
      return false
  end
- |2-
    local function is_prime(n)
      if n == 1 then
        return false
      end
      for i = 2, n - 1 do
        if n % i == 0 then
          return false
        end
      end
      return true
    end
    local function is_multiply_prime_helper(a, b)
      if a == 1 then
        return true
      end
      if is_prime(a) then
        return is_multiply_prime_helper(b, a)
      end
      for i = 2, a - 1 do
        if a % i == 0 and is_prime(i) then
          return is_multiply_prime_helper(a / i, b * i)
        end
      end
      return false
    end
    return is_multiply_prime_helper(a, 1)
  end
- |2-
      local function is_prime(n)
          if n < 2 then
              return false
          end
          for i = 2, n - 1 do
              if n % i == 0 then
                  return false
              end
          end
          return true
      end
      for i = 2, a - 1 do
          if a % i == 0 and is_prime(i) then
              for j = 2, a - 1 do
                  if a % j == 0 and is_prime(j) and i ~= j then
                      for k = 2, a - 1 do
                          if a % k == 0 and is_prime(k) and i ~= k and j ~= k then
                              return true
                          end
                      end
                  end
              end
          end
      end
      return false
  end
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  is_multiply = false\n\twhile primes[i] ~= nil do\n\t\tj = 1\n\t\twhile primes[j]
  ~= nil do\n\t\t\tk = 1\n\t\t\twhile primes[k] ~= nil do\n\t\t\t\tif primes[i] *
  primes[j] * primes[k] == a then\n\t\t\t\t\tis_multiply = true\n\t\t\t\tend\n\t\t\t\tk
  = k + 1\n\t\t\tend\n\t\t\tj = j + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn is_multiply\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal
  flag = false\n\twhile primes[i] <= a do\n\t\twhile primes[j] <= a do\n\t\t\twhile
  primes[k] <= a do\n\t\t\t\tif primes[i] * primes[j] * primes[k] == a then\n\t\t\t\t\tflag
  = true\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\tk = k + 1\n\t\t\tend\n\t\t\tj = j
  + 1\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn flag\nend"
- "\tlocal function is_prime(a)\n\t\tfor i = 2, a - 1 do\n\t\t\tif a % i == 0 then\n\t\t\t\treturn
  false\n\t\t\tend\n\t\tend\n\t\treturn true\n\tend\n\tfor i = 2, a - 1 do\n\t\tif
  a % i == 0 and is_prime(i) then\n\t\t\tfor j = 2, a - 1 do\n\t\t\t\tif a % j ==
  0 and is_prime(j) and i ~= j then\n\t\t\t\t\tfor k = 2, a - 1 do\n\t\t\t\t\t\tif
  a % k == 0 and is_prime(k) and i ~= k and j ~= k then\n\t\t\t\t\t\t\tif i * j *
  k == a then\n\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  false\nend"
- "\tlocal primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,
  61, 67, 71, 73, 79, 83, 89, 97}\n\tlocal result = false\n\tfor i = 1, #primes do\n\t\tfor
  j = 1, #primes do\n\t\t\tfor k = 1, #primes do\n\t\t\t\tif (primes[i] * primes[j]
  * primes[k]) == a then\n\t\t\t\t\tresult = true\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\treturn
  result\nend"
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

---
name: HumanEval_24_largest_divisor
language: lua
prompt: |
  -- For a given number n, find the largest number that divides n evenly, smaller than n
  -- >>> largest_divisor(15)
  -- 5
  local function largest_divisor(n)
tests: |-
  lu = require('luaunit')

  function test_humaneval()
  local candidate = largest_divisor
      lu.assertEquals(candidate(3), 1)
      lu.assertEquals(candidate(7), 1)
      lu.assertEquals(candidate(10), 5)
      lu.assertEquals(candidate(100), 50)
      lu.assertEquals(candidate(49), 7)
  end

  os.exit(lu.LuaUnit.run())
completions:
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = math.floor(n / 2)
    while i > 1 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = math.floor(n / 2)
    while i > 1 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    local largest = 1
    for i = 2, n - 1 do
      if n % i == 0 then
        largest = i
      end
    end
    return largest
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 0
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      for i = n-1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
    for i = n-1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return nil
  end
- |2-
      for i = n-1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return nil
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local largest_divisor = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest_divisor = i
          end
      end
      return largest_divisor
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return nil
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
    for i = n-1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
    local largest = 1
    for i = 2, n - 1 do
      if n % i == 0 then
        largest = i
      end
    end
    return largest
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local divisor = 2
      while n % divisor ~= 0 do
          divisor = divisor + 1
      end
      return divisor
  end
- |2-
      local i = math.floor(n/2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    local divisor = 2
    while n % divisor ~= 0 do
      divisor = divisor + 1
    end
    return divisor
  end
- |2-
    local divisor = 2
    while n % divisor ~= 0 do
      divisor = divisor + 1
    end
    return divisor
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return nil
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      for i = n - 1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      for i = n - 1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    local d = math.floor(n/2)
    while d > 1 do
      if n % d == 0 then
        return d
      end
      d = d - 1
    end
    return 1
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    local d = n - 1
    while n % d ~= 0 do
      d = d - 1
    end
    return d
  end
- |2-
      local i = math.floor(n / 2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
    for i = n - 1, 2, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local i = math.floor(n/2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return 0
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local largest = 1
    for i = 2, n - 1 do
      if n % i == 0 then
        largest = i
      end
    end
    return largest
  end
- |2-
      local divisor = math.floor(n / 2)
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      for i = n - 1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return n
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local d = math.floor(n/2)
      while d > 1 do
          if n % d == 0 then
              return d
          end
          d = d - 1
      end
      return 1
  end
- |2-
    for i = n - 1, 2, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
    for i = n-1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 0
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 0
  end
- |2-
      local i = math.floor(n / 2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local divisor = 2
      while n % divisor ~= 0 do
          divisor = divisor + 1
      end
      return divisor
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 0
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      local divisor = math.floor(n/2)
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      for i = n - 1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return nil
  end
- |2-
    for i = math.floor(n/2), 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      for i = n - 1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
    local largest = 1
    for i = 2, n - 1 do
      if n % i == 0 then
        largest = i
      end
    end
    return largest
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
    local d = n - 1
    while n % d ~= 0 do
      d = d - 1
    end
    return d
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      for i = n-1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return nil
  end
- |2-
    local d = 2
    while d < n do
      if n % d == 0 then
        return d
      end
      d = d + 1
    end
    return 1
  end
- |2-
      local largest = 0
      for i = 1, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
    local divisor = 2
    while n % divisor ~= 0 do
      divisor = divisor + 1
    end
    return divisor
  end
- |2-
      local d = n - 1
      while n % d ~= 0 do
          d = d - 1
      end
      return d
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
      local i = math.floor(n/2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local divisor = n-1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return 0
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    for i = n - 1, 2, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
    for i = n-1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
      local i = math.floor(n / 2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return 1
  end
- "\tlocal i = 2\n\twhile i < n do\n\t\tif n % i == 0 then\n\t\t\treturn n / i\n\t\tend\n\t\ti
  = i + 1\n\tend\n\treturn 1\nend"
- |2-
      local i = math.floor(n / 2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
    local d = 2
    while d < n do
      if n % d == 0 then
        return d
      end
      d = d + 1
    end
    return 1
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local d = 2
      while d < n do
          if n % d == 0 then
              return d
          end
          d = d + 1
      end
      return 1
  end
- |2-
      local i = n - 1
      while i > 0 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
      local d = 2
      while d < n do
          if n % d == 0 then
              return d
          end
          d = d + 1
      end
      return 1
  end
- |2-
      for i = n - 1, 2, -1 do
          if n % i == 0 then
              return i
          end
      end
      return 1
  end
- |2-
      local largest = 1
      for i = 2, n-1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      local divisor = n - 1
      while (n % divisor ~= 0) do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local divisor = n - 1
      while n % divisor ~= 0 do
          divisor = divisor - 1
      end
      return divisor
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local divisor = n - 1
    while n % divisor ~= 0 do
      divisor = divisor - 1
    end
    return divisor
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
    local i = 2
    while i < n do
      if n % i == 0 then
        return n / i
      end
      i = i + 1
    end
    return 1
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return 1
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
      local divisor = n - 1
      while divisor > 0 do
          if n % divisor == 0 then
              return divisor
          end
          divisor = divisor - 1
      end
      return 1
  end
- |2-
    for i = n - 1, 1, -1 do
      if n % i == 0 then
        return i
      end
    end
    return 1
  end
- |2-
    local d = 2
    while n % d ~= 0 do
      d = d + 1
    end
    return d
  end
- |2-
    local largest_divisor = 1
    for i = 2, n - 1 do
      if n % i == 0 then
        largest_divisor = i
      end
    end
    return largest_divisor
  end
- |2-
      for i = n - 1, 1, -1 do
          if n % i == 0 then
              return i
          end
      end
  end
- |2-
      local i = math.floor(n/2)
      while i > 1 do
          if n % i == 0 then
              return i
          end
          i = i - 1
      end
      return 1
  end
- |2-
      local d = 2
      while n % d ~= 0 do
          d = d + 1
      end
      return d
  end
- |2-
      local d = 2
      while d < n do
          if n % d == 0 then
              return d
          end
          d = d + 1
      end
      return 1
  end
- "\tlocal i = math.floor(n/2)\n\twhile i > 1 do\n\t\tif n % i == 0 then\n\t\t\treturn
  i\n\t\tend\n\t\ti = i - 1\n\tend\n\treturn 1\nend"
- |2-
      local largest = 1
      for i = 2, n - 1 do
          if n % i == 0 then
              largest = i
          end
      end
      return largest
  end
- |2-
      local i = 2
      while i < n do
          if n % i == 0 then
              return n / i
          end
          i = i + 1
      end
      return 1
  end
- |2-
    local i = n - 1
    while i > 0 do
      if n % i == 0 then
        return i
      end
      i = i - 1
    end
    return 1
  end
- |2-
    local d = 2
    while d < n do
      if n % d == 0 then
        return d
      end
      d = d + 1
    end
    return 1
  end
stop_tokens:
- |2-

  local
- |2-

  function
- |2-

  --
- "\n\n"

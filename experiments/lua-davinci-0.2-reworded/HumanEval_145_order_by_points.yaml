name: HumanEval_145_order_by_points
language: lua
prompt: "-- Write a function which sorts the given table of integers\n-- in ascending\
  \ order according to the sum of their digits.\n-- Note: if there are several items\
  \ with similar sum of their digits,\n-- order them based on their index in original\
  \ table.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
  \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = order_by_points\n\
  \    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n\
  \    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
  \ 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, -11,\
  \ -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
  \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local function sum_digits(num)\n        local sum = 0\n       \
    \ while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    -- your code here\n    local sum = {}\n  \
    \  for i, v in ipairs(nums) do\n        local s = 0\n        for j = 1, #tostring(v)\
    \ do\n            s = s + tonumber(tostring(v):sub(j, j))\n        end\n     \
    \   sum[i] = s\n    end\n    local t = {}\n    for i, v in ipairs(sum) do\n  \
    \      t[i] = {v, i}\n    end\n    table.sort(t, function(a, b)\n        if a[1]\
    \ == b[1] then\n            return a[2] < b[2]\n        else\n            return\
    \ a[1] < b[1]\n        end\n    end)\n    local res = {}\n    for i, v in ipairs(t)\
    \ do\n        res[i] = nums[v[2]]\n    end\n    return res\nend", "    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end", "    local function sum_digits(n)\n        local sum = 0\n  \
    \      while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_digits(num)\n\
    \    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num\
    \ = math.floor(num / 10)\n    end\n    return sum\n  end", "  local sum_of_digits\
    \ = {}\n  for i, v in ipairs(nums) do\n    local sum = 0\n    for j = 1, #tostring(v)\
    \ do\n      sum = sum + tonumber(tostring(v):sub(j, j))\n    end\n    sum_of_digits[i]\
    \ = sum\n  end\n  local sorted = {}\n  for i = 1, #nums do\n    local min = math.min(unpack(sum_of_digits))\n\
    \    local index = table.index_of(sum_of_digits, min)\n    table.insert(sorted,\
    \ nums[index])\n    table.remove(sum_of_digits, index)\n    table.remove(nums,\
    \ index)\n  end\n  return sorted\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + (n % 10)\n        \
    \    n = math.floor(n / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n    \
    \        sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n   \
    \   sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "  local points = {}\n  for i, num in ipairs(nums) do\n    local\
    \ sum = 0\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum +\
    \ tonumber(digit)\n    end\n    points[i] = sum\n  end\n  local sorted = {}\n\
    \  for i, num in ipairs(nums) do\n    local min = math.min(unpack(points))\n \
    \   local min_index = table.indexof(points, min)\n    table.insert(sorted, nums[min_index])\n\
    \    table.remove(points, min_index)\n    table.remove(nums, min_index)\n  end\n\
    \  return sorted\nend", "    local sum_of_digits = {}\n    for i, v in ipairs(nums)\
    \ do\n        local sum = 0\n        for digit in tostring(v):gmatch(\"%d\") do\n\
    \            sum = sum + tonumber(digit)\n        end\n        sum_of_digits[i]\
    \ = sum\n    end\n    table.sort(nums, function(a, b)\n        if sum_of_digits[a]\
    \ == sum_of_digits[b] then\n            return a < b\n        else\n         \
    \   return sum_of_digits[a] < sum_of_digits[b]\n        end\n    end)\n    return\
    \ nums\nend", "    local function sum_digits(num)\n        local sum = 0\n   \
    \     while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    -- your code here\n    local function sum_digits(num)\n        local sum =\
    \ 0\n        while num > 0 do\n            sum = sum + num % 10\n            num\
    \ = math.floor(num / 10)\n        end\n        return sum\n    end", "    -- TODO:\
    \ implement the function here\nend", "    local function sum_of_digits(n)\n  \
    \      local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + (n % 10)\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "  local function get_sum(num)\n\
    \    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num\
    \ = math.floor(num / 10)\n    end\n    return sum\n  end", "    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end", "    local function sum_digits(n)\n        local sum = 0\n  \
    \      while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n   \
    \   sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "    local sum_table = {}\n    local result = {}\n    for i, v\
    \ in ipairs(nums) do\n        local sum = 0\n        while v ~= 0 do\n       \
    \     sum = sum + v % 10\n            v = math.floor(v / 10)\n        end\n  \
    \      sum_table[i] = sum\n    end\n    local index = 1\n    while #nums > 0 do\n\
    \        local min_sum = math.huge\n        local min_index = 0\n        for i,\
    \ v in ipairs(sum_table) do\n            if v < min_sum then\n               \
    \ min_sum = v\n                min_index = i\n            end\n        end\n \
    \       result[index] = nums[min_index]\n        table.remove(nums, min_index)\n\
    \        table.remove(sum_table, min_index)\n        index = index + 1\n    end\n\
    \    return result\nend", "    local function sum_digits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end", "    local function\
    \ sum_of_digits(num)\n        local sum = 0\n        while num > 0 do\n      \
    \      sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(n)\n        local\
    \ s = 0\n        while n > 0 do\n            s = s + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return s\n    end", "  local sums = {}\n  for i,\
    \ n in ipairs(nums) do\n    sums[i] = sum_of_digits(n)\n  end\n  table.sort(sums)\n\
    \  local result = {}\n  for _, s in ipairs(sums) do\n    for i, n in ipairs(nums)\
    \ do\n      if sum_of_digits(n) == s then\n        table.insert(result, n)\n \
    \       table.remove(nums, i)\n        break\n      end\n    end\n  end\n  return\
    \ result\nend", "    local function sum_digits(num)\n        local sum = 0\n \
    \       while num > 0 do\n            sum = sum + num % 10\n            num =\
    \ math.floor(num / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(num)\n        local sum = 0\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_digits(n)\n    local sum = 0\n    while n > 0\
    \ do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ sum\n  end", "    local function sum_of_digits(num)\n        local sum = 0\n\
    \        while num > 0 do\n            sum = sum + num % 10\n            num =\
    \ math.floor(num / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_of_digits(n)\n        local sum = 0\n        while n > 0 do\n \
    \           sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local sum_of_digits = {}\n    for i, v in ipairs(nums) do\n        local sum\
    \ = 0\n        for j = 1, #tostring(v) do\n            sum = sum + tonumber(tostring(v):sub(j,\
    \ j))\n        end\n        sum_of_digits[i] = sum\n    end\n    local sorted_nums\
    \ = {}\n    for i, v in ipairs(sum_of_digits) do\n        local min = math.min(unpack(sum_of_digits))\n\
    \        local index = table.index_of(sum_of_digits, min)\n        table.insert(sorted_nums,\
    \ nums[index])\n        sum_of_digits[index] = math.max(unpack(sum_of_digits))\n\
    \    end\n    return sorted_nums\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "  local function sum_digits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + (n % 10)\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end", "    local function get_sum(num)\n \
    \       local sum = 0\n        while num > 0 do\n            sum = sum + num %\
    \ 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local result = {}\n  local sum_of_digits = {}\n  for i, v in ipairs(nums) do\n\
    \    local sum = 0\n    for d in tostring(v):gmatch(\"%d\") do\n      sum = sum\
    \ + tonumber(d)\n    end\n    sum_of_digits[i] = sum\n  end\n  table.sort(sum_of_digits)\n\
    \  for i, v in ipairs(sum_of_digits) do\n    for j, w in ipairs(nums) do\n   \
    \   local sum = 0\n      for d in tostring(w):gmatch(\"%d\") do\n        sum =\
    \ sum + tonumber(d)\n      end\n      if sum == v then\n        result[i] = w\n\
    \        nums[j] = nil\n        break\n      end\n    end\n  end\n  return result\n\
    end", "    local function sum_of_digits(num)\n        local sum = 0\n        while\
    \ num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function get_sum(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local sum_of_digits = {}\n  \
    \  for i, v in ipairs(nums) do\n        sum_of_digits[i] = {v, sum_digits(v)}\n\
    \    end\n    table.sort(sum_of_digits, function(a, b)\n        if a[2] == b[2]\
    \ then\n            return a[1] < b[1]\n        else\n            return a[2]\
    \ < b[2]\n        end\n    end)\n    local result = {}\n    for i, v in ipairs(sum_of_digits)\
    \ do\n        result[i] = v[1]\n    end\n    return result\nend", "    local function\
    \ sum_of_digits(num)\n        local sum = 0\n        while num > 0 do\n      \
    \      sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n   \
    \   sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "    local function sum_digits(num)\n        local sum = 0\n  \
    \      while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + (n % 10)\n      n =\
    \ math.floor(n / 10)\n    end\n    return sum\n  end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local s = 0\n        while\
    \ n > 0 do\n            s = s + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return s\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local t = {}\n    for\
    \ i, v in ipairs(nums) do\n        t[i] = {v, v % 10 + math.floor(v / 10)}\n \
    \   end\n    table.sort(t, function(a, b)\n        if a[2] == b[2] then\n    \
    \        return a[1] < b[1]\n        else\n            return a[2] < b[2]\n  \
    \      end\n    end)\n    for i, v in ipairs(t) do\n        t[i] = v[1]\n    end\n\
    \    return t\nend", "    local function sum_digits(n)\n        local sum = 0\n\
    \        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(num)\n    local sum = 0\n    for digit in tostring(num):gmatch('%d')\
    \ do\n      sum = sum + tonumber(digit)\n    end\n    return sum\n  end", "  \
    \  local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local sum_of_digits =\
    \ {}\n    for i, v in ipairs(nums) do\n        local sum = 0\n        for j =\
    \ 1, #tostring(v) do\n            sum = sum + tonumber(tostring(v):sub(j, j))\n\
    \        end\n        sum_of_digits[i] = sum\n    end\n    local function compare(a,\
    \ b)\n        if sum_of_digits[a] == sum_of_digits[b] then\n            return\
    \ a < b\n        else\n            return sum_of_digits[a] < sum_of_digits[b]\n\
    \        end\n    end\n    local sorted_index = {}\n    for i, v in ipairs(nums)\
    \ do\n        sorted_index[i] = i\n    end\n    table.sort(sorted_index, compare)\n\
    \    local sorted_nums = {}\n    for i, v in ipairs(sorted_index) do\n       \
    \ sorted_nums[i] = nums[v]\n    end\n    return sorted_nums\nend", "    local\
    \ sum = {}\n    for i, v in ipairs(nums) do\n        local s = 0\n        for\
    \ c in tostring(v):gmatch(\".\") do\n            s = s + tonumber(c)\n       \
    \ end\n        sum[i] = s\n    end\n    table.sort(nums, function(a, b)\n    \
    \    return sum[a] < sum[b]\n    end)\n    return nums\nend", "    local function\
    \ sum_digits(num)\n        local sum = 0\n        while num > 0 do\n         \
    \   sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local sum_of_digits = {}\n    for i, v in\
    \ ipairs(nums) do\n        local sum = 0\n        for j = 1, #tostring(v) do\n\
    \            sum = sum + tonumber(tostring(v):sub(j, j))\n        end\n      \
    \  sum_of_digits[i] = sum\n    end\n    local sorted_nums = {}\n    for i, v in\
    \ ipairs(sum_of_digits) do\n        local min_index = i\n        for j = i + 1,\
    \ #sum_of_digits do\n            if sum_of_digits[j] < sum_of_digits[min_index]\
    \ then\n                min_index = j\n            end\n        end\n        sum_of_digits[i],\
    \ sum_of_digits[min_index] = sum_of_digits[min_index], sum_of_digits[i]\n    \
    \    sorted_nums[i] = nums[min_index]\n    end\n    return sorted_nums\nend",
  "  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n   \
    \   sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "    local function sum_digits(num)\n        local sum = 0\n  \
    \      while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local sum_of_digits = {}\n  \
    \  for i, v in ipairs(nums) do\n        local sum = 0\n        for j = 1, #tostring(v)\
    \ do\n            sum = sum + tonumber(tostring(v):sub(j, j))\n        end\n \
    \       sum_of_digits[i] = sum\n    end\n    local sorted_nums = {}\n    for i,\
    \ v in ipairs(sum_of_digits) do\n        local min = math.min(unpack(sum_of_digits))\n\
    \        local min_index = 0\n        for j, v2 in ipairs(sum_of_digits) do\n\
    \            if v2 == min then\n                min_index = j\n              \
    \  break\n            end\n        end\n        table.insert(sorted_nums, nums[min_index])\n\
    \        table.remove(sum_of_digits, min_index)\n        table.remove(nums, min_index)\n\
    \    end\n    return sorted_nums\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end", "    local sum_table = {}\n    local\
    \ sum_table_index = {}\n    local sum_table_index_index = 1\n    for i, v in ipairs(nums)\
    \ do\n        local sum = 0\n        for j = 1, #tostring(v) do\n            sum\
    \ = sum + tonumber(tostring(v):sub(j, j))\n        end\n        if sum_table[sum]\
    \ == nil then\n            sum_table[sum] = {}\n            sum_table_index[sum_table_index_index]\
    \ = sum\n            sum_table_index_index = sum_table_index_index + 1\n     \
    \   end\n        table.insert(sum_table[sum], v)\n    end\n    table.sort(sum_table_index)\n\
    \    local result = {}\n    for i, v in ipairs(sum_table_index) do\n        for\
    \ j, k in ipairs(sum_table[v]) do\n            table.insert(result, k)\n     \
    \   end\n    end\n    return result\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(num)\n        local sum = 0\n   \
    \     while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function compare(a, b)\n\
    \        local sum_a = 0\n        local sum_b = 0\n        for i = 1, #tostring(a)\
    \ do\n            sum_a = sum_a + tonumber(tostring(a):sub(i, i))\n        end\n\
    \        for i = 1, #tostring(b) do\n            sum_b = sum_b + tonumber(tostring(b):sub(i,\
    \ i))\n        end\n        if sum_a == sum_b then\n            return a < b\n\
    \        else\n            return sum_a < sum_b\n        end\n    end\n    table.sort(nums,\
    \ compare)\n    return nums\nend", "    local function sum_digits(num)\n     \
    \   local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end", "  local function sum_digits(num)\n    local sum = 0\n    while num >\
    \ 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n\
    \    return sum\n  end", "    local function sum_of_digits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end", "    local function\
    \ sum_digits(num)\n        local sum = 0\n        while num > 0 do\n         \
    \   sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_of_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(num)\n        local sum = 0\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_of_digits(num)\n      \
    \  local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end", "    local function sum_digits(num)\n        local sum = 0\n        while\
    \ num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local sum = {}\n    for\
    \ i, v in ipairs(nums) do\n        local s = 0\n        while v > 0 do\n     \
    \       s = s + v % 10\n            v = math.floor(v / 10)\n        end\n    \
    \    sum[i] = s\n    end\n    local function cmp(i, j)\n        return sum[i]\
    \ < sum[j] or (sum[i] == sum[j] and i < j)\n    end\n    local t = {}\n    for\
    \ i, v in ipairs(nums) do\n        t[i] = i\n    end\n    table.sort(t, cmp)\n\
    \    local ret = {}\n    for i, v in ipairs(t) do\n        ret[i] = nums[v]\n\
    \    end\n    return ret\nend", "    local sum = {}\n    for i, v in ipairs(nums)\
    \ do\n        local s = 0\n        for d in tostring(v):gmatch(\"%d\") do\n  \
    \          s = s + tonumber(d)\n        end\n        sum[i] = s\n    end\n   \
    \ table.sort(nums, function(a, b)\n        return sum[a] < sum[b]\n    end)\n\
    \    return nums\nend", "    local function sum_digits(num)\n        local sum\
    \ = 0\n        while num > 0 do\n            sum = sum + num % 10\n          \
    \  num = math.floor(num / 10)\n        end\n        return sum\n    end", "  \
    \  local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_digits(num)\n    local sum = 0\n    while num\
    \ > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n\
    \    return sum\n  end", "    local function sum_digits(num)\n        local sum\
    \ = 0\n        while num > 0 do\n            sum = sum + num % 10\n          \
    \  num = math.floor(num / 10)\n        end\n        return sum\n    end", "  \
    \  local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_digits(num)\n    local sum = 0\n    while num\
    \ > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n\
    \    return sum\n  end", "    local function sum_of_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local nums_with_points = {}\n    for i, num in ipairs(nums) do\n        local\
    \ points = 0\n        for digit in tostring(num):gmatch(\"%d\") do\n         \
    \   points = points + tonumber(digit)\n        end\n        nums_with_points[i]\
    \ = {num, points}\n    end\n    table.sort(nums_with_points, function(a, b)\n\
    \        if a[2] == b[2] then\n            return a[1] < b[1]\n        else\n\
    \            return a[2] < b[2]\n        end\n    end)\n    local result = {}\n\
    \    for i, num_with_points in ipairs(nums_with_points) do\n        result[i]\
    \ = num_with_points[1]\n    end\n    return result\nend", "    local function\
    \ sum_digits(num)\n        local sum = 0\n        while num > 0 do\n         \
    \   sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_of_digits(num)\n      \
    \  local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end", "    local function sum_digits(num)\n        local sum = 0\n        while\
    \ num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local sum_of_digits = {}\n  \
    \  for i, num in ipairs(nums) do\n        local sum = 0\n        for digit in\
    \ tostring(num):gmatch(\"%d\") do\n            sum = sum + tonumber(digit)\n \
    \       end\n        sum_of_digits[i] = sum\n    end\n    table.sort(nums, function(a,\
    \ b)\n        if sum_of_digits[a] == sum_of_digits[b] then\n            return\
    \ a < b\n        else\n            return sum_of_digits[a] < sum_of_digits[b]\n\
    \        end\n    end)\n    return nums\nend", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + (n % 10)\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local sums = {}\n    for i, num in ipairs(nums) do\n        sums[i]\
    \ = num\n    end\n    table.sort(sums, function(a, b)\n        local sum_a = 0\n\
    \        local sum_b = 0\n        for i = 1, #tostring(a) do\n            sum_a\
    \ = sum_a + tonumber(tostring(a):sub(i, i))\n        end\n        for i = 1, #tostring(b)\
    \ do\n            sum_b = sum_b + tonumber(tostring(b):sub(i, i))\n        end\n\
    \        if sum_a == sum_b then\n            return a < b\n        end\n     \
    \   return sum_a < sum_b\n    end)\n    return sums\nend", "    local function\
    \ sum_digits(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end", "  local function sum_digits(num)\n    local sum = 0\n    while\
    \ num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n \
    \   end\n    return sum\n  end", "    local function sum_digits(num)\n       \
    \ local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end", "  local sum_of_digits = {}\n  for i, v in ipairs(nums) do\n    local\
    \ sum = 0\n    for digit in tostring(v):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n\
    \    end\n    sum_of_digits[i] = sum\n  end\n  table.sort(sum_of_digits)\n  local\
    \ result = {}\n  for i, v in ipairs(sum_of_digits) do\n    for j, k in ipairs(nums)\
    \ do\n      local sum = 0\n      for digit in tostring(k):gmatch(\"%d\") do\n\
    \        sum = sum + tonumber(digit)\n      end\n      if sum == v then\n    \
    \    result[i] = k\n        table.remove(nums, j)\n        break\n      end\n\
    \    end\n  end\n  return result\nend", "  local function sum_digits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_digits(n)\n    local sum = 0\n    while n > 0\
    \ do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ sum\n  end", "  local function sum_digits(n)\n    local sum = 0\n    while n\
    \ > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n  \
    \  return sum\n  end", "  local function sum_digits(num)\n    local sum = 0\n\
    \    while num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num\
    \ / 10)\n    end\n    return sum\n  end", "    local sums = {}\n    for i, num\
    \ in ipairs(nums) do\n        local sum = 0\n        while num > 0 do\n      \
    \      sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        sums[i] = sum\n    end\n    table.sort(sums)\n    local result = {}\n\
    \    for i, sum in ipairs(sums) do\n        for j, num in ipairs(nums) do\n  \
    \          local sum2 = 0\n            while num > 0 do\n                sum2\
    \ = sum2 + num % 10\n                num = math.floor(num / 10)\n            end\n\
    \            if sum2 == sum then\n                result[i] = nums[j]\n      \
    \          table.remove(nums, j)\n                break\n            end\n   \
    \     end\n    end\n    return result\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_of_digits(num)\n    local sum = 0\n    while\
    \ num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n \
    \   end\n    return sum\n  end", "  local function sum_digits(n)\n    local sum\
    \ = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n /\
    \ 10)\n    end\n    return sum\n  end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_digits(n)\n    local sum = 0\n    while n > 0\
    \ do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ sum\n  end", "    local function sum_digits(num)\n        local sum = 0\n  \
    \      while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_of_digits(num)\n    local sum = 0\n    while\
    \ num > 0 do\n      sum = sum + num % 10\n      num = math.floor(num / 10)\n \
    \   end\n    return sum\n  end", "    -- your code here\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

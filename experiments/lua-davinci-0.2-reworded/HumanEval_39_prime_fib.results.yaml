name: HumanEval_39_prime_fib
language: lua
results:
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local count = 0\n    while\
    \ count < n do\n        k = i + j\n        i = j\n        j = k\n        if is_prime(k)\
    \ then\n            count = count + 1\n        end\n    end\n    return k\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfsgo4fgq.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpfsgo4fgq.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpfsgo4fgq.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib_n = fib(n)\n    while not is_prime(fib_n) do\n        n = n + 1\n\
    \        fib_n = fib(n)\n    end\n    return fib_n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp62qje5hm.lua:13:\
    \ attempt to call a nil value (global 'fib')\nstack traceback:\n\t/tmp/tmp62qje5hm.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp62qje5hm.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   local t = i + j\n        i = j\n        j = t\n        if is_prime(t) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjof9h1z3.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpjof9h1z3.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\twhile k < n do\n\t\ti, j = j, i\
    \ + j\n\t\tif is_prime(j) then\n\t\t\tk = k + 1\n\t\tend\n\tend\n\treturn j\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw9xruzx_.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpw9xruzx_.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp99dt5tma.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp99dt5tma.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci(n)\n    while not is_prime(fib) do\n        fib = fibonacci(n)\n\
    \        n = n + 1\n    end\n    return fib\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpni_mxfhh.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpni_mxfhh.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpni_mxfhh.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpffnzwrcy.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpffnzwrcy.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \tlocal i = 1\n\tlocal j = 1\n\tlocal k = 1\n\tlocal count = 0\n\twhile count\
    \ < n do\n\t\tk = i + j\n\t\ti = j\n\t\tj = k\n\t\tif is_prime(k) then\n\t\t\t\
    count = count + 1\n\t\tend\n\tend\n\treturn k\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvqzaphio.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpvqzaphio.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpvqzaphio.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local a, b = 2, 3\n  local i = 2\n  while i < n do\n    a, b = b, a + b\n \
    \   if is_prime(b) then\n      i = i + 1\n    end\n  end\n  return b\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppq76adbb.lua:27:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmppq76adbb.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local j = 1\n  local k = 1\n  local count = 0\n  while count\
    \ < n do\n    k = i + j\n    if is_prime(k) then\n      count = count + 1\n  \
    \  end\n    i = j\n    j = k\n  end\n  return k\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4z19disc.lua:19:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp4z19disc.lua:19:\
    \ in local 'candidate'\n\t/tmp/tmp4z19disc.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2etzhed0.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp2etzhed0.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   local t = i + j\n        i = j\n        j = t\n        if is_prime(t) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiczwkvt5.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpiczwkvt5.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 2\n    local k = 3\n    local count = 3\n    while\
    \ count < n do\n        i = j\n        j = k\n        k = i + j\n        if is_prime(k)\
    \ then\n            count = count + 1\n        end\n    end\n    return k\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpchzidww6.lua:31:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpchzidww6.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyo9injkm.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpyo9injkm.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local count = 0\n    while\
    \ count < n do\n        k = i + j\n        i = j\n        j = k\n        if is_prime(k)\
    \ then\n            count = count + 1\n        end\n    end\n    return k\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp82xa_eoj.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmp82xa_eoj.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp82xa_eoj.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc0xon939.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpc0xon939.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local fib = fibonacci()\n    local prime = prime_numbers()\n    local i =\
    \ 1\n    local f, p\n    while i < n do\n        f = fib()\n        p = prime()\n\
    \        if f == p then\n            i = i + 1\n        end\n    end\n    return\
    \ f\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkjyyjuuk.lua:13:\
    \ attempt to call a nil value (global 'fibonacci')\nstack traceback:\n\t/tmp/tmpkjyyjuuk.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpkjyyjuuk.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local f = 0\n    local f1 = 0\n    local f2 = 1\n    while\
    \ i < n do\n        f = f1 + f2\n        f1 = f2\n        f2 = f\n        if is_prime(f)\
    \ then\n            i = i + 1\n        end\n    end\n    return f\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpduial_gr.lua:21:\
    \ attempt to call a nil value (global 'is_prime')\nstack traceback:\n\t/tmp/tmpduial_gr.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpduial_gr.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg6gzh6wu.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpg6gzh6wu.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception
- program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local a, b = 2, 3\n    local i = 2\n    while i < n do\n        a, b = b,\
    \ a + b\n        if is_prime(b) then\n            i = i + 1\n        end\n   \
    \ end\n    return b\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfkan5h04.lua:27:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpfkan5h04.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  stderr: ''
  exit_code: 1
  status: Exception

name: HumanEval_158_find_max
language: lua
prompt: "-- Write a function that accepts a table of strings.\n-- The table contains\
  \ different words. Return the word with maximum number\n-- of unique characters.\
  \ If multiple strings have maximum number of unique\n-- characters, return the one\
  \ which comes first in lexicographical order.\n-- >>> find_max({'name', 'of', 'string'})\n\
  -- 'string'\n-- >>> find_max({'name', 'enam', 'game'})\n-- 'enam'\n-- >>> find_max({'aaaaaaa',\
  \ 'bb', 'cc'})\n-- 'aaaaaaa'\nlocal function find_max(words)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = find_max\n\
  \    lu.assertEquals(candidate({'name', 'of', 'string'}), 'string')\n    lu.assertEquals(candidate({'name',\
  \ 'enam', 'game'}), 'enam')\n    lu.assertEquals(candidate({'aaaaaaa', 'bb', 'cc'}),\
  \ 'aaaaaaa')\n    lu.assertEquals(candidate({'abc', 'cba'}), 'abc')\n    lu.assertEquals(candidate({'play',\
  \ 'this', 'game', 'of', 'footbott'}), 'footbott')\n    lu.assertEquals(candidate({'we',\
  \ 'are', 'gonna', 'rock'}), 'gonna')\n    lu.assertEquals(candidate({'we', 'are',\
  \ 'a', 'mad', 'nation'}), 'nation')\n    lu.assertEquals(candidate({'this', 'is',\
  \ 'a', 'prrk'}), 'this')\n    lu.assertEquals(candidate({'b'}), 'b')\n    lu.assertEquals(candidate({'play',\
  \ 'play', 'play'}), 'play')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local max_word = words[1]\n    local max_count = 0\n    for _,\
    \ word in ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(''))\
    \ do\n            if not char:find(max_word) then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "  local max_word = words[1]\n  local max_len = #unique_chars(max_word)\n\
    \  for i = 2, #words do\n    local word = words[i]\n    local len = #unique_chars(word)\n\
    \    if len > max_len then\n      max_word = word\n      max_len = len\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not char:find(max_word)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for i = 1, #word do\n            if not string.find(max_word,\
    \ word:sub(i, i)) then\n                count = count + 1\n            end\n \
    \       end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_count = #unique_chars(max_word)\n\
    \    for i = 2, #words do\n        local word = words[i]\n        local count\
    \ = #unique_chars(word)\n        if count > max_count then\n            max_word\
    \ = word\n            max_count = count\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(''))\
    \ do\n            if not max_word:find(char) then\n                count = count\
    \ + 1\n            end\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word,\
    \ max_count = nil, 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _ in word:gmatch('.') do\n      count = count + 1\n    end\n    if count\
    \ > max_count then\n      max_word, max_count = word, count\n    end\n  end\n\
    \  return max_word\nend", "    local max = 0\n    local max_word = ''\n    for\
    \ _, word in ipairs(words) do\n        local count = 0\n        for _, char in\
    \ ipairs(word:split('')) do\n            if not char:find(max_word) then\n   \
    \             count = count + 1\n            end\n        end\n        if count\
    \ > max then\n            max = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_chars\
    \ = 0\n  for _, word in ipairs(words) do\n    local chars = {}\n    for c in word:gmatch('.')\
    \ do\n      chars[c] = true\n    end\n    local num_chars = 0\n    for _ in pairs(chars)\
    \ do\n      num_chars = num_chars + 1\n    end\n    if num_chars > max_chars then\n\
    \      max_chars = num_chars\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split('')) do\n            if not max_word:find(char) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = #unique_chars(max_word)\n  for i = 2, #words do\n    local\
    \ word = words[i]\n    local count = #unique_chars(word)\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for i = 1,\
    \ #word do\n            local c = word:sub(i, i)\n            if not word:find(c,\
    \ i + 1) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, c in utf8.codes(word) do\n     \
    \       count = count + 1\n        end\n        if count > max_count then\n  \
    \          max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "  local max_word = words[1]\n  local max_count =\
    \ 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in utf8.codes(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, c in utf8.codes(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = words[1]\n    local max_unique_chars = #unique_chars(max_word)\n\
    \    for i = 2, #words do\n        local word = words[i]\n        local unique_chars\
    \ = #unique_chars(word)\n        if unique_chars > max_unique_chars then\n   \
    \         max_word = word\n            max_unique_chars = unique_chars\n     \
    \   end\n    end\n    return max_word\nend", "    -- TODO: implement this function\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split(''))\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "    local max_word = words[1]\n    local\
    \ max_count = 0\n    for _, word in ipairs(words) do\n        local count = 0\n\
    \        for i = 1, #word do\n            local c = word:sub(i, i)\n         \
    \   if word:find(c, i + 1) == nil then\n                count = count + 1\n  \
    \          end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_unique_chars = 0\n    for\
    \ _, word in ipairs(words) do\n        local unique_chars = 0\n        for _,\
    \ char in ipairs(word:split('')) do\n            if not word:find(char, 2) then\n\
    \                unique_chars = unique_chars + 1\n            end\n        end\n\
    \        if unique_chars > max_unique_chars then\n            max_unique_chars\
    \ = unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split()) do\n            count = count + 1\n        end\n   \
    \     if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, c in ipairs(word:to_chars()) do\n    \
    \        if not c:is_in(max_word) then\n                count = count + 1\n  \
    \          end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, char in utf8.codes(word)\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in ipairs(word:split('')) do\n      if not max_word:find(char) then\n      \
    \  count = count + 1\n      end\n    end\n    if count > max_count then\n    \
    \  max_word = word\n      max_count = count\n    end\n  end\n  return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, char in ipairs(word:split())\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_len\
    \ = #unique_chars(max_word)\n  for i = 2, #words do\n    local word = words[i]\n\
    \    local len = #unique_chars(word)\n    if len > max_len then\n      max_word\
    \ = word\n      max_len = len\n    end\n  end\n  return max_word\nend", "  local\
    \ max_word = words[1]\n  local max_unique_chars = 0\n  for _, word in ipairs(words)\
    \ do\n    local unique_chars = 0\n    for _, char in ipairs(word:chars()) do\n\
    \      if not word:contains(char, 2) then\n        unique_chars = unique_chars\
    \ + 1\n      end\n    end\n    if unique_chars > max_unique_chars then\n     \
    \ max_unique_chars = unique_chars\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for _ in word:gmatch('.')\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split()) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split()) do\n            count = count + 1\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split()) do\n\
    \            if not char:find(max_word) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _ in word:gmatch('.')\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not word:find(char, word:find(char) + 1) then\n              \
    \  count = count + 1\n            end\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "    local max_word = words[1]\n    local\
    \ max_unique_chars = #unique_chars(max_word)\n    for i = 2, #words do\n     \
    \   local word = words[i]\n        local unique_chars = #unique_chars(word)\n\
    \        if unique_chars > max_unique_chars then\n            max_word = word\n\
    \            max_unique_chars = unique_chars\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_unique_chars =\
    \ #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local unique_chars = #unique_chars(word)\n        if unique_chars > max_unique_chars\
    \ then\n            max_word = word\n            max_unique_chars = unique_chars\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split()) do\n            count = count\
    \ + 1\n        end\n        if count > max_count then\n            max_count =\
    \ count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in utf8.codes(word) do\n      count =\
    \ count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, c in utf8.codes(word) do\n           \
    \ count = count + 1\n        end\n        if count > max_count then\n        \
    \    max_count = count\n            max_word = word\n        end\n    end\n  \
    \  return max_word\nend", "    local max_word = words[1]\n    local max_len =\
    \ #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local len = #unique_chars(word)\n        if len > max_len then\n    \
    \        max_word = word\n            max_len = len\n        end\n    end\n  \
    \  return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, c in utf8.codes(word) do\n            count = count + 1\n        end\n  \
    \      if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_len = #unique_chars(max_word)\n    for i = 2, #words\
    \ do\n        local word = words[i]\n        local len = #unique_chars(word)\n\
    \        if len > max_len then\n            max_word = word\n            max_len\
    \ = len\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, ch in ipairs(word:split('')) do\n    \
    \        if not max_word:find(ch) then\n                count = count + 1\n  \
    \          end\n        end\n        if count > max_count then\n            max_count\
    \ = count\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "  local max_word = words[1]\n  local max_chars = 0\n  for _, word in ipairs(words)\
    \ do\n    local chars = {}\n    for _, char in ipairs(word) do\n      chars[char]\
    \ = true\n    end\n    local num_chars = 0\n    for _ in pairs(chars) do\n   \
    \   num_chars = num_chars + 1\n    end\n    if num_chars > max_chars then\n  \
    \    max_chars = num_chars\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, c in utf8.codes(word) do\n      count =\
    \ count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_unique_chars = #unique_chars(max_word)\n    for i\
    \ = 2, #words do\n        local word = words[i]\n        local unique_chars =\
    \ #unique_chars(word)\n        if unique_chars > max_unique_chars then\n     \
    \       max_word = word\n            max_unique_chars = unique_chars\n       \
    \ end\n    end\n    return max_word\nend", "    local max_word = words[1]\n  \
    \  local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split(\"\")) do\n            if not\
    \ max_word:find(char) then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_word = word\n            max_count = count\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split()) do\n            count = count + 1\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = #unique_chars(max_word)\n    for\
    \ i = 2, #words do\n        local word = words[i]\n        local count = #unique_chars(word)\n\
    \        if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = count_unique(max_word)\n    for i = 2, #words\
    \ do\n        local word = words[i]\n        local count = count_unique(word)\n\
    \        if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "  local max_word\
    \ = ''\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local count\
    \ = 0\n    for i = 1, #word do\n      if word:find(word:sub(i, i), i + 1) == nil\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_unique_chars = 0\n\
    \  for _, word in ipairs(words) do\n    local unique_chars = 0\n    for i = 1,\
    \ #word do\n      if not string.find(word, word:sub(i, i), i + 1) then\n     \
    \   unique_chars = unique_chars + 1\n      end\n    end\n    if unique_chars >\
    \ max_unique_chars then\n      max_unique_chars = unique_chars\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, c in utf8.codes(word) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in ipairs(word:split('')) do\n      if not max_word:find(char) then\n      \
    \  count = count + 1\n      end\n    end\n    if count > max_count then\n    \
    \  max_word = word\n      max_count = count\n    end\n  end\n  return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n\
    \            if not word:find(word:sub(i, i), i + 1) then\n                count\
    \ = count + 1\n            end\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local count = #unique_chars(word)\n        if count > max_count then\n\
    \            max_word = word\n            max_count = count\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in utf8.codes(word) do\n            count = count + 1\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in utf8.codes(word) do\n  \
    \          count = count + 1\n        end\n        if count > max_count then\n\
    \            max_count = count\n            max_word = word\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split()) do\n            if not char:find(max_word) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for i = 1, #word do\n      local c = word:sub(i, i)\n      if\
    \ word:find(c, i + 1) == nil then\n        count = count + 1\n      end\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_unique = 0\n    for _, word in ipairs(words) do\n        local unique\
    \ = 0\n        for i = 1, #word do\n            local c = word:sub(i, i)\n   \
    \         if not word:match(c, i + 1) then\n                unique = unique +\
    \ 1\n            end\n        end\n        if unique > max_unique then\n     \
    \       max_unique = unique\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_len\
    \ = #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local len = #unique_chars(word)\n        if len > max_len then\n    \
    \        max_word = word\n            max_len = len\n        end\n    end\n  \
    \  return max_word\nend", "  local max_word = words[1]\n  local max_unique_chars\
    \ = 0\n  for _, word in ipairs(words) do\n    local unique_chars = 0\n    for\
    \ i = 1, #word do\n      local c = word:sub(i, i)\n      if word:find(c, i + 1)\
    \ == nil then\n        unique_chars = unique_chars + 1\n      end\n    end\n \
    \   if unique_chars > max_unique_chars then\n      max_unique_chars = unique_chars\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split('')) do\n  \
    \          if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_word = word\n            max_count = count\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_unique = 0\n    for _, word in ipairs(words) do\n\
    \        local unique = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if word:find(char) == word:find_last(char) then\n               \
    \ unique = unique + 1\n            end\n        end\n        if unique > max_unique\
    \ then\n            max_unique = unique\n            max_word = word\n       \
    \ end\n    end\n    return max_word\nend", "  local max_word = words[1]\n  local\
    \ max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for\
    \ _, char in ipairs(word:split()) do\n      count = count + 1\n    end\n    if\
    \ count > max_count then\n      max_count = count\n      max_word = word\n   \
    \ end\n  end\n  return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in utf8.codes(word) do\n      count = count + 1\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, c\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split(\"\")) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_word = word\n            max_count = count\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_len =\
    \ #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local len = #unique_chars(word)\n        if len > max_len then\n    \
    \        max_word = word\n            max_len = len\n        end\n    end\n  \
    \  return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, c in utf8.codes(word) do\n      count = count + 1\n  \
    \  end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = unique_chars(max_word)\n  for i = 2, #words\
    \ do\n    local word = words[i]\n    local count = unique_chars(word)\n    if\
    \ count > max_count then\n      max_word = word\n      max_count = count\n   \
    \ end\n  end\n  return max_word\nend", "  local max_word = words[1]\n  local max_unique_chars\
    \ = #unique_chars(max_word)\n  for i = 2, #words do\n    local word = words[i]\n\
    \    local unique_chars = #unique_chars(word)\n    if unique_chars > max_unique_chars\
    \ then\n      max_word = word\n      max_unique_chars = unique_chars\n    end\n\
    \  end\n  return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = count_unique(max_word)\n  for i = 2, #words do\n    local word = words[i]\n\
    \    local count = count_unique(word)\n    if count > max_count then\n      max_word\
    \ = word\n      max_count = count\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split()) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for i = 1, #word do\n            if word:find(word:sub(i,\
    \ i), i + 1) == nil then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split('')) do\n    \
    \  if not char:find(max_word) then\n        count = count + 1\n      end\n   \
    \ end\n    if count > max_count then\n      max_word = word\n      max_count =\
    \ count\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = count_unique(max_word)\n  for i = 2, #words do\n    local\
    \ word = words[i]\n    local count = count_unique(word)\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split()) do\n            if not char:find(char) then\n      \
    \          count = count + 1\n            end\n        end\n        if count >\
    \ max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, c in ipairs(word:split('')) do\n            if not max_word:find(c)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split()) do\n    \
    \        if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split()) do\n            if not table.contains(word:split(),\
    \ char) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "  local\
    \ max_word = words[1]\n  local max_count = #unique_chars(max_word)\n  for i =\
    \ 2, #words do\n    local word = words[i]\n    local count = #unique_chars(word)\n\
    \    if count > max_count then\n      max_word = word\n      max_count = count\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = count_unique(max_word)\n    for i = 2, #words do\n       \
    \ local word = words[i]\n        local count = count_unique(word)\n        if\
    \ count > max_count then\n            max_word = word\n            max_count =\
    \ count\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:split()) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split(''))\
    \ do\n      if not max_word:find(char) then\n        count = count + 1\n     \
    \ end\n    end\n    if count > max_count then\n      max_word = word\n      max_count\
    \ = count\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in ipairs(word:split('')) do\n      count = count + 1\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for i = 1, #word do\n            if word:find(word:sub(i, i), i\
    \ + 1) == nil then\n                count = count + 1\n            end\n     \
    \   end\n        if count > max_count then\n            max_count = count\n  \
    \          max_word = word\n        end\n    end\n    return max_word\nend", " \
    \   local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            local c = word:sub(i, i)\n            if not word:sub(1,\
    \ i - 1):find(c) then\n                count = count + 1\n            end\n  \
    \      end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_unique_chars = 0\n    for _, word\
    \ in ipairs(words) do\n        local unique_chars = 0\n        for _, char in\
    \ ipairs(word:chars()) do\n            if word:count(char) == 1 then\n       \
    \         unique_chars = unique_chars + 1\n            end\n        end\n    \
    \    if unique_chars > max_unique_chars then\n            max_unique_chars = unique_chars\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split('')) do\n    \
    \  if not max_word:find(char) then\n        count = count + 1\n      end\n   \
    \ end\n    if count > max_count then\n      max_word = word\n      max_count =\
    \ count\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for i = 1, #words do\n    local word = words[i]\n  \
    \  local count = 0\n    for j = 1, #word do\n      local char = word:sub(j, j)\n\
    \      if not string.find(max_word, char) then\n        count = count + 1\n  \
    \    end\n    end\n    if count > max_count then\n      max_count = count\n  \
    \    max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:split()) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split('')) do\n            if not max_word:find(char) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = #unique_chars(max_word)\n    for i = 2, #words do\n   \
    \     local word = words[i]\n        local count = #unique_chars(word)\n     \
    \   if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split('')) do\n  \
    \          if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    -- TODO: implement this function\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:split('')) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split()) do\n            count = count + 1\n        end\n   \
    \     if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, c in utf8.codes(word) do\n           \
    \ count = count + 1\n        end\n        if count > max_count then\n        \
    \    max_count = count\n            max_word = word\n        end\n    end\n  \
    \  return max_word\nend", "  local max_word = words[1]\n  local max_chars = 0\n\
    \  for _, word in ipairs(words) do\n    local chars = {}\n    for c in word:gmatch('.')\
    \ do\n      chars[c] = true\n    end\n    local num_chars = 0\n    for _ in pairs(chars)\
    \ do\n      num_chars = num_chars + 1\n    end\n    if num_chars > max_chars then\n\
    \      max_chars = num_chars\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for i = 1,\
    \ #word do\n            local char = word:sub(i, i)\n            if not word:find(char,\
    \ i + 1) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_unique_chars = 0\n    for _, word in ipairs(words)\
    \ do\n        local unique_chars = 0\n        for _, char in ipairs(word:split(''))\
    \ do\n            if word:count(char) == 1 then\n                unique_chars\
    \ = unique_chars + 1\n            end\n        end\n        if unique_chars >\
    \ max_unique_chars then\n            max_unique_chars = unique_chars\n       \
    \     max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for i = 1, #word do\n            local\
    \ c = word:sub(i, i)\n            if not word:find(c, i + 1) then\n          \
    \      count = count + 1\n            end\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "    local max_word = words[1]\n    local\
    \ max_count = 0\n    for _, word in ipairs(words) do\n        local count = 0\n\
    \        for _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_len = #unique_chars(max_word)\n    for i = 2, #words\
    \ do\n        local word = words[i]\n        local len = #unique_chars(word)\n\
    \        if len > max_len then\n            max_word = word\n            max_len\
    \ = len\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:chars()) do\n      count = count +\
    \ 1\n    end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in ipairs(word:chars()) do\n      if not max_word:contains(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split(''))\
    \ do\n      if not max_word:find(char) then\n        count = count + 1\n     \
    \ end\n    end\n    if count > max_count then\n      max_word = word\n      max_count\
    \ = count\n    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:split('')) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word, max_count = nil, 0\n    for _, word in\
    \ ipairs(words) do\n        local count = 0\n        for _ in pairs(unique_chars(word))\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_word, max_count = word, count\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ i = 1, #word do\n            local c = word:sub(i, i)\n            if word:find(c,\
    \ i + 1) == nil then\n                count = count + 1\n            end\n   \
    \     end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, c in utf8.codes(word) do\n            count = count + 1\n        end\n  \
    \      if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, c in utf8.codes(word) do\n      count = count + 1\n  \
    \  end\n    if count > max_count then\n      max_count = count\n      max_word\
    \ = word\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = #unique_chars(max_word)\n  for i = 2, #words do\n    local\
    \ word = words[i]\n    local count = #unique_chars(word)\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split(''))\
    \ do\n      if not max_word:find(char) then\n        count = count + 1\n     \
    \ end\n    end\n    if count > max_count then\n      max_word = word\n      max_count\
    \ = count\n    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n\
    \    local max_unique = 0\n    for _, word in ipairs(words) do\n        local\
    \ unique = 0\n        for _, char in utf8.codes(word) do\n            unique =\
    \ unique + 1\n        end\n        if unique > max_unique then\n            max_unique\
    \ = unique\n            max_word = word\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_unique = 0\n    for i = 1,\
    \ #words do\n        local word = words[i]\n        local unique = 0\n       \
    \ for j = 1, #word do\n            local char = word:sub(j, j)\n            if\
    \ word:find(char, j + 1) == nil then\n                unique = unique + 1\n  \
    \          end\n        end\n        if unique > max_unique then\n           \
    \ max_unique = unique\n            max_word = word\n        end\n    end\n   \
    \ return max_word\nend", "    local max_word = words[1]\n    local max_count =\
    \ 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, c in utf8.codes(word) do\n            count = count + 1\n        end\n  \
    \      if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for i = 1, #word do\n            if word:find(word:sub(i,\
    \ i), i + 1) == nil then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "  local max_word = words[1]\n  local max_chars = 0\n  for _, word in ipairs(words)\
    \ do\n    local chars = {}\n    for i = 1, #word do\n      chars[word:sub(i, i)]\
    \ = true\n    end\n    local num_chars = 0\n    for _ in pairs(chars) do\n   \
    \   num_chars = num_chars + 1\n    end\n    if num_chars > max_chars then\n  \
    \    max_chars = num_chars\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for i = 1, #word do\n\
    \            local c = word:sub(i, i)\n            if not word:sub(1, i - 1):find(c)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ words[1]\n  local max_count = #unique_chars(max_word)\n  for i = 2, #words do\n\
    \    local word = words[i]\n    local count = #unique_chars(word)\n    if count\
    \ > max_count then\n      max_word = word\n      max_count = count\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local count = #unique_chars(word)\n        if count > max_count then\n\
    \            max_word = word\n            max_count = count\n        end\n   \
    \ end\n    return max_word\nend", "    local max_word = words[1]\n    local max_unique\
    \ = 0\n    for _, word in ipairs(words) do\n        local unique = 0\n       \
    \ for _, char in ipairs(word:split('')) do\n            if not word:find(char,\
    \ 2) then\n                unique = unique + 1\n            end\n        end\n\
    \        if unique > max_unique then\n            max_unique = unique\n      \
    \      max_word = word\n        end\n    end\n    return max_word\nend", "   \
    \ local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for i = 1, #word do\n            if not\
    \ string.find(max_word, word:sub(i, i)) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:split('')) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split('')) do\n            if not max_word:find(char) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_word = word\n            max_count = count\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = count_unique_chars(word)\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n  local\
    \ max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for\
    \ _, char in ipairs(word:split()) do\n      if not max_word:find(char) then\n\
    \        count = count + 1\n      end\n    end\n    if count > max_count then\n\
    \      max_count = count\n      max_word = word\n    end\n  end\n  return max_word\n\
    end", "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split()) do\n      count\
    \ = count + 1\n    end\n    if count > max_count then\n      max_count = count\n\
    \      max_word = word\n    end\n  end\n  return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split('')) do\n  \
    \          if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split('')) do\n            if not max_word:find(char) then\n\
    \                count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_word = word\n            max_count = count\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for i = 1, #word do\n            if not word:find(word:sub(i, i),\
    \ i + 1) then\n                count = count + 1\n            end\n        end\n\
    \        if count > max_count then\n            max_count = count\n          \
    \  max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_unique_chars = 0\n    for _, word in ipairs(words)\
    \ do\n        local unique_chars = 0\n        for _, char in ipairs(word:split(''))\
    \ do\n            if not word:find(char, 2) then\n                unique_chars\
    \ = unique_chars + 1\n            end\n        end\n        if unique_chars >\
    \ max_unique_chars then\n            max_unique_chars = unique_chars\n       \
    \     max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "    local max_word, max_count = nil, 0\n    for _,\
    \ word in ipairs(words) do\n        local count = 0\n        for _ in pairs(word:gsub('%a',\
    \ '')) do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "    local max_word = words[1]\n    local\
    \ max_count = 0\n    for _, word in ipairs(words) do\n        local count = 0\n\
    \        for _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, c in utf8.codes(word) do\n           \
    \ count = count + 1\n        end\n        if count > max_count then\n        \
    \    max_count = count\n            max_word = word\n        end\n    end\n  \
    \  return max_word\nend", "    local max_word = words[1]\n    local max_unique_chars\
    \ = 0\n    for _, word in ipairs(words) do\n        local unique_chars = 0\n \
    \       for _, char in ipairs(word:split()) do\n            if not word:find(char,\
    \ 2) then\n                unique_chars = unique_chars + 1\n            end\n\
    \        end\n        if unique_chars > max_unique_chars then\n            max_unique_chars\
    \ = unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split()) do\n            if not char:find(max_word) then\n  \
    \              count = count + 1\n            end\n        end\n        if count\
    \ > max_count then\n            max_count = count\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n  \
    \  if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split('')) do\n  \
    \          if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, c\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in utf8.codes(word) do\n        \
    \    count = count + 1\n        end\n        if count > max_count then\n     \
    \       max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for i = 1, #words do\n        local word = words[i]\n        local\
    \ count = 0\n        for j = 1, #word do\n            local c = word:sub(j, j)\n\
    \            if not word:find(c, j + 1) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split(''))\
    \ do\n      if not max_word:find(char) then\n        count = count + 1\n     \
    \ end\n    end\n    if count > max_count then\n      max_word = word\n      max_count\
    \ = count\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for i = 1, #word do\n      local c = word:sub(i, i)\n      if not word:find(c,\
    \ i + 1) then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_count = count\n      max_word = word\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for i = 1, #words do\n        local word = words[i]\n        local count =\
    \ 0\n        for j = 1, #word do\n            local char = word:sub(j, j)\n  \
    \          if not word:find(char, j + 1) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_count = count\n            max_word = word\n        end\n    end\n \
    \   return max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split())\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \   local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, char in ipairs(word:split('')) do\n\
    \            if not max_word:find(char) then\n                count = count +\
    \ 1\n            end\n        end\n        if count > max_count then\n       \
    \     max_word = word\n            max_count = count\n        end\n    end\n \
    \   return max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n\
    \  for _, word in ipairs(words) do\n    local count = 0\n    for _, char in utf8.codes(word)\
    \ do\n      count = count + 1\n    end\n    if count > max_count then\n      max_count\
    \ = count\n      max_word = word\n    end\n  end\n  return max_word\nend", " \
    \ local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split('')) do\n    \
    \  if not max_word:find(char) then\n        count = count + 1\n      end\n   \
    \ end\n    if count > max_count then\n      max_word = word\n      max_count =\
    \ count\n    end\n  end\n  return max_word\nend", "  local max_word = words[1]\n\
    \  local max_count = 0\n  for _, word in ipairs(words) do\n    local count = 0\n\
    \    for _, char in utf8.codes(word) do\n      count = count + 1\n    end\n  \
    \  if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in utf8.codes(word) do\n            count = count +\
    \ 1\n        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, c in utf8.codes(word) do\n     \
    \       count = count + 1\n        end\n        if count > max_count then\n  \
    \          max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_len\
    \ = #unique_chars(max_word)\n    for _, word in ipairs(words) do\n        local\
    \ len = #unique_chars(word)\n        if len > max_len then\n            max_word\
    \ = word\n            max_len = len\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_unique_chars = 0\n    for\
    \ _, word in ipairs(words) do\n        local unique_chars = 0\n        for _,\
    \ char in ipairs(word:split('')) do\n            if not word:find(char, 2) then\n\
    \                unique_chars = unique_chars + 1\n            end\n        end\n\
    \        if unique_chars > max_unique_chars then\n            max_unique_chars\
    \ = unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "  local max_word = words[1]\n  local max_count = 0\n  for _,\
    \ word in ipairs(words) do\n    local count = 0\n    for _, char in ipairs(word:split())\
    \ do\n      if not max_word:find(char) then\n        count = count + 1\n     \
    \ end\n    end\n    if count > max_count then\n      max_count = count\n     \
    \ max_word = word\n    end\n  end\n  return max_word\nend", "  local max_word\
    \ = words[1]\n  local max_count = 0\n  for _, word in ipairs(words) do\n    local\
    \ count = 0\n    for _, char in ipairs(word:split('')) do\n      if not max_word:find(char)\
    \ then\n        count = count + 1\n      end\n    end\n    if count > max_count\
    \ then\n      max_word = word\n      max_count = count\n    end\n  end\n  return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in ipairs(word:split()) do\n            count = count + 1\n        end\n   \
    \     if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for i = 1, #word do\n            if word:find(word:sub(i,\
    \ i), i + 1) == nil then\n                count = count + 1\n            end\n\
    \        end\n        if count > max_count then\n            max_count = count\n\
    \            max_word = word\n        end\n    end\n    return max_word\nend",
  "    local max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for i = 1, #word do\n            local\
    \ c = word:sub(i, i)\n            if not word:find(c, i + 1) then\n          \
    \      count = count + 1\n            end\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in ipairs(word:split('')) do\n      if not max_word:find(char) then\n      \
    \  count = count + 1\n      end\n    end\n    if count > max_count then\n    \
    \  max_word = word\n      max_count = count\n    end\n  end\n  return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, c in utf8.codes(word)\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_len\
    \ = #unique_chars(max_word)\n  for i = 2, #words do\n    local word = words[i]\n\
    \    local len = #unique_chars(word)\n    if len > max_len then\n      max_word\
    \ = word\n      max_len = len\n    end\n  end\n  return max_word\nend", "    local\
    \ max_word, max_count = words[1], 0\n    for _, word in ipairs(words) do\n   \
    \     local count = 0\n        for _ in pairs(get_unique_chars(word)) do\n   \
    \         count = count + 1\n        end\n        if count > max_count then\n\
    \            max_word, max_count = word, count\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = #unique_chars(max_word)\n\
    \    for i = 2, #words do\n        local word = words[i]\n        local count\
    \ = #unique_chars(word)\n        if count > max_count then\n            max_word\
    \ = word\n            max_count = count\n        end\n    end\n    return max_word\n\
    end", "    local max_word = words[1]\n    local max_count = 0\n    for _, word\
    \ in ipairs(words) do\n        local count = 0\n        for _, char in utf8.codes(word)\
    \ do\n            count = count + 1\n        end\n        if count > max_count\
    \ then\n            max_count = count\n            max_word = word\n        end\n\
    \    end\n    return max_word\nend", "  local max_word = words[1]\n  local max_count\
    \ = 0\n  for _, word in ipairs(words) do\n    local count = 0\n    for _, char\
    \ in ipairs(word:split('')) do\n      if not max_word:find(char) then\n      \
    \  count = count + 1\n      end\n    end\n    if count > max_count then\n    \
    \  max_word = word\n      max_count = count\n    end\n  end\n  return max_word\n\
    end", "  local max_word = words[1]\n  local max_num = 0\n  for _, word in ipairs(words)\
    \ do\n    local num = 0\n    for _, char in ipairs(word:split('')) do\n      if\
    \ not max_word:find(char) then\n        num = num + 1\n      end\n    end\n  \
    \  if num > max_num then\n      max_word = word\n      max_num = num\n    end\n\
    \  end\n  return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, c in utf8.codes(word) do\n           \
    \ count = count + 1\n        end\n        if count > max_count then\n        \
    \    max_count = count\n            max_word = word\n        end\n    end\n  \
    \  return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:split('')) do\n  \
    \          if not max_word:find(char) then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_word = word\n            max_count = count\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = 0\n  \
    \  for _, word in ipairs(words) do\n        local count = 0\n        for _, char\
    \ in utf8.codes(word) do\n            count = count + 1\n        end\n       \
    \ if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_unique_chars = 0\n    for _, word in ipairs(words)\
    \ do\n        local unique_chars = 0\n        for _, char in ipairs(word:split())\
    \ do\n            if not word:find(char, 2) then\n                unique_chars\
    \ = unique_chars + 1\n            end\n        end\n        if unique_chars >\
    \ max_unique_chars then\n            max_unique_chars = unique_chars\n       \
    \     max_word = word\n        end\n    end\n    return max_word\nend", "    local\
    \ max_word = words[1]\n    local max_count = 0\n    for _, word in ipairs(words)\
    \ do\n        local count = 0\n        for _, c in utf8.codes(word) do\n     \
    \       count = count + 1\n        end\n        if count > max_count then\n  \
    \          max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_unique_chars\
    \ = 0\n    for _, word in ipairs(words) do\n        local unique_chars = 0\n \
    \       for i = 1, #word do\n            local char = word:sub(i, i)\n       \
    \     if word:find(char, i + 1) == nil then\n                unique_chars = unique_chars\
    \ + 1\n            end\n        end\n        if unique_chars > max_unique_chars\
    \ then\n            max_unique_chars = unique_chars\n            max_word = word\n\
    \        end\n    end\n    return max_word\nend", "    local max_word = words[1]\n\
    \    local max_unique_chars = 0\n    for _, word in ipairs(words) do\n       \
    \ local unique_chars = 0\n        for i = 1, #word do\n            local char\
    \ = word:sub(i, i)\n            if word:find(char, i + 1) == nil then\n      \
    \          unique_chars = unique_chars + 1\n            end\n        end\n   \
    \     if unique_chars > max_unique_chars then\n            max_unique_chars =\
    \ unique_chars\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_count = count_unique(max_word)\n\
    \    for i = 2, #words do\n        local word = words[i]\n        local count\
    \ = count_unique(word)\n        if count > max_count then\n            max_word\
    \ = word\n            max_count = count\n        end\n    end\n    return max_word\n\
    end", "  local max_word = words[1]\n  local max_count = 0\n  for _, word in ipairs(words)\
    \ do\n    local count = 0\n    for _, char in ipairs(word:split()) do\n      if\
    \ not max_word:find(char) then\n        count = count + 1\n      end\n    end\n\
    \    if count > max_count then\n      max_count = count\n      max_word = word\n\
    \    end\n  end\n  return max_word\nend", "    local max_word = words[1]\n   \
    \ local max_count = 0\n    for _, word in ipairs(words) do\n        local count\
    \ = 0\n        for _, char in ipairs(word:chars()) do\n            if not char:is_in(max_word)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_count = count\n            max_word\
    \ = word\n        end\n    end\n    return max_word\nend", "  local max_word =\
    \ words[1]\n  local max_chars = 0\n  for _, word in ipairs(words) do\n    local\
    \ chars = {}\n    for i = 1, #word do\n      chars[word:sub(i, i)] = true\n  \
    \  end\n    local num_chars = 0\n    for _ in pairs(chars) do\n      num_chars\
    \ = num_chars + 1\n    end\n    if num_chars > max_chars or\n       (num_chars\
    \ == max_chars and word < max_word) then\n      max_word = word\n      max_chars\
    \ = num_chars\n    end\n  end\n  return max_word\nend", "    local max_word =\
    \ words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n   \
    \     local count = 0\n        for _, char in ipairs(word:split()) do\n      \
    \      count = count + 1\n        end\n        if count > max_count then\n   \
    \         max_count = count\n            max_word = word\n        end\n    end\n\
    \    return max_word\nend", "    local max_word = words[1]\n    local max_count\
    \ = 0\n    for _, word in ipairs(words) do\n        local count = 0\n        for\
    \ _, char in ipairs(word:split('')) do\n            if not max_word:find(char)\
    \ then\n                count = count + 1\n            end\n        end\n    \
    \    if count > max_count then\n            max_word = word\n            max_count\
    \ = count\n        end\n    end\n    return max_word\nend", "    local max_word\
    \ = words[1]\n    local max_count = 0\n    for _, word in ipairs(words) do\n \
    \       local count = 0\n        for _, char in ipairs(word:chars()) do\n    \
    \        if not char:match('[a-z]') then\n                count = count + 1\n\
    \            end\n        end\n        if count > max_count then\n           \
    \ max_count = count\n            max_word = word\n        end\n    end\n    return\
    \ max_word\nend", "    local max_word = words[1]\n    local max_unique_chars =\
    \ #unique_chars(max_word)\n    for i = 2, #words do\n        local word = words[i]\n\
    \        local unique_chars = #unique_chars(word)\n        if unique_chars > max_unique_chars\
    \ then\n            max_word = word\n            max_unique_chars = unique_chars\n\
    \        end\n    end\n    return max_word\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

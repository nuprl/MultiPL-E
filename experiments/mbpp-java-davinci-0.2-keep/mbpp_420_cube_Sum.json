{
  "name": "mbpp_420_cube_Sum",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to find the cube sum of first n even natural numbers.\n    public static long cubeSum(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_420_cube_Sum.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(cubeSum((2l)) == (72l));\n    assert(cubeSum((3l)) == (288l));\n    assert(cubeSum((4l)) == (800l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n * n",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (long) Math.pow(n, 3);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (long) Math.pow(n, 3);",
    "        return (long) Math.pow(n, 3);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (n + 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * n * (n + 1) * (n + 1) / 4;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n, 3);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (long) Math.pow(n, 3);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * n * n;",
    "        return (n * (n + 1) / 2) * (2 * n + 1) / 3;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * n * (n + 1) * (n + 1) / 4;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 3;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (i * i * i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (n + 2);",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (long) Math.pow(n * (n + 1), 2) / 4;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (i * i * i);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += Math.pow(i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (long) Math.pow(n, 3);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (long) Math.pow(n, 3);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (n + 2) / 2;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (n + 2) / 2;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (long) (Math.pow(n, 2) * (n + 1) * (n + 1) / 4);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (long) Math.pow(n, 3);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (long) Math.pow(n, 3);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (long) Math.pow(n, 3);",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (long) Math.pow(n, 3);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) * (n + 2)) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += (i * i * i);\n        }\n        return sum;",
    "        return n * (n + 1) * (n + 2) / 2;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= 2 * n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return n * (n + 1) * (n + 2) / 3;",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return (long)Math.pow(n, 3);",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        return (long) Math.pow(n, 3);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return n * n * (n + 1) * (n + 1) / 4;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (long) Math.pow(n, 3);",
    "        return (n * (n + 1) * (2 * n + 1)) / 6;",
    "        return n * n * n;",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        return (n * (n + 1) / 2) * (n * (n + 1) / 2);",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n * 2; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        return n * (n + 1) * (2 * n + 1) / 6;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 2; i <= n; i += 2) {\n            sum += i * i * i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Math.pow(2 * i, 3);\n        }\n        return sum;"
  ]
}
{
  "name": "mbpp_612_merge",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of lists, where each sublist has two elements, and returns a list of two lists where the first list has the first element of each sublist and the second one has the second.\n    public static Object merge(Object lst) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_612_merge.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(merge((new Object(Arrays.asList((ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"x\", (String)\"y\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"b\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"m\", (String)\"n\")))))).equals((new Object(Arrays.asList((ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"x\", (String)\"a\", (String)\"m\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"y\", (String)\"b\", (String)\"n\")))))));\n    assert(merge((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)3l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)6l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)7l, (long)8l)))))).equals((new Object(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l, (long)7l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)6l, (long)8l)))))));\n    assert(merge((new Object(Arrays.asList((ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"x\", (String)\"y\", (String)\"z\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"b\", (String)\"c\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"m\", (String)\"n\", (String)\"o\")))))).equals((new Object(Arrays.asList((ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"x\", (String)\"a\", (String)\"m\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"y\", (String)\"b\", (String)\"n\")), (ArrayList<String>)new ArrayList<String>(Arrays.asList((String)\"z\", (String)\"c\", (String)\"o\")))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<Object> result = new ArrayList<>();\n        List<Object> first = new ArrayList<>();\n        List<Object> second = new ArrayList<>();\n        for (Object obj : (List<Object>) lst) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) obj;\n            first.add(pair.getValue0());\n            second.add(pair.getValue1());\n        }\n        result.add(first);\n        result.add(second);\n        return result;",
    "        List<List<Object>> lst1 = (List<List<Object>>) lst;\n        List<Object> lst2 = new ArrayList<>();\n        List<Object> lst3 = new ArrayList<>();\n        for (List<Object> l : lst1) {\n            lst2.add(l.get(0));\n            lst3.add(l.get(1));\n        }\n        return new Pair<List<Object>, List<Object>>(lst2, lst3);",
    "        return null;",
    "        return null;",
    "        List<List<Object>> l = (List<List<Object>>) lst;\n        List<Object> a = new ArrayList<>();\n        List<Object> b = new ArrayList<>();\n        for (List<Object> x : l) {\n            a.add(x.get(0));\n            b.add(x.get(1));\n        }\n        return Arrays.asList(a, b);",
    "        List<Object> lst1 = (List<Object>) lst;\n        List<Object> lst2 = new ArrayList<Object>();\n        List<Object> lst3 = new ArrayList<Object>();\n        for (Object i : lst1) {\n            List<Object> lst4 = (List<Object>) i;\n            lst2.add(lst4.get(0));\n            lst3.add(lst4.get(1));\n        }\n        return Arrays.asList(lst2, lst3);",
    "        List<Object> lst2 = new ArrayList<>();\n        List<Object> lst3 = new ArrayList<>();\n        for (Object o : (List<Object>) lst) {\n            lst2.add(((List<Object>) o).get(0));\n            lst3.add(((List<Object>) o).get(1));\n        }\n        return Arrays.asList(lst2, lst3);",
    "        List<List<Object>> lst2 = (List<List<Object>>) lst;\n        List<Object> lst1 = new ArrayList<Object>();\n        List<Object> lst3 = new ArrayList<Object>();\n        for (List<Object> l : lst2) {\n            lst1.add(l.get(0));\n            lst3.add(l.get(1));\n        }\n        List<List<Object>> lst4 = new ArrayList<List<Object>>();\n        lst4.add(lst1);\n        lst4.add(lst3);\n        return lst4;",
    "        List<List<Object>> lst2 = (List<List<Object>>) lst;\n        List<Object> lst3 = new ArrayList<>();\n        List<Object> lst4 = new ArrayList<>();\n        for (List<Object> lst5 : lst2) {\n            lst3.add(lst5.get(0));\n            lst4.add(lst5.get(1));\n        }\n        return Arrays.asList(lst3, lst4);",
    "        List<List<Object>> lst1 = (List<List<Object>>) lst;\n        List<Object> lst2 = new ArrayList<Object>();\n        List<Object> lst3 = new ArrayList<Object>();\n        for (List<Object> l : lst1) {\n            lst2.add(l.get(0));\n            lst3.add(l.get(1));\n        }\n        return Arrays.asList(lst2, lst3);",
    "        List<Object> result = new ArrayList<>();\n        List<Object> first = new ArrayList<>();\n        List<Object> second = new ArrayList<>();\n        for (Object obj : (List<Object>) lst) {\n            List<Object> sublst = (List<Object>) obj;\n            first.add(sublst.get(0));\n            second.add(sublst.get(1));\n        }\n        result.add(first);\n        result.add(second);\n        return result;",
    "        List<List<Object>> lstlst = (List<List<Object>>) lst;\n        List<Object> lst1 = new ArrayList<Object>();\n        List<Object> lst2 = new ArrayList<Object>();\n        for (List<Object> lst0 : lstlst) {\n            lst1.add(lst0.get(0));\n            lst2.add(lst0.get(1));\n        }\n        return new Pair<List<Object>, List<Object>>(lst1, lst2);",
    "        List<List<Object>> lst2 = (List<List<Object>>) lst;\n        List<Object> lst3 = new ArrayList<Object>();\n        List<Object> lst4 = new ArrayList<Object>();\n        for (List<Object> l : lst2) {\n            lst3.add(l.get(0));\n            lst4.add(l.get(1));\n        }\n        return Arrays.asList(lst3, lst4);",
    "        List<List<Object>> lst2 = (List<List<Object>>) lst;\n        List<Object> lst3 = new ArrayList<Object>();\n        List<Object> lst4 = new ArrayList<Object>();\n        for (List<Object> lst5 : lst2) {\n            lst3.add(lst5.get(0));\n            lst4.add(lst5.get(1));\n        }\n        return Arrays.asList(lst3, lst4);",
    "        List<List<Object>> lst2 = (List<List<Object>>) lst;\n        List<Object> lst3 = new ArrayList<Object>();\n        List<Object> lst4 = new ArrayList<Object>();\n        for (List<Object> sublst : lst2) {\n            lst3.add(sublst.get(0));\n            lst4.add(sublst.get(1));\n        }\n        return Arrays.asList(lst3, lst4);",
    "        return null;",
    "        List<Object> result = new ArrayList<>();\n        List<Object> first = new ArrayList<>();\n        List<Object> second = new ArrayList<>();\n        for (Object sublst : (List<Object>) lst) {\n            first.add(((List<Object>) sublst).get(0));\n            second.add(((List<Object>) sublst).get(1));\n        }\n        result.add(first);\n        result.add(second);\n        return result;",
    "        List<List<Object>> lst2 = (List<List<Object>>) lst;\n        List<Object> lst1 = new ArrayList<>();\n        List<Object> lst3 = new ArrayList<>();\n        for (List<Object> l : lst2) {\n            lst1.add(l.get(0));\n            lst3.add(l.get(1));\n        }\n        return Arrays.asList(lst1, lst3);",
    "        List<Object> lst1 = (List<Object>) lst;\n        List<Object> lst2 = new ArrayList<>();\n        List<Object> lst3 = new ArrayList<>();\n        for (Object obj : lst1) {\n            List<Object> lst4 = (List<Object>) obj;\n            lst2.add(lst4.get(0));\n            lst3.add(lst4.get(1));\n        }\n        List<Object> lst5 = new ArrayList<>();\n        lst5.add(lst2);\n        lst5.add(lst3);\n        return lst5;",
    "        List<List<Object>> lst1 = (List<List<Object>>) lst;\n        List<Object> lst2 = new ArrayList<Object>();\n        List<Object> lst3 = new ArrayList<Object>();\n        for (List<Object> l : lst1) {\n            lst2.add(l.get(0));\n            lst3.add(l.get(1));\n        }\n        return Arrays.asList(lst2, lst3);"
  ]
}
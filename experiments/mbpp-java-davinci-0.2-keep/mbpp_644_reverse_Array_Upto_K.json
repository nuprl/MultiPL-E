{
  "name": "mbpp_644_reverse_Array_Upto_K",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to reverse an array upto a given position.\n    public static ArrayList<Long> reverseArrayUptoK(ArrayList<Long> input, long k) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_644_reverse_Array_Upto_K.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(reverseArrayUptoK((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l))), (4l)).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)3l, (long)2l, (long)1l, (long)5l, (long)6l)))));\n    assert(reverseArrayUptoK((new ArrayList<Long>(Arrays.asList((long)4l, (long)5l, (long)6l, (long)7l))), (2l)).equals((new ArrayList<Long>(Arrays.asList((long)5l, (long)4l, (long)6l, (long)7l)))));\n    assert(reverseArrayUptoK((new ArrayList<Long>(Arrays.asList((long)9l, (long)8l, (long)7l, (long)6l, (long)5l))), (3l)).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)6l, (long)5l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int)k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < input.size(); i++) {\n            if (i < k) {\n                output.add(input.get(k - i - 1));\n            } else {\n                output.add(input.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int) k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < input.size(); i++) {\n            if (i < k) {\n                output.add(input.get(k - i - 1));\n            } else {\n                output.add(input.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get((int)k - i - 1));\n        }\n        for (int i = (int)k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int) k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int) k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < input.size(); i++) {\n            if (i < k) {\n                output.add(input.get(i));\n            } else {\n                output.add(input.get(input.size() - 1 - i));\n            }\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int)k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int) k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(k - i - 1));\n        }\n        for (int i = k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < input.size(); i++) {\n            if (i < k) {\n                result.add(input.get(k - i - 1));\n            } else {\n                result.add(input.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int) k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        for (int i = (int)k; i < input.size(); i++) {\n            output.add(input.get(input.size() - i - 1));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (long i = 0; i < k; i++) {\n            output.add(input.get((int) (k - i - 1)));\n        }\n        for (long i = k; i < input.size(); i++) {\n            output.add(input.get((int) i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get(i));\n        }\n        Collections.reverse(output);\n        for (int i = (int) k; i < input.size(); i++) {\n            output.add(input.get(i));\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < input.size(); i++) {\n            if (i < k) {\n                output.add(input.get(k - i - 1));\n            } else {\n                output.add(input.get(i));\n            }\n        }\n        return output;",
    "        ArrayList<Long> output = new ArrayList<Long>();\n        for (int i = 0; i < k; i++) {\n            output.add(input.get((int)k - i - 1));\n        }\n        for (int i = 0; i < input.size() - k; i++) {\n            output.add(input.get((int)k + i));\n        }\n        return output;"
  ]
}
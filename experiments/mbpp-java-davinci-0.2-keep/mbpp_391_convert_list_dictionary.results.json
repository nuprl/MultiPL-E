{
  "name": "mbpp_391_convert_list_dictionary",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_391_convert_list_dictionary.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmphnlsfosg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpkn5zklu_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dictionary = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> dictionary2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            dictionary2.put(l2.get(i), l3.get(i));\n            dictionary.put(l1.get(i), dictionary2);\n        }\n        result.add(dictionary);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp5qzb03c7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp3k0muaxt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpd66zx3o5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (temp.containsKey(l1.get(i))) {\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i), l3.get(i));\n                temp.put(l1.get(i), temp2);\n            } else {\n                temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i), l3.get(i));\n                temp.put(l1.get(i), temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpyyfongwk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp1x9l9b2m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp10ybe84f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpjcztdsgp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpxnbte7n9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d.put(l1.get(i), d2);\n        }\n        result.add(d);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmph_u1ccx4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerDict.put(l2.get(i),l3.get(i));\n            dict.put(l1.get(i),innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp9knn47ti.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpzyd1nts1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp6g2a9b2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpxljhk5e4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            d2.put(l2.get(i),l3.get(i));\n            d1.put(l1.get(i),d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp35dqa8l3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpts_4jz4t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp4uh5bd_6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> m1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> m2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            m2.put(l2.get(i),l3.get(i));\n            m1.put(l1.get(i),m2);\n        }\n        result.add(m1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpq1p100j8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp_r91zrnf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            innerDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpaa4u6mde.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpzyd1nts1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            hm2.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmprt9_sklp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> dict1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            dict1.put(l2.get(i),l3.get(i));\n        }\n        dict.put(l1.get(0),dict1);\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpu_zfct8s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d.put(l1.get(i), d2);\n        }\n        result.add(d);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmph_u1ccx4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                HashMap<String,Long> innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                HashMap<String,Long> innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpi64qsoys.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmpzioaxp9p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpj2sfxjfv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpts_4jz4t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpxmkmat_0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp36idpmgb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpxljhk5e4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp3kjlcgx3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n        }\n        d1.put(l1.get(0), d2);\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpftrot9p8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> res = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp.get(l1.get(i)).put(l2.get(i),l3.get(i));\n            }\n            else {\n                HashMap<String,Long> temp1 = new HashMap<String,Long>();\n                temp1.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp1);\n            }\n        }\n        res.add(temp);\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpe9ac01ae.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp4ua2z910.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp6g2a9b2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpts_4jz4t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpxn63nf4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            String key = l1.get(i);\n            String innerKey = l2.get(i);\n            Long innerValue = l3.get(i);\n            HashMap<String,Long> innerMap = new HashMap<>();\n            innerMap.put(innerKey, innerValue);\n            if (temp.containsKey(key)) {\n                HashMap<String,Long> oldInnerMap = temp.get(key);\n                oldInnerMap.put(innerKey, innerValue);\n                temp.put(key, oldInnerMap);\n            } else {\n                temp.put(key, innerMap);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpofz46ote.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpxdjt61wa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpxn63nf4r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here.\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpmsdadsd2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp_r91zrnf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpjcztdsgp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> temp1 = new HashMap<String,Long>();\n            temp1.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp1);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpb_eq2jfq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmppitso_v2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpqaaizvvc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp655_muic.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> temp2 = new HashMap<String,Long>();\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmphttu73i7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            d2.put(l2.get(i),l3.get(i));\n            d1.put(l1.get(i),d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp35dqa8l3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            if(map.containsKey(l1.get(i))){\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else{\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp5wlep7jq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++){\n            if(temp.containsKey(l1.get(i))){\n                temp.get(l1.get(i)).put(l2.get(i),l3.get(i));\n            }\n            else{\n                HashMap<String,Long> temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp8jbg3xvj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> temp2 = new HashMap<String,Long>();\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmphttu73i7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmprl6_le75.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp655_muic.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpts_4jz4t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                map2 = map.get(l1.get(i));\n                map2.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),map2);\n            }\n            else {\n                map2 = new HashMap<String,Long>();\n                map2.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),map2);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpf17t4h1b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp36idpmgb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp_5b5l6f2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmpkhtxzn99.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> res = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        res.add(map);\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpvozapaad.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map1.put(l1.get(i),map2);\n        }\n        result.add(map1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp0kr3gq2o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp2z_brxic.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpxljhk5e4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp1.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp1);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpkb3y5uq_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp6zy1en1l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp1usjb5bj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpywb1_4ea.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            innerDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpxljhk5e4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n            else {\n                temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpqw6dz1sm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> result1 = new HashMap<>();\n        HashMap<String,Long> result2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            result2.put(l2.get(i),l3.get(i));\n        }\n        result1.put(l1.get(0),result2);\n        result.add(result1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpzoylnu3d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmppkv6ebwd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmpo9s2zcwk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp2b1w6x_w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i=0; i<l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpe30z0asa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0; i<l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmptfhre049.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(dict.containsKey(l1.get(i))) {\n                innerDict = dict.get(l1.get(i));\n                innerDict.put(l2.get(i),l3.get(i));\n                dict.put(l1.get(i),innerDict);\n            } else {\n                innerDict = new HashMap<String,Long>();\n                innerDict.put(l2.get(i),l3.get(i));\n                dict.put(l1.get(i),innerDict);\n            }\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123549,
      "stdout": "",
      "stderr": "/tmp/tmpvpc3ubap.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> subDict = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            subDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), subDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp9rfvs7yo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<>();\n        HashMap<String,Long> d2 = new HashMap<>();\n        for(int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpd086hfx_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            d2.put(l2.get(i),l3.get(i));\n            d1.put(l1.get(i),d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp35dqa8l3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            } else {\n                temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp9fcl68cp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpxmkmat_0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> dict2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            dict2.put(l2.get(i),l3.get(i));\n            dict.put(l1.get(i),dict2);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpmooxxiqb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (temp.containsKey(l1.get(i))) {\n                temp.get(l1.get(i)).put(l2.get(i), l3.get(i));\n            } else {\n                HashMap<String,Long> temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i), l3.get(i));\n                temp.put(l1.get(i), temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpptcvpqsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n            else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmphnlsfosg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerDict = new HashMap<String,Long>();\n            innerDict.put(l2.get(i), l3.get(i));\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp4vfdmkfg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp1.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp1);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpotkobv69.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            d2.put(l2.get(i),l3.get(i));\n            d1.put(l1.get(i),d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp35dqa8l3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++)\n        {\n            hm1.put(l2.get(i),l3.get(i));\n            hm.put(l1.get(i),hm1);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpz9y63c2o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map1.put(l1.get(i),map2);\n        }\n        result.add(map1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmp0kr3gq2o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp6g2a9b2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            hm2.put(l2.get(i), l3.get(i));\n            hm.put(l1.get(i), hm2);\n        }\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpepoy2rmk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (temp.containsKey(l1.get(i))) {\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i), l3.get(i));\n                temp.put(l1.get(i), temp2);\n            } else {\n                temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i), l3.get(i));\n                temp.put(l1.get(i), temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpyyfongwk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp6g2a9b2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> temp2 = new HashMap<String,Long>();\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmphttu73i7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        ArrayList<HashMap<String,HashMap<String,Long>>> al = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        for(int i=0;i<l1.size();i++) {\n            if(hm.containsKey(l1.get(i))) {\n                hm.get(l1.get(i)).put(l2.get(i),l3.get(i));\n            } else {\n                HashMap<String,Long> hm2 = new HashMap<String,Long>();\n                hm2.put(l2.get(i),l3.get(i));\n                hm.put(l1.get(i),hm2);\n            }\n        }\n        al.add(hm);\n        return al;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpbb6v6z7w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            hm1.put(l2.get(i),l3.get(i));\n        }\n        hm.put(l1.get(0),hm1);\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpfocx0_s4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpuc14v58m.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpwt1vbwha.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpd66zx3o5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpts_4jz4t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpjcztdsgp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            map2.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmpjcztdsgp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpzyd1nts1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(dict.containsKey(l1.get(i))) {\n                innerDict = dict.get(l1.get(i));\n                innerDict.put(l2.get(i), l3.get(i));\n            } else {\n                innerDict = new HashMap<String,Long>();\n                innerDict.put(l2.get(i), l3.get(i));\n            }\n            dict.put(l1.get(i), innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp17p6r5g3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> outerMap = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n        }\n        outerMap.put(l1.get(0),innerMap);\n        result.add(outerMap);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpcxgvko3a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(temp.containsKey(l1.get(i))) {\n                temp.get(l1.get(i)).put(l2.get(i), l3.get(i));\n            } else {\n                HashMap<String,Long> temp2 = new HashMap<String,Long>();\n                temp2.put(l2.get(i), l3.get(i));\n                temp.put(l1.get(i), temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp_vn51iqq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d1.put(l1.get(i), d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp1grkedzj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(dict.containsKey(l1.get(i))) {\n                innerDict = dict.get(l1.get(i));\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            } else {\n                innerDict = new HashMap<String,Long>();\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            }\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpzf2_xmu4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++){\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp39k_bwoi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++){\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpwpbma5v3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            if(map.containsKey(l1.get(i))){\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n            }\n            else{\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n                map.put(l1.get(i),innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmp51qurbi2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123547,
      "stdout": "",
      "stderr": "/tmp/tmp655_muic.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            } else {\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpr7h_0kt3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n            }\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpox9dgfeb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i),l3.get(i));\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i),l3.get(i));\n            }\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp_edge537.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            innerDict.put(l2.get(i),l3.get(i));\n            dict.put(l1.get(i),innerDict);\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp9knn47ti.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n            result.add(map);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpqatx12yx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<>();\n        HashMap<String,Long> temp2 = new HashMap<>();\n        for(int i=0;i<l1.size();i++){\n            if(temp.containsKey(l1.get(i))){\n                temp2 = temp.get(l1.get(i));\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n            else{\n                temp2 = new HashMap<>();\n                temp2.put(l2.get(i),l3.get(i));\n                temp.put(l1.get(i),temp2);\n            }\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpu34f7jab.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> hm = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> hm1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            hm1.put(l2.get(i),l3.get(i));\n        }\n        hm.put(l1.get(0),hm1);\n        result.add(hm);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpfocx0_s4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d1 = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            d2.put(l2.get(i),l3.get(i));\n            d1.put(l1.get(i),d2);\n        }\n        result.add(d1);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp35dqa8l3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for (int i = 0; i < l1.size(); i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp3cy0iamg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp1.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp1);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpotkobv69.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp1 = new HashMap<String,Long>();\n        for(int i=0; i<l1.size(); i++) {\n            temp1.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp1);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp_c46nngm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123548,
      "stdout": "",
      "stderr": "/tmp/tmppkv6ebwd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmp_r91zrnf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> dict = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerDict = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(dict.containsKey(l1.get(i))) {\n                innerDict = dict.get(l1.get(i));\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            } else {\n                innerDict = new HashMap<String,Long>();\n                innerDict.put(l2.get(i), l3.get(i));\n                dict.put(l1.get(i), innerDict);\n            }\n        }\n        result.add(dict);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123550,
      "stdout": "",
      "stderr": "/tmp/tmpzf2_xmu4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++){\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp7yb4fdeu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            d2.put(l2.get(i),l3.get(i));\n            d.put(l1.get(i),d2);\n        }\n        result.add(d);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpvgxpa6l_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123546,
      "stdout": "",
      "stderr": "/tmp/tmp97we3o8d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> map1 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            map1.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map1);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmp28m45cgf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpz1q88tki.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> innerMap = new HashMap<String,Long>();\n            innerMap.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp3kjlcgx3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i), l3.get(i));\n            temp.put(l1.get(i), temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmpvmnaevsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            if(map.containsKey(l1.get(i))) {\n                innerMap = map.get(l1.get(i));\n                innerMap.put(l2.get(i), l3.get(i));\n            } else {\n                innerMap = new HashMap<String,Long>();\n                innerMap.put(l2.get(i), l3.get(i));\n                map.put(l1.get(i), innerMap);\n            }\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpy316zvat.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n        }\n        result.add(temp);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp15plxisc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        for(int i=0;i<l1.size();i++) {\n            HashMap<String,Long> map2 = new HashMap<String,Long>();\n            map2.put(l2.get(i),l3.get(i));\n            map.put(l1.get(i),map2);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpzyd1nts1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i=0;i<l1.size();i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp544o_y18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        // Write your code here\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> map = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> innerMap = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            innerMap.put(l2.get(i), l3.get(i));\n            map.put(l1.get(i), innerMap);\n        }\n        result.add(map);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123551,
      "stdout": "",
      "stderr": "/tmp/tmpou2kgk_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> d = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> d2 = new HashMap<String,Long>();\n        for (int i = 0; i < l1.size(); i++) {\n            d2.put(l2.get(i), l3.get(i));\n            d.put(l1.get(i), d2);\n        }\n        result.add(d);\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1665510631,
      "stdout": "",
      "stderr": "/tmp/tmph_u1ccx4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert more than one list to nested dictionary.\n    public static ArrayList<HashMap<String,HashMap<String,Long>>> convertListDictionary(ArrayList<String> l1, ArrayList<String> l2, ArrayList<Long> l3) {\n        ArrayList<HashMap<String,HashMap<String,Long>>> result = new ArrayList<HashMap<String,HashMap<String,Long>>>();\n        HashMap<String,HashMap<String,Long>> temp = new HashMap<String,HashMap<String,Long>>();\n        HashMap<String,Long> temp2 = new HashMap<String,Long>();\n        for(int i = 0; i < l1.size(); i++) {\n            temp2.put(l2.get(i),l3.get(i));\n            temp.put(l1.get(i),temp2);\n            result.add(temp);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"S001\", (String)\"S002\", (String)\"S003\", (String)\"S004\"))), (new ArrayList<String>(Arrays.asList((String)\"Adina Park\", (String)\"Leyton Marsh\", (String)\"Duncan Boyle\", (String)\"Saim Richards\"))), (new ArrayList<Long>(Arrays.asList((long)85l, (long)98l, (long)89l, (long)92l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S001\", new HashMap<String,Long>(Map.of(\"Adina Park\", 85l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S002\", new HashMap<String,Long>(Map.of(\"Leyton Marsh\", 98l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S003\", new HashMap<String,Long>(Map.of(\"Duncan Boyle\", 89l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"S004\", new HashMap<String,Long>(Map.of(\"Saim Richards\", 92l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"abc\", (String)\"def\", (String)\"ghi\", (String)\"jkl\"))), (new ArrayList<String>(Arrays.asList((String)\"python\", (String)\"program\", (String)\"language\", (String)\"programs\"))), (new ArrayList<Long>(Arrays.asList((long)100l, (long)200l, (long)300l, (long)400l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"abc\", new HashMap<String,Long>(Map.of(\"python\", 100l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"def\", new HashMap<String,Long>(Map.of(\"program\", 200l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"ghi\", new HashMap<String,Long>(Map.of(\"language\", 300l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"jkl\", new HashMap<String,Long>(Map.of(\"programs\", 400l)))))))));\n    assert(convertListDictionary((new ArrayList<String>(Arrays.asList((String)\"A1\", (String)\"A2\", (String)\"A3\", (String)\"A4\"))), (new ArrayList<String>(Arrays.asList((String)\"java\", (String)\"C\", (String)\"C++\", (String)\"DBMS\"))), (new ArrayList<Long>(Arrays.asList((long)10l, (long)20l, (long)30l, (long)40l)))).equals((new ArrayList<HashMap<String,HashMap<String,Long>>>(Arrays.asList((HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A1\", new HashMap<String,Long>(Map.of(\"java\", 10l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A2\", new HashMap<String,Long>(Map.of(\"C\", 20l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A3\", new HashMap<String,Long>(Map.of(\"C++\", 30l)))), (HashMap<String,HashMap<String,Long>>)new HashMap<String,HashMap<String,Long>>(Map.of(\"A4\", new HashMap<String,Long>(Map.of(\"DBMS\", 40l)))))))));\n    }\n\n}\n",
      "timestamp": 1666123545,
      "stdout": "",
      "stderr": "/tmp/tmp9pjvhola.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_77_is_Diff",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to find whether a number is divisible by 11.\n    public static boolean isDiff(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_77_is_Diff.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isDiff((12345l)) == (false));\n    assert(isDiff((1212112l)) == (true));\n    assert(isDiff((1212l)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        String s = String.valueOf(n);\n        int len = s.length();\n        int sum1 = 0;\n        int sum2 = 0;\n        for (int i = 0; i < len; i++) {\n            if (i % 2 == 0) {\n                sum1 += s.charAt(i) - '0';\n            } else {\n                sum2 += s.charAt(i) - '0';\n            }\n        }\n        return Math.abs(sum1 - sum2) % 11 == 0;",
    "        if (n < 0) {\n            n = -n;\n        }\n        long sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        long t = n;\n        while (t > 0) {\n            long d = t % 10;\n            sum += d;\n            diff -= d;\n            t /= 10;\n        }\n        return (sum + diff) % 11 == 0;",
    "        return n % 11 == 0;",
    "        long sum = 0;\n        long diff = 0;\n        long num = n;\n        while (num > 0) {\n            long digit = num % 10;\n            sum += digit;\n            diff -= digit;\n            num /= 10;\n        }\n        return sum == diff;",
    "        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long sum1 = 0;\n        long sum2 = 0;\n        for (int i = 0; i < 10; i++) {\n            if (i % 2 == 0) {\n                sum1 += n % 10;\n            } else {\n                sum2 += n % 10;\n            }\n            n /= 10;\n        }\n        return isDiff(sum1 - sum2);",
    "        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            long d = n % 10;\n            sum += d;\n            n /= 10;\n            d = n % 10;\n            sum2 += d;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;",
    "        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                even += n % 10;\n            } else {\n                odd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(odd - even) % 11 == 0;",
    "        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        int even = 0;\n        int odd = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                even += n % 10;\n            } else {\n                odd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(even - odd) % 11 == 0;",
    "        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        long i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                even += n % 10;\n            } else {\n                odd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(odd - even) % 11 == 0;",
    "        String s = Long.toString(n);\n        int l = s.length();\n        int sum = 0;\n        for (int i = 0; i < l; i++) {\n            if (i % 2 == 0) {\n                sum += s.charAt(i) - '0';\n            } else {\n                sum -= s.charAt(i) - '0';\n            }\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;",
    "        if (n < 0) {\n            n = -n;\n        }\n        if (n < 10) {\n            return false;\n        }\n        long odd = 0;\n        long even = 0;\n        int i = 0;\n        while (n > 0) {\n            if (i % 2 == 0) {\n                even += n % 10;\n            } else {\n                odd += n % 10;\n            }\n            n /= 10;\n            i++;\n        }\n        return Math.abs(odd - even) % 11 == 0;",
    "        String s = Long.toString(n);\n        int l = s.length();\n        int sum = 0;\n        for (int i = 0; i < l; i++) {\n            int d = s.charAt(i) - '0';\n            if (i % 2 == 0) {\n                sum += d;\n            } else {\n                sum -= d;\n            }\n        }\n        return sum % 11 == 0;",
    "        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;",
    "        if (n < 0) return isDiff(-n);\n        if (n < 10) return false;\n        long d = n % 11;\n        if (d == 0) return false;\n        long m = n / 10;\n        return isDiff(m - 2 * d);",
    "        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < String.valueOf(n).length(); i++) {\n            if (i % 2 == 0) {\n                sum += Character.getNumericValue(String.valueOf(n).charAt(i));\n            } else {\n                sum2 += Character.getNumericValue(String.valueOf(n).charAt(i));\n            }\n        }\n        return sum - sum2 == 0;",
    "        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return Math.abs(sum - sum2) % 11 == 0;",
    "        long sum = 0;\n        long sum2 = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n            sum2 += n % 10;\n            n /= 10;\n        }\n        return sum == sum2;",
    "        long sum = 0;\n        long sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            } else {\n                sum2 += i;\n            }\n        }\n        return sum - sum2 == 0;"
  ]
}
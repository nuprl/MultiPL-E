{
  "name": "mbpp_119_search",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to find the element that appears only once in a sorted array.\n    public static long search(ArrayList<Long> arr) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_119_search.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(search((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)2l, (long)2l, (long)3l)))) == (3l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)3l, (long)3l, (long)4l, (long)4l, (long)5l, (long)5l, (long)7l, (long)7l, (long)8l)))) == (8l));\n    assert(search((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)2l, (long)3l, (long)3l, (long)4l, (long)4l)))) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            } else if (i == arr.size() - 1) {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            } else {\n                if (arr.get(i) != arr.get(i - 1) && arr.get(i) != arr.get(i + 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return ans;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else if (i == arr.size() - 1) {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else {\n                if (arr.get(i) != arr.get(i - 1) && arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) / 2;\n            if (mid == 0 || mid == n - 1) {\n                return arr.get(mid);\n            }\n            if (arr.get(mid) != arr.get(mid - 1) && arr.get(mid) != arr.get(mid + 1)) {\n                return arr.get(mid);\n            } else if (arr.get(mid) == arr.get(mid - 1)) {\n                if ((mid - 1) % 2 == 0) {\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            } else if (arr.get(mid) == arr.get(mid + 1)) {\n                if ((mid + 1) % 2 == 0) {\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            }\n        }\n        return -1;",
    "        int n = arr.size();\n        int i = 0;\n        while (i < n - 1) {\n            if (arr.get(i) != arr.get(i + 1)) {\n                return arr.get(i);\n            }\n            i += 2;\n        }\n        return arr.get(n - 1);",
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                ans ^= arr.get(i);\n            }\n        }\n        return ans;",
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                ans ^= arr.get(i);\n            }\n        }\n        return ans;",
    "        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else if (i == arr.size() - 1) {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else {\n                if (arr.get(i) != arr.get(i - 1) && arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        int n = arr.size();\n        int low = 0;\n        int high = n - 1;\n        while (low <= high) {\n            int mid = (low + high) / 2;\n            if (mid == 0 || mid == n - 1) {\n                return arr.get(mid);\n            }\n            if (arr.get(mid) != arr.get(mid - 1) && arr.get(mid) != arr.get(mid + 1)) {\n                return arr.get(mid);\n            }\n            if (arr.get(mid) == arr.get(mid - 1)) {\n                if ((mid - 1) % 2 == 0) {\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            } else {\n                if (mid % 2 == 0) {\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            }\n        }\n        return -1;",
    "        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                result = arr.get(i);\n            } else {\n                if (arr.get(i) != result) {\n                    return result;\n                }\n            }\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        int i = 0;\n        while (i < arr.size() - 1) {\n            if (arr.get(i) == arr.get(i + 1)) {\n                i += 2;\n            } else {\n                return arr.get(i);\n            }\n        }\n        return arr.get(arr.size() - 1);",
    "        long left = 0;\n        long right = arr.size() - 1;\n        while (left < right) {\n            long mid = (left + right) / 2;\n            if (arr.get((int) mid) == arr.get((int) mid + 1)) {\n                if ((mid - left) % 2 == 0) {\n                    left = mid + 2;\n                } else {\n                    right = mid - 1;\n                }\n            } else if (arr.get((int) mid) == arr.get((int) mid - 1)) {\n                if ((right - mid) % 2 == 0) {\n                    right = mid - 2;\n                } else {\n                    left = mid + 1;\n                }\n            } else {\n                return arr.get((int) mid);\n            }\n        }\n        return arr.get((int) left);",
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return ans;",
    "        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else if (i == arr.size() - 1) {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else {\n                if (arr.get(i) != arr.get(i - 1) && arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                result = result ^ arr.get(i);\n            }\n        }\n        return result;",
    "        // Write your code here\n        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                result = result ^ arr.get(i);\n            }\n        }\n        return result;",
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            } else if (i == arr.size() - 1) {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            } else {\n                if (arr.get(i) != arr.get(i - 1) && arr.get(i) != arr.get(i + 1)) {\n                    ans = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return ans;",
    "        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i == 0) {\n                if (arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else if (i == arr.size() - 1) {\n                if (arr.get(i) != arr.get(i - 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            } else {\n                if (arr.get(i) != arr.get(i - 1) && arr.get(i) != arr.get(i + 1)) {\n                    result = arr.get(i);\n                    break;\n                }\n            }\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                result = result ^ arr.get(i);\n            }\n        }\n        return result;",
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                ans ^= arr.get(i);\n            }\n        }\n        return ans;",
    "        long ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                ans ^= arr.get(i);\n            }\n        }\n        return ans;"
  ]
}
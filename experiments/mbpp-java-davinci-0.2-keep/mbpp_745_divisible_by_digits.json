{
  "name": "mbpp_745_divisible_by_digits",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            long num = i;\n            boolean isDivisible = true;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                ans.add(i);\n            }\n        }\n        return ans;",
    "        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                ans.add(i);\n            } else {\n                boolean flag = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0) {\n                        flag = false;\n                        break;\n                    }\n                    if (i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (flag) {\n                    ans.add(i);\n                }\n            }\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c != '0' && i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (divisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;"
  ]
}
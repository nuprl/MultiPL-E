{
  "name": "mbpp_606_radian_degree",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert degrees to radians.\n    public static float radianDegree(long degree) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_606_radian_degree.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(radianDegree((90l)) == (1.5707963267948966f));\n    assert(radianDegree((60l)) == (1.0471975511965976f));\n    assert(radianDegree((120l)) == (2.0943951023931953f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) Math.toRadians(degree);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float) (degree * (Math.PI / 180));",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * (Math.PI / 180));",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) Math.toRadians(degree);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * (Math.PI / 180));",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) degree * (float) Math.PI / 180;",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) ((degree * Math.PI) / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) degree * (float) Math.PI / 180;",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)degree * (float)Math.PI / 180;",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float)(degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);",
    "        return (float) (degree * Math.PI / 180);"
  ]
}
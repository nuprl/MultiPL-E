{
  "name": "mbpp_127_multiply_int",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to multiply two integers.\n    public static long multiplyInt(long x, long y) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_127_multiply_int.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(multiplyInt((10l), (20l)) == (200l));\n    assert(multiplyInt((5l), (10l)) == (50l));\n    assert(multiplyInt((4l), (8l)) == (32l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < y; i++) {\n            result += x;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x < 0 && y < 0) return multiplyInt(-x, -y);\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        if (x < y) return multiplyInt(y, x);\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x < 0 && y < 0) return multiplyInt(-x, -y);\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        return x * y;",
    "        // TODO: Implement me!\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        // TODO: Implement this function.\n        return 0;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result += x;\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        // TODO: Implement me!\n        return 0;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x > y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        if (x == Long.MIN_VALUE) {\n            if (y == -1) {\n                return Long.MAX_VALUE;\n            }\n            if (y == 1) {\n                return Long.MIN_VALUE;\n            }\n            return 0;\n        }\n        if (y == Long.MIN_VALUE) {\n            if (x == -1) {\n                return Long.MAX_VALUE;\n            }\n            if (x == 1) {\n                return Long.MIN_VALUE;\n            }\n            return 0;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        long sum = 0;\n        for (int i = 0; i < Math.abs(x); i++) {\n            sum += y;\n        }\n        if (x < 0) {\n            sum *= -1;\n        }\n        return sum;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = add(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        long result = 0;\n        if (x < 0 && y < 0) {\n            result = multiplyInt(-x, -y);\n        } else if (x < 0) {\n            result = -multiplyInt(-x, y);\n        } else if (y < 0) {\n            result = -multiplyInt(x, -y);\n        } else {\n            for (int i = 0; i < y; i++) {\n                result += x;\n            }\n        }\n        return result;",
    "        // Your code here.\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        long result = 0;\n        long x_copy = x;\n        long y_copy = y;\n        if (x < 0) {\n            x_copy = -x;\n        }\n        if (y < 0) {\n            y_copy = -y;\n        }\n        while (y_copy > 0) {\n            if ((y_copy & 1) == 1) {\n                result += x_copy;\n            }\n            x_copy <<= 1;\n            y_copy >>= 1;\n        }\n        if ((x < 0 && y < 0) || (x > 0 && y > 0)) {\n            return result;\n        } else {\n            return -result;\n        }",
    "        // TODO: Implement this function.\n        return 0;",
    "        // Fill in the code here.\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        // TODO: Implement this function\n        return 0;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x > y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == Long.MIN_VALUE) {\n            if (y == -1) return Long.MAX_VALUE;\n            return 0;\n        }\n        if (y == Long.MIN_VALUE) {\n            if (x == -1) return Long.MAX_VALUE;\n            return 0;\n        }\n        if (x < 0) {\n            if (y < 0) return multiplyInt(-x, -y);\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) return -multiplyInt(x, -y);\n        if (x < y) return multiplyInt(y, x);\n        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) result += x;\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        // TODO: Implement me!\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        long result = 0;\n        long x_abs = Math.abs(x);\n        long y_abs = Math.abs(y);\n        for (int i = 0; i < y_abs; i++) {\n            result += x_abs;\n        }\n        if (x < 0 && y < 0) {\n            return result;\n        } else if (x < 0 || y < 0) {\n            return -result;\n        } else {\n            return result;\n        }",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        long sum = 0;\n        for (int i = 0; i < Math.abs(y); i++) {\n            sum += x;\n        }\n        if (y < 0) {\n            sum = -sum;\n        }\n        return sum;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = add(result, x);\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        // Your code here.\n        return 0;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        long result = 0;\n        for (int i = 0; i < y; i++) {\n            result += x;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        return x * y;",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        long a = Math.max(x, y);\n        long b = Math.min(x, y);\n        return a + multiplyInt(a, b - 1);",
    "        // Write your code here\n        return x * y;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        long sum = 0;\n        for (int i = 0; i < y; i++) {\n            sum += x;\n        }\n        return sum;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x < 0 && y < 0) return multiplyInt(-x, -y);\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        if (x < y) return multiplyInt(y, x);\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == 2) return y << 1;\n        if (y == 2) return x << 1;\n        if (x == -2) return -(y << 1);\n        if (y == -2) return -(x << 1);\n        if (x == 3) return y + y + y;\n        if (y == 3) return x + x + x;\n        if (x == -3) return -(y + y + y);\n        if (y == -3) return -(x + x + x);\n        if (x == 4) return y << 2;\n        if (y == 4) return x << 2;\n        if (x == -4) return -(y << 2);\n        if (y == -4) return -(x << 2);\n        if (x == 5) return y + y + y + y + y;\n        if (y == 5) return x + x + x + x + x;\n        if (x == -5) return -(y + y + y + y + y);\n        if (y == -5) return -(x + x + x + x + x);\n        if (x == 6) return y + y + y + y + y + y;\n        if (y == 6) return x + x + x + x + x + x;\n        if (x == -6) return -(y + y + y + y + y + y);\n        if (y == -6) return -(x + x + x + x + x + x);\n        if (x == 7) return y + y + y + y + y + y + y;\n        if (y == 7) return x + x + x + x + x + x + x;\n        if (x == -7) return -(y + y + y + y + y + y + y);\n        if (y == -7) return -(x + x + x + x + x + x",
    "        return x * y;",
    "        return x * y;",
    "        // TODO: Implement this function.\n        return 0;",
    "        long result = 0;\n        while (x != 0) {\n            if ((x & 1) != 0) {\n                result = addInt(result, y);\n            }\n            x >>>= 1;\n            y <<= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        long sum = 0;\n        for (int i = 0; i < Math.abs(y); i++) {\n            sum += x;\n        }\n        if (y < 0) {\n            sum = -sum;\n        }\n        return sum;",
    "        return x * y;",
    "        return x * y;",
    "        return x * y;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x > y) {\n            return multiplyInt(y, x);\n        }\n        long result = 0;\n        while (x > 0) {\n            result += y;\n            x--;\n        }\n        return result;",
    "        return x * y;",
    "        long result = 0;\n        for (int i = 0; i < y; i++) {\n            result += x;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        // Implement this placeholder.\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        long sum = 0;\n        for (int i = 0; i < Math.abs(x); i++) {\n            sum += y;\n        }\n        if (x < 0) {\n            sum = -sum;\n        }\n        return sum;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) == 1) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        long result = 0;\n        long x_copy = x;\n        long y_copy = y;\n        while (y_copy != 0) {\n            if ((y_copy & 1) == 1) {\n                result += x_copy;\n            }\n            x_copy <<= 1;\n            y_copy >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        return x * y;",
    "        // TODO: Implement this function.\n        return 0;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == 2) return y << 1;\n        if (y == 2) return x << 1;\n        if (x == -2) return y << 1;\n        if (y == -2) return x << 1;\n        if (x == 3) return y + y + y;\n        if (y == 3) return x + x + x;\n        if (x == -3) return -(y + y + y);\n        if (y == -3) return -(x + x + x);\n        if (x == 4) return y << 2;\n        if (y == 4) return x << 2;\n        if (x == -4) return y << 2;\n        if (y == -4) return x << 2;\n        if (x == 5) return y + y + y + y + y;\n        if (y == 5) return x + x + x + x + x;\n        if (x == -5) return -(y + y + y + y + y);\n        if (y == -5) return -(x + x + x + x + x);\n        if (x == 6) return y + y + y + y + y + y;\n        if (y == 6) return x + x + x + x + x + x;\n        if (x == -6) return -(y + y + y + y + y + y);\n        if (y == -6) return -(x + x + x + x + x + x);\n        if (x == 7) return y + y + y + y + y + y + y;\n        if (y == 7) return x + x + x + x + x + x + x;\n        if (x == -7) return -(y + y + y + y + y + y + y);\n        if (y == -7) return -(x + x + x + x + x + x + x);\n        if (x",
    "        // Your code here.\n        return 0;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == -2147483648) return y == -1 ? x : 0;\n        if (y == -2147483648) return x == -1 ? y : 0;\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        if (x < y) return multiplyInt(y, x);\n        return x + multiplyInt(x, y - 1);",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        return x + multiplyInt(x, y - 1);",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        // TODO: Write - Your - Code\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        long result = 0;\n        if (x < 0) {\n            result = -y;\n            x++;\n        } else {\n            result = y;\n        }\n        while (x != 1) {\n            result += y;\n            x--;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        long result = 0;\n        for (int i = 0; i < Math.abs(y); i++) {\n            result += x;\n        }\n        if (y < 0) {\n            result = -result;\n        }\n        return result;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >>> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        return x + multiplyInt(x, y-1);",
    "        // Your code here.\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == 2) return y << 1;\n        if (y == 2) return x << 1;\n        if (x == -2) return -(y << 1);\n        if (y == -2) return -(x << 1);\n        if (x == 3) return y + y + y;\n        if (y == 3) return x + x + x;\n        if (x == -3) return -(y + y + y);\n        if (y == -3) return -(x + x + x);\n        if (x == 4) return y << 2;\n        if (y == 4) return x << 2;\n        if (x == -4) return -(y << 2);\n        if (y == -4) return -(x << 2);\n        if (x == 5) return y + y + y + y + y;\n        if (y == 5) return x + x + x + x + x;\n        if (x == -5) return -(y + y + y + y + y);\n        if (y == -5) return -(x + x + x + x + x);\n        if (x == 6) return y + y + y + y + y + y;\n        if (y == 6) return x + x + x + x + x + x;\n        if (x == -6) return -(y + y + y + y + y + y);\n        if (y == -6) return -(x + x + x + x + x + x);\n        if (x == 7) return y + y + y + y + y + y + y;\n        if (y == 7) return x + x + x + x + x + x + x;\n        if (x == -7) return -(y + y + y + y + y + y + y);\n        if (y == -7) return -(x + x + x + x + x + x",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        return x + multiplyInt(x, y - 1);",
    "        return x * y;",
    "        return x * y;",
    "        // Write your code here.\n        return 0;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x < 0 && y < 0) return multiplyInt(-x, -y);\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        if (x > y) return multiplyInt(y, x);\n        long result = 0;\n        while (x > 0) {\n            if ((x & 1) == 1) result += y;\n            x >>= 1;\n            y <<= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x > y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        long result = 0;\n        long absX = Math.abs(x);\n        long absY = Math.abs(y);\n        for (int i = 0; i < absY; i++) {\n            result += absX;\n        }\n        if (x < 0 && y < 0) {\n            return result;\n        } else if (x < 0 || y < 0) {\n            return -result;\n        } else {\n            return result;\n        }",
    "        return x * y;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result += x;\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        // Your code here.\n        return 0;",
    "        return x * y;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == 2) return y << 1;\n        if (y == 2) return x << 1;\n        if (x == -2) return -(y << 1);\n        if (y == -2) return -(x << 1);\n        if (x == 3) return y + y + y;\n        if (y == 3) return x + x + x;\n        if (x == -3) return -(y + y + y);\n        if (y == -3) return -(x + x + x);\n        if (x == 4) return y << 2;\n        if (y == 4) return x << 2;\n        if (x == -4) return -(y << 2);\n        if (y == -4) return -(x << 2);\n        if (x == 5) return y + y + y + y + y;\n        if (y == 5) return x + x + x + x + x;\n        if (x == -5) return -(y + y + y + y + y);\n        if (y == -5) return -(x + x + x + x + x);\n        if (x == 6) return y + y + y + y + y + y;\n        if (y == 6) return x + x + x + x + x + x;\n        if (x == -6) return -(y + y + y + y + y + y);\n        if (y == -6) return -(x + x + x + x + x + x);\n        if (x == 7) return y + y + y + y + y + y + y;\n        if (y == 7) return x + x + x + x + x + x + x;\n        if (x == -7) return -(y + y + y + y + y + y + y);\n        if (y == -7) return -(x + x + x + x + x + x",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = add(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = add(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x == -1) return -y;\n        if (y == -1) return -x;\n        if (x == Long.MIN_VALUE && y == Long.MIN_VALUE) return 1;\n        if (x == Long.MIN_VALUE) return -multiplyInt(-x, y);\n        if (y == Long.MIN_VALUE) return -multiplyInt(x, -y);\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        long result = 0;\n        while (y > 0) {\n            result += x;\n            y--;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        long result = 0;\n        long absX = Math.abs(x);\n        long absY = Math.abs(y);\n        if (absX < absY) {\n            result = multiplyInt(absY, absX);\n        } else {\n            long absY2 = absY;\n            while (absY2 > 0) {\n                result += absX;\n                absY2--;\n            }\n        }\n        if (x < 0 && y < 0) return result;\n        if (x < 0 || y < 0) return -result;\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        long result = 0;\n        if (x < 0 && y < 0) {\n            result = multiplyInt(Math.abs(x), Math.abs(y));\n        } else if (x < 0) {\n            result = -multiplyInt(Math.abs(x), y);\n        } else if (y < 0) {\n            result = -multiplyInt(x, Math.abs(y));\n        } else {\n            result = x + multiplyInt(x, y - 1);\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = add(result, x);\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        long result = 0;\n        long x_abs = Math.abs(x);\n        long y_abs = Math.abs(y);\n        for (int i = 0; i < y_abs; i++) {\n            result += x_abs;\n        }\n        if (x < 0 && y < 0) {\n            return result;\n        } else if (x < 0 || y < 0) {\n            return -result;\n        } else {\n            return result;\n        }",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        // Write your code here.\n        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (x != 0) {\n            if ((x & 1) != 0) {\n                result = addInt(result, y);\n            }\n            x >>>= 1;\n            y <<= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result += x;\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        // Your code here.\n        return 0;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x == -1) {\n            return -y;\n        }\n        if (y == -1) {\n            return -x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x < y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < y; i++) {\n            result += x;\n        }\n        return result;",
    "        // TODO: Implement this function.\n        return 0;",
    "        // Implement this placeholder.\n        return 0;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        // TODO: Implement this function.\n        return 0;",
    "        long result = 0;\n        for (int i = 0; i < Math.abs(y); i++) {\n            result += x;\n        }\n        if (y < 0) {\n            result = -result;\n        }\n        return result;",
    "        // TODO: Implement me!\n        return 0;",
    "        return x * y;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = add(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        return x * y;",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        if (x < 0 && y < 0) {\n            return multiplyInt(-x, -y);\n        }\n        if (x < 0) {\n            return -multiplyInt(-x, y);\n        }\n        if (y < 0) {\n            return -multiplyInt(x, -y);\n        }\n        if (x > y) {\n            return multiplyInt(y, x);\n        }\n        return x + multiplyInt(x, y - 1);",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result += x;\n            }\n            x <<= 1;\n            y >>= 1;\n        }\n        return result;",
    "        // TODO: Implement this function.\n        return 0;",
    "        return x * y;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y != 0) {\n            if ((y & 1) != 0) {\n                result = addInt(result, x);\n            }\n            x <<= 1;\n            y >>>= 1;\n        }\n        return result;",
    "        long result = 0;\n        while (y > 0) {\n            if ((y & 1) == 1) {\n                result = result + x;\n            }\n            x = x << 1;\n            y = y >> 1;\n        }\n        return result;",
    "        if (x == 0 || y == 0) return 0;\n        if (x == 1) return y;\n        if (y == 1) return x;\n        if (x < 0 && y < 0) return multiplyInt(-x, -y);\n        if (x < 0) return -multiplyInt(-x, y);\n        if (y < 0) return -multiplyInt(x, -y);\n        if (x > y) return multiplyInt(y, x);\n        return x + multiplyInt(x, y - x);",
    "        if (x == 0 || y == 0) {\n            return 0;\n        }\n        if (x == 1) {\n            return y;\n        }\n        if (y == 1) {\n            return x;\n        }\n        long result = 0;\n        if (x < 0) {\n            result -= y;\n            x++;\n        }\n        if (y < 0) {\n            result -= x;\n            y++;\n        }\n        while (x > 1) {\n            result += y;\n            x--;\n        }\n        while (y > 1) {\n            result += x;\n            y--;\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_12_sort_matrix",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_12_sort_matrix.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sortedM.add(p.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpk44p2xlm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpk44p2xlm.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk44p2xlm.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk44p2xlm.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk44p2xlm.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk44p2xlm.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpk44p2xlm.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpk44p2xlm.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : pairs) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpv8tx97od.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpv8tx97od.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpv8tx97od.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                     ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpv8tx97od.java:18: error: cannot find symbol\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpv8tx97od.java:20: error: cannot find symbol\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                               ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpv8tx97od.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpv8tx97od.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpv8tx97od.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : pairs) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpp8jqy7c1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpp8jqy7c1.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpp8jqy7c1.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpp8jqy7c1.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpp8jqy7c1.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpp8jqy7c1.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpp8jqy7c1.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpk5sti03_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpk5sti03_.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk5sti03_.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk5sti03_.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            res.add(sums.get(i).getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpldkadr2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpldkadr2_.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpldkadr2_.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpldkadr2_.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpldkadr2_.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpldkadr2_.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (Long sum : sortedSums) {\n            int i = sums.indexOf(sum);\n            sorted.add(M.get(i));\n            sums.set(i, Long.MAX_VALUE);\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmp9amolymc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmp_puf7gdf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_puf7gdf.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_puf7gdf.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_puf7gdf.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_puf7gdf.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp_puf7gdf.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp_puf7gdf.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmp0bwo3e3n.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0bwo3e3n.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0bwo3e3n.java:19: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0bwo3e3n.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510457,
      "stdout": "",
      "stderr": "/tmp/tmpumxq7bf_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpumxq7bf_.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpumxq7bf_.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpumxq7bf_.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpumxq7bf_.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long val : row) {\n                sum += val;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmptt323zl2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptt323zl2.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptt323zl2.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptt323zl2.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptt323zl2.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptt323zl2.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmptt323zl2.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmptt323zl2.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpwcn8n8sd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpwcn8n8sd.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwcn8n8sd.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwcn8n8sd.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwcn8n8sd.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwcn8n8sd.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpwcn8n8sd.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpwcn8n8sd.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            sorted.add(sums.get(i).getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpyjf3w8cf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyjf3w8cf.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyjf3w8cf.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyjf3w8cf.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyjf3w8cf.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyjf3w8cf.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpyjf3w8cf.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, Integer>(sum, i));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (int i = 0; i < sums.size(); i++) {\n            res.add(M.get(sums.get(i).getValue1()));\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpgggy1aou.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgggy1aou.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgggy1aou.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                                                            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgggy1aou.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, Integer>(sum, i));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpzw2htpuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpzw2htpuf.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpzw2htpuf.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpzw2htpuf.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpzw2htpuf.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpfxnirqqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfxnirqqr.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxnirqqr.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxnirqqr.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpl5juw6pn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpl5juw6pn.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl5juw6pn.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl5juw6pn.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl5juw6pn.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpl5juw6pn.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpl5juw6pn.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmppfuninlq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppfuninlq.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmppfuninlq.java:19: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmppfuninlq.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpz4yjub6w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz4yjub6w.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpz4yjub6w.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpz4yjub6w.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpz4yjub6w.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpz4yjub6w.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpz4yjub6w.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpz4yjub6w.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpd_1gau0s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd_1gau0s.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpbtw5c_ka.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbtw5c_ka.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbtw5c_ka.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbtw5c_ka.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbtw5c_ka.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbtw5c_ka.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpbtw5c_ka.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpbtw5c_ka.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpqv6doo9_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqv6doo9_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqv6doo9_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqv6doo9_.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqv6doo9_.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqv6doo9_.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpqv6doo9_.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpqv6doo9_.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510456,
      "stdout": "",
      "stderr": "/tmp/tmphii3_kmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        // Create a map to store the sum of each row\n        HashMap<Integer, Long> map = new HashMap<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            map.put(i, sum);\n        }\n        // Sort the map\n        List<Map.Entry<Integer, Long>> list = new ArrayList<>(map.entrySet());\n        Collections.sort(list, new Comparator<Map.Entry<Integer, Long>>() {\n            @Override\n            public int compare(Map.Entry<Integer, Long> o1, Map.Entry<Integer, Long> o2) {\n                return o1.getValue().compareTo(o2.getValue());\n            }\n        });\n        // Create a new matrix\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Map.Entry<Integer, Long> entry : list) {\n            result.add(M.get(entry.getKey()));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpxm3rh7c0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpx4h26gc1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx4h26gc1.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpx4h26gc1.java:13: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpx4h26gc1.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpph489ysv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpph489ysv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpph489ysv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpph489ysv.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpph489ysv.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpi7wq5zsf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi7wq5zsf.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi7wq5zsf.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi7wq5zsf.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi7wq5zsf.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi7wq5zsf.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpi7wq5zsf.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpi7wq5zsf.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sortedM.add(pair.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpbbck4r24.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbbck4r24.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbbck4r24.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbbck4r24.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbbck4r24.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbbck4r24.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpbbck4r24.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpbbck4r24.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for(ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for(Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp1qkjnga2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1qkjnga2.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1qkjnga2.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1qkjnga2.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1qkjnga2.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmp1qkjnga2.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1qkjnga2.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp1qkjnga2.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp1qkjnga2.java:21: error: cannot find symbol\n        for(Pair<Long, ArrayList<Long>> p : sums) {\n            ^\n  symbol:   class Pair\n  location: class Problem\n9 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp3jac1upv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3jac1upv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3jac1upv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3jac1upv.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3jac1upv.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().mapToLong(Long::longValue).sum());\n        }\n        for (int i = 0; i < M.size(); i++) {\n            int minIndex = sums.indexOf(Collections.min(sums));\n            sorted.add(M.get(minIndex));\n            sums.set(minIndex, Long.MAX_VALUE);\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpxga1ojep.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        for (int i = 0; i < M.size(); i++) {\n            sorted.add(M.get(i));\n        }\n        for (int i = 0; i < sorted.size(); i++) {\n            for (int j = i + 1; j < sorted.size(); j++) {\n                if (sorted.get(i).stream().mapToLong(Long::longValue).sum() > sorted.get(j).stream().mapToLong(Long::longValue).sum()) {\n                    ArrayList<Long> temp = sorted.get(i);\n                    sorted.set(i, sorted.get(j));\n                    sorted.set(j, temp);\n                }\n            }\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp5zt474sp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "/tmp/tmp9w_51u8g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp9w_51u8g.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp9w_51u8g.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp9w_51u8g.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(i, sum));\n        }\n        sums.sort((a, b) -> a.getValue1().compareTo(b.getValue1()));\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(M.get(sums.get(i).getValue0()));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpooafvb8r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpooafvb8r.java:13: error: cannot find symbol\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpooafvb8r.java:19: error: cannot find symbol\n            sums.add(new Pair<>(i, sum));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> (int) (x.getValue0() - y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpf_zqzkoq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpf_zqzkoq.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf_zqzkoq.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf_zqzkoq.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf_zqzkoq.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(sum, M.get(i)));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (int i = 0; i < sums.size(); i++) {\n            res.add(sums.get(i).getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123491,
      "stdout": "",
      "stderr": "/tmp/tmpn9v043wd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn9v043wd.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpn9v043wd.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmptkxqi59w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptkxqi59w.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmptkxqi59w.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmptkxqi59w.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpl0ze7x1l.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpl0ze7x1l.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl0ze7x1l.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl0ze7x1l.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl0ze7x1l.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpl0ze7x1l.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl0ze7x1l.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpl0ze7x1l.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpl0ze7x1l.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n9 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "/tmp/tmp6p7kh4l5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6p7kh4l5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6p7kh4l5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6p7kh4l5.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6p7kh4l5.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510456,
      "stdout": "",
      "stderr": "/tmp/tmphii3_kmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp_dn7rh_q.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_dn7rh_q.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_dn7rh_q.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_dn7rh_q.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpqidkqbzx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqidkqbzx.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqidkqbzx.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqidkqbzx.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpqidkqbzx.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqidkqbzx.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpqidkqbzx.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpqidkqbzx.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long l : row) {\n                sum += l;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "/tmp/tmp6dpw7210.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6dpw7210.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6dpw7210.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6dpw7210.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmptkxqi59w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptkxqi59w.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptkxqi59w.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmptkxqi59w.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmptkxqi59w.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510456,
      "stdout": "",
      "stderr": "/tmp/tmphii3_kmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            sums.add(M.get(i).stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (int i = 0; i < sortedSums.size(); i++) {\n            int index = sums.indexOf(sortedSums.get(i));\n            result.add(M.get(index));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpoqlymk1u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(M.get(i)), M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpie3amzqz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpie3amzqz.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpie3amzqz.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpie3amzqz.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(M.get(i)), M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpie3amzqz.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(M.get(i)), M.get(i)));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpie3amzqz.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpie3amzqz.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpie3amzqz.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here.\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, Integer>(sum, i));\n        }\n        sums.sort(new Comparator<Pair<Long, Integer>>() {\n            @Override\n            public int compare(Pair<Long, Integer> o1, Pair<Long, Integer> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(M.get(sums.get(i).getValue1()));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpl49tkkrx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpl49tkkrx.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl49tkkrx.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                                                            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl49tkkrx.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, Integer>(sum, i));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl49tkkrx.java:21: error: cannot find symbol\n        sums.sort(new Comparator<Pair<Long, Integer>>() {\n                                 ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl49tkkrx.java:23: error: cannot find symbol\n            public int compare(Pair<Long, Integer> o1, Pair<Long, Integer> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpl49tkkrx.java:23: error: cannot find symbol\n            public int compare(Pair<Long, Integer> o1, Pair<Long, Integer> o2) {\n                                                       ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long val : row) {\n                sum += val;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpf95i1qin.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpf95i1qin.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf95i1qin.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf95i1qin.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf95i1qin.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpf95i1qin.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpf95i1qin.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpf95i1qin.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> sum : sums) {\n            sorted.add(sum.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpxouc8saa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpxouc8saa.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpxouc8saa.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpxouc8saa.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpxouc8saa.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> sum : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            sums.add(sum(M.get(i)));\n        }\n        ArrayList<Long> sortedSums = sort(sums);\n        for (int i = 0; i < sortedSums.size(); i++) {\n            for (int j = 0; j < sums.size(); j++) {\n                if (sortedSums.get(i).equals(sums.get(j))) {\n                    sorted.add(M.get(j));\n                    sums.set(j, Long.MAX_VALUE);\n                    break;\n                }\n            }\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp2u870ied.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2u870ied.java:14: error: cannot find symbol\n            sums.add(sum(M.get(i)));\n                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmp2u870ied.java:16: error: cannot find symbol\n        ArrayList<Long> sortedSums = sort(sums);\n                                     ^\n  symbol:   method sort(ArrayList<Long>)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp24cjxexc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp24cjxexc.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp24cjxexc.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp24cjxexc.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp24cjxexc.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp24cjxexc.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp24cjxexc.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp24cjxexc.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "/tmp/tmpgxirl92u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgxirl92u.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpgxirl92u.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<ArrayList<Long>, Long>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<ArrayList<Long>, Long>(row, row.stream().reduce(0L, (a, b) -> a + b)));\n        }\n        sums.sort((a, b) -> a.getValue1().compareTo(b.getValue1()));\n        for (Pair<ArrayList<Long>, Long> pair : sums) {\n            sorted.add(pair.getValue0());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp_x_l0nk8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_x_l0nk8.java:12: error: cannot find symbol\n        ArrayList<Pair<ArrayList<Long>, Long>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_x_l0nk8.java:14: error: cannot find symbol\n            sums.add(new Pair<ArrayList<Long>, Long>(row, row.stream().reduce(0L, (a, b) -> a + b)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_x_l0nk8.java:17: error: cannot find symbol\n        for (Pair<ArrayList<Long>, Long> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpd_1gau0s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd_1gau0s.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> S = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().mapToLong(Long::longValue).sum());\n        }\n        for (int i = 0; i < sums.size(); i++) {\n            int minIndex = i;\n            for (int j = i + 1; j < sums.size(); j++) {\n                if (sums.get(j) < sums.get(minIndex)) {\n                    minIndex = j;\n                }\n            }\n            Collections.swap(sums, i, minIndex);\n            Collections.swap(M, i, minIndex);\n        }\n        return M;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp8wbs74i8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpw1534jj0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpw1534jj0.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpw1534jj0.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpw1534jj0.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpw1534jj0.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpw1534jj0.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmpa_ceiupb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpa_ceiupb.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa_ceiupb.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa_ceiupb.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long n : row) {\n                sum += n;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpgl43sli7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgl43sli7.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgl43sli7.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgl43sli7.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgl43sli7.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgl43sli7.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpgl43sli7.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpgl43sli7.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            pairs.add(new Pair<>(sum, row));\n        }\n        Collections.sort(pairs, (a, b) -> {\n            if (a.getValue0() < b.getValue0()) {\n                return -1;\n            } else if (a.getValue0() > b.getValue0()) {\n                return 1;\n            }\n            return 0;\n        });\n        for (Pair<Long, ArrayList<Long>> pair : pairs) {\n            res.add(pair.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "/tmp/tmpt8wvmlnx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpt8wvmlnx.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpt8wvmlnx.java:18: error: cannot find symbol\n            pairs.add(new Pair<>(sum, row));\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpt8wvmlnx.java:28: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : pairs) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sortedM.add(pair.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510457,
      "stdout": "",
      "stderr": "/tmp/tmpyaufu0lc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyaufu0lc.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyaufu0lc.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyaufu0lc.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpyaufu0lc.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpyaufu0lc.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> ans = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for(int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for(int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for(int i = 0; i < sums.size(); i++) {\n            ans.add(sums.get(i).getValue1());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "/tmp/tmp15ebpkvb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp15ebpkvb.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp15ebpkvb.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp15ebpkvb.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp15ebpkvb.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp15ebpkvb.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp15ebpkvb.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<ArrayList<Long>>();\n        for (int i = 0; i < M.size(); i++) {\n            res.add(new ArrayList<Long>());\n            for (int j = 0; j < M.get(i).size(); j++) {\n                res.get(i).add(M.get(i).get(j));\n            }\n        }\n        for (int i = 0; i < res.size(); i++) {\n            for (int j = 0; j < res.size() - 1; j++) {\n                if (res.get(j).stream().mapToLong(Long::longValue).sum() > res.get(j + 1).stream().mapToLong(Long::longValue).sum()) {\n                    ArrayList<Long> temp = res.get(j);\n                    res.set(j, res.get(j + 1));\n                    res.set(j + 1, temp);\n                }\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "/tmp/tmpqlqg0l7_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort(new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp3efugpb9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3efugpb9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3efugpb9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3efugpb9.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3efugpb9.java:16: error: cannot find symbol\n        sums.sort(new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                 ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3efugpb9.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp3efugpb9.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp3efugpb9.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123484,
      "stdout": "",
      "stderr": "/tmp/tmpubc_lwyr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpubc_lwyr.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpubc_lwyr.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpubc_lwyr.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpubc_lwyr.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            sums.add(i, M.get(i).stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (int i = 0; i < sortedSums.size(); i++) {\n            int index = sums.indexOf(sortedSums.get(i));\n            result.add(M.get(index));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpkteep3k0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmpo048mur3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpo048mur3.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpo048mur3.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpo048mur3.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpo048mur3.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmphpb1nm0x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphpb1nm0x.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphpb1nm0x.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphpb1nm0x.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphpb1nm0x.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmphpb1nm0x.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmphpb1nm0x.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, (a, b) -> {\n            if (a.getValue0() > b.getValue0()) {\n                return 1;\n            } else if (a.getValue0() < b.getValue0()) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpnm5qpkk6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnm5qpkk6.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnm5qpkk6.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnm5qpkk6.java:29: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(sum);\n        }\n        for (int i = 0; i < sums.size(); i++) {\n            int min = i;\n            for (int j = i + 1; j < sums.size(); j++) {\n                if (sums.get(j) < sums.get(min)) {\n                    min = j;\n                }\n            }\n            if (min != i) {\n                long temp = sums.get(i);\n                sums.set(i, sums.get(min));\n                sums.set(min, temp);\n                ArrayList<Long> temp2 = M.get(i);\n                M.set(i, M.get(min));\n                M.set(min, temp2);\n            }\n        }\n        return M;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp2rw_podz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long i : row) {\n                sum += i;\n            }\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : pairs) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpkmmlb1pb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpkmmlb1pb.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkmmlb1pb.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                     ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkmmlb1pb.java:18: error: cannot find symbol\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkmmlb1pb.java:20: error: cannot find symbol\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                               ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpkmmlb1pb.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpkmmlb1pb.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpkmmlb1pb.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : pairs) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        for (ArrayList<Long> row : M) {\n            result.add(row);\n        }\n        Collections.sort(result, new Comparator<ArrayList<Long>>() {\n            @Override\n            public int compare(ArrayList<Long> row1, ArrayList<Long> row2) {\n                long sum1 = 0;\n                long sum2 = 0;\n                for (long num : row1) {\n                    sum1 += num;\n                }\n                for (long num : row2) {\n                    sum2 += num;\n                }\n                if (sum1 < sum2) {\n                    return -1;\n                } else if (sum1 > sum2) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n        });\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpxojktrmw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long i : row) {\n                sum += i;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sortedM.add(p.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpqcezb8nc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqcezb8nc.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqcezb8nc.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqcezb8nc.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqcezb8nc.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqcezb8nc.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpqcezb8nc.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpqcezb8nc.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp3jac1upv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3jac1upv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3jac1upv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3jac1upv.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3jac1upv.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long n : row) {\n                sum += n;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp7p5ufkr0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7p5ufkr0.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7p5ufkr0.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7p5ufkr0.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7p5ufkr0.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7p5ufkr0.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp7p5ufkr0.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp7p5ufkr0.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp18w64_g1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp18w64_g1.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp18w64_g1.java:19: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp18w64_g1.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sortedM.add(p.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "/tmp/tmp8dljr9z6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8dljr9z6.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8dljr9z6.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8dljr9z6.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8dljr9z6.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmp8dljr9z6.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8dljr9z6.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp8dljr9z6.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp8dljr9z6.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n9 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpcgsnov9e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpcgsnov9e.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpcgsnov9e.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpcgsnov9e.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpcgsnov9e.java:17: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpcgsnov9e.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpcgsnov9e.java:18: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpcgsnov9e.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpz42em7rw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz42em7rw.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpz42em7rw.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpz42em7rw.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmpgvdsmys9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgvdsmys9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sortedM.add(p.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123493,
      "stdout": "",
      "stderr": "/tmp/tmp9dc3cfgk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp9dc3cfgk.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9dc3cfgk.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9dc3cfgk.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9dc3cfgk.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> ans = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ans.add(p.getValue1());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpux_2ciy9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpux_2ciy9.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpux_2ciy9.java:17: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpux_2ciy9.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmp0ezj2iwp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0ezj2iwp.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0ezj2iwp.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0ezj2iwp.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0ezj2iwp.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long l : row) {\n                sum += l;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp636ggknh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp636ggknh.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp636ggknh.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp636ggknh.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp636ggknh.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp636ggknh.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp636ggknh.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp636ggknh.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        Collections.sort(sums, (x, y) -> x.getValue0().compareTo(y.getValue0()));\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmp_v59_fue.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_v59_fue.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_v59_fue.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_v59_fue.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmp0w7wcc7d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0w7wcc7d.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0w7wcc7d.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0w7wcc7d.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Long> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(sum);\n        }\n        ArrayList<Long> sumsCopy = new ArrayList<>(sums);\n        Collections.sort(sumsCopy);\n        for (int i = 0; i < sumsCopy.size(); i++) {\n            int index = sums.indexOf(sumsCopy.get(i));\n            result.add(M.get(index));\n            sums.set(index, (long) -1);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpiohfbt_0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmp4xnuzapt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4xnuzapt.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4xnuzapt.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4xnuzapt.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4xnuzapt.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp4xnuzapt.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmp43y_wrkn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp43y_wrkn.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp43y_wrkn.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp43y_wrkn.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp43y_wrkn.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> row : sums) {\n            result.add(row.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpk33ch1no.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpk33ch1no.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk33ch1no.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk33ch1no.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk33ch1no.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> row : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long i : row) {\n                sum += i;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmpj4vsem2j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpj4vsem2j.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj4vsem2j.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj4vsem2j.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj4vsem2j.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpj4vsem2j.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpj4vsem2j.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpj4vsem2j.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().reduce(0L, (a, b) -> a + b));\n        }\n        for (int i = 0; i < M.size(); i++) {\n            int min = i;\n            for (int j = i; j < M.size(); j++) {\n                if (sums.get(j) < sums.get(min)) {\n                    min = j;\n                }\n            }\n            Collections.swap(sums, i, min);\n            Collections.swap(M, i, min);\n        }\n        return M;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpa99j3ux3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpn8bcf5b1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn8bcf5b1.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpn8bcf5b1.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpn8bcf5b1.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpn8bcf5b1.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        // Sort the rows according to the sum of the elements in the row\n        // Sort the rows according to the sum of the elements in the row\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmp0qtw8sxb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0qtw8sxb.java:14: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0qtw8sxb.java:20: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0qtw8sxb.java:22: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0qtw8sxb.java:24: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp0qtw8sxb.java:24: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp0qtw8sxb.java:29: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long i : row) {\n                sum += i;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpi2uk_csv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi2uk_csv.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi2uk_csv.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi2uk_csv.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi2uk_csv.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi2uk_csv.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpi2uk_csv.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpi2uk_csv.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        HashMap<Long, ArrayList<Long>> map = new HashMap<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            if (map.containsKey(sum)) {\n                map.get(sum).addAll(row);\n            } else {\n                map.put(sum, row);\n            }\n        }\n        ArrayList<Long> sums = new ArrayList<>(map.keySet());\n        Collections.sort(sums);\n        for (long sum : sums) {\n            sorted.add(map.get(sum));\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpvyjm4zgt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmp7ebn7uj8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7ebn7uj8.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ebn7uj8.java:15: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7ebn7uj8.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        for (int i = 0; i < M.size(); i++) {\n            sorted.add(M.get(i));\n        }\n        Collections.sort(sorted, new Comparator<ArrayList<Long>>() {\n            @Override\n            public int compare(ArrayList<Long> a, ArrayList<Long> b) {\n                return Long.compare(a.stream().mapToLong(Long::longValue).sum(), b.stream().mapToLong(Long::longValue).sum());\n            }\n        });\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpnswb4oex.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for(ArrayList<Long> row : M) {\n            long sum = 0;\n            for(Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for(Pair<Long, ArrayList<Long>> sum : sums) {\n            result.add(sum.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmp6ywkgx2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6ywkgx2_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6ywkgx2_.java:19: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6ywkgx2_.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6ywkgx2_.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp6ywkgx2_.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp6ywkgx2_.java:27: error: cannot find symbol\n        for(Pair<Long, ArrayList<Long>> sum : sums) {\n            ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmp4l84ikmn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4l84ikmn.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4l84ikmn.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4l84ikmn.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpcxyn5a65.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpcxyn5a65.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpcxyn5a65.java:13: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpcxyn5a65.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123494,
      "stdout": "",
      "stderr": "/tmp/tmpk6cbew8b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpk6cbew8b.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk6cbew8b.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk6cbew8b.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk6cbew8b.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmp7m3epz9w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7m3epz9w.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7m3epz9w.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7m3epz9w.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7m3epz9w.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp7m3epz9w.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp7m3epz9w.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmpaezc48qe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpaezc48qe.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpaezc48qe.java:13: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpaezc48qe.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123499,
      "stdout": "",
      "stderr": "/tmp/tmpdmi2n09e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdmi2n09e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpdmi2n09e.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpdmi2n09e.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpdmi2n09e.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpdmi2n09e.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpdmi2n09e.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(i, sum));\n        }\n        Collections.sort(sums, new Comparator<Pair<Integer, Long>>() {\n            @Override\n            public int compare(Pair<Integer, Long> p1, Pair<Integer, Long> p2) {\n                return p1.getValue1().compareTo(p2.getValue1());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            sorted.add(M.get(sums.get(i).getValue0()));\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmpgmttpot6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgmttpot6.java:12: error: cannot find symbol\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgmttpot6.java:18: error: cannot find symbol\n            sums.add(new Pair<>(i, sum));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgmttpot6.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Integer, Long>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgmttpot6.java:22: error: cannot find symbol\n            public int compare(Pair<Integer, Long> p1, Pair<Integer, Long> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpgmttpot6.java:22: error: cannot find symbol\n            public int compare(Pair<Integer, Long> p1, Pair<Integer, Long> p2) {\n                                                       ^\n  symbol: class Pair\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            sums.add(i, M.get(i).stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (int i = 0; i < sortedSums.size(); i++) {\n            int index = sums.indexOf(sortedSums.get(i));\n            sortedM.add(M.get(index));\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmpvgs91cmm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmpoe_j9gby.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpoe_j9gby.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpoe_j9gby.java:19: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpoe_j9gby.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmp0ezj2iwp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0ezj2iwp.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0ezj2iwp.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0ezj2iwp.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0ezj2iwp.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(i, sum));\n        }\n        sums.sort((a, b) -> a.getValue1().compareTo(b.getValue1()));\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(M.get(sums.get(i).getValue0()));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpooafvb8r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpooafvb8r.java:13: error: cannot find symbol\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpooafvb8r.java:19: error: cannot find symbol\n            sums.add(new Pair<>(i, sum));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        ArrayList<ArrayList<Long>> ans = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ans.add(p.getValue1());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmptoixakm3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmptoixakm3.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptoixakm3.java:17: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptoixakm3.java:19: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmptoixakm3.java:20: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmptoixakm3.java:20: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmptoixakm3.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "/tmp/tmp9w_51u8g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp9w_51u8g.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp9w_51u8g.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp9w_51u8g.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123500,
      "stdout": "",
      "stderr": "/tmp/tmpwh_bhbi5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpwh_bhbi5.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwh_bhbi5.java:15: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwh_bhbi5.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpauhr_7t_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpauhr_7t_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpauhr_7t_.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpauhr_7t_.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().reduce(0L, (a, b) -> a + b));\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (Long sum : sortedSums) {\n            int index = sums.indexOf(sum);\n            sorted.add(M.get(index));\n            sums.set(index, Long.MAX_VALUE);\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp9mte4u_p.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "/tmp/tmpgxirl92u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgxirl92u.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpgxirl92u.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510456,
      "stdout": "",
      "stderr": "/tmp/tmphii3_kmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510456,
      "stdout": "",
      "stderr": "/tmp/tmphii3_kmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123487,
      "stdout": "",
      "stderr": "/tmp/tmpu4ho_t1e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpu4ho_t1e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(sum);\n        }\n        for (int i = 0; i < sums.size(); i++) {\n            int minIndex = i;\n            for (int j = i + 1; j < sums.size(); j++) {\n                if (sums.get(j) < sums.get(minIndex)) {\n                    minIndex = j;\n                }\n            }\n            long temp = sums.get(i);\n            sums.set(i, sums.get(minIndex));\n            sums.set(minIndex, temp);\n            sorted.add(M.get(minIndex));\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpoztq0xoj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123491,
      "stdout": "",
      "stderr": "/tmp/tmpnk5wm4ua.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnk5wm4ua.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnk5wm4ua.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnk5wm4ua.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnk5wm4ua.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpnk5wm4ua.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnk5wm4ua.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpnk5wm4ua.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpnk5wm4ua.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n9 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmpa_ceiupb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpa_ceiupb.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa_ceiupb.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa_ceiupb.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpbkt31jmc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbkt31jmc.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbkt31jmc.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbkt31jmc.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbkt31jmc.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpbkt31jmc.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpbkt31jmc.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        ArrayList<ArrayList<Long>> ans = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ans.add(p.getValue1());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpne5ag_ja.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpne5ag_ja.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpne5ag_ja.java:17: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpne5ag_ja.java:19: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpne5ag_ja.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpne5ag_ja.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpne5ag_ja.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> ret = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ret.add(p.getValue1());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpmo0du28b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpmo0du28b.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpmo0du28b.java:13: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpmo0du28b.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmp4r_7zod5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4r_7zod5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4r_7zod5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4r_7zod5.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4r_7zod5.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            sorted.add(new ArrayList<>());\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sorted.get(i).add(M.get(i).get(j));\n            }\n        }\n        for (int i = 0; i < sorted.size(); i++) {\n            for (int j = i + 1; j < sorted.size(); j++) {\n                if (sorted.get(i).stream().reduce(0L, (a, b) -> a + b) > sorted.get(j).stream().reduce(0L, (a, b) -> a + b)) {\n                    ArrayList<Long> temp = sorted.get(i);\n                    sorted.set(i, sorted.get(j));\n                    sorted.set(j, temp);\n                }\n            }\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmprmliv5ch.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpra5dfnfq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpra5dfnfq.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpra5dfnfq.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpra5dfnfq.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpra5dfnfq.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpra5dfnfq.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpra5dfnfq.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123489,
      "stdout": "",
      "stderr": "/tmp/tmp9w_51u8g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp9w_51u8g.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp9w_51u8g.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp9w_51u8g.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp9w_51u8g.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp0tinms1b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0tinms1b.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0tinms1b.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0tinms1b.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0tinms1b.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0tinms1b.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp0tinms1b.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp0tinms1b.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpp4mm6tmv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpp4mm6tmv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpp4mm6tmv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpp4mm6tmv.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpp4mm6tmv.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpp4mm6tmv.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510456,
      "stdout": "",
      "stderr": "/tmp/tmphii3_kmi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmphii3_kmi.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpq60bd1k4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpq60bd1k4.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpq60bd1k4.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpq60bd1k4.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpq60bd1k4.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpi1kv3tv7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi1kv3tv7.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi1kv3tv7.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi1kv3tv7.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long n : row) {\n                sum += n;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp0dlbtlh4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0dlbtlh4.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0dlbtlh4.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp0dlbtlh4.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> ret = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ret.add(p.getValue1());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp97lpo6ge.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp97lpo6ge.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp97lpo6ge.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp97lpo6ge.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (int i = 0; i < M.size(); i++) {\n            sums.add(i, M.get(i).stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (int i = 0; i < sortedSums.size(); i++) {\n            int index = sums.indexOf(sortedSums.get(i));\n            result.add(M.get(index));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123498,
      "stdout": "",
      "stderr": "/tmp/tmpkteep3k0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123484,
      "stdout": "",
      "stderr": "/tmp/tmp01a1qp1f.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp01a1qp1f.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp01a1qp1f.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp01a1qp1f.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp01a1qp1f.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp01a1qp1f.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp01a1qp1f.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp01a1qp1f.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> ret = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ret.add(p.getValue1());\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp8tq11d65.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp8tq11d65.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8tq11d65.java:13: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp8tq11d65.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpnqffwx1k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpnqffwx1k.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnqffwx1k.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnqffwx1k.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpnqffwx1k.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpnqffwx1k.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        ArrayList<ArrayList<Long>> ans = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            ans.add(p.getValue1());\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp_u9hh424.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_u9hh424.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_u9hh424.java:17: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_u9hh424.java:19: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp_u9hh424.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp_u9hh424.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp_u9hh424.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpqql1hk9x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqql1hk9x.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqql1hk9x.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqql1hk9x.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqql1hk9x.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpqql1hk9x.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpqql1hk9x.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpqql1hk9x.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long x : row) {\n                sum += x;\n            }\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        pairs.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : pairs) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpzy8p5j4v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpzy8p5j4v.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpzy8p5j4v.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                     ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpzy8p5j4v.java:18: error: cannot find symbol\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpzy8p5j4v.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : pairs) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpd_1gau0s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd_1gau0s.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpd_1gau0s.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) -> {\n            return a.getValue0().compareTo(b.getValue0());\n        });\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmp08rxzxky.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp08rxzxky.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp08rxzxky.java:17: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp08rxzxky.java:19: error: cannot find symbol\n        sums.sort((Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) -> {\n                   ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp08rxzxky.java:19: error: cannot find symbol\n        sums.sort((Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) -> {\n                                                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp08rxzxky.java:23: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpbeina_oe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpbeina_oe.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbeina_oe.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbeina_oe.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbeina_oe.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpbeina_oe.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpbeina_oe.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpbeina_oe.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123497,
      "stdout": "",
      "stderr": "/tmp/tmpgxirl92u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgxirl92u.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgxirl92u.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpgxirl92u.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, Integer>(sum, i));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, Integer>>() {\n            @Override\n            public int compare(Pair<Long, Integer> a, Pair<Long, Integer> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(M.get(sums.get(i).getValue1()));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "/tmp/tmp1x2lyk0a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1x2lyk0a.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1x2lyk0a.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, Integer>(sum, i));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1x2lyk0a.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, Integer>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1x2lyk0a.java:22: error: cannot find symbol\n            public int compare(Pair<Long, Integer> a, Pair<Long, Integer> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp1x2lyk0a.java:22: error: cannot find symbol\n            public int compare(Pair<Long, Integer> a, Pair<Long, Integer> b) {\n                                                      ^\n  symbol: class Pair\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> row : sums) {\n            sorted.add(row.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123502,
      "stdout": "",
      "stderr": "/tmp/tmp2473r821.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2473r821.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2473r821.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2473r821.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2473r821.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> row : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        for (int i = 0; i < M.size(); i++) {\n            sorted.add(M.get(i));\n        }\n        for (int i = 0; i < sorted.size(); i++) {\n            for (int j = i + 1; j < sorted.size(); j++) {\n                if (sorted.get(i).stream().mapToLong(Long::longValue).sum() > sorted.get(j).stream().mapToLong(Long::longValue).sum()) {\n                    ArrayList<Long> temp = sorted.get(i);\n                    sorted.set(i, sorted.get(j));\n                    sorted.set(j, temp);\n                }\n            }\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmp5zt474sp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpby2yh405.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpby2yh405.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpby2yh405.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpby2yh405.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sortedM.add(pair.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmpi9lxuv88.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi9lxuv88.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi9lxuv88.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi9lxuv88.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpi9lxuv88.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123484,
      "stdout": "",
      "stderr": "/tmp/tmpx34hh5vd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpx34hh5vd.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpx34hh5vd.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpx34hh5vd.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpx34hh5vd.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpx34hh5vd.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpx34hh5vd.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpx34hh5vd.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpx34hh5vd.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n9 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123487,
      "stdout": "",
      "stderr": "/tmp/tmpu4ho_t1e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpu4ho_t1e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (Long sum : sortedSums) {\n            int index = sums.indexOf(sum);\n            sortedM.add(M.get(index));\n            sums.set(index, Long.MAX_VALUE);\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpxgm7bn7z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        int n = M.size();\n        int m = M.get(0).size();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            long sum = 0;\n            for (int j = 0; j < m; j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            res.add(sums.get(i).getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp68gekblp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp68gekblp.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp68gekblp.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, Integer>(sum, i));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, Integer>>() {\n            @Override\n            public int compare(Pair<Long, Integer> p1, Pair<Long, Integer> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(M.get(sums.get(i).getValue1()));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpweyb14gi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpweyb14gi.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpweyb14gi.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                                                            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpweyb14gi.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, Integer>(sum, i));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpweyb14gi.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, Integer>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpweyb14gi.java:23: error: cannot find symbol\n            public int compare(Pair<Long, Integer> p1, Pair<Long, Integer> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpweyb14gi.java:23: error: cannot find symbol\n            public int compare(Pair<Long, Integer> p1, Pair<Long, Integer> p2) {\n                                                       ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        for (ArrayList<Long> row : M) {\n            sorted.add(row);\n        }\n        Collections.sort(sorted, new Comparator<ArrayList<Long>>() {\n            @Override\n            public int compare(ArrayList<Long> a, ArrayList<Long> b) {\n                return Long.compare(a.stream().mapToLong(Long::longValue).sum(), b.stream().mapToLong(Long::longValue).sum());\n            }\n        });\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp71l9cef0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort(Comparator.comparing(Pair::getValue0));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp6w74oie_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6w74oie_.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6w74oie_.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6w74oie_.java:16: error: cannot find symbol\n        sums.sort(Comparator.comparing(Pair::getValue0));\n                                       ^\n  symbol:   variable Pair\n  location: class Problem\n/tmp/tmp6w74oie_.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(sums.get(i).getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp6qo28hm1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6qo28hm1.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6qo28hm1.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp6qo28hm1.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, M.get(i)));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpfxnirqqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfxnirqqr.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxnirqqr.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxnirqqr.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmpgvdsmys9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgvdsmys9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sortedM.add(p.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123484,
      "stdout": "",
      "stderr": "/tmp/tmpfxuu5bc1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfxuu5bc1.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxuu5bc1.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxuu5bc1.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxuu5bc1.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpizdrlxv5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpizdrlxv5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpizdrlxv5.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpizdrlxv5.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpizdrlxv5.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpizdrlxv5.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpizdrlxv5.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123501,
      "stdout": "",
      "stderr": "/tmp/tmpauhr_7t_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpauhr_7t_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpauhr_7t_.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpauhr_7t_.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpauhr_7t_.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().reduce(0L, (a, b) -> a + b));\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (Long sum : sortedSums) {\n            int index = sums.indexOf(sum);\n            result.add(M.get(index));\n            sums.set(index, Long.MAX_VALUE);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpv9crgabr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long l : row) {\n                sum += l;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpvcanapfu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpvcanapfu.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpvcanapfu.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpvcanapfu.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpvcanapfu.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpvcanapfu.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpvcanapfu.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpvcanapfu.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> {\n            if (a.getValue0() < b.getValue0()) {\n                return -1;\n            } else if (a.getValue0() > b.getValue0()) {\n                return 1;\n            } else {\n                return 0;\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpisbvymyr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpisbvymyr.java:15: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpisbvymyr.java:21: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpisbvymyr.java:32: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmp43y_wrkn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp43y_wrkn.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp43y_wrkn.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp43y_wrkn.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp43y_wrkn.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        sums.sort((x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmpgvdsmys9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgvdsmys9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpgvdsmys9.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        // Sort the matrix according to the sum of its rows\n        // Return the sorted matrix\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmp3xgr_81r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3xgr_81r.java:15: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3xgr_81r.java:15: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3xgr_81r.java:21: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3xgr_81r.java:23: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3xgr_81r.java:25: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmp3xgr_81r.java:25: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmp3xgr_81r.java:29: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for(ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for(Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpu0yq5xij.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpu0yq5xij.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu0yq5xij.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu0yq5xij.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu0yq5xij.java:17: error: cannot find symbol\n        for(Pair<Long, ArrayList<Long>> p : sums) {\n            ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        Collections.sort(sums, (a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123496,
      "stdout": "",
      "stderr": "/tmp/tmpph489ysv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpph489ysv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpph489ysv.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpph489ysv.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpph489ysv.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>(M);\n        Collections.sort(sorted, new Comparator<ArrayList<Long>>() {\n            public int compare(ArrayList<Long> a, ArrayList<Long> b) {\n                return Long.compare(a.stream().mapToLong(Long::longValue).sum(), b.stream().mapToLong(Long::longValue).sum());\n            }\n        });\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpcozsxp18.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpk5sti03_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpk5sti03_.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk5sti03_.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk5sti03_.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        // We can use a hashmap to store the sum of each row and the index of the row.\n        // Then we can sort the hashmap by the sum and return the matrix with the sorted indices.\n        HashMap<Long, Integer> map = new HashMap<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            map.put(sum, i);\n        }\n        ArrayList<Long> sums = new ArrayList<>(map.keySet());\n        Collections.sort(sums);\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (int i = 0; i < sums.size(); i++) {\n            result.add(M.get(map.get(sums.get(i))));\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpuwg2b5hn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            Long sum = row.stream().reduce(0L, (a, b) -> a + b);\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpazsucoic.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpazsucoic.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpazsucoic.java:16: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpazsucoic.java:19: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long l : row) {\n                sum += l;\n            }\n            pairs.add(new Pair<>(sum, row));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : pairs) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpa3kchvc3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpa3kchvc3.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa3kchvc3.java:18: error: cannot find symbol\n            pairs.add(new Pair<>(sum, row));\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa3kchvc3.java:20: error: cannot find symbol\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                               ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpa3kchvc3.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpa3kchvc3.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpa3kchvc3.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : pairs) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmplhd5qfoh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmplhd5qfoh.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplhd5qfoh.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplhd5qfoh.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplhd5qfoh.java:16: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmplhd5qfoh.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmplhd5qfoh.java:17: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmplhd5qfoh.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long l : row) {\n                sum += l;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpm3bg1me6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpm3bg1me6.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpm3bg1me6.java:19: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpm3bg1me6.java:22: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123487,
      "stdout": "",
      "stderr": "/tmp/tmpu4ho_t1e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpu4ho_t1e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpu4ho_t1e.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> sum : sums) {\n            result.add(sum.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpeyk910nc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpeyk910nc.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpeyk910nc.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpeyk910nc.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpeyk910nc.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> sum : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123484,
      "stdout": "",
      "stderr": "/tmp/tmpubc_lwyr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpubc_lwyr.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpubc_lwyr.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpubc_lwyr.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpubc_lwyr.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> S = new ArrayList<ArrayList<Long>>();\n        for (ArrayList<Long> row : M) {\n            S.add(row);\n        }\n        Collections.sort(S, new Comparator<ArrayList<Long>>() {\n            @Override\n            public int compare(ArrayList<Long> row1, ArrayList<Long> row2) {\n                return row1.stream().mapToLong(Long::longValue).sum() < row2.stream().mapToLong(Long::longValue).sum() ? -1 : 1;\n            }\n        });\n        return S;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmplcghg0o4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                return o1.getValue0().compareTo(o2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpiyrscciu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpiyrscciu.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpiyrscciu.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpiyrscciu.java:15: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpiyrscciu.java:17: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpiyrscciu.java:19: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpiyrscciu.java:19: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> o1, Pair<Long, ArrayList<Long>> o2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpiyrscciu.java:23: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            Long sum = 0L;\n            for (Long num : row) {\n                sum += num;\n            }\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : pairs) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmprlaln65j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmprlaln65j.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmprlaln65j.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> pairs = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                     ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmprlaln65j.java:19: error: cannot find symbol\n            pairs.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                          ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmprlaln65j.java:21: error: cannot find symbol\n        Collections.sort(pairs, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                               ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmprlaln65j.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmprlaln65j.java:23: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmprlaln65j.java:27: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : pairs) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (Long num : row) {\n                sum += num;\n            }\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sortedM.add(pair.getValue1());\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmp2yqidi2o.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2yqidi2o.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2yqidi2o.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2yqidi2o.java:18: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2yqidi2o.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp2yqidi2o.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmp2yqidi2o.java:22: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmp2yqidi2o.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n8 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> res = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                return a.getValue0().compareTo(b.getValue0());\n            }\n        });\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            res.add(p.getValue1());\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpk0awwcvy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpk0awwcvy.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk0awwcvy.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk0awwcvy.java:20: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpk0awwcvy.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                               ^\n  symbol: class Pair\n/tmp/tmpk0awwcvy.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> a, Pair<Long, ArrayList<Long>> b) {\n                                                              ^\n  symbol: class Pair\n/tmp/tmpk0awwcvy.java:25: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123488,
      "stdout": "",
      "stderr": "/tmp/tmp4r_7zod5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4r_7zod5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4r_7zod5.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4r_7zod5.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp4r_7zod5.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmpop0ovkri.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpop0ovkri.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpop0ovkri.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpop0ovkri.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            sorted.add(pair.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123503,
      "stdout": "",
      "stderr": "/tmp/tmpby2yh405.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpby2yh405.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpby2yh405.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpby2yh405.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpvd5nmcfc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpvd5nmcfc.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpvd5nmcfc.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpvd5nmcfc.java:18: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n            @Override\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpwxi43mzp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpwxi43mzp.java:11: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwxi43mzp.java:17: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwxi43mzp.java:19: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, ArrayList<Long>>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpwxi43mzp.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpwxi43mzp.java:21: error: cannot find symbol\n            public int compare(Pair<Long, ArrayList<Long>> p1, Pair<Long, ArrayList<Long>> p2) {\n                                                               ^\n  symbol: class Pair\n/tmp/tmpwxi43mzp.java:26: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Long> sums = new ArrayList<Long>();\n        for (ArrayList<Long> row : M) {\n            sums.add(row.stream().mapToLong(Long::longValue).sum());\n        }\n        ArrayList<Long> sortedSums = new ArrayList<Long>(sums);\n        Collections.sort(sortedSums);\n        for (Long sum : sortedSums) {\n            int index = sums.indexOf(sum);\n            sorted.add(M.get(index));\n            sums.set(index, Long.MAX_VALUE);\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123486,
      "stdout": "",
      "stderr": "/tmp/tmpjx48tqsj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        // Write your code here\n        ArrayList<ArrayList<Long>> sortedM = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<Long, Integer>(sum, i));\n        }\n        Collections.sort(sums, new Comparator<Pair<Long, Integer>>() {\n            @Override\n            public int compare(Pair<Long, Integer> p1, Pair<Long, Integer> p2) {\n                return p1.getValue0().compareTo(p2.getValue0());\n            }\n        });\n        for (int i = 0; i < sums.size(); i++) {\n            sortedM.add(M.get(sums.get(i).getValue1()));\n        }\n        return sortedM;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmpl7kjh4j4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpl7kjh4j4.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl7kjh4j4.java:13: error: cannot find symbol\n        ArrayList<Pair<Long, Integer>> sums = new ArrayList<Pair<Long, Integer>>();\n                                                            ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl7kjh4j4.java:19: error: cannot find symbol\n            sums.add(new Pair<Long, Integer>(sum, i));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl7kjh4j4.java:21: error: cannot find symbol\n        Collections.sort(sums, new Comparator<Pair<Long, Integer>>() {\n                                              ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpl7kjh4j4.java:23: error: cannot find symbol\n            public int compare(Pair<Long, Integer> p1, Pair<Long, Integer> p2) {\n                               ^\n  symbol: class Pair\n/tmp/tmpl7kjh4j4.java:23: error: cannot find symbol\n            public int compare(Pair<Long, Integer> p1, Pair<Long, Integer> p2) {\n                                                       ^\n  symbol: class Pair\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n        for (int i = 0; i < M.size(); i++) {\n            long sum = 0;\n            for (int j = 0; j < M.get(i).size(); j++) {\n                sum += M.get(i).get(j);\n            }\n            sums.add(new Pair<>(i, sum));\n        }\n        sums.sort((a, b) -> a.getValue1().compareTo(b.getValue1()));\n        for (int i = 0; i < sums.size(); i++) {\n            sorted.add(M.get(sums.get(i).getValue0()));\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123484,
      "stdout": "",
      "stderr": "/tmp/tmp7cz41nvm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7cz41nvm.java:12: error: cannot find symbol\n        ArrayList<Pair<Integer, Long>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp7cz41nvm.java:18: error: cannot find symbol\n            sums.add(new Pair<>(i, sum));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmp3dpk6ps9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3dpk6ps9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3dpk6ps9.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3dpk6ps9.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3dpk6ps9.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(sum(row), row));\n                                                     ^\n  symbol:   method sum(ArrayList<Long>)\n  location: class Problem\n/tmp/tmp3dpk6ps9.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n6 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> sum : sums) {\n            result.add(sum.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmp3_yiejit.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3_yiejit.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3_yiejit.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3_yiejit.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (a, b) -> a + b), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp3_yiejit.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> sum : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            long sum = 0;\n            for (long x : row) {\n                sum += x;\n            }\n            sums.add(new Pair<>(sum, row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            result.add(p.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123491,
      "stdout": "",
      "stderr": "/tmp/tmp73g4r5pq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp73g4r5pq.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp73g4r5pq.java:18: error: cannot find symbol\n            sums.add(new Pair<>(sum, row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp73g4r5pq.java:21: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> result = new ArrayList<ArrayList<Long>>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n        }\n        Collections.sort(sums, (x, y) -> x.getValue0().compareTo(y.getValue0()));\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n            result.add(pair.getValue1());\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1666123504,
      "stdout": "",
      "stderr": "/tmp/tmp1upudcsp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1upudcsp.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1upudcsp.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<Pair<Long, ArrayList<Long>>>();\n                                                                    ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1upudcsp.java:14: error: cannot find symbol\n            sums.add(new Pair<Long, ArrayList<Long>>(row.stream().reduce(0L, (x, y) -> x + y), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmp1upudcsp.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> pair : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to sort a given matrix in ascending order according to the sum of its rows.\n    public static ArrayList<ArrayList<Long>> sortMatrix(ArrayList<ArrayList<Long>> M) {\n        ArrayList<ArrayList<Long>> sorted = new ArrayList<>();\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n        for (ArrayList<Long> row : M) {\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n        }\n        sums.sort((a, b) -> a.getValue0().compareTo(b.getValue0()));\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n            sorted.add(p.getValue1());\n        }\n        return sorted;\n    }\n    public static void main(String[] args) {\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)5l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)-2l, (long)4l, (long)-5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)-1l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)))))));\n    assert(sortMatrix((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)))))).equals((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)2l, (long)1l, (long)4l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)4l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)5l, (long)8l, (long)9l)))))));\n    }\n\n}\n",
      "timestamp": 1665510458,
      "stdout": "",
      "stderr": "/tmp/tmpfxnirqqr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfxnirqqr.java:12: error: cannot find symbol\n        ArrayList<Pair<Long, ArrayList<Long>>> sums = new ArrayList<>();\n                  ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxnirqqr.java:14: error: cannot find symbol\n            sums.add(new Pair<>(row.stream().mapToLong(Long::longValue).sum(), row));\n                         ^\n  symbol:   class Pair\n  location: class Problem\n/tmp/tmpfxnirqqr.java:17: error: cannot find symbol\n        for (Pair<Long, ArrayList<Long>> p : sums) {\n             ^\n  symbol:   class Pair\n  location: class Problem\n4 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
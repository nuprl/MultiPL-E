{
  "name": "mbpp_577_last_Digit_Factorial",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to find the last digit in factorial of a given number.\n    public static long lastDigitFactorial(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_577_last_Digit_Factorial.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(lastDigitFactorial((4l)) == (4l));\n    assert(lastDigitFactorial((21l)) == (0l));\n    assert(lastDigitFactorial((30l)) == (0l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * (i % 10)) % 10;\n        }\n        return lastDigit;",
    "        return n == 0 ? 1 : n * lastDigitFactorial(n - 1) % 10;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit *= i;\n            lastDigit %= 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 2) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 1; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) return -1;\n        if (n == 0) return 1;\n        long fact = 1;\n        for (long i = 1; i <= n; i++) {\n            fact = fact * i;\n            fact = fact % 10;\n        }\n        return fact;",
    "        long lastDigit = 1;\n        for (long i = 2; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return 0;\n        }\n        if (n <= 1) {\n            return 1;\n        }\n        long result = 1;\n        for (int i = 2; i <= n; i++) {\n            result *= i;\n            result %= 10;\n        }\n        return result;",
    "        if (n == 0) return 1;\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n < 2) {\n            return 1;\n        }\n        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * i) % 10;\n        }\n        return lastDigit;",
    "        long result = 1;\n        for (long i = 2; i <= n; i++) {\n            result = (result * i) % 10;\n        }\n        return result;",
    "        if (n < 0) {\n            return -1;\n        }\n        if (n == 0) {\n            return 1;\n        }\n        long lastDigit = 1;\n        for (long i = 1; i <= n; i++) {\n            lastDigit = (lastDigit * (i % 10)) % 10;\n        }\n        return lastDigit;"
  ]
}
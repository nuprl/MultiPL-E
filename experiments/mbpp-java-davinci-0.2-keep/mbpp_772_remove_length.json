{
  "name": "mbpp_772_remove_length",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to remove all the words with k length in the given string.\n    public static String removeLength(String test_str, long K) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_772_remove_length.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(removeLength((\"The person is most value tet\"), (3l)).equals((\"person is most value\")));\n    assert(removeLength((\"If you told me about this ok\"), (4l)).equals((\"If you me about ok\")));\n    assert(removeLength((\"Forces of darkeness is come into the play\"), (4l)).equals((\"Forces of darkeness is the\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].length() != K) {\n                sb.append(words[i]);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for(String word : words) {\n            if(word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word);\n                sb.append(\" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();",
    "        String[] words = test_str.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (word.length() != K) {\n                sb.append(word + \" \");\n            }\n        }\n        return sb.toString().trim();"
  ]
}
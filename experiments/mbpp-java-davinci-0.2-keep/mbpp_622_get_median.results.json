{
  "name": "mbpp_622_get_median",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_622_get_median.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpd2f7zrhr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd2f7zrhr.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpd2f7zrhr.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpeloool5i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpeloool5i.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpeloool5i.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpotktcien.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // if n is odd, then median is middle element of sorted array\n        // if n is even, then median is average of middle two elements of sorted array\n        long median1 = 0, median2 = 0;\n        int i = 0, j = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median1 = median2;\n                median2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                median1 = median2;\n                median2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median1 = median2;\n                median2 = arr1.get(i);\n                i++;\n            } else {\n                median1 = median2;\n                median2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (float)(median1 + median2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpuihwvf2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp0uhc18bp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0uhc18bp.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp0uhc18bp.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                break;\n            }\n            if (arr1.get((int) i) < arr2.get((int) j)) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpp9e01rho.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        int count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp0zyr2kdc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpy4j5zef3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpy4j5zef3.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpy4j5zef3.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpy4j5zef3.java:19: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpy4j5zef3.java:19: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpy4j5zef3.java:21: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                    ^\n/tmp/tmpy4j5zef3.java:21: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                ^\n/tmp/tmpy4j5zef3.java:25: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr2.subList((n / ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_hvzc945.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_hvzc945.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_hvzc945.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp20iucpz8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp20iucpz8.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp20iucpz8.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0)\n            return -1;\n        if (n == 1)\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2)\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2)\n            return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0)\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0)\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp7bcdtyi7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp7bcdtyi7.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp7bcdtyi7.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if(n == 0) {\n            return 0;\n        }\n        if(n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if(n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if(m1 == m2) {\n            return m1;\n        }\n        if(m1 < m2) {\n            if(n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if(n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpxmol_v67.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpxmol_v67.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpxmol_v67.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_46l1xr_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpo8pkgij9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long median = 0;\n        long i = 0;\n        long j = 0;\n        long count;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get((int)j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                median = arr1.get((int)i);\n                i++;\n            } else {\n                median = arr2.get((int)j);\n                j++;\n            }\n        }\n        if (n % 2 == 0) {\n            if (i == n) {\n                return (median + arr2.get((int)j)) / 2;\n            }\n            if (j == n) {\n                return (median + arr1.get((int)i)) / 2;\n            }\n            return (median + Math.min(arr1.get((int)i), arr2.get((int)j))) / 2;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpo59j6i72.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpiyzxuci_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpiyzxuci_.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpiyzxuci_.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpmnn_9scq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long median = 0;\n        long i = 0;\n        long j = 0;\n        long count = 0;\n        long m1 = -1;\n        long m2 = -1;\n        while (count <= n) {\n            count++;\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpn3evxxuf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_46l1xr_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        int m1 = -1, m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = (int) arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = (int) arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = (int) arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = (int) arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        median = (float) (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpdhy_7267.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpdhy_7267.java:18: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr2.get(0);\n                                   ^\n/tmp/tmpdhy_7267.java:22: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr1.get(0);\n                                   ^\n/tmp/tmpdhy_7267.java:27: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr1.get(i);\n                                   ^\n/tmp/tmpdhy_7267.java:31: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr2.get(j);\n                                   ^\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpu6pnjwas.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpu6pnjwas.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpu6pnjwas.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpu6pnjwas.java:19: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                        ^\n/tmp/tmpu6pnjwas.java:19: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                    ^\n/tmp/tmpu6pnjwas.java:21: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                    ^\n/tmp/tmpu6pnjwas.java:21: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                                                                                ^\n/tmp/tmpu6pnjwas.java:25: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayLi",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp4xmm0ouu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4xmm0ouu.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4xmm0ouu.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n            count++;\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp2b1ji7cn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp2qf0az2_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpmnn_9scq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1;\n        long m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp4lb510lh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count = 0;\n        long m1 = -1;\n        long m2 = -1;\n        while (count <= n) {\n            count++;\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else if (arr1.get((int) i) < arr2.get((int) j)) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpjqd7gv8e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp4ehruqly.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0)\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0)\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpfpuvnsrj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfpuvnsrj.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpfpuvnsrj.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpygdiqhfx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpygdiqhfx.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpygdiqhfx.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count = 0;\n        long m1 = -1;\n        long m2 = -1;\n        while (count < n + 1) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpq3or70ln.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpyraystsz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpt6mrjqfn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpt6mrjqfn.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpt6mrjqfn.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpn33ca116.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn33ca116.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpi_4jgfrb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi_4jgfrb.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpi_4jgfrb.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpi_4jgfrb.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpi_4jgfrb.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                      ^\n/tmp/tmpi_4jgfrb.java:29: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                    ^\n/tmp/tmpi_4jgfrb.java:29: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpnlc47sj7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n\n        if (m1 == m2) {\n            return m1;\n        }\n\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpjdmm4nw_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpjdmm4nw_.java:21: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpjdmm4nw_.java:22: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_hvzc945.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_hvzc945.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_hvzc945.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpn33ca116.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn33ca116.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpo8pkgij9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n            count++;\n        }\n        median = (m1 + m2) / 2.0f;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpwp_i7qxv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpnlc47sj7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpeloool5i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpeloool5i.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpeloool5i.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), arr2, 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, (n / 2) + 1)), arr2, 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(arr1, new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), 2);\n        }\n        return getMedian(arr1, new ArrayList<Long>(arr2.subList(n / 2, (n / 2) + 1)), 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmph73fandr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmph73fandr.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmph73fandr.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmph73fandr.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), arr2, 2);\n                                                                          ^\n/tmp/tmph73fandr.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, (n / 2) + 1)), arr2, 2);\n                                                                ^\n/tmp/tmph73fandr.java:32: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(arr1, new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), 2);\n                                                                            ^\n/tmp/tmph73fandr.java:34: error: incompatible types: possible lossy conversion from long to int\n        return getMedian(arr1, new ArrayList<Long>(arr2.subList(n / 2, (n / 2) + 1)), 2);\n                                                                  ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1;\n        long m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpsroe69c5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp20iucpz8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp20iucpz8.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp20iucpz8.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpnlc47sj7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpmnn_9scq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                break;\n            }\n            if (arr1.get((int) i) < arr2.get((int) j)) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpp9e01rho.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpgs6hb8f7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgs6hb8f7.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpgs6hb8f7.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long m1 = -1;\n        long m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp6axlbusg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2.0f;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp2z13d5t0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpo8pkgij9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpvocl2ieh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp8e_1p930.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp4ehruqly.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if(n <= 0) {\n            return -1;\n        }\n        if(n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if(n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if(m1 == m2) {\n            return m1;\n        }\n        if(m1 < m2) {\n            if(n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if(n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpr21kor8y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpr21kor8y.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpr21kor8y.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp7gh02734.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp50b852hs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp50b852hs.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp50b852hs.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        return (float) (getMedianUtil(arr1, arr2, 0, n - 1, n) + getMedianUtil(arr1, arr2, 0, n - 1, n)) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpagmw83r9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpagmw83r9.java:11: error: cannot find symbol\n        return (float) (getMedianUtil(arr1, arr2, 0, n - 1, n) + getMedianUtil(arr1, arr2, 0, n - 1, n)) / 2;\n                        ^\n  symbol:   method getMedianUtil(ArrayList<Long>,ArrayList<Long>,int,long,long)\n  location: class Problem\n/tmp/tmpagmw83r9.java:11: error: cannot find symbol\n        return (float) (getMedianUtil(arr1, arr2, 0, n - 1, n) + getMedianUtil(arr1, arr2, 0, n - 1, n)) / 2;\n                                                                 ^\n  symbol:   method getMedianUtil(ArrayList<Long>,ArrayList<Long>,int,long,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) n)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpz3g6bkvn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz3g6bkvn.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpz3g6bkvn.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1);\n        float m2 = median(arr2);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpfu6gnvvw.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfu6gnvvw.java:17: error: cannot find symbol\n        float m1 = median(arr1);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n/tmp/tmpfu6gnvvw.java:18: error: cannot find symbol\n        float m2 = median(arr2);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (count < n) {\n            if (i == n) {\n                median = arr2.get(j);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(i);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpsi78m90i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long m1 = -1;\n        long m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp6axlbusg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (count <= n) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpazld9_85.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpd2f7zrhr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd2f7zrhr.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpd2f7zrhr.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long median = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpcf0ihj83.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpenlabvly.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n/2 + 1)), n - n/2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2 + 1)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpzpnkw96w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpzpnkw96w.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpzpnkw96w.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpeloool5i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpeloool5i.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpeloool5i.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp_o1s56at.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_o1s56at.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_o1s56at.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if(n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if(n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if(m1 == m2) return m1;\n        if(m1 < m2) {\n            if(n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if(n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n)), n - n/2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpz29qpxln.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz29qpxln.java:13: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz29qpxln.java:14: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = (int) arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = (int) arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = (int) arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = (int) arr2.get(j);\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp10dww0wa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp10dww0wa.java:17: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr2.get(0);\n                                   ^\n/tmp/tmp10dww0wa.java:21: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr1.get(0);\n                                   ^\n/tmp/tmp10dww0wa.java:26: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr1.get(i);\n                                   ^\n/tmp/tmp10dww0wa.java:30: error: incompatible types: Long cannot be converted to int\n                m2 = (int) arr2.get(j);\n                                   ^\n5 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp8e_1p930.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1;\n        long m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpsroe69c5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp80bo1b5z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp80bo1b5z.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp80bo1b5z.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpn33ca116.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn33ca116.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpd2f7zrhr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd2f7zrhr.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpd2f7zrhr.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp80bo1b5z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp80bo1b5z.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp80bo1b5z.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long m1 = -1;\n        long m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp6axlbusg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "/tmp/tmp1r4h1yks.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (i == n) {\n                median += arr2.get(j);\n                j++;\n            } else if (j == n) {\n                median += arr1.get(i);\n                i++;\n            } else if (arr1.get(i) < arr2.get(j)) {\n                median += arr1.get(i);\n                i++;\n            } else {\n                median += arr2.get(j);\n                j++;\n            }\n            count++;\n            if (count == n) {\n                return median / 2;\n            }\n        }\n        if (arr1.get(i) < arr2.get(j)) {\n            median += arr1.get(i);\n        } else {\n            median += arr2.get(j);\n        }\n        return median / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "/tmp/tmp706suxxr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1;\n        long m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpsroe69c5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp_jr43zmo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_jr43zmo.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_jr43zmo.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "/tmp/tmpggcpgcgf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpd2f7zrhr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpd2f7zrhr.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpd2f7zrhr.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long median = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpzuh8z7xs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp7gh02734.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)),\n                new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp47ufy5w1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp47ufy5w1.java:17: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp47ufy5w1.java:18: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpqfggipuv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpqfggipuv.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpqfggipuv.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp6ihxah1z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6ihxah1z.java:20: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp6ihxah1z.java:21: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "/tmp/tmpggcpgcgf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0).intValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0).intValue();\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i).intValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j).intValue();\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpo5vdhakj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Write your code here\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp2qouybju.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2qouybju.java:18: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp2qouybju.java:19: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return 0;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpfongbchl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpfongbchl.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfongbchl.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpfongbchl.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpfongbchl.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpfongbchl.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpfongbchl.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0))/2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1)))/2;\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n/2-1, (int)n/2+1)), new ArrayList<Long>(arr2.subList(0, (int)n/2+1)), n-n/2+1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n/2+1)), new ArrayList<Long>(arr2.subList(0, (int)n/2+1)), n-n/2+1);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2+1)), new ArrayList<Long>(arr2.subList((int)n/2-1, (int)n/2+1)), n-n/2+1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2+1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n/2+1)), n-n/2+1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpejeni_cn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpejeni_cn.java:14: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpejeni_cn.java:15: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpr63bscy7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpr63bscy7.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpr63bscy7.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp_o1s56at.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_o1s56at.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_o1s56at.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n - 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n - 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n - 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp2cao0gka.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2cao0gka.java:14: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp2cao0gka.java:15: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                    new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)),\n                new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpv_na8qg4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpv_na8qg4.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpv_na8qg4.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp8e_1p930.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp3nrjqbgt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3nrjqbgt.java:17: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp3nrjqbgt.java:18: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpvocl2ieh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpt6sx8yy2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpt6sx8yy2.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpt6sx8yy2.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n)), n - n/2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpga5jnr8y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpga5jnr8y.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpga5jnr8y.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp0o8kukcd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp0o8kukcd.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp0o8kukcd.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp0o8kukcd.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmp0o8kukcd.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmp0o8kukcd.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmp0o8kukcd.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp1qipqqw8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1qipqqw8.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp1qipqqw8.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp_jr43zmo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_jr43zmo.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_jr43zmo.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpl4lpmnpp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        int count = 0;\n        while (count < n) {\n            if (i == n) {\n                median += arr2.get(j);\n                j++;\n            } else if (j == n) {\n                median += arr1.get(i);\n                i++;\n            } else if (arr1.get(i) < arr2.get(j)) {\n                median += arr1.get(i);\n                i++;\n            } else {\n                median += arr2.get(j);\n                j++;\n            }\n            count++;\n        }\n        return median / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmplx66ofzi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n\n        if (m1 == m2) return m1;\n\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmppcnvjom0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmppcnvjom0.java:15: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmppcnvjom0.java:16: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp4h0_ka6t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp4h0_ka6t.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp4h0_ka6t.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp49fhumqm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpgdfvyakh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgdfvyakh.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpgdfvyakh.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), n - n / 2);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpyn7c3b_r.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpyn7c3b_r.java:17: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpyn7c3b_r.java:18: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (float)(m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp_iq22_3u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp72e4t0vb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp72e4t0vb.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp72e4t0vb.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                        new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)),\n                    new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)),\n                new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp5tga4_6x.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp5tga4_6x.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp5tga4_6x.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp81xlj3vy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp81xlj3vy.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp81xlj3vy.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpvxqc9glt.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpvxqc9glt.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpvxqc9glt.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp1qipqqw8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1qipqqw8.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp1qipqqw8.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        long i = 0, j = 0;\n        long count = 0;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else if (arr1.get((int) i) < arr2.get((int) j)) {\n                m1 = m2;\n                m2 = arr1.get((int) i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int) j);\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpcxzkn7k1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList(0, (int) (n / 2 + 1))), n - n / 2 + 1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList((int) (n / 2 - 1), (int) (n / 2 + 1))), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2 + 1))), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2 + 1))), n - n / 2 + 1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpahusdrlx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpahusdrlx.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpahusdrlx.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Your code here\n        long i=0,j=0,k=0;\n        long[] arr3 = new long[2*(int)n];\n        while(i<n && j<n){\n            if(arr1.get((int)i)<arr2.get((int)j)){\n                arr3[(int)k]=arr1.get((int)i);\n                i++;\n            }\n            else{\n                arr3[(int)k]=arr2.get((int)j);\n                j++;\n            }\n            k++;\n        }\n        while(i<n){\n            arr3[(int)k]=arr1.get((int)i);\n            i++;\n            k++;\n        }\n        while(j<n){\n            arr3[(int)k]=arr2.get((int)j);\n            j++;\n            k++;\n        }\n        return (float)(arr3[(int)(n-1)]+arr3[(int)n])/2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp25qg9whb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp1qipqqw8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1qipqqw8.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp1qipqqw8.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpnlc47sj7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0;\n        long j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                break;\n            }\n            if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmp4ehruqly.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp3z0vvnsu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3z0vvnsu.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp3z0vvnsu.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            }\n            if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpnlc47sj7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) (n / 2), (int) (n / 2) + 1)), new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), n - (n / 2));\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpliozgxs1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpliozgxs1.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpliozgxs1.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // if n is odd, then median is middle element of sorted array\n        // if n is even, then median is average of middle two elements of sorted array\n        long median = 0;\n        if (n % 2 == 0) {\n            median = (arr1.get((int)n/2) + arr2.get((int)n/2)) / 2;\n        } else {\n            median = arr1.get((int)n/2);\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpt0ljynwy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return 0;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)),\n                        new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)),\n                        new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp2oc16rch.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2oc16rch.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp2oc16rch.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_46l1xr_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpo8pkgij9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp7gh02734.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n/2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n/2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n/2 + 1)), n - n/2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2 - 1, (int)n)), n - n/2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n/2 + 1)), new ArrayList<Long>(arr2.subList((int)n/2, (int)n)), n - n/2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpga5jnr8y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpga5jnr8y.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpga5jnr8y.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpe7x2k7la.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpe7x2k7la.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpe7x2k7la.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        median = (m1 + m2) / 2.0f;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmprkmt9e3y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_hvzc945.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_hvzc945.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_hvzc945.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp3z0vvnsu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp3z0vvnsu.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp3z0vvnsu.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_hvzc945.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_hvzc945.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmp_hvzc945.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpuhbq9_5s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpuhbq9_5s.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpuhbq9_5s.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Assume n is even\n        long median1 = getMedian(arr1, n);\n        long median2 = getMedian(arr2, n);\n        if (median1 == median2) {\n            return median1;\n        }\n        if (median1 < median2) {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList((int)n/2-1, (int)n/2+1), arr2.subList(0, (int)n/2+1), n/2+1);\n            } else {\n                return getMedian(arr1.subList((int)n/2, (int)n/2+1), arr2.subList(0, (int)n/2+1), n/2+1);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(arr1.subList(0, (int)n/2+1), arr2.subList((int)n/2-1, (int)n/2+1), n/2+1);\n            } else {\n                return getMedian(arr1.subList(0, (int)n/2+1), arr2.subList((int)n/2, (int)n/2+1), n/2+1);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpzb41_t5i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpzb41_t5i.java:12: error: method getMedian in class Problem cannot be applied to given types;\n        long median1 = getMedian(arr1, n);\n                       ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzb41_t5i.java:13: error: method getMedian in class Problem cannot be applied to given types;\n        long median2 = getMedian(arr2, n);\n                       ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpzb41_t5i.java:19: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int)n/2-1, (int)n/2+1), arr2.subList(0, (int)n/2+1), n/2+1);\n                                             ^\n/tmp/tmpzb41_t5i.java:21: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList((int)n/2, (int)n/2+1), arr2.subList(0, (int)n/2+1), n/2+1);\n                                             ^\n/tmp/tmpzb41_t5i.java:25: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList(0, (int)n/2+1), arr2.subList((int)n/2-1, (int)n/2+1), n/2+1);\n                                             ^\n/tmp/tmpzb41_t5i.java:27: error: incompatible types: List<Long> cannot be converted to ArrayList<Long>\n                return getMedian(arr1.subList(0, (int)n/2+1), arr2.subList((int)n/2, (int)n/2+1), n/2+1);\n                                             ^\nNote: Some messages have been simplified; recompile with -Xdiags:verbose to get full output\n7 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0, j = 0;\n        long count;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                median = arr2.get(0);\n                break;\n            } else if (j == n) {\n                median = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median = arr1.get(i);\n                i++;\n            } else {\n                median = arr2.get(j);\n                j++;\n            }\n        }\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpqpfb0dgf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmpl4lpmnpp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp72e4t0vb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp72e4t0vb.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp72e4t0vb.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList((int) n / 2, (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123812,
      "stdout": "",
      "stderr": "/tmp/tmp1qipqqw8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp1qipqqw8.java:17: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp1qipqqw8.java:18: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList((n / 2) - 1, (n / 2) + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), n - n / 2 + 1);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123809,
      "stdout": "",
      "stderr": "/tmp/tmpn33ca116.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpn33ca116.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                          ^\n/tmp/tmpn33ca116.java:27: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList((n / 2) - 1, (n / 2) + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                        ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                ^\n/tmp/tmpn33ca116.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2 - 1, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList((int) n / 2, (int) n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, (int) n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpuhbq9_5s.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpuhbq9_5s.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpuhbq9_5s.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (int count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123811,
      "stdout": "",
      "stderr": "/tmp/tmpggcpgcgf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n            }\n        } else {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n            } else {\n                return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n            }\n        }\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpi5xnuh7d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpi5xnuh7d.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpi5xnuh7d.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        float median = 0;\n        int i = 0;\n        int j = 0;\n        int count = 0;\n        int m1 = -1;\n        int m2 = -1;\n        while (count <= n) {\n            if (i == n) {\n                m1 = m2;\n                m2 = (int)arr2.get(0).longValue();\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = (int)arr1.get(0).longValue();\n                break;\n            }\n            if (arr1.get(i).longValue() < arr2.get(j).longValue()) {\n                m1 = m2;\n                m2 = (int)arr1.get(i).longValue();\n                i++;\n            } else {\n                m1 = m2;\n                m2 = (int)arr2.get(j).longValue();\n                j++;\n            }\n            count++;\n        }\n        median = (m1 + m2) / 2.0f;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp3o2b_ytc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n            else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            }\n            else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpo8pkgij9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        // Your code here\n        long median = 0;\n        long median1 = 0;\n        long median2 = 0;\n        int i = 0;\n        int j = 0;\n        for (int k = 0; k <= n; k++) {\n            if (i == n) {\n                median1 = median2;\n                median2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                median1 = median2;\n                median2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                median1 = median2;\n                median2 = arr1.get(i);\n                i++;\n            } else {\n                median1 = median2;\n                median2 = arr2.get(j);\n                j++;\n            }\n        }\n        median = (median1 + median2) / 2;\n        return median;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmptjw9cq27.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        long m1 = median(arr1, n);\n        long m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr2.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr1.subList(0, n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmpmvif41gc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpmvif41gc.java:17: error: cannot find symbol\n        long m1 = median(arr1, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpmvif41gc.java:18: error: cannot find symbol\n        long m2 = median(arr2, n);\n                  ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpmvif41gc.java:24: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                        ^\n/tmp/tmpmvif41gc.java:24: error: incompatible types: possible lossy conversion from long to int\n                return getMedian(new ArrayList<Long>(arr1.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2 + 1);\n                                                                                                                                    ^\n/tmp/tmpmvif41gc.java:26: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                ^\n/tmp/tmpmvif41gc.java:26: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr1.subList(n / 2, n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, n / 2 + 1)), n - n / 2);\n                                                                                                                            ^\n/tmp/tmpmvif41gc.java:29: error: incompatible types: possible lossy conversion from long to int\n            return getMedian(new ArrayList<Long>(arr2.subList(n / 2 - 1, n / 2 + 1)), new ArrayList<Long>(arr1.su",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = getMedian(arr1, n);\n        float m2 = getMedian(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2) - 1, (int) n)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int) (n / 2), (int) n)), new ArrayList<Long>(arr2.subList(0, (int) (n / 2) + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2) - 1, (int) n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int) (n / 2) + 1)), new ArrayList<Long>(arr2.subList((int) (n / 2), (int) n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpz3g6bkvn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz3g6bkvn.java:20: error: method getMedian in class Problem cannot be applied to given types;\n        float m1 = getMedian(arr1, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n/tmp/tmpz3g6bkvn.java:21: error: method getMedian in class Problem cannot be applied to given types;\n        float m2 = getMedian(arr2, n);\n                   ^\n  required: ArrayList<Long>,ArrayList<Long>,long\n  found:    ArrayList<Long>,long\n  reason: actual and formal argument lists differ in length\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmp_jr43zmo.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp_jr43zmo.java:14: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmp_jr43zmo.java:15: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n <= 0) {\n            return -1;\n        }\n        if (n == 1) {\n            return (arr1.get(0) + arr2.get(0)) / 2;\n        }\n        if (n == 2) {\n            return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        }\n        float m1 = median(arr1, n);\n        float m2 = median(arr2, n);\n        if (m1 == m2) {\n            return m1;\n        }\n        if (m1 < m2) {\n            if (n % 2 == 0) {\n                return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            }\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) {\n            return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n)), n - n / 2 + 1);\n        }\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpz_wiqmth.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpz_wiqmth.java:20: error: cannot find symbol\n        float m1 = median(arr1, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n/tmp/tmpz_wiqmth.java:21: error: cannot find symbol\n        float m2 = median(arr2, n);\n                   ^\n  symbol:   method median(ArrayList<Long>,long)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0, j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmp_46l1xr_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        int i = 0;\n        int j = 0;\n        long count;\n        long m1 = -1, m2 = -1;\n        for (count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get(0);\n                break;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get(0);\n                break;\n            }\n            if (arr1.get(i) < arr2.get(j)) {\n                m1 = m2;\n                m2 = arr1.get(i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get(j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123810,
      "stdout": "",
      "stderr": "/tmp/tmpenlabvly.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        long i = 0, j = 0;\n        long m1 = -1, m2 = -1;\n        for (long count = 0; count <= n; count++) {\n            if (i == n) {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            } else if (j == n) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else if (arr1.get((int)i) < arr2.get((int)j)) {\n                m1 = m2;\n                m2 = arr1.get((int)i);\n                i++;\n            } else {\n                m1 = m2;\n                m2 = arr2.get((int)j);\n                j++;\n            }\n        }\n        return (m1 + m2) / 2.0f;\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1665510630,
      "stdout": "",
      "stderr": "/tmp/tmpm9b7gv2c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the median of two sorted lists of same size.\n    public static float getMedian(ArrayList<Long> arr1, ArrayList<Long> arr2, long n) {\n        if (n == 0) return -1;\n        if (n == 1) return (arr1.get(0) + arr2.get(0)) / 2;\n        if (n == 2) return (Math.max(arr1.get(0), arr2.get(0)) + Math.min(arr1.get(1), arr2.get(1))) / 2;\n        float m1 = median(arr1);\n        float m2 = median(arr2);\n        if (m1 == m2) return m1;\n        if (m1 < m2) {\n            if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2 - 1, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2 + 1);\n            return getMedian(new ArrayList<Long>(arr1.subList((int)n / 2, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList(0, (int)n / 2 + 1)), n - n / 2);\n        }\n        if (n % 2 == 0) return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2 - 1, (int)n / 2 + 1)), n - n / 2 + 1);\n        return getMedian(new ArrayList<Long>(arr1.subList(0, (int)n / 2 + 1)), new ArrayList<Long>(arr2.subList((int)n / 2, (int)n / 2 + 1)), n - n / 2);\n    }\n    public static void main(String[] args) {\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)1l, (long)12l, (long)15l, (long)26l, (long)38l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)13l, (long)17l, (long)30l, (long)45l))), (5l)) == (16.0f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)2l, (long)4l, (long)8l, (long)9l))), (new ArrayList<Long>(Arrays.asList((long)7l, (long)13l, (long)19l, (long)28l))), (4l)) == (8.5f));\n    assert(getMedian((new ArrayList<Long>(Arrays.asList((long)3l, (long)6l, (long)14l, (long)23l, (long)36l, (long)42l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)18l, (long)27l, (long)39l, (long)49l, (long)55l))), (6l)) == (25.0f));\n    }\n\n}\n",
      "timestamp": 1666123813,
      "stdout": "",
      "stderr": "/tmp/tmp6ragvp78.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp6ragvp78.java:14: error: cannot find symbol\n        float m1 = median(arr1);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n/tmp/tmp6ragvp78.java:15: error: cannot find symbol\n        float m2 = median(arr2);\n                   ^\n  symbol:   method median(ArrayList<Long>)\n  location: class Problem\n3 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
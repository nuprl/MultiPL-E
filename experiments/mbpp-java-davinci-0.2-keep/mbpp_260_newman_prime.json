{
  "name": "mbpp_260_newman_prime",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find the nth newman\u2013shanks\u2013williams prime number.\n    public static long newmanPrime(long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_260_newman_prime.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(newmanPrime((3l)) == (7l));\n    assert(newmanPrime((4l)) == (17l));\n    assert(newmanPrime((5l)) == (41l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return i;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long i = 1;\n        long c = 0;\n        while (c < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                c++;\n            }\n        }\n        return i;",
    "        if (n == 1) return 1;\n        long p = 1;\n        long i = 1;\n        while (i < n) {\n            p = nextNewmanPrime(p);\n            i++;\n        }\n        return p;",
    "        long a = 2;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long A = 0;\n        long B = 0;\n        long C = 0;\n        long D = 0;\n        long E = 0;\n        long F = 0;\n        long G = 0;\n        long H = 0;\n        long I = 0;\n        long J = 0;\n        long K = 0;\n        long L = 0;\n        long M = 0;\n        long O = 0;\n        long P = 0;\n        long Q = 0;\n        long R = 0;\n        long S = 0;\n        long T = 0;\n        long U = 0;\n        long V = 0;\n        long W = 0;\n        long X = 0;\n        long Y = 0;\n        long Z = 0;\n        long AA = 0;\n        long AB = 0;\n        long AC = 0;\n        long AD = 0;\n        long AE = 0;\n        long AF = 0;\n        long AG = 0;\n        long AH = 0;\n        long AI = 0;\n        long AJ = 0;\n        long AK = 0;\n        long AL = 0;\n        long AM = 0;\n        long AO = 0;\n        long AP = 0;\n        long AQ = 0;\n        long AR = 0;\n        long AS = 0;\n        long AT = 0;\n        long AU = 0;\n        long AV = 0;\n        long AW = 0;\n        long AX = 0;",
    "        // TODO: Implement me!\n        return 0;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 23;\n        primes[8] = 29;\n        primes[9] = 37;\n        primes[10] = 47;\n        primes[11] = 59;\n        primes[12] = 71;\n        primes[13] = 89;\n        primes[14] = 107;\n        primes[15] = 131;\n        primes[16] = 163;\n        primes[17] = 197;\n        primes[18] = 239;\n        primes[19] = 293;\n        primes[20] = 353;\n        primes[21] = 431;\n        primes[22] = 521;\n        primes[23] = 631;\n        primes[24] = 761;\n        primes[25] = 919;\n        primes[26] = 1103;\n        primes[27] = 1327;\n        primes[28] = 1597;\n        primes[29] = 1931;\n        primes[30] = 2333;\n        primes[31] = 2801;\n        primes[32] = 3371;\n        primes[33] = 4049;\n        primes[34] = 4861;\n        primes[35] = 5839;\n        primes[36] = 7013;\n        primes[37] = 8419;\n        primes[38] = 10103;\n        primes[39] = 12143;\n        primes[40] = 14591;\n        primes[41] = 17519;\n        primes[42] = 21023;\n        primes[43] = 25229;\n        primes[44] = 30313;\n        primes[45] = 36353;\n        primes[46] = 43627;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // The nth Newman\u2013Shanks\u2013Williams prime is the nth prime number p such that p + 2 is also prime.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 2, 3, 5, 11, 23, 29, 41, 53, 83, 89, 113, 131, 173, 179, 191, 233, 239, 251, 281, 293, 359, 419, 431, 443, 461, 509, 569, 571, 599, 641, 653, 659, 809, 821, 827, 857, 881, 1019, 1031, 1049, 1061, 1091, 1153, 1223, 1229, 1277, 1289, 1301, 1319, 1427, 1451, 1481, 1487, 1607, 1619, 1669, 1697, 1721, 1787, 1873, 1877, 1913, 1931, 1933, 1949, 1997, 2027, 2029, 2039, 2081, 2087, 2111, 2129, 2143, 2153, 2203, 2207, 2237, 2239, 2269, 2297, 2311, 2357, 2371, 2377, 2381, 2383, 2417, 2459, 2467, 2531, 2539, 2543, 2549, 2551, 2557, 2579, 2591, 2633, 2657, 2659, 2663, 2671, 2677, 2683, 2687, 2689, 2711, 2713, 2719, 2729, 2731, 2741, 2749, 2767, 2777, 2789, 2791, 2801, 2803, 2819, 2833, 2837, 2843, 2851, 2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917, 2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999, 3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061, 3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137, 3163, 3167, 3169, 3181, 3187, 3203, 3209,",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 2;\n        long q = 2;\n        long r = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n            if (isPrime(r)) {\n                i++;\n            }\n        }\n        if (isPrime(p)) {\n            return p;\n        }\n        if (isPrime(q)) {\n            return q;\n        }\n        return r;",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 0;\n        while (count < n) {\n            i = 6 * j - 1;\n            j = 6 * j + 1;\n            if (isPrime(i)) {\n                count++;\n                k = i;\n            }\n            if (isPrime(j)) {\n                count++;\n                k = j;\n            }\n        }\n        return k;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        if (isPrime(p)) {\n            return p;\n        } else {\n            return q;\n        }",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long p = 2;\n        long q = 1;\n        long r = 1;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long a = 0;\n        long b = 0;\n        long c = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long count = 0;\n        while (count < n) {\n            if (p % 2 == 0) {\n                q = p;\n                r = p;\n                s = p;\n                t = p;\n                u = p;\n                v = p;\n                w = p;\n                x = p;\n                y = p;\n                z = p;\n                a = p;\n                b = p;\n                c = p;\n                d = p;\n                e = p;\n                f = p;\n                g = p;\n                h = p;\n                i = p;\n                j = p;\n                k = p;\n                l = p;\n                m = p;\n                o = p;\n                p++;\n                continue;\n            }\n            if (p % 3 == 0) {\n                q = p;\n                r = p;\n                s = p;\n                t = p;\n                u = p;\n                v = p;\n                w = p;\n                x = p;\n                y = p;\n                z = p;\n                a = p;\n                b = p;\n                c = p;\n                d = p;\n                e = p;\n                f = p;\n                g = p;\n                h = p;\n                i = p;\n                j = p;\n                k = p;\n                l = p;\n                m = p;\n                o = p;",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2 * i;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long prime = 1;\n        while (i <= n) {\n            prime += 2;\n            if (isPrime(prime)) {\n                i++;\n            }\n        }\n        return prime;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p + 1);\n            if (i % 2 == 0) {\n                p = nextPrime(p + 1);\n            }\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long prime = 2;\n        long count = 1;\n        while (count < n) {\n            prime = nextPrime(prime);\n            if (prime % 4 == 3) {\n                count++;\n            }\n        }\n        return prime;",
    "        if (n == 1) {\n            return 1;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        long p = newmanPrime(n - 1);\n        long q = newmanPrime(n - 2);\n        return p * p - 2 * q;",
    "        long[] primes = new long[]{2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 683;\n        primes[6] = 44287;\n        primes[7] = 859433;\n        primes[8] = 7087261;\n        primes[9] = 686303773;\n        primes[10] = 726384038201L;\n        primes[11] = 66438388790321L;\n        primes[12] = 7443995790139201L;\n        primes[13] = 638986856227898801L;\n        primes[14] = 708726384038201L;\n        primes[15] = 686303773L;\n        primes[16] = 726384038201L;\n        primes[17] = 66438388790321L;\n        primes[18] = 7443995790139201L;\n        primes[19] = 638986856227898801L;\n        primes[20] = 708726384038201L;\n        primes[21] = 686303773L;\n        primes[22] = 726384038201L;\n        primes[23] = 66438388790321L;\n        primes[24] = 7443995790139201L;\n        primes[25] = 638986856227898801L;\n        primes[26] = 708726384038201L;\n        primes[27] = 686303773L;\n        primes[28] = 726384038201L;\n        primes[29] = 66438388790321L;\n        primes[30] = 7443995790139201L;\n        primes[31] = 638986856227898801L;\n        primes[32] = 7087",
    "        // TODO: Implement me!\n        return 0;",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 0;\n        while (count < n) {\n            i = 6 * k - 1;\n            j = 6 * k + 1;\n            if (isPrime(i)) {\n                count++;\n            }\n            if (isPrime(j)) {\n                count++;\n            }\n            k++;\n        }\n        if (isPrime(i)) {\n            return i;\n        } else {\n            return j;\n        }",
    "        // TODO: Implement this function.\n        return 0;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return i;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n        long bp = 1;\n        long bq = 1;\n        long br = 1;\n        long bs = 1;\n        long b",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        // TODO: Implement this function.\n        return 0;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        for (long i = 1; i < n; i++) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                return p;\n            } else if (isPrime(q)) {\n                return q;\n            } else if (isPrime(r)) {\n                return r;\n            }\n        }\n        return -1;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long bb = 1;\n        long cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n        long nn = 1;\n        long oo = 1;\n        long pp = 1;\n        long qq = 1;\n        long rr = 1;\n        long ss = 1;\n        long tt = 1;\n        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long aaa = 1;\n        long bbb = 1;\n        long ccc = 1;\n        long ddd = 1;\n        long eee = 1;\n        long fff = 1;\n        long ggg = 1;\n        long hhh = 1;\n        long iii = 1;\n        long jjj = 1;\n        long kkk = 1;\n        long lll = 1;\n        long mmm = 1;\n        long nnn = 1;\n        long ooo = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n        long sss = 1;\n        long ttt = 1;\n        long uuu = 1;\n        long vvv = 1;\n        long www = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long aaaa = 1;\n        long bbbb = 1;\n        long cccc = 1;\n        long d",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};\n        long[] ns = new long[primes.length];\n        for (int i = 0; i < primes.length; i++) {\n            ns[i] = primes[i] * primes[i] - 2;\n        }\n        return ns[(int)n - 1];",
    "        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 5;\n        }\n        long k = 1;\n        long p = 5;\n        while (k < n) {\n            p = nextPrime(p);\n            k++;\n        }\n        return p;",
    "        long x = 1;\n        for (long i = 1; i <= n; i++) {\n            x = x + (i * i);\n            if (isPrime(x)) {\n                System.out.println(i + \" \" + x);\n            }\n        }\n        return x;",
    "        long p = 2;\n        long q = 3;\n        long r = 7;\n        long s = 5;\n        long t = 11;\n        long u = 13;\n        long v = 17;\n        long w = 19;\n        long x = 23;\n        long y = 29;\n        long z = 31;\n        long aa = 37;\n        long bb = 41;\n        long cc = 43;\n        long dd = 47;\n        long ee = 53;\n        long ff = 59;\n        long gg = 61;\n        long hh = 67;\n        long ii = 71;\n        long jj = 73;\n        long kk = 79;\n        long ll = 83;\n        long mm = 89;\n        long nn = 97;\n        long oo = 101;\n        long pp = 103;\n        long qq = 107;\n        long rr = 109;\n        long ss = 113;\n        long tt = 127;\n        long uu = 131;\n        long vv = 137;\n        long ww = 139;\n        long xx = 149;\n        long yy = 151;\n        long zz = 157;\n        long aaa = 163;\n        long bbb = 167;\n        long ccc = 173;\n        long ddd = 179;\n        long eee = 181;\n        long fff = 191;\n        long ggg = 193;\n        long hhh = 197;\n        long iii = 199;\n        long jjj = 211;\n        long kkk = 223;\n        long lll = 227;\n        long mmm = 229;\n        long nnn = 233;\n        long ooo = 239;\n        long ppp = 241;\n        long qqq = 251;\n        long rrr = 257;\n        long sss = 263;\n        long ttt = 269;\n        long uuu = 271;\n        long vvv = 277;\n        long www = 281;\n        long xxx = 283;\n        long yyy = 293;\n        long zzz = 307;\n        long aaaa = 311;\n        long bbbb = 313;\n        long cccc = 317;\n        long d",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 0;\n        while (count < n) {\n            i += 2 * j + 1;\n            j += 2 * k + 1;\n            k += 2;\n            count++;\n        }\n        return i;",
    "        long i = 1;\n        long p = 0;\n        while (i <= n) {\n            p++;\n            if (isPrime(p) && isPrime(2 * p + 1)) {\n                i++;\n            }\n        }\n        return p;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime((i - 1) / 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(2 * p + 1);\n        }\n        return p;",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = p + 2 * (p % 2) + 2;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = nextPrime(p);\n            if (p % 4 == 3) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 2;\n        for (long i = 1; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long x = 1;\n        long y = 1;\n        long z = 1;\n        long count = 0;\n        while (count < n) {\n            x = 6 * y - x;\n            y = (long)Math.sqrt(x * x - 4);\n            z = x + y;\n            if (z % 5 == 0) {\n                count++;\n            }\n        }\n        return z;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = p + 2 * q;\n            q = p + 2 * q;\n            i = i + 1;\n        }\n        return p;",
    "        long x = 1;\n        long y = 1;\n        long z = 1;\n        long i = 1;\n        while (i < n) {\n            x = x + y + z;\n            y = x + y + z;\n            z = x + y + z;\n            i = i + 1;\n        }\n        return x;",
    "        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 3;\n        }\n        if (n == 3) {\n            return 5;\n        }\n        long a = 2;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n        long aa = 0;\n        long ab = 0;\n        long ac = 0;\n        long ad = 0;\n        long ae = 0;\n        long af = 0;\n        long ag = 0;\n        long ah = 0;\n        long ai = 0;\n        long aj = 0;\n        long ak = 0;\n        long al = 0;\n        long am = 0;\n        long an = 0;\n        long ao = 0;\n        long ap = 0;\n        long aq = 0;\n        long ar = 0;\n        long as = 0;\n        long at = 0;\n        long au = 0;\n        long av = 0;\n        long aw = 0;\n        long ax = 0;\n        long ay = 0;\n        long az = 0;\n        long ba = 0;\n        long bb = 0;\n        long bc = 0;\n        long bd = 0;\n        long be = 0;\n        long bf = 0;\n        long bg = 0;\n        long bh = 0;\n        long bi = 0;\n        long bj = 0;\n        long bk = 0;\n        long bl = 0;\n        long bm = 0",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        // TODO: Implement\n        return 0;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // Write your code here.\n        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187,",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long p = 1;\n        long q = 1;\n        for (long i = 1; i <= n; i++) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                return p;\n            } else if (isPrime(q)) {\n                return q;\n            }\n        }\n        return -1;",
    "        long p = 1;\n        long q = 2;\n        long r = 3;\n        long s = 4;\n        long t = 5;\n        long u = 6;\n        long v = 7;\n        long w = 8;\n        long x = 9;\n        long y = 10;\n        long z = 11;\n        long aa = 12;\n        long bb = 13;\n        long cc = 14;\n        long dd = 15;\n        long ee = 16;\n        long ff = 17;\n        long gg = 18;\n        long hh = 19;\n        long ii = 20;\n        long jj = 21;\n        long kk = 22;\n        long ll = 23;\n        long mm = 24;\n        long nn = 25;\n        long oo = 26;\n        long pp = 27;\n        long qq = 28;\n        long rr = 29;\n        long ss = 30;\n        long tt = 31;\n        long uu = 32;\n        long vv = 33;\n        long ww = 34;\n        long xx = 35;\n        long yy = 36;\n        long zz = 37;\n        long aaa = 38;\n        long bbb = 39;\n        long ccc = 40;\n        long ddd = 41;\n        long eee = 42;\n        long fff = 43;\n        long ggg = 44;\n        long hhh = 45;\n        long iii = 46;\n        long jjj = 47;\n        long kkk = 48;\n        long lll = 49;\n        long mmm = 50;\n        long nnn = 51;\n        long ooo = 52;\n        long ppp = 53;\n        long qqq = 54;\n        long rrr = 55;\n        long sss = 56;\n        long ttt = 57;\n        long uuu = 58;\n        long vvv = 59;\n        long www = 60;\n        long xxx = 61;\n        long yyy = 62;\n        long zzz = 63;\n        long aaaa = 64;\n        long bbbb = 65;\n        long cccc = 66;\n        long d",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(2 * p + 1);\n        }\n        return p;",
    "        // The Newman\u2013Shanks\u2013Williams prime is a prime number of the form\n        // 2^p \u2212 2^q \u2212 1, where p > q > 0 are prime numbers.\n        // The first few Newman\u2013Shanks\u2013Williams primes are:\n        // 7, 23, 167, 263, 359, 479, 503, 683, 719, 863, 1087, 1283, 1307, 1523,\n        // 1619, 1823, 1907, 2027, 2287, 2467, 2543, 2759, 2819, 2903, 3167, 3259,\n        // 3299, 3307, 3467, 3539, 3671, 3823, 3907, 4027, 4127, 4243, 4339, 4447,\n        // 4483, 4563, 4663, 4783, 4871, 4987, 5099, 5227, 5347, 5483, 5527, 5587,\n        // 5659, 5743, 5827, 5939, 6043, 6163, 6203, 6307, 6379, 6491, 6563, 6659,\n        // 6719, 6827, 6907, 7043, 7127, 7243, 7347, 7459, 7547, 7643, 7723, 7823,\n        // 7907, 8011, 8123, 8243, 8363, 8387, 8483, 8563, 8707, 8803, 8923, 9043,\n        // 9203, 9283, 9403, 9511, 9587, 9659, 9743, 9811, 9923, 10067, 10139,\n        // 10243, 10331, 10459, 10567, 10651, 10747, 10867, 10939, 11059, 11171,\n        // 11299, 11387, 11483, 11587, 11707, 11787, 11867, 11939, 12011, 12107,\n        // 12203, 12347, 12467, 12563, 12659, 12763, 12823, 12907, 13003, 13127,\n        // 13187, 13259, 13347, 13411, 13523, 13619, 13739, 13843, 13907, 14011,\n        // 14123, 14203, 14303, 14423,",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        // The nth newman\u2013shanks\u2013williams prime number is the nth prime number that is not of the form 2^k - 1.\n        // The nth prime number is the nth number that is divisible by only 1 and itself.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1.\n        // The nth number that is not of the form 2^k - 1 is the nth number that is not of the form 2^k - 1",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long c = 0;\n        while (c < n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                c++;\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        // We use the formula p_n = 2^n * 3^n - 1.\n        return (long) Math.pow(2, n) * (long) Math.pow(3, n) - 1;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        if (n == 1) {\n            return 1;\n        }\n        long i = 1;\n        long count = 1;\n        while (count < n) {\n            i += 2;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long nthPrime = 1;\n        long currentPrime = 2;\n        long currentPrimeSquare = 4;\n        long currentPrimeCube = 8;\n        long currentPrimeFourth = 16;\n        while (nthPrime < n) {\n            long nextPrime = currentPrime + 1;\n            while (true) {\n                long nextPrimeSquare = nextPrime * nextPrime;\n                long nextPrimeCube = nextPrimeSquare * nextPrime;\n                long nextPrimeFourth = nextPrimeCube * nextPrime;\n                if (nextPrimeSquare - nextPrime + 1 <= currentPrimeFourth) {\n                    nextPrime++;\n                } else if (nextPrimeCube - nextPrime + 1 <= currentPrimeFourth) {\n                    nextPrime++;\n                } else if (nextPrimeFourth - nextPrime + 1 <= currentPrimeFourth) {\n                    nextPrime++;\n                } else {\n                    break;\n                }\n            }\n            nthPrime++;\n            currentPrime = nextPrime;\n            currentPrimeSquare = currentPrime * currentPrime;\n            currentPrimeCube = currentPrimeSquare * currentPrime;\n            currentPrimeFourth = currentPrimeCube * currentPrime;\n        }\n        return currentPrime;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long i = 1;\n        long prime = 1;\n        while (i <= n) {\n            prime += 2 * i;\n            if (isPrime(prime)) {\n                i++;\n            }\n        }\n        return prime;",
    "        long i = 0;\n        long p = 1;\n        while (i < n) {\n            p = nextPrime(p);\n            long q = nextPrime(p);\n            if (q % (2 * p + 1) == 0) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        return Math.max(p, q);",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long i = 1;\n        while (i <= n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n            if (isPrime(r)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p + 1);\n            if (i % 2 == 0) {\n                p = nextPrime(p + 1);\n            }\n        }\n        return p;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n        long l = 1;\n        long m = 1;\n        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long ab = 1;\n        long ac = 1;\n        long ad = 1;\n        long ae = 1;\n        long af = 1;\n        long ag = 1;\n        long ah = 1;\n        long ai = 1;\n        long aj = 1;\n        long ak = 1;\n        long al = 1;\n        long am = 1;\n        long an = 1;\n        long ao = 1;\n        long ap = 1;\n        long aq = 1;\n        long ar = 1;\n        long as = 1;\n        long at = 1;\n        long au = 1;\n        long av = 1;\n        long aw = 1;\n        long ax = 1;\n        long ay = 1;\n        long az = 1;\n        long ba = 1;\n        long bb = 1;\n        long bc = 1;\n        long bd = 1;\n        long be = 1;\n        long bf = 1;\n        long bg = 1;\n        long bh = 1;\n        long bi = 1;\n        long bj = 1;\n        long bk = 1;\n        long bl = 1;\n        long bm = 1;\n        long bn = 1;\n        long bo = 1;\n       ",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 523;\n        if (n == 23) return 571;\n        if (n == 24) return 577;\n        if (n == 25) return 593;\n        if (n == 26) return 599;\n        if (n == 27) return 719;\n        if (n == 28) return 733;\n        if (n == 29) return 739;\n        if (n == 30) return 797;\n        if (n == 31) return 2333;\n        if (n == 32) return 2339;\n        if (n == 33) return 2393;\n        if (n == 34) return 2399;\n        if (n == 35) return 2939;\n        if (n == 36) return 3119;\n        if (n == 37) return 3137;\n        if (n == 38) return 3733;\n        if (n == 39) return 3739;\n        if (n == 40) return 3793;\n        if (n == 41) return 3797;\n        if (n == 42) return 5923;\n        if (n == 43) return 7193;\n        if (n == 44) return 7331;\n        if (n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 463;\n        primes[6] = 7907;\n        primes[7] = 104729;\n        primes[8] = 1299709;\n        primes[9] = 15485863;\n        primes[10] = 179424673;\n        primes[11] = 2038074743L;\n        primes[12] = 22801763489L;\n        primes[13] = 252097800623L;\n        primes[14] = 2760727302517L;\n        primes[15] = 30011993578969L;\n        primes[16] = 324140966595863L;\n        primes[17] = 3481524372457707L;\n        primes[18] = 37216290789069609L;\n        primes[19] = 396173387535605023L;\n        primes[20] = 4201838080804913507L;\n        primes[21] = 44419422862538268089L;\n        primes[22] = 468204649270274015443L;\n        primes[23] = 4922150699151652599017L;\n        primes[24] = 51622549056005651444709L;\n        primes[25] = 540235911204947868894363L;\n        primes[26] = 5642463318498392233389707L;\n        primes[27] = 58825673249475157778352409L;\n        primes[28] = 612267153139664932228069063L;\n        primes[29] = 6362775737845775866725247007L;\n        primes[30] = 66028793442948944111700803209L",
    "        long i = 1;\n        long p = 2;\n        while (i < n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        long count = 0;\n        while (count < n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                count++;\n            }\n        }\n        return p;",
    "        long p = 1;\n        long i = 1;\n        while (i <= n) {\n            p = 6 * i - 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            p = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextPrime(p);\n            p = nextPrime(2 * p + 1);\n        }\n        return p;",
    "        long prime = 0;\n        long count = 0;\n        while (count < n) {\n            prime++;\n            if (isPrime(prime)) {\n                if (isPrime(2 * prime + 1)) {\n                    count++;\n                }\n            }\n        }\n        return prime;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        if (isPrime(p)) {\n            return p;\n        } else {\n            return q;\n        }",
    "        long prime = 2;\n        for (long i = 1; i < n; i++) {\n            prime = nextPrime(prime);\n        }\n        return prime;",
    "        long p = 2;\n        long q = 2;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        return p > q ? p : q;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long bb = 1;\n        long cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n        long nn = 1;\n        long oo = 1;\n        long pp = 1;\n        long qq = 1;\n        long rr = 1;\n        long ss = 1;\n        long tt = 1;\n        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long aaa = 1;\n        long bbb = 1;\n        long ccc = 1;\n        long ddd = 1;\n        long eee = 1;\n        long fff = 1;\n        long ggg = 1;\n        long hhh = 1;\n        long iii = 1;\n        long jjj = 1;\n        long kkk = 1;\n        long lll = 1;\n        long mmm = 1;\n        long nnn = 1;\n        long ooo = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n        long sss = 1;\n        long ttt = 1;\n        long uuu = 1;\n        long vvv = 1;\n        long www = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long aaaa = 1;\n        long bbbb = 1;\n        long cccc = 1;\n        long d",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long c = 1;\n        long i = 1;\n        while (c <= n) {\n            i += 2;\n            if (isPrime(i) && isPrime((i - 1) / 2)) {\n                c++;\n            }\n        }\n        return i;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 683;\n        primes[6] = 44287;\n        primes[7] = 8400511;\n        primes[8] = 8981749;\n        primes[9] = 8981751;\n        primes[10] = 8981753;\n        primes[11] = 8981759;\n        primes[12] = 8981761;\n        primes[13] = 8981767;\n        primes[14] = 8981771;\n        primes[15] = 8981777;\n        primes[16] = 8981783;\n        primes[17] = 8981789;\n        primes[18] = 8981791;\n        primes[19] = 8981797;\n        primes[20] = 8981803;\n        primes[21] = 8981809;\n        primes[22] = 8981813;\n        primes[23] = 8981819;\n        primes[24] = 8981821;\n        primes[25] = 8981827;\n        primes[26] = 8981831;\n        primes[27] = 8981833;\n        primes[28] = 8981837;\n        primes[29] = 8981843;\n        primes[30] = 8981849;\n        primes[31] = 8981851;\n        primes[32] = 8981857;\n        primes[33] = 8981861;\n        primes[34] = 8981863;\n        primes[35] = 8981867;\n        primes[36] = 8981873;\n        primes[37] = 8981879;\n        primes[38] = 8981881;\n        primes[39] = 898",
    "        // The nth newman\u2013shanks\u2013williams prime number is the nth prime number\n        // that is not a sum of two primes.\n        // The first few newman\u2013shanks\u2013williams prime numbers are:\n        // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087,",
    "        if (n == 1) return 1;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 11;\n        if (n == 6) return 13;\n        if (n == 7) return 17;\n        if (n == 8) return 23;\n        if (n == 9) return 29;\n        if (n == 10) return 37;\n        if (n == 11) return 47;\n        if (n == 12) return 59;\n        if (n == 13) return 71;\n        if (n == 14) return 89;\n        if (n == 15) return 107;\n        if (n == 16) return 131;\n        if (n == 17) return 163;\n        if (n == 18) return 197;\n        if (n == 19) return 239;\n        if (n == 20) return 293;\n        if (n == 21) return 353;\n        if (n == 22) return 431;\n        if (n == 23) return 521;\n        if (n == 24) return 631;\n        if (n == 25) return 761;\n        if (n == 26) return 919;\n        if (n == 27) return 1103;\n        if (n == 28) return 1327;\n        if (n == 29) return 1597;\n        if (n == 30) return 1931;\n        if (n == 31) return 2333;\n        if (n == 32) return 2801;\n        if (n == 33) return 3371;\n        if (n == 34) return 4049;\n        if (n == 35) return 4861;\n        if (n == 36) return 5839;\n        if (n == 37) return 7013;\n        if (n == 38) return 8419;\n        if (n == 39) return 10103;\n        if (n == 40) return 12143;\n        if (n == 41) return 14591;\n        if (n == 42) return 17519;\n        if (n == 43) return 21023;\n        if (n == 44) return 25229;\n        if (n",
    "        long[] p = new long[(int)n];\n        p[0] = 2;\n        p[1] = 3;\n        p[2] = 5;\n        p[3] = 7;\n        p[4] = 23;\n        p[5] = 29;\n        p[6] = 31;\n        p[7] = 37;\n        p[8] = 53;\n        p[9] = 59;\n        p[10] = 71;\n        p[11] = 73;\n        p[12] = 79;\n        p[13] = 233;\n        p[14] = 239;\n        p[15] = 293;\n        p[16] = 311;\n        p[17] = 313;\n        p[18] = 317;\n        p[19] = 373;\n        p[20] = 379;\n        p[21] = 593;\n        p[22] = 599;\n        p[23] = 719;\n        p[24] = 733;\n        p[25] = 739;\n        p[26] = 797;\n        p[27] = 2333;\n        p[28] = 2339;\n        p[29] = 2393;\n        p[30] = 2399;\n        p[31] = 2939;\n        p[32] = 3119;\n        p[33] = 3137;\n        p[34] = 3733;\n        p[35] = 3739;\n        p[36] = 3793;\n        p[37] = 3797;\n        p[38] = 5939;\n        p[39] = 7193;\n        p[40] = 7331;\n        p[41] = 7333;\n        p[42] = 7393;\n        p[43] = 23333;\n        p[44] = 23339;\n        p[45] = 23399;\n        p[46] = 23993;\n        p[47] = 29399;\n        p[48] = 31193;\n        p[49] = 31379;\n        p[50] = 37337;\n        p[51] = 37339",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = {2, 3, 7, 43, 1807, 3263443, 10650056950807L};\n        return primes[(int)n];",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return 2 * i + 1;",
    "        long prime = 2;\n        for (long i = 0; i < n; i++) {\n            prime = nextPrime(prime);\n        }\n        return prime;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 1;\n        while (count < n) {\n            i += 2;\n            j += 4;\n            k += 2;\n            if (isPrime(i)) {\n                count++;\n            }\n            if (isPrime(j)) {\n                count++;\n            }\n            if (isPrime(k)) {\n                count++;\n            }\n        }\n        if (count == n) {\n            return i;\n        } else if (count == n + 1) {\n            return j;\n        } else {\n            return k;\n        }",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long count = 1;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return 2 * i + 1;",
    "        long count = 0;\n        long i = 2;\n        while (count < n) {\n            if (isPrime(i) && isPrime(i - 2)) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long i = 1;\n        long j = 1;\n        long k = 1;\n        long count = 0;\n        while (count < n) {\n            i = 6 * k - 1;\n            j = 6 * k + 1;\n            if (isPrime(i)) {\n                count++;\n            }\n            if (isPrime(j)) {\n                count++;\n            }\n            k++;\n        }\n        if (isPrime(i)) {\n            return i;\n        } else {\n            return j;\n        }",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n            i += 2;\n        }\n        return i - 2;",
    "        long p = 1;\n        for (int i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 2;\n        long q = 1;\n        long c = 1;\n        while (c < n) {\n            p = 6 * q - p + 2;\n            q = p - q;\n            c++;\n        }\n        return p;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long count = 0;\n        long i = 2;\n        while (count < n) {\n            if (isPrime(i) && isPrime(i - 2)) {\n                count++;\n            }\n            i++;\n        }\n        return i - 1;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long i = 1;\n        long p = 1;\n        while (i <= n) {\n            p += 2 * i;\n            if (isPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        long prime = 1;\n        for (long i = 0; i < n; i++) {\n            prime = nextNewmanPrime(prime);\n        }\n        return prime;",
    "        if (n == 1) return 2;\n        if (n == 2) return 3;\n        if (n == 3) return 5;\n        if (n == 4) return 7;\n        if (n == 5) return 23;\n        if (n == 6) return 29;\n        if (n == 7) return 31;\n        if (n == 8) return 37;\n        if (n == 9) return 53;\n        if (n == 10) return 59;\n        if (n == 11) return 71;\n        if (n == 12) return 73;\n        if (n == 13) return 79;\n        if (n == 14) return 233;\n        if (n == 15) return 239;\n        if (n == 16) return 293;\n        if (n == 17) return 311;\n        if (n == 18) return 313;\n        if (n == 19) return 317;\n        if (n == 20) return 373;\n        if (n == 21) return 379;\n        if (n == 22) return 593;\n        if (n == 23) return 599;\n        if (n == 24) return 719;\n        if (n == 25) return 733;\n        if (n == 26) return 739;\n        if (n == 27) return 797;\n        if (n == 28) return 2333;\n        if (n == 29) return 2339;\n        if (n == 30) return 2393;\n        if (n == 31) return 2399;\n        if (n == 32) return 2939;\n        if (n == 33) return 3119;\n        if (n == 34) return 3137;\n        if (n == 35) return 3733;\n        if (n == 36) return 3739;\n        if (n == 37) return 3793;\n        if (n == 38) return 3797;\n        if (n == 39) return 5939;\n        if (n == 40) return 7193;\n        if (n == 41) return 7331;\n        if (n == 42) return 7333;\n        if (n == 43) return 7393;\n        if (n == 44) return 23333;\n        if (n",
    "        long i = 0;\n        long p = 0;\n        while (i < n) {\n            p++;\n            if (isPrime(p) && isPrime(2*p + 1)) {\n                i++;\n            }\n        }\n        return p;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return i;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        for (long i = 1; i < n; i++) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            r = 12 * i + 5;\n            if (isPrime(p)) {\n                return p;\n            }\n            if (isPrime(q)) {\n                return q;\n            }\n            if (isPrime(r)) {\n                return r;\n            }\n        }\n        return -1;",
    "        long p = 1;\n        long q = 1;\n        long i = 1;\n        while (i < n) {\n            p = 6 * i - 1;\n            q = 6 * i + 1;\n            if (isPrime(p)) {\n                i++;\n            }\n            if (isPrime(q)) {\n                i++;\n            }\n        }\n        return (isPrime(p)) ? p : q;",
    "        long[] primes = new long[(int) n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 683;\n        primes[6] = 44287;\n        primes[7] = 859433;\n        primes[8] = 7852917;\n        primes[9] = 7109893;\n        primes[10] = 86028121;\n        primes[11] = 86028157;\n        primes[12] = 86028159;\n        primes[13] = 86028163;\n        primes[14] = 86028181;\n        primes[15] = 86028183;\n        primes[16] = 86028201;\n        primes[17] = 86028207;\n        primes[18] = 86028223;\n        primes[19] = 86028249;\n        primes[20] = 86028251;\n        primes[21] = 86028261;\n        primes[22] = 86028279;\n        primes[23] = 86028293;\n        primes[24] = 86028297;\n        primes[25] = 86028299;\n        primes[26] = 86028303;\n        primes[27] = 86028311;\n        primes[28] = 86028333;\n        primes[29] = 86028339;\n        primes[30] = 86028357;\n        primes[31] = 86028381;\n        primes[32] = 86028399;\n        primes[33] = 86028401;\n        primes[34] = 86028411;\n        primes[35] = 86028413;\n        primes[36] = 86028417;\n        primes[37] = 86028419;\n        primes[38] = 86028437;\n        primes[39] = 860",
    "        long[] p = new long[(int)n];\n        p[0] = 2;\n        p[1] = 3;\n        p[2] = 5;\n        p[3] = 7;\n        p[4] = 11;\n        p[5] = 13;\n        p[6] = 17;\n        p[7] = 19;\n        p[8] = 23;\n        p[9] = 29;\n        p[10] = 31;\n        p[11] = 37;\n        p[12] = 41;\n        p[13] = 43;\n        p[14] = 47;\n        p[15] = 53;\n        p[16] = 59;\n        p[17] = 61;\n        p[18] = 67;\n        p[19] = 71;\n        p[20] = 73;\n        p[21] = 79;\n        p[22] = 83;\n        p[23] = 89;\n        p[24] = 97;\n        p[25] = 101;\n        p[26] = 103;\n        p[27] = 107;\n        p[28] = 109;\n        p[29] = 113;\n        p[30] = 127;\n        p[31] = 131;\n        p[32] = 137;\n        p[33] = 139;\n        p[34] = 149;\n        p[35] = 151;\n        p[36] = 157;\n        p[37] = 163;\n        p[38] = 167;\n        p[39] = 173;\n        p[40] = 179;\n        p[41] = 181;\n        p[42] = 191;\n        p[43] = 193;\n        p[44] = 197;\n        p[45] = 199;\n        p[46] = 211;\n        p[47] = 223;\n        p[48] = 227;\n        p[49] = 229;\n        p[50] = 233;\n        p[51] = 239;\n        p[52] = 241;\n        p[53] = 251;\n        p[54] = 257;\n        p",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long i = 1;\n        long p = 2;\n        while (i < n) {\n            p = nextPrime(p);\n            if (p % 4 == 3) {\n                i++;\n            }\n        }\n        return p;",
    "        // The nth newman\u2013shanks\u2013williams prime number is the nth prime number\n        // that is congruent to 1 modulo 4.\n        long count = 0;\n        long i = 1;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && i % 4 == 1) {\n                count++;\n            }\n        }\n        return i;",
    "        long p = 1;\n        long i = 1;\n        while (i <= n) {\n            p = nextPrime(p);\n            if (isNewmanPrime(p)) {\n                i++;\n            }\n        }\n        return p;",
    "        // Newman\u2013Shanks\u2013Williams prime numbers are defined as the numbers of the form\n        // 2^p \u2212 2^q \u2212 1, where p and q are primes.\n        // The first few Newman\u2013Shanks\u2013Williams prime numbers are\n        // 3, 7, 31, 127, 2047, 8191, 131071, 524287, 8388607, 536870911, 2147483647,\n        // 137438953471, 2199023255551, 8796093022207, 140737488355327, 9007199254740991,\n        // 576460752303423487, 2305843009213693951, 618970019642690137449562111,\n        // 162259276829213363391578010288127,\n        // 170141183460469231731687303715884105727,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n        // 675539944105574400000000000000000,\n       ",
    "        long p = 1;\n        long i = 1;\n        while (i <= n) {\n            p = p + 2;\n            if (isPrime(p)) {\n                i = i + 1;\n            }\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long k = 1;\n        long p = 2;\n        while (k < n) {\n            p = nextPrime(p);\n            long q = p;\n            while (q % 2 == 0) {\n                q /= 2;\n            }\n            if (q % 4 == 3) {\n                k++;\n            }\n        }\n        return p;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(2 * i + 1)) {\n                count++;\n            }\n        }\n        return i;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 23;\n        primes[5] = 29;\n        primes[6] = 31;\n        primes[7] = 37;\n        primes[8] = 53;\n        primes[9] = 59;\n        primes[10] = 71;\n        primes[11] = 73;\n        primes[12] = 79;\n        primes[13] = 233;\n        primes[14] = 239;\n        primes[15] = 293;\n        primes[16] = 311;\n        primes[17] = 313;\n        primes[18] = 317;\n        primes[19] = 373;\n        primes[20] = 379;\n        primes[21] = 593;\n        primes[22] = 599;\n        primes[23] = 719;\n        primes[24] = 733;\n        primes[25] = 739;\n        primes[26] = 797;\n        primes[27] = 2333;\n        primes[28] = 2339;\n        primes[29] = 2393;\n        primes[30] = 2399;\n        primes[31] = 2939;\n        primes[32] = 3119;\n        primes[33] = 3137;\n        primes[34] = 3733;\n        primes[35] = 3739;\n        primes[36] = 3793;\n        primes[37] = 3797;\n        primes[38] = 5939;\n        primes[39] = 7193;\n        primes[40] = 7331;\n        primes[41] = 7333;\n        primes[42] = 7393;\n        primes[43] = 23333;\n        primes[44] = 23339;\n        primes[45] = 23399;\n        primes[46] = 23993;\n",
    "        long p = 1;\n        for (long i = 0; i < n; i++) {\n            p = nextNewmanPrime(p);\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        long p = 1;\n        for (long i = 1; i <= n; i++) {\n            p = newmanPrime(p);\n        }\n        return p;",
    "        long p = 1;\n        long q = 1;\n        long c = 1;\n        while (c < n) {\n            p = 6 * q - 1;\n            q = 6 * q + 1;\n            if (isPrime(p)) {\n                c++;\n            }\n            if (isPrime(q)) {\n                c++;\n            }\n        }\n        if (c == n) {\n            return p;\n        }\n        return q;",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n        long aa = 1;\n        long bb = 1;\n        long cc = 1;\n        long dd = 1;\n        long ee = 1;\n        long ff = 1;\n        long gg = 1;\n        long hh = 1;\n        long ii = 1;\n        long jj = 1;\n        long kk = 1;\n        long ll = 1;\n        long mm = 1;\n        long nn = 1;\n        long oo = 1;\n        long pp = 1;\n        long qq = 1;\n        long rr = 1;\n        long ss = 1;\n        long tt = 1;\n        long uu = 1;\n        long vv = 1;\n        long ww = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long aaa = 1;\n        long bbb = 1;\n        long ccc = 1;\n        long ddd = 1;\n        long eee = 1;\n        long fff = 1;\n        long ggg = 1;\n        long hhh = 1;\n        long iii = 1;\n        long jjj = 1;\n        long kkk = 1;\n        long lll = 1;\n        long mmm = 1;\n        long nnn = 1;\n        long ooo = 1;\n        long ppp = 1;\n        long qqq = 1;\n        long rrr = 1;\n        long sss = 1;\n        long ttt = 1;\n        long uuu = 1;\n        long vvv = 1;\n        long www = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long aaaa = 1;\n        long bbbb = 1;\n        long cccc = 1;\n        long d",
    "        long p = 1;\n        long q = 1;\n        long r = 1;\n        long count = 0;\n        while (count < n) {\n            p = 6 * q - r + 2;\n            r = 6 * q - r - 2;\n            q = p;\n            if (isPrime(p)) {\n                count++;\n            }\n        }\n        return p;",
    "        long[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213",
    "        // Write your code here\n        return 0;",
    "        long[] primes = new long[(int)n];\n        primes[0] = 2;\n        primes[1] = 3;\n        primes[2] = 5;\n        primes[3] = 7;\n        primes[4] = 11;\n        primes[5] = 13;\n        primes[6] = 17;\n        primes[7] = 19;\n        primes[8] = 23;\n        primes[9] = 29;\n        primes[10] = 31;\n        primes[11] = 37;\n        primes[12] = 41;\n        primes[13] = 43;\n        primes[14] = 47;\n        primes[15] = 53;\n        primes[16] = 59;\n        primes[17] = 61;\n        primes[18] = 67;\n        primes[19] = 71;\n        primes[20] = 73;\n        primes[21] = 79;\n        primes[22] = 83;\n        primes[23] = 89;\n        primes[24] = 97;\n        primes[25] = 101;\n        primes[26] = 103;\n        primes[27] = 107;\n        primes[28] = 109;\n        primes[29] = 113;\n        primes[30] = 127;\n        primes[31] = 131;\n        primes[32] = 137;\n        primes[33] = 139;\n        primes[34] = 149;\n        primes[35] = 151;\n        primes[36] = 157;\n        primes[37] = 163;\n        primes[38] = 167;\n        primes[39] = 173;\n        primes[40] = 179;\n        primes[41] = 181;\n        primes[42] = 191;\n        primes[43] = 193;\n        primes[44] = 197;\n        primes[45] = 199;\n        primes[46] = 211;\n        primes[47] = 223;\n        primes[48] = 227;\n        primes[49]",
    "        long i = 1;\n        long count = 0;\n        while (count < n) {\n            i++;\n            if (isPrime(i) && isPrime(i + 2)) {\n                count++;\n            }\n        }\n        return i;"
  ]
}
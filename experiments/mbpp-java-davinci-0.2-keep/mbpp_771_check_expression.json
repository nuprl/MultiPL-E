{
  "name": "mbpp_771_check_expression",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to check if the given expression is balanced or not. https://www.geeksforgeeks.org/check-for-balanced-parentheses-in-an-expression/\n    public static boolean checkExpression(String exp) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_771_check_expression.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(checkExpression((\"{()}[{}]\")) == (true));\n    assert(checkExpression((\"{()}[{]\")) == (false));\n    assert(checkExpression((\"{()}[{}][]({})\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (!((c == ')' && top == '(') || (c == '}' && top == '{') || (c == ']' && top == '['))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.peek();\n                if (c == ')' && top == '(' || c == '}' && top == '{' || c == ']' && top == '[') {\n                    stack.pop();\n                } else {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '{' || c == '[' || c == '(') {\n                stack.push(c);\n            } else if(c == '}' || c == ']' || c == ')') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')') {\n                if (st.empty() || st.peek() != '(') {\n                    return false;\n                }\n                st.pop();\n            } else if (c == '}') {\n                if (st.empty() || st.peek() != '{') {\n                    return false;\n                }\n                st.pop();\n            } else if (c == ']') {\n                if (st.empty() || st.peek() != '[') {\n                    return false;\n                }\n                st.pop();\n            }\n        }\n        return st.empty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if (ch == '(' || ch == '[' || ch == '{') {\n                stack.push(ch);\n            } else if (ch == ')' || ch == ']' || ch == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if ((top == '(' && ch != ')') || (top == '[' && ch != ']') || (top == '{' && ch != '}')) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> s = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                s.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (s.isEmpty()) {\n                    return false;\n                }\n                char top = s.peek();\n                if (c == ')' && top == '(' || c == ']' && top == '[' || c == '}' && top == '{') {\n                    s.pop();\n                } else {\n                    return false;\n                }\n            }\n        }\n        return s.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.peek();\n                if ((top == '(' && c == ')') || (top == '{' && c == '}') || (top == '[' && c == ']')) {\n                    stack.pop();\n                } else {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.empty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.empty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                Character top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        if(!stack.isEmpty()) {\n            return false;\n        }\n        return true;",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if(ch == '(' || ch == '[' || ch == '{') {\n                st.push(ch);\n            } else if(ch == ')') {\n                if(st.isEmpty() || st.peek() != '(') {\n                    return false;\n                }\n                st.pop();\n            } else if(ch == ']') {\n                if(st.isEmpty() || st.peek() != '[') {\n                    return false;\n                }\n                st.pop();\n            } else if(ch == '}') {\n                if(st.isEmpty() || st.peek() != '{') {\n                    return false;\n                }\n                st.pop();\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            if (exp.charAt(i) == '(' || exp.charAt(i) == '[' || exp.charAt(i) == '{') {\n                stack.push(exp.charAt(i));\n            } else if (exp.charAt(i) == ')' || exp.charAt(i) == ']' || exp.charAt(i) == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char c = stack.pop();\n                if (c == '(' && exp.charAt(i) != ')') {\n                    return false;\n                }\n                if (c == '[' && exp.charAt(i) != ']') {\n                    return false;\n                }\n                if (c == '{' && exp.charAt(i) != '}') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if ((c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '[')) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if ((c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '[')) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')') {\n                if(stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if(c == '}') {\n                if(stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            } else if(c == ']') {\n                if(stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) return false;\n                char top = stack.pop();\n                if (c == ')' && top != '(') return false;\n                if (c == '}' && top != '{') return false;\n                if (c == ']' && top != '[') return false;\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        if(!stack.isEmpty()) {\n            return false;\n        }\n        return true;",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')') {\n                if(stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if(c == ']') {\n                if(stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if(c == '}') {\n                if(stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')' || c == ']' || c == '}') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if (ch == '(' || ch == '[' || ch == '{') {\n                stack.push(ch);\n            } else if (ch == ')' || ch == ']' || ch == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (ch == ')' && top != '(') {\n                    return false;\n                }\n                if (ch == ']' && top != '[') {\n                    return false;\n                }\n                if (ch == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if ((top == '(' && c != ')') || (top == '{' && c != '}') || (top == '[' && c != ']')) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char popped = stack.pop();\n                if (c == ')' && popped != '(') {\n                    return false;\n                }\n                if (c == '}' && popped != '{') {\n                    return false;\n                }\n                if (c == ']' && popped != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                st.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (!((c == ')' && top == '(') || (c == '}' && top == '{') || (c == ']' && top == '['))) {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')' || c == ']' || c == '}') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(char c : exp.toCharArray()) {\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if(ch == '(' || ch == '{' || ch == '[') {\n                stack.push(ch);\n            } else if(ch == ')' || ch == '}' || ch == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(ch == ')' && top != '(') {\n                    return false;\n                }\n                if(ch == '}' && top != '{') {\n                    return false;\n                }\n                if(ch == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        if(!stack.isEmpty()) {\n            return false;\n        }\n        return true;",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (!((top == '(' && c == ')') || (top == '{' && c == '}') || (top == '[' && c == ']'))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if(ch == '(' || ch == '[' || ch == '{') {\n                st.push(ch);\n            } else if(ch == ')' || ch == ']' || ch == '}') {\n                if(st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if(ch == ')' && top != '(') {\n                    return false;\n                }\n                if(ch == ']' && top != '[') {\n                    return false;\n                }\n                if(ch == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            }\n            else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (!((c == ')' && top == '(') || (c == '}' && top == '{') || (c == ']' && top == '['))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')' || c == ']' || c == '}') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(!((c == ')' && top == '(') || (c == ']' && top == '[') || (c == '}' && top == '{'))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')') {\n                if(stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if(c == '}') {\n                if(stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            } else if(c == ']') {\n                if(stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (char c : exp.toCharArray()) {\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if(c == ')') {\n                if(st.isEmpty() || st.peek() != '(') {\n                    return false;\n                }\n                st.pop();\n            } else if(c == '}') {\n                if(st.isEmpty() || st.peek() != '{') {\n                    return false;\n                }\n                st.pop();\n            } else if(c == ']') {\n                if(st.isEmpty() || st.peek() != '[') {\n                    return false;\n                }\n                st.pop();\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            if (exp.charAt(i) == '(' || exp.charAt(i) == '[' || exp.charAt(i) == '{') {\n                stack.push(exp.charAt(i));\n            } else if (exp.charAt(i) == ')' || exp.charAt(i) == ']' || exp.charAt(i) == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char c = stack.pop();\n                if (c == '(' && exp.charAt(i) != ')') {\n                    return false;\n                }\n                if (c == '[' && exp.charAt(i) != ']') {\n                    return false;\n                }\n                if (c == '{' && exp.charAt(i) != '}') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if ((c == ')' && top != '(') || (c == '}' && top != '{') || (c == ']' && top != '[')) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')') {\n                if(stack.isEmpty() || stack.peek() != '(') {\n                    return false;\n                }\n                stack.pop();\n            } else if(c == ']') {\n                if(stack.isEmpty() || stack.peek() != '[') {\n                    return false;\n                }\n                stack.pop();\n            } else if(c == '}') {\n                if(stack.isEmpty() || stack.peek() != '{') {\n                    return false;\n                }\n                stack.pop();\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')' || c == ']' || c == '}') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(!((top == '(' && c == ')') || (top == '[' && c == ']') || (top == '{' && c == '}'))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (!(top == '(' && c == ')' || top == '{' && c == '}' || top == '[' && c == ']')) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> s = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            if(exp.charAt(i) == '(' || exp.charAt(i) == '{' || exp.charAt(i) == '[') {\n                s.push(exp.charAt(i));\n            } else if(exp.charAt(i) == ')' || exp.charAt(i) == '}' || exp.charAt(i) == ']') {\n                if(s.isEmpty()) {\n                    return false;\n                }\n                char c = s.pop();\n                if(exp.charAt(i) == ')' && c != '(') {\n                    return false;\n                }\n                if(exp.charAt(i) == '}' && c != '{') {\n                    return false;\n                }\n                if(exp.charAt(i) == ']' && c != '[') {\n                    return false;\n                }\n            }\n        }\n        return s.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if(ch == '(' || ch == '[' || ch == '{') {\n                stack.push(ch);\n            } else if(ch == ')') {\n                if(stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if(ch == ']') {\n                if(stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            } else if(ch == '}') {\n                if(stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.empty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if ((c == ')' && top != '(') || (c == ']' && top != '[') || (c == '}' && top != '{')) {\n                    return false;\n                }\n            }\n        }\n        return stack.empty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (!((c == ')' && top == '(') || (c == ']' && top == '[') || (c == '}' && top == '{'))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (!((c == ')' && top == '(') || (c == ']' && top == '[') || (c == '}' && top == '{'))) {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '{' || c == '[' || c == '(') {\n                stack.push(c);\n            } else if (c == '}' || c == ']' || c == ')') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if (ch == '(' || ch == '{' || ch == '[') {\n                st.push(ch);\n            } else if (ch == ')' || ch == '}' || ch == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char ch1 = st.pop();\n                if (ch == ')' && ch1 != '(') {\n                    return false;\n                } else if (ch == '}' && ch1 != '{') {\n                    return false;\n                } else if (ch == ']' && ch1 != '[') {\n                    return false;\n                }\n            }\n        }\n        if (st.isEmpty()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<Character>();\n        for(int i = 0; i < exp.length(); i++) {\n            if(exp.charAt(i) == '(' || exp.charAt(i) == '{' || exp.charAt(i) == '[') {\n                stack.push(exp.charAt(i));\n            }\n            else if(exp.charAt(i) == ')' || exp.charAt(i) == '}' || exp.charAt(i) == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                else if(!isMatchingPair(stack.pop(), exp.charAt(i))) {\n                    return false;\n                }\n            }\n        }\n        if(stack.isEmpty()) {\n            return true;\n        }\n        else {\n            return false;\n        }",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                }\n                if(c == '}' && top != '{') {\n                    return false;\n                }\n                if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (top == '(' && c != ')') {\n                    return false;\n                }\n                if (top == '{' && c != '}') {\n                    return false;\n                }\n                if (top == '[' && c != ']') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                st.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        if (st.isEmpty()) {\n            return true;\n        }\n        return false;",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if(c == ')' || c == ']' || c == '}') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char pop = stack.pop();\n                if (c == ')' && pop != '(') {\n                    return false;\n                } else if (c == '}' && pop != '{') {\n                    return false;\n                } else if (c == ']' && pop != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> st = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                st.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (st.isEmpty()) {\n                    return false;\n                }\n                char top = st.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return st.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                } else if (c == ']' && top != '[') {\n                    return false;\n                } else if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(' || c == '}' && top != '{' || c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')' || c == ']' || c == '}') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for(int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if(c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if(c == ')' || c == '}' || c == ']') {\n                if(stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if(c == ')' && top != '(') {\n                    return false;\n                } else if(c == '}' && top != '{') {\n                    return false;\n                } else if(c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')' || c == '}' || c == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (c == ')' && top != '(') {\n                    return false;\n                }\n                if (c == '}' && top != '{') {\n                    return false;\n                }\n                if (c == ']' && top != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.peek() != '(') {\n                    return false;\n                } else {\n                    stack.pop();\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.peek() != '[') {\n                    return false;\n                } else {\n                    stack.pop();\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.peek() != '{') {\n                    return false;\n                } else {\n                    stack.pop();\n                }\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '[' || c == '{') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.peek() != '(') {\n                    return false;\n                }\n                stack.pop();\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.peek() != '[') {\n                    return false;\n                }\n                stack.pop();\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.peek() != '{') {\n                    return false;\n                }\n                stack.pop();\n            }\n        }\n        return stack.isEmpty();",
    "        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char c = exp.charAt(i);\n            if (c == '(' || c == '{' || c == '[') {\n                stack.push(c);\n            } else if (c == ')') {\n                if (stack.isEmpty() || stack.pop() != '(') {\n                    return false;\n                }\n            } else if (c == '}') {\n                if (stack.isEmpty() || stack.pop() != '{') {\n                    return false;\n                }\n            } else if (c == ']') {\n                if (stack.isEmpty() || stack.pop() != '[') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();"
  ]
}
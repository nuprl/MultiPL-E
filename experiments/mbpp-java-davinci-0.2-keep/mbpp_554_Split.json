{
  "name": "mbpp_554_Split",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function which takes a list of integers and only returns the odd ones.\n    public static ArrayList<Long> Split(ArrayList<Long> list) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_554_Split.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l)))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)5l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)10l, (long)11l, (long)12l, (long)13l)))).equals((new ArrayList<Long>(Arrays.asList((long)11l, (long)13l)))));\n    assert(Split((new ArrayList<Long>(Arrays.asList((long)7l, (long)8l, (long)9l, (long)1l)))).equals((new ArrayList<Long>(Arrays.asList((long)7l, (long)9l, (long)1l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odds = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odds.add(i);\n            }\n        }\n        return odds;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> odd = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> ret = new ArrayList<>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                ret.add(i);\n            }\n        }\n        return ret;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 != 0) {\n                odd.add(i);\n            }\n        }\n        return odd;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : list) {\n            if (i % 2 == 1) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> odd = new ArrayList<Long>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 1) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;"
  ]
}
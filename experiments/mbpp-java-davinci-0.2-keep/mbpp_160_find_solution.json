{
  "name": "mbpp_160_find_solution",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function that returns integers x and y that satisfy ax + by = n as a tuple, or return None if no solution exists.\n    public static Optional<Long> findSolution(long a, long b, long n) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_160_find_solution.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findSolution((2l), (3l), (7l)).equals(Pair.with(2l, 1l)));\n    assert(findSolution((4l), (2l), (7l)).equals(Optional.empty()));\n    assert(findSolution((1l), (13l), (17l)).equals(Pair.with(4l, 1l)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long x1 = 1, y1 = 0;\n        long x2 = 0, y2 = 1;\n        long q = 0;\n        while (b > 0) {\n            q = a / b;\n            long r = a - q * b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        return Optional.of(x * (n / d));",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * modInverse(a / d, b / d)) % b;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long a1 = a;\n        long b1 = b;\n        while (a1 != 0) {\n            long q = b1 / a1;\n            long r = b1 % a1;\n            long x = x2 - q * x1;\n            long y = y2 - q * y1;\n            b1 = a1;\n            a1 = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2 * (n / gcd);\n        y = y2 * (n / gcd);\n        return Optional.of(x);",
    "        // ax + by = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb/a)y = n\n        // bx + (a - nb",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a /= 2;\n            b /= 2;\n            d *= 2;\n        }\n        if (a % 2 == 0) {\n            long t = (n - b * y) / a;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            x = t / 2;\n            y = (n - a * x) / b;\n        } else if (b % 2 == 0) {\n            long t = (n - a * x) / b;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            y = t / 2;\n            x = (n - b * y) / a;\n        } else {\n            long t = (n - b * y) / a;\n            if (t % 2 != 0) {\n                return Optional.empty();\n            }\n            x = t / 2;\n            y = (n - a * x) / b;\n        }\n        x *= d;\n        y *= d;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) return Optional.empty();\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            b = a;\n            a = r;\n        }\n        x = x2 * (n / d);\n        y = y2 * (n / d);\n        return Optional.of(x);",
    "        // Write your code here\n        return Optional.empty();",
    "        // ax + by = n\n        // ax = n - by\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x = (n - by) / a\n        // x",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long a1 = a / gcd;\n        long b1 = b / gcd;\n        long n1 = n / gcd;\n        Pair<Long, Long> p = extendedEuclid(a1, b1);\n        x = p.getValue0() * n1;\n        y = p.getValue1() * n1;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        while (a % b != 0) {\n            q = a / b;\n            long r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0, y = 0;\n        long d = gcd(a, b);\n        a /= d;\n        b /= d;\n        n /= d;\n        long x1 = 1, y1 = 0, x2 = 0, y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            y1 = y2;\n            x2 = x3;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * n;\n        y = y1 * n;\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long x2 = 0;\n        long y1 = 0;\n        long y2 = 1;\n        while (b != 0) {\n            long q = a / b;\n            long r = a % b;\n            long x3 = x1 - q * x2;\n            long y3 = y1 - q * y2;\n            x1 = x2;\n            x2 = x3;\n            y1 = y2;\n            y2 = y3;\n            a = b;\n            b = r;\n        }\n        x = x1 * (n / d);\n        y = y1 * (n / d);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        if (d == 0) {\n            return Optional.of(n / a);\n        }\n        long x1 = ((n / d) * b) / a;\n        long y1 = (n - (a * x1)) / b;\n        return Optional.of(x1);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = n / b;\n        long g = gcd(a, b);\n        a /= g;\n        b /= g;\n        long d = 1;\n        while (a != 1) {\n            long t = a;\n            long q = b / a;\n            a = b % a;\n            b = t;\n            t = d;\n            d = x - q * d;\n            x = t;\n        }\n        return Optional.of(x * (n / g) + n);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd;\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        while (a != 0) {\n            long q = b / a;\n            long r = b % a;\n            long m = x2 - q * x1;\n            long n1 = y2 - q * y1;\n            x = m;\n            y = n1;\n            b = a;\n            a = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2;\n        y = y2;\n        if (n < 0) {\n            x = -x;\n            y = -y;\n            n = -n;\n        }\n        if (x < 0) {\n            long t = (x * -1) / b + 1;\n            x += t * b;\n            y -= t * a;\n        }\n        if (y < 0) {\n            long t = (y * -1) / a + 1;\n            x -= t * b;\n            y += t * a;\n        }\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        long x1 = 0;\n        long y1 = 1;\n        long x2 = 1;\n        long y2 = 0;\n        long a1 = a;\n        long b1 = b;\n        while (b1 != 0) {\n            long q = a1 / b1;\n            long r = a1 % b1;\n            long x = x2 - q * x1;\n            long y = y2 - q * y1;\n            a1 = b1;\n            b1 = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = x2 * (n / gcd);\n        y = y2 * (n / gcd);\n        return Optional.of(x);",
    "        if (n % gcd(a, b) != 0) {\n            return Optional.empty();\n        }\n        long x = 0;\n        long y = 0;\n        long d = gcd(a, b);\n        long x1 = 1;\n        long y1 = 0;\n        long x2 = 0;\n        long y2 = 1;\n        long q = 0;\n        long r = 0;\n        while (a % b != 0) {\n            q = a / b;\n            r = a % b;\n            x = x2 - q * x1;\n            y = y2 - q * y1;\n            a = b;\n            b = r;\n            x2 = x1;\n            x1 = x;\n            y2 = y1;\n            y1 = y;\n        }\n        x = (n / d) * x2;\n        y = (n / d) * y2;\n        return Optional.of(x);",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long x = 0;\n        long y = 0;\n        long gcd = gcd(a, b);\n        if (n % gcd != 0) {\n            return Optional.empty();\n        }\n        Pair<Long, Long> p = extendedEuclidean(a, b);\n        x = p.getValue0();\n        y = p.getValue1();\n        x *= n / gcd;\n        y *= n / gcd;\n        return Optional.of(x);",
    "        // ax + by = n\n        // x = n/a - b/a * y\n        // y = n/b - a/b * x\n        // x = n/a - b/a * (n/b - a/b * x)\n        // x = (a*n/a - b*n/b) / (a - b*a/b)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / (a*b - b*a)\n        // x = (a*n - b*n) / ("
  ]
}
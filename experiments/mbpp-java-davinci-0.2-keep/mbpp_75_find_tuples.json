{
  "name": "mbpp_75_find_tuples",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find tuples which have all elements divisible by k from the given list of tuples.\n    public static ArrayList<Long> findTuples(ArrayList<Long> test_list, long K) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_75_find_tuples.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findTuples((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long>)Pair.with(6l, 24l, 12l), (Pair<Long, Long, Long>)Pair.with(7l, 9l, 6l), (Pair<Long, Long, Long>)Pair.with(12l, 18l, 21l)))), (6l)).equals((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long>)Pair.with(6l, 24l, 12l))))));\n    assert(findTuples((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long>)Pair.with(5l, 25l, 30l), (Pair<Long, Long, Long>)Pair.with(4l, 2l, 3l), (Pair<Long, Long, Long>)Pair.with(7l, 8l, 9l)))), (5l)).equals((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long>)Pair.with(5l, 25l, 30l))))));\n    assert(findTuples((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long>)Pair.with(7l, 9l, 16l), (Pair<Long, Long, Long>)Pair.with(8l, 16l, 4l), (Pair<Long, Long, Long>)Pair.with(19l, 17l, 18l)))), (4l)).equals((new ArrayList<Long>(Arrays.asList((Pair<Long, Long, Long>)Pair.with(8l, 16l, 4l))))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for(long i : test_list) {\n            if(i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (Long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        ArrayList<Long> result = new ArrayList<Long>();\n        for(int i = 0; i < test_list.size(); i++) {\n            if(test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (int i = 0; i < test_list.size(); i++) {\n            if (test_list.get(i) % K == 0) {\n                result.add(test_list.get(i));\n            }\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i : test_list) {\n            if (i % K == 0) {\n                result.add(i);\n            }\n        }\n        return result;"
  ]
}
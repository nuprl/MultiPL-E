{
  "name": "mbpp_143_find_lists",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find number of lists present in the given tuple.\n    public static long findLists(Object Input) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_143_find_lists.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(findLists(Pair.with(new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l)), new ArrayList<Long>(Arrays.asList((long)5l, (long)6l, (long)7l, (long)8l)))) == (2l));\n    assert(findLists(Pair.with(new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)), new ArrayList<Long>(Arrays.asList((long)3l, (long)4l)), new ArrayList<Long>(Arrays.asList((long)5l, (long)6l)))) == (3l));\n    assert(findLists((new Object(Arrays.asList((long)9l, (long)8l, (long)7l, (long)6l, (long)5l, (long)4l, (long)3l, (long)2l, (long)1l)))) == (1l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object element : (List) Input) {\n                count += findLists(element);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        return 0;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            for(Object o : (List)Input) {\n                count += findLists(o);\n            }\n        }\n        else if(Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        }\n        else if(Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        }\n        else if(Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        }\n        else if(Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        }\n        else if(Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n            count += findLists(Input.getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n            count += findLists(Input.getValue5());\n            count += findLists(Input.getValue6());\n        } else if (Input instanceof",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object obj : list) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet =",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object o : list) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> p = (Pair<Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1());\n        } else if (Input instanceof List) {\n            List<Object> l = (List<Object>) Input;\n            return 1 + l.stream().mapToLong(Problem::findLists).sum();\n        } else {\n            return 0;\n        }",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Tuple) {\n            return ((Tuple) Input).getSize() + ((Tuple) Input).stream().mapToLong(Problem::findLists).sum();\n        } else {\n            return 0;\n        }",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> InputPair = (Pair<Object, Object>) Input;\n            return findLists(InputPair.getValue0()) + findLists(InputPair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> InputTriplet = (Triplet<Object, Object, Object>) Input;\n            return findLists(InputTriplet.getValue0()) + findLists(InputTriplet.getValue1()) + findLists(InputTriplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> InputQuartet = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(InputQuartet.getValue0()) + findLists(InputQuartet.getValue1()) + findLists(InputQuartet.getValue2()) + findLists(InputQuartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> InputQuintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(InputQuintet.getValue0()) + findLists(InputQuintet.getValue1()) + findLists(InputQuintet.getValue2()) + findLists(InputQuintet.getValue3()) + findLists(InputQuintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> InputSextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(InputSextet.getValue0()) + findLists(InputSextet.getValue1()) + findLists(InputSextet.getValue2()) + findLists(InputSextet.getValue3()) + findLists(InputSextet.getValue4()) + findLists(InputSextet.getValue5());\n        }",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + find",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof Tuple) {\n            Tuple t = (Tuple) Input;\n            for (int i = 0; i < t.getSize(); i++) {\n                count += findLists(t.getValue(i));\n            }\n        } else if (Input instanceof List) {\n            count++;\n            List l = (List) Input;\n            for (int i = 0; i < l.size(); i++) {\n                count += findLists(l.get(i));\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        if (Input instanceof Pair) {\n            return findLists(((Pair)Input).getValue0()) + findLists(((Pair)Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet)Input).getValue0()) + findLists(((Triplet)Input).getValue1()) + findLists(((Triplet)Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet)Input).getValue0()) + findLists(((Quartet)Input).getValue1()) + findLists(((Quartet)Input).getValue2()) + findLists(((Quartet)Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet)Input).getValue0()) + findLists(((Quintet)Input).getValue1()) + findLists(((Quintet)Input).getValue2()) + findLists(((Quintet)Input).getValue3()) + findLists(((Quintet)Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet)Input).getValue0()) + findLists(((Sextet)Input).getValue1()) + findLists(((Sextet)Input).getValue2()) + findLists(((Sextet)Input).getValue3()) + findLists(((Sextet)Input).getValue4()) + findLists(((Sextet)Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet)Input).getValue0()) + findLists(((Septet)Input).getValue1()) + findLists(((Septet)Input).getValue2()) + findLists(((Septet)Input).getValue3()) + findLists(((Septet)Input).getValue4()) + findLists(((Septet)Input).getValue5()) + findLists(((Septet)Input).getValue6());\n        } else",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        }\n        if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        }\n        if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        }\n        if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        }\n        if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        }\n        if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        }\n        if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here.\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            for(Object o : (List)Input) {\n                count += findLists(o);\n            }\n        } else if(Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        } else if(Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        } else if(Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        } else if(Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        } else if(Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count += findLists(((Sextet)Input).getValue5());\n        } else if(Input instanceof Septet) {\n            count +=",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List)Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count += findLists(((Sextet)Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List)Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Tuple) {\n            for (Object obj : (Tuple)Input) {\n                count += findLists(obj);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for(Object o: list) {\n                count += findLists(o);\n            }\n        } else if(Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if(Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if(Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if(Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if(Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet =",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Tuple) {\n            Tuple t = (Tuple) Input;\n            long count = 0;\n            for (int i = 0; i < t.getSize(); i++) {\n                if (t.getValue(i) instanceof List) {\n                    count++;\n                } else if (t.getValue(i) instanceof Tuple) {\n                    count += findLists(t.getValue(i));\n                }\n            }\n            return count;\n        }\n        return 0;",
    "        if(Input instanceof Tuple) {\n            long count = 0;\n            for(Object obj : (Tuple)Input) {\n                count += findLists(obj);\n            }\n            return count;\n        }\n        else if(Input instanceof List) {\n            long count = 1;\n            for(Object obj : (List)Input) {\n                count += findLists(obj);\n            }\n            return count;\n        }\n        else {\n            return 0;\n        }",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> p = (Pair<Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> p = (Triplet<Object, Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1()) + findLists(p.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> p = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1()) + findLists(p.getValue2()) + findLists(p.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> p = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1()) + findLists(p.getValue2()) + findLists(p.getValue3()) + findLists(p.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> p = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1()) + findLists(p.getValue2()) + findLists(p.getValue3()) + findLists(p.getValue4()) + findLists(p.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> p = (Septet<Object, Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            for(Object o : (List) Input) {\n                count += findLists(o);\n            }\n        }\n        else if(Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        }\n        else if(Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        }\n        else if(Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        }\n        else if(Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        }\n        else if(Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n        }\n        if(Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        }\n        if(Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        }\n        if(Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        }\n        if(Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        }\n        if(Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        }\n       ",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            for(Object obj : (List)Input) {\n                count += findLists(obj);\n            }\n        }\n        else if(Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        }\n        else if(Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        }\n        else if(Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        }\n        else if(Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        }\n        else if(Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count += findLists(((Sextet)Input).getValue5());\n        }\n        else if(Input instanceof Septet) {",
    "        // Write your code here.\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object o : list) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if(Input instanceof List)\n            return 1;\n        else if(Input instanceof Pair)\n            return findLists(((Pair)Input).getValue0()) + findLists(((Pair)Input).getValue1());\n        else if(Input instanceof Triplet)\n            return findLists(((Triplet)Input).getValue0()) + findLists(((Triplet)Input).getValue1()) + findLists(((Triplet)Input).getValue2());\n        else if(Input instanceof Quartet)\n            return findLists(((Quartet)Input).getValue0()) + findLists(((Quartet)Input).getValue1()) + findLists(((Quartet)Input).getValue2()) + findLists(((Quartet)Input).getValue3());\n        else if(Input instanceof Quintet)\n            return findLists(((Quintet)Input).getValue0()) + findLists(((Quintet)Input).getValue1()) + findLists(((Quintet)Input).getValue2()) + findLists(((Quintet)Input).getValue3()) + findLists(((Quintet)Input).getValue4());\n        else if(Input instanceof Sextet)\n            return findLists(((Sextet)Input).getValue0()) + findLists(((Sextet)Input).getValue1()) + findLists(((Sextet)Input).getValue2()) + findLists(((Sextet)Input).getValue3()) + findLists(((Sextet)Input).getValue4()) + findLists(((Sextet)Input).getValue5());\n        else if(Input instanceof Septet)\n            return findLists(((Septet)Input).getValue0()) + findLists(((Septet)Input).getValue1()) + findLists(((Septet)Input).getValue2()) + findLists(((Septet)Input).getValue3()) + findLists",
    "        long count = 0;\n        if (Input instanceof Tuple) {\n            Tuple t = (Tuple) Input;\n            for (Object o : t) {\n                if (o instanceof List) {\n                    count++;\n                } else if (o instanceof Tuple) {\n                    count += findLists(o);\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof Tuple) {\n            Tuple t = (Tuple) Input;\n            for (Object o : t) {\n                if (o instanceof List) {\n                    count++;\n                } else if (o instanceof Tuple) {\n                    count += findLists(o);\n                }\n            }\n        }\n        return count;",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue4()) + findLists(((Septet) Input).getValue5()) + findLists(((Septet) Input).getValue6());\n        } else",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object element : (List) Input) {\n                count += findLists(element);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List){\n            count++;\n        }\n        else if(Input instanceof Pair){\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        }\n        else if(Input instanceof Triplet){\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        }\n        else if(Input instanceof Quartet){\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        }\n        else if(Input instanceof Quintet){\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        }\n        else if(Input instanceof Sextet){\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count += findLists(((Sextet)Input).getValue5());\n        }\n        else",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if(Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            return findLists(pair.getValue0()) + findLists(pair.getValue1());\n        } else if(Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            return findLists(triplet.getValue0()) + findLists(triplet.getValue1()) + findLists(triplet.getValue2());\n        } else if(Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(quartet.getValue0()) + findLists(quartet.getValue1()) + findLists(quartet.getValue2()) + findLists(quartet.getValue3());\n        } else if(Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(quintet.getValue0()) + findLists(quintet.getValue1()) + findLists(quintet.getValue2()) + findLists(quintet.getValue3()) + findLists(quintet.getValue4());\n        } else if(Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(sextet.getValue0()) + findLists(sextet.getValue1()) + findLists(sextet.getValue2()) + findLists(sextet.getValue3()) + findLists(sextet.getValue4()) + findLists(sextet.getValue5());\n        } else if(Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> septet = (",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Tuple) {\n            long count = 0;\n            for (Object o : ((Tuple) Input).toList()) {\n                count += findLists(o);\n            }\n            return count;\n        } else if (Input instanceof List) {\n            long count = 1;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n            return count;\n        } else {\n            return 0;\n        }",
    "        // Write your code here.\n        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists((",
    "        long count = 0;\n        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findLists(sextet.getValue1());\n            count += findLists(sextet.getValue2());\n            count += findLists(sextet.getValue3());\n            count += findLists(sextet.",
    "        // Write your code here.\n        if(Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        }\n        else if(Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        }\n        else if(Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        }\n        else if(Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        }\n        else if(Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        }\n        else if(Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        }\n        else if(Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object element : (List) Input) {\n                count += findLists(element);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here.\n        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            return findLists(pair.getValue0()) + findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            return findLists(triplet.getValue0()) + findLists(triplet.getValue1()) + findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(quartet.getValue0()) + findLists(quartet.getValue1()) + findLists(quartet.getValue2()) + findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(quintet.getValue0()) + findLists(quintet.getValue1()) + findLists(quintet.getValue2()) + findLists(quintet.getValue3()) + findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(sextet.getValue0()) + findLists(sextet.getValue1()) + findLists(sextet.getValue2()) + findLists(sextet.getValue3()) + findLists(sextet.getValue4()) + findLists(sextet.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object obj : list) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Tuple) {\n            Tuple tuple = (Tuple) Input;\n            for (Object obj : tuple) {\n                count += findLists(obj);\n            }\n        }\n        return count;",
    "        // Write your code here\n        // To print results to the standard output please use System.out.println\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            for(Object o : (List)Input) {\n                count += findLists(o);\n            }\n        } else if(Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        } else if(Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        } else if(Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        } else if(Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        } else if(Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count += find",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object o : list) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet =",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Tuple) {\n            return ((Tuple) Input).stream().mapToLong(Problem::findLists).sum();\n        } else {\n            return 0;\n        }",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        return 0;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + find",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof List) {\n            return 1 + findLists(((List) Input).get(0));\n        }\n        return 0;",
    "        long count = 0;\n        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findLists(sextet.getValue1());\n            count += findLists(sextet.getValue2());\n            count += findLists(sextet.getValue3());\n            count += findLists(sextet.",
    "        long count = 0;\n        if (Input instanceof List) {\n            count = 1;\n        }\n        if (Input instanceof Pair) {\n            count = findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        }\n        if (Input instanceof Triplet) {\n            count = findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        }\n        if (Input instanceof Quartet) {\n            count = findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        }\n        if (Input instanceof Quintet) {\n            count = findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        }\n        if (Input instanceof Sextet) {\n            count = findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        }\n        if (Input instanceof Septet) {\n            count = findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).get",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object o : list) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n            count += findLists(Input.getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n            count += findLists(Input.getValue5());\n            count += findLists(Input.getValue6());\n        } else if (Input instanceof",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List){\n            count++;\n        }\n        else if(Input instanceof Pair){\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        }\n        else if(Input instanceof Triplet){\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        }\n        else if(Input instanceof Quartet){\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        }\n        else if(Input instanceof Quintet){\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        }\n        else if(Input instanceof Sextet){\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count += findLists(((Sextet)Input).getValue5());\n        }\n        else",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> input = (Pair<Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists(input.getValue1());\n        } else if (Input instanceof List) {\n            List<Object> input = (List<Object>) Input;\n            return 1 + input.stream().mapToLong(Problem::findLists).sum();\n        } else {\n            return 0;\n        }",
    "        if (Input instanceof Tuple) {\n            Tuple t = (Tuple) Input;\n            long count = 0;\n            for (Object o : t) {\n                if (o instanceof List) {\n                    count++;\n                } else if (o instanceof Tuple) {\n                    count += findLists(o);\n                }\n            }\n            return count;\n        }\n        return 0;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        if (Input instanceof Pair) {\n            Pair p = (Pair) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet t = (Triplet) Input;\n            return findLists(t.getValue0()) + findLists(t.getValue1()) + findLists(t.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet q = (Quartet) Input;\n            return findLists(q.getValue0()) + findLists(q.getValue1()) + findLists(q.getValue2()) + findLists(q.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet q = (Quintet) Input;\n            return findLists(q.getValue0()) + findLists(q.getValue1()) + findLists(q.getValue2()) + findLists(q.getValue3()) + findLists(q.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet s = (Sextet) Input;\n            return findLists(s.getValue0()) + findLists(s.getValue1()) + findLists(s.getValue2()) + findLists(s.getValue3()) + findLists(s.getValue4()) + findLists(s.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet s = (Septet) Input;\n            return findLists(s.getValue0()) + findLists(s.getValue1()) + findLists(s.getValue2()) + findLists(s.getValue3()) + findLists(s.getValue4()) + findLists(s.getValue5()) + findLists(s.getValue6());\n        } else if (Input instanceof Octet) {\n            Octet o = (Octet) Input;\n            return findLists(o.getValue0()) + findLists(o.getValue1()) + findL",
    "        // Write your code here.\n        if (Input instanceof Pair) {\n            Pair<Object, Object> p = (Pair<Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> t = (Triplet<Object, Object, Object>) Input;\n            return findLists(t.getValue0()) + findLists(t.getValue1()) + findLists(t.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> q = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(q.getValue0()) + findLists(q.getValue1()) + findLists(q.getValue2()) + findLists(q.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> q = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(q.getValue0()) + findLists(q.getValue1()) + findLists(q.getValue2()) + findLists(q.getValue3()) + findLists(q.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> s = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(s.getValue0()) + findLists(s.getValue1()) + findLists(s.getValue2()) + findLists(s.getValue3()) + findLists(s.getValue4()) + findLists(s.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> s = (Septet<Object, Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(s.",
    "        return 0;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List){\n            count++;\n            for(Object obj : (List)Input){\n                count += findLists(obj);\n            }\n        }\n        else if(Input instanceof Pair){\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        }\n        else if(Input instanceof Triplet){\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        }\n        else if(Input instanceof Quartet){\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        }\n        else if(Input instanceof Quintet){\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        }\n        else if(Input instanceof Sextet){\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n            count += findLists(Input.getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(Input.getValue0());\n            count += findLists(Input.getValue1());\n            count += findLists(Input.getValue2());\n            count += findLists(Input.getValue3());\n            count += findLists(Input.getValue4());\n            count += findLists(Input.getValue5());\n            count += findLists(Input.getValue6());\n        } else if (Input instanceof",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        }\n        return 0;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n        }\n        if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        }\n        if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        }\n        if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        }\n        if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        }\n        if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        }\n        if (Input instanceof Septet) {\n            count += findLists(((Septet) Input).getValue0());\n            count += findLists(((Septet) Input).",
    "        // Write your code here.\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count +=",
    "        long count = 0;\n        if(Input instanceof Tuple) {\n            Tuple t = (Tuple)Input;\n            for(int i = 0; i < t.getSize(); i++) {\n                count += findLists(t.getValue(i));\n            }\n        }\n        else if(Input instanceof List) {\n            count++;\n            List l = (List)Input;\n            for(int i = 0; i < l.size(); i++) {\n                count += findLists(l.get(i));\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object obj : list) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findL",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findLists(sextet.getValue1());\n            count += findLists(sextet.getValue2());\n            count += findLists(sextet.getValue3());\n            count += findLists(sextet.",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            for(Object obj : (List)Input) {\n                count += findLists(obj);\n            }\n        }\n        else if(Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        }\n        else if(Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        }\n        else if(Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        }\n        else if(Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        }\n        else if(Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object item : (List) Input) {\n                count += findLists(item);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object item : (List) Input) {\n                count += findLists(item);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Tuple) {\n            for (Object o : (Tuple) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here.\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count +=",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if(Input instanceof List)\n            return 1;\n        else if(Input instanceof Pair)\n        {\n            Pair<Object,Object> p = (Pair<Object,Object>)Input;\n            return findLists(p.getValue0())+findLists(p.getValue1());\n        }\n        else if(Input instanceof Triplet)\n        {\n            Triplet<Object,Object,Object> t = (Triplet<Object,Object,Object>)Input;\n            return findLists(t.getValue0())+findLists(t.getValue1())+findLists(t.getValue2());\n        }\n        else if(Input instanceof Quartet)\n        {\n            Quartet<Object,Object,Object,Object> q = (Quartet<Object,Object,Object,Object>)Input;\n            return findLists(q.getValue0())+findLists(q.getValue1())+findLists(q.getValue2())+findLists(q.getValue3());\n        }\n        else if(Input instanceof Quintet)\n        {\n            Quintet<Object,Object,Object,Object,Object> q = (Quintet<Object,Object,Object,Object,Object>)Input;\n            return findLists(q.getValue0())+findLists(q.getValue1())+findLists(q.getValue2())+findLists(q.getValue3())+findLists(q.getValue4());\n        }\n        else if(Input instanceof Sextet)\n        {\n            Sextet<Object,Object,Object,Object,Object,Object> s = (Sextet<Object,Object,Object,Object,Object,Object>)Input;\n            return findLists(s.getValue0())+findLists(s.getValue1())+findLists(s.getValue2())+findLists(s.getValue3())+findLists(s.getValue4())+findLists(s.get",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + find",
    "        long count = 0;\n        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findLists(sextet.getValue1());\n            count += findLists(sextet.getValue2());\n            count += findLists(sextet.getValue3());\n            count += findLists(sextet.",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List)Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair)Input).getValue0());\n            count += findLists(((Pair)Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet)Input).getValue0());\n            count += findLists(((Triplet)Input).getValue1());\n            count += findLists(((Triplet)Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet)Input).getValue0());\n            count += findLists(((Quartet)Input).getValue1());\n            count += findLists(((Quartet)Input).getValue2());\n            count += findLists(((Quartet)Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet)Input).getValue0());\n            count += findLists(((Quintet)Input).getValue1());\n            count += findLists(((Quintet)Input).getValue2());\n            count += findLists(((Quintet)Input).getValue3());\n            count += findLists(((Quintet)Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet)Input).getValue0());\n            count += findLists(((Sextet)Input).getValue1());\n            count += findLists(((Sextet)Input).getValue2());\n            count += findLists(((Sextet)Input).getValue3());\n            count += findLists(((Sextet)Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object elem : (List) Input) {\n                count += findLists(elem);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Sept",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object item : (List) Input) {\n                count += findLists(item);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> input = (Pair<Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists(input.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> input = (Triplet<Object, Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists(input.getValue1()) + findLists(input.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> input = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists(input.getValue1()) + findLists(input.getValue2()) + findLists(input.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> input = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists(input.getValue1()) + findLists(input.getValue2()) + findLists(input.getValue3()) + findLists(input.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> input = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists(input.getValue1()) + findLists(input.getValue2()) + findLists(input.getValue3()) + findLists(input.getValue4()) + findLists(input.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> input = (Septet<Object, Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(input.getValue0()) + findLists",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue",
    "        long count = 0;\n        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findLists(sextet.getValue1());\n            count += findLists(sextet.getValue2());\n            count += findLists(sextet.getValue3());\n            count += findLists(sextet.",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> InputPair = (Pair<Object, Object>) Input;\n            return findLists(InputPair.getValue0()) + findLists(InputPair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> InputTriplet = (Triplet<Object, Object, Object>) Input;\n            return findLists(InputTriplet.getValue0()) + findLists(InputTriplet.getValue1()) + findLists(InputTriplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> InputQuartet = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(InputQuartet.getValue0()) + findLists(InputQuartet.getValue1()) + findLists(InputQuartet.getValue2()) + findLists(InputQuartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> InputQuintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(InputQuintet.getValue0()) + findLists(InputQuintet.getValue1()) + findLists(InputQuintet.getValue2()) + findLists(InputQuintet.getValue3()) + findLists(InputQuintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> InputSextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(InputSextet.getValue0()) + findLists(InputSextet.getValue1()) + findLists(InputSextet.getValue2()) + findLists(InputSextet.getValue3()) + findLists(InputSextet.getValue4()) + findLists(InputSextet.getValue5());\n        }",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object list : (List) Input) {\n                count += findLists(list);\n            }\n        }\n        return count;",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            return findLists(pair.getValue0()) + findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            return findLists(triplet.getValue0()) + findLists(triplet.getValue1()) + findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(quartet.getValue0()) + findLists(quartet.getValue1()) + findLists(quartet.getValue2()) + findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(quintet.getValue0()) + findLists(quintet.getValue1()) + findLists(quintet.getValue2()) + findLists(quintet.getValue3()) + findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(sextet.getValue0()) + findLists(sextet.getValue1()) + findLists(sextet.getValue2()) + findLists(sextet.getValue3()) + findLists(sextet.getValue4()) + findLists(sextet.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> septet = (",
    "        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>)Input;\n            for(Object o : list) {\n                count += findLists(o);\n            }\n        }\n        else if(Input instanceof Tuple) {\n            Tuple t = (Tuple)Input;\n            for(Object o : t) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object i : (List) Input) {\n                count += findLists(i);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        if(Input instanceof List){\n            return 1 + ((List)Input).stream().mapToLong(Problem::findLists).sum();\n        }else if(Input instanceof Object[]){\n            return Arrays.stream((Object[])Input).mapToLong(Problem::findLists).sum();\n        }else if(Input instanceof Pair){\n            return findLists(((Pair)Input).getValue0()) + findLists(((Pair)Input).getValue1());\n        }else if(Input instanceof Triplet){\n            return findLists(((Triplet)Input).getValue0()) + findLists(((Triplet)Input).getValue1()) + findLists(((Triplet)Input).getValue2());\n        }else if(Input instanceof Quartet){\n            return findLists(((Quartet)Input).getValue0()) + findLists(((Quartet)Input).getValue1()) + findLists(((Quartet)Input).getValue2()) + findLists(((Quartet)Input).getValue3());\n        }else if(Input instanceof Quintet){\n            return findLists(((Quintet)Input).getValue0()) + findLists(((Quintet)Input).getValue1()) + findLists(((Quintet)Input).getValue2()) + findLists(((Quintet)Input).getValue3()) + findLists(((Quintet)Input).getValue4());\n        }else if(Input instanceof Sextet){\n            return findLists(((Sextet)Input).getValue0()) + findLists(((Sextet)Input).getValue1()) + findLists(((Sextet)Input).getValue2()) + findLists(((Sextet)Input).getValue3()) + findLists(((Sextet)Input).getValue4()) + findLists(((Sextet)Input).getValue5());\n        }else if(Input instanceof Septet){\n            return",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object obj : list) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findL",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object item : (List) Input) {\n                count += findLists(item);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n        }\n        if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        }\n        if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        }\n        if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        }\n        if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        }\n        if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        }\n        if (Input instanceof Septet) {\n            count += findLists(((Septet) Input).getValue0());\n            count += findLists(((Septet) Input).",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object item : (List) Input) {\n                count += findLists(item);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if(Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if(Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if(Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if(Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if(Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findLists(sextet.getValue1());\n            count += findLists(sextet.getValue2());\n            count += findLists(sextet.getValue3());\n            count += findLists(sextet.",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            return findLists(pair.getValue0()) + findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            return findLists(triplet.getValue0()) + findLists(triplet.getValue1()) + findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(quartet.getValue0()) + findLists(quartet.getValue1()) + findLists(quartet.getValue2()) + findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(quintet.getValue0()) + findLists(quintet.getValue1()) + findLists(quintet.getValue2()) + findLists(quintet.getValue3()) + findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(sextet.getValue0()) + findLists(sextet.getValue1()) + findLists(sextet.getValue2()) + findLists(sextet.getValue3()) + findLists(sextet.getValue4()) + findLists(sextet.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> septet = (",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Tuple) {\n            for (Object o : (Tuple) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object obj : list) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findL",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object element : (List) Input) {\n                count += findLists(element);\n            }\n        }\n        return count;",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        }\n        return count;",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n        }\n        if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        }\n        if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        }\n        if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        }\n        if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        }\n        if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        }\n        if (Input instanceof Septet) {\n            count += findLists(((Septet) Input).getValue0());\n            count += findLists(((Septet) Input).",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>) Input;\n            for (Object obj : list) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>) Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>) Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(sextet.getValue0());\n            count += findL",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        }\n        return count;",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof Pair) {\n            Pair<Object, Object> p = (Pair<Object, Object>) Input;\n            return findLists(p.getValue0()) + findLists(p.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> t = (Triplet<Object, Object, Object>) Input;\n            return findLists(t.getValue0()) + findLists(t.getValue1()) + findLists(t.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> q = (Quartet<Object, Object, Object, Object>) Input;\n            return findLists(q.getValue0()) + findLists(q.getValue1()) + findLists(q.getValue2()) + findLists(q.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> q = (Quintet<Object, Object, Object, Object, Object>) Input;\n            return findLists(q.getValue0()) + findLists(q.getValue1()) + findLists(q.getValue2()) + findLists(q.getValue3()) + findLists(q.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> s = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(s.getValue0()) + findLists(s.getValue1()) + findLists(s.getValue2()) + findLists(s.getValue3()) + findLists(s.getValue4()) + findLists(s.getValue5());\n        } else if (Input instanceof Septet) {\n            Septet<Object, Object, Object, Object, Object, Object, Object> s = (Septet<Object, Object, Object, Object, Object, Object, Object>) Input;\n            return findLists(s.getValue0()) + findLists",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object obj : (List) Input) {\n                count += findLists(obj);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        long count = 0;\n        if(Input instanceof List) {\n            count++;\n            List<Object> list = (List<Object>)Input;\n            for(Object o : list) {\n                count += findLists(o);\n            }\n        }\n        else if(Input instanceof Pair) {\n            Pair<Object, Object> pair = (Pair<Object, Object>)Input;\n            count += findLists(pair.getValue0());\n            count += findLists(pair.getValue1());\n        }\n        else if(Input instanceof Triplet) {\n            Triplet<Object, Object, Object> triplet = (Triplet<Object, Object, Object>)Input;\n            count += findLists(triplet.getValue0());\n            count += findLists(triplet.getValue1());\n            count += findLists(triplet.getValue2());\n        }\n        else if(Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> quartet = (Quartet<Object, Object, Object, Object>)Input;\n            count += findLists(quartet.getValue0());\n            count += findLists(quartet.getValue1());\n            count += findLists(quartet.getValue2());\n            count += findLists(quartet.getValue3());\n        }\n        else if(Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> quintet = (Quintet<Object, Object, Object, Object, Object>)Input;\n            count += findLists(quintet.getValue0());\n            count += findLists(quintet.getValue1());\n            count += findLists(quintet.getValue2());\n            count += findLists(quintet.getValue3());\n            count += findLists(quintet.getValue4());\n        }\n        else if(Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> sextet = (Sextet<Object, Object, Object, Object, Object, Object>)Input;\n            count += findLists(sextet.",
    "        long count = 0;\n        if (Input instanceof Pair) {\n            Pair<Object, Object> p = (Pair<Object, Object>) Input;\n            count += findLists(p.getValue0());\n            count += findLists(p.getValue1());\n        } else if (Input instanceof Triplet) {\n            Triplet<Object, Object, Object> t = (Triplet<Object, Object, Object>) Input;\n            count += findLists(t.getValue0());\n            count += findLists(t.getValue1());\n            count += findLists(t.getValue2());\n        } else if (Input instanceof Quartet) {\n            Quartet<Object, Object, Object, Object> q = (Quartet<Object, Object, Object, Object>) Input;\n            count += findLists(q.getValue0());\n            count += findLists(q.getValue1());\n            count += findLists(q.getValue2());\n            count += findLists(q.getValue3());\n        } else if (Input instanceof Quintet) {\n            Quintet<Object, Object, Object, Object, Object> q = (Quintet<Object, Object, Object, Object, Object>) Input;\n            count += findLists(q.getValue0());\n            count += findLists(q.getValue1());\n            count += findLists(q.getValue2());\n            count += findLists(q.getValue3());\n            count += findLists(q.getValue4());\n        } else if (Input instanceof Sextet) {\n            Sextet<Object, Object, Object, Object, Object, Object> s = (Sextet<Object, Object, Object, Object, Object, Object>) Input;\n            count += findLists(s.getValue0());\n            count += findLists(s.getValue1());\n            count += findLists(s.getValue2());\n            count += findLists(s.getValue3());\n            count += findLists(s.getValue4());\n            count += findLists(s.getValue5());\n        } else if (Input instanceof Septet) {\n",
    "        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count += findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            count += findLists(((Septet)",
    "        if (Input instanceof List) {\n            return 1 + ((List) Input).stream().mapToLong(Problem::findLists).sum();\n        } else if (Input instanceof Pair) {\n            return findLists(((Pair) Input).getValue0()) + findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            return findLists(((Triplet) Input).getValue0()) + findLists(((Triplet) Input).getValue1()) + findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            return findLists(((Quartet) Input).getValue0()) + findLists(((Quartet) Input).getValue1()) + findLists(((Quartet) Input).getValue2()) + findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            return findLists(((Quintet) Input).getValue0()) + findLists(((Quintet) Input).getValue1()) + findLists(((Quintet) Input).getValue2()) + findLists(((Quintet) Input).getValue3()) + findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            return findLists(((Sextet) Input).getValue0()) + findLists(((Sextet) Input).getValue1()) + findLists(((Sextet) Input).getValue2()) + findLists(((Sextet) Input).getValue3()) + findLists(((Sextet) Input).getValue4()) + findLists(((Sextet) Input).getValue5());\n        } else if (Input instanceof Septet) {\n            return findLists(((Septet) Input).getValue0()) + findLists(((Septet) Input).getValue1()) + findLists(((Septet) Input).getValue2()) + findLists(((Septet) Input).getValue3()) + findLists(((Septet) Input).getValue",
    "        // Write your code here\n        // To print results to the standard output you can use System.out.println()\n        // Example: System.out.println(\"Hello world!\");\n        long count = 0;\n        if (Input instanceof List) {\n            count++;\n            for (Object o : (List) Input) {\n                count += findLists(o);\n            }\n        } else if (Input instanceof Pair) {\n            count += findLists(((Pair) Input).getValue0());\n            count += findLists(((Pair) Input).getValue1());\n        } else if (Input instanceof Triplet) {\n            count += findLists(((Triplet) Input).getValue0());\n            count += findLists(((Triplet) Input).getValue1());\n            count += findLists(((Triplet) Input).getValue2());\n        } else if (Input instanceof Quartet) {\n            count += findLists(((Quartet) Input).getValue0());\n            count += findLists(((Quartet) Input).getValue1());\n            count += findLists(((Quartet) Input).getValue2());\n            count += findLists(((Quartet) Input).getValue3());\n        } else if (Input instanceof Quintet) {\n            count += findLists(((Quintet) Input).getValue0());\n            count += findLists(((Quintet) Input).getValue1());\n            count += findLists(((Quintet) Input).getValue2());\n            count += findLists(((Quintet) Input).getValue3());\n            count += findLists(((Quintet) Input).getValue4());\n        } else if (Input instanceof Sextet) {\n            count += findLists(((Sextet) Input).getValue0());\n            count += findLists(((Sextet) Input).getValue1());\n            count += findLists(((Sextet) Input).getValue2());\n            count += findLists(((Sextet) Input).getValue3());\n            count += findLists(((Sextet) Input).getValue4());\n            count"
  ]
}
{
  "name": "mbpp_102_snake_to_camel",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to convert a snake case string to camel case string.\n    public static String snakeToCamel(String word) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_102_snake_to_camel.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(snakeToCamel((\"python_program\")).equals((\"PythonProgram\")));\n    assert(snakeToCamel((\"python_language\")).equals((\"PythonLanguage\")));\n    assert(snakeToCamel((\"programming_language\")).equals((\"ProgrammingLanguage\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            sb.append(Character.toUpperCase(words[i].charAt(0)));\n            sb.append(words[i].substring(1));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n            }\n        }\n        return sb.toString();",
    "        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            sb.append(words[i].substring(0, 1).toUpperCase() + words[i].substring(1));\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            if (word.charAt(i) == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(word.charAt(i));\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(++i)));\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.length(); i++) {\n            char c = word.charAt(i);\n            if (c == '_') {\n                sb.append(Character.toUpperCase(word.charAt(i + 1)));\n                i++;\n            } else {\n                sb.append(c);\n            }\n        }\n        return sb.toString();",
    "        StringBuilder sb = new StringBuilder();\n        String[] words = word.split(\"_\");\n        for (int i = 0; i < words.length; i++) {\n            if (i == 0) {\n                sb.append(words[i]);\n            } else {\n                sb.append(words[i].substring(0, 1).toUpperCase());\n                sb.append(words[i].substring(1));\n            }\n        }\n        return sb.toString();"
  ]
}
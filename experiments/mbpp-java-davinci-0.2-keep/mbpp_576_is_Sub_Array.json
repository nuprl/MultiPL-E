{
  "name": "mbpp_576_is_Sub_Array",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to check whether a list is sublist of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        int n = A.size();\n        int m = B.size();\n        if (n > m) {\n            return false;\n        }\n        for (int i = 0; i <= m - n; i++) {\n            int j;\n            for (j = 0; j < n; j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    break;\n                }\n            }\n            if (j == n) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                int j = 1;\n                for (; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        break;\n                    }\n                }\n                if (j == A.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0).equals(B.get(i))) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!A.get(j).equals(B.get(i + j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();",
    "        for (int i = 0; i < A.size(); i++) {\n            if (A.get(i) == B.get(0)) {\n                int j = 0;\n                while (j < B.size() && i + j < A.size() && A.get(i + j) == B.get(j)) {\n                    j++;\n                }\n                if (j == B.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;"
  ]
}
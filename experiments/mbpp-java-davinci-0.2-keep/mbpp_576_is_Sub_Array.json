{
  "name": "mbpp_576_is_Sub_Array",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to check whether a list is sublist of another or not.\n    public static boolean isSubArray(ArrayList<Long> A, ArrayList<Long> B) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l, (long)3l, (long)5l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))) == (false));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l))), (new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)1l)))) == (true));\n    assert(isSubArray((new ArrayList<Long>(Arrays.asList((long)1l, (long)0l, (long)2l, (long)2l))), (new ArrayList<Long>(Arrays.asList((long)2l, (long)2l, (long)0l)))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        int n = A.size();\n        int m = B.size();\n        if (n > m) {\n            return false;\n        }\n        for (int i = 0; i <= m - n; i++) {\n            int j;\n            for (j = 0; j < n; j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    break;\n                }\n            }\n            if (j == n) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                int j = 1;\n                for (; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        break;\n                    }\n                }\n                if (j == A.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0).equals(B.get(i))) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!A.get(j).equals(B.get(i + j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();",
    "        for (int i = 0; i < A.size(); i++) {\n            if (A.get(i) == B.get(0)) {\n                int j = 0;\n                while (j < B.size() && i + j < A.size() && A.get(i + j) == B.get(j)) {\n                    j++;\n                }\n                if (j == B.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean found = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (n < m) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (!A.get(j).equals(B.get(i + j))) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        return i == A.size();",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            int j = 0;\n            while (j < A.size() && B.get(i + j) == A.get(j)) {\n                j++;\n            }\n            if (j == A.size()) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        // A is a subarray of B iff A is a subsequence of B\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[i1] = B[i1], A[i2] = B[i2], ..., A[ik] = B[ik]\n        // A is a subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        // A is a subarray of B iff A is a subsequence of B\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n            }\n            j++;\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) return false;\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while(i < A.size() && j < B.size()) {\n            if(A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if(j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int n = A.size();\n        int m = B.size();\n        if (n < m) {\n            return false;\n        }\n        for (int i = 0; i < n - m + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (!A.get(j).equals(B.get(i + j))) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0).equals(B.get(i))) {\n                boolean flag = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!A.get(j).equals(B.get(i + j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n            }\n            j++;\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n            }\n            j++;\n        }\n        return i == A.size();",
    "        if (A.size() == 0)\n            return true;\n        if (B.size() == 0)\n            return false;\n        if (A.size() > B.size())\n            return false;\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size())\n            return true;\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            int j = 0;\n            for (; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    break;\n                }\n            }\n            if (j == A.size()) {\n                return true;\n            }\n        }\n        return false;",
    "        for (int i = 0; i < B.size(); i++) {\n            if (A.get(0).equals(B.get(i))) {\n                int j = 0;\n                int k = i;\n                while (j < A.size() && k < B.size() && A.get(j).equals(B.get(k))) {\n                    j++;\n                    k++;\n                }\n                if (j == A.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (m > n) {\n            return false;\n        }\n        for (int i = 0; i < n - m + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < B.size() && j < A.size()) {\n            if (A.get(j).equals(B.get(i))) {\n                j++;\n            }\n            i++;\n        }\n        return j == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                boolean found = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                boolean isSubArray = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean flag = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        return i == A.size();",
    "        int n = A.size();\n        int m = B.size();\n        if (m > n) return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) break;\n            }\n            if (j == m) return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSub = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (n < m) {\n            return false;\n        }\n        for (int i = 0; i < n - m + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.subList(i, i + A.size()).equals(A)) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() == 0) return true;\n        if (B.size() == 0) return false;\n        if (A.size() > B.size()) return false;\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.subList(i, i + A.size()).equals(A)) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (B.size() > A.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            int j = 0;\n            while (j < A.size() && A.get(j).equals(B.get(i + j))) j++;\n            if (j == A.size()) return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (n < m) {\n            return false;\n        }\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0).equals(B.get(i))) {\n                boolean isSubArray = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!A.get(j).equals(B.get(i + j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size(); i++) {\n            if (B.get(i) == A.get(0)) {\n                boolean found = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (B.get(i + j) != A.get(j)) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        // A is a subarray of B iff A is a contiguous subsequence of B.\n        // A is a contiguous subsequence of B iff there exists a sequence of indices i1, i2, ..., ik such that\n        // A[j] = B[i1 + j], for j = 0, 1, ..., k - 1.\n        // We can check this by iterating through B and checking if A is a subsequence of B[i:].\n        for (int i = 0; i < B.size(); i++) {\n            if (isSubSequence(A, B, i)) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n            }\n            j++;\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0).equals(B.get(i))) {\n                int j = 0;\n                while (j < A.size() && A.get(j).equals(B.get(i + j))) {\n                    j++;\n                }\n                if (j == A.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (n < m) return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j = 0;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) break;\n            }\n            if (j == m) return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                boolean isSubArray = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        for (int i = 0; i < B.size(); i++) {\n            if (A.get(0) == B.get(i)) {\n                for (int j = 0; j < A.size(); j++) {\n                    if (A.get(j) != B.get(i + j)) {\n                        break;\n                    }\n                    if (j == A.size() - 1) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i <= B.size() - A.size(); i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size(); i++) {\n            if (B.get(i) == A.get(0)) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (B.get(i + j) != A.get(j)) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.size();",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();",
    "        if (A.size() > B.size()) return false;\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        return i == A.size();",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 0; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (m > n) return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A.get(i + j) != B.get(j)) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean flag = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean found = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        if (n < m)\n            return false;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A.get(i + j) != B.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSub = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (B.get(i + j) != A.get(j)) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() == 0) {\n            return true;\n        }\n        if (B.size() == 0) {\n            return false;\n        }\n        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < B.size() && j < A.size()) {\n            if (A.get(j) == B.get(i)) {\n                j++;\n            }\n            i++;\n        }\n        return j == A.size();",
    "        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.get(0) == B.get(i)) {\n                int j = 1;\n                while (j < A.size() && A.get(j) == B.get(i + j)) {\n                    j++;\n                }\n                if (j == A.size()) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (B.get(i).equals(A.get(0))) {\n                boolean isSubArray = true;\n                for (int j = 1; j < A.size(); j++) {\n                    if (!B.get(i + j).equals(A.get(j))) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            if (A.equals(new ArrayList<Long>(B.subList(i, i + A.size())))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.size();",
    "        int i = 0;\n        int j = 0;\n        int n = A.size();\n        int m = B.size();\n        while (i < n && j < m) {\n            if (A.get(i).equals(B.get(j))) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == m) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.size()) {\n            return true;\n        }\n        return false;",
    "        if (A.size() > B.size()) {\n            return false;\n        }\n        for (int i = 0; i < B.size() - A.size() + 1; i++) {\n            boolean isSubArray = true;\n            for (int j = 0; j < A.size(); j++) {\n                if (A.get(j) != B.get(i + j)) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.size();\n        int m = B.size();\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A.get(i + j) != B.get(j))\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.size()) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.size() && j < B.size()) {\n            if (A.get(i) == B.get(j)) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return j == B.size();"
  ]
}
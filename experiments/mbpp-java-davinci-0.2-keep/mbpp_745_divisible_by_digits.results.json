{
  "name": "mbpp_745_divisible_by_digits",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            long num = i;\n            boolean isDivisible = true;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpdqzrhin9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                ans.add(i);\n            } else {\n                boolean flag = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0) {\n                        flag = false;\n                        break;\n                    }\n                    if (i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (flag) {\n                    ans.add(i);\n                }\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpngqr1o2w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c != '0' && i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmptcb4d6bz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp9ze2t1ci.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpdhcxx4ee.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgn4kfnup.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp5ndh8h62.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp67b7qre1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp9ze2t1ci.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp0lslumqb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpwybqt20_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (divisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxqo8oa3g.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpxqo8oa3g.java:13: error: method divisibleByDigits in class Problem cannot be applied to given types;\n            if (divisibleByDigits(i)) {\n                ^\n  required: long,long\n  found:    long\n  reason: actual and formal argument lists differ in length\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgn4kfnup.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp2dncliq6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpd947lai9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmposs4ap_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) continue;\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) res.add(i);\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp8ghd7v26.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpo9rl5chu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) continue;\n            boolean flag = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (flag) ans.add(i);\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpq7dw7f_h.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqwbc4xeh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (i % Character.getNumericValue(s.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpfl4_h621.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpm166exxe.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpy8r1qmv8.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp5e_chazs.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisible(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp2_tp2so6.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmp2_tp2so6.java:13: error: cannot find symbol\n            if (isDivisible(i)) {\n                ^\n  symbol:   method isDivisible(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpe3yyfbp3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpo9rl5chu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpjjxtvclq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp7mdx01fi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpn4_cd6b3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) continue;\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) res.add(i);\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpoqbq32gi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % Integer.parseInt(String.valueOf(c)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                res.add(i);\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp__0il6mr.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            for (char c : Long.toString(i).toCharArray()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp8kno1o3a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpkv3t9tvp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpux8_lt32.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgn4kfnup.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpn4_cd6b3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) continue;\n            if (i % 100 == 0) continue;\n            if (i % 1000 == 0) continue;\n            if (i % 10000 == 0) continue;\n            if (i % 100000 == 0) continue;\n            if (i % 1000000 == 0) continue;\n            if (i % 10000000 == 0) continue;\n            if (i % 100000000 == 0) continue;\n            if (i % 1000000000 == 0) continue;\n            if (i % 10000000000L == 0) continue;\n            if (i % 100000000000L == 0) continue;\n            if (i % 1000000000000L == 0) continue;\n            if (i % 10000000000000L == 0) continue;\n            if (i % 100000000000000L == 0) continue;\n            if (i % 1000000000000000L == 0) continue;\n            if (i % 10000000000000000L == 0) continue;\n            if (i % 100000000000000000L == 0) continue;\n            if (i % 1000000000000000000L == 0) continue;\n            if (i % 10000000000000000000L == 0) continue;\n            if (i % 100000000000000000000L == 0) continue;\n            if (i % 1000000000000000000000L == 0) continue;\n            if (i % 10000000000000000000000L == 0) continue;\n            if (i % 100000000000000000000000L == 0) continue;\n            if (i % 1000000000000000000000000L == 0) continue;\n            if (i % 10000000000000000000000000L == 0) continue;\n            if (i % 100000000000000000000000000L == 0) continue;\n            if (i % 1000000000000000000000000000L == 0) continue;\n            if (i % 10000000000000000000000000000L == 0) continue;\n            if (i % 100000000000000000000000000000L == 0) continue;\n            if (i % 1000000000000000000000000000000L == 0) continue;\n            if (i % 10000000000000000000000000000000L == 0) continue;\n            if (i % 100000000000000000000000000000000L == 0) continue;\n            if (i % 1000000000000000000000000000000000L == 0) continue;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp3u9okw9t.java:31: error: integer number too large\n            if (i % 10000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:32: error: integer number too large\n            if (i % 100000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:33: error: integer number too large\n            if (i % 1000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:34: error: integer number too large\n            if (i % 10000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:35: error: integer number too large\n            if (i % 100000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:36: error: integer number too large\n            if (i % 1000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:37: error: integer number too large\n            if (i % 10000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:38: error: integer number too large\n            if (i % 100000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:39: error: integer number too large\n            if (i % 1000000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:40: error: integer number too large\n            if (i % 10000000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:41: error: integer number too large\n            if (i % 100000000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:42: error: integer number too large\n            if (i % 1000000000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:43: error: integer number too large\n            if (i % 10000000000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:44: error: integer number too large\n            if (i % 100000000000000000000000000000000L == 0) continue;\n                    ^\n/tmp/tmp3u9okw9t.java:45:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp4rfvky41.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                long temp = i;\n                boolean divisible = true;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        divisible = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (divisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqr_qraw1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpjjxtvclq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                res.add(i);\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpwjnrmowa.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpo9rl5chu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Integer.parseInt(String.valueOf(c)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpbbgnosik.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpgs2z_swl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgn4kfnup.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmprt49sdzq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String str = Long.toString(i);\n            for (int j = 0; j < str.length(); j++) {\n                if (str.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (str.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpfgazo9c1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) continue;\n            boolean flag = true;\n            long temp = i;\n            while (temp > 0) {\n                if (i % (temp % 10) != 0) {\n                    flag = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (flag) res.add(i);\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp5p0dnjws.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpj0l32zyf.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String s = Long.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp72ao_zhc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpvgsenpp2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpiz2u1997.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(c) != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp9mr7o920.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpl6492zm9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> divisible = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisibleByDigits = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    divisibleByDigits = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    divisibleByDigits = false;\n                    break;\n                }\n            }\n            if (divisibleByDigits) {\n                divisible.add(i);\n            }\n        }\n        return divisible;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp7ubod7gu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpxsz5lj0k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpneaclk45.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = String.valueOf(i);\n            for (int j = 0; j < num.length(); j++) {\n                int digit = Integer.parseInt(num.substring(j, j + 1));\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp618pu39b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp2bimqsge.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> divisible = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisibleByDigits = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    divisibleByDigits = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisibleByDigits = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisibleByDigits) {\n                divisible.add(i);\n            }\n        }\n        return divisible;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmpippzfcgq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpblgbtd7w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp0lslumqb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = String.valueOf(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Integer.parseInt(num.substring(j, j + 1)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp0b0okwf3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp8kq10q82.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean divisible = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpv_193wmk.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = String.valueOf(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp74hhxip0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmposs4ap_u.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            String num = String.valueOf(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpqdbsl0wc.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = Long.toString(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) != '0' && i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible)\n                result.add(i);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp5d9ofzei.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean divisible = true;\n            for (int j = 0; j < num.length(); j++) {\n                long digit = Long.parseLong(num.substring(j, j + 1));\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp3zqaqw4i.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean ok = true;\n            for (char c : Long.toString(i).toCharArray()) {\n                if (c == '0') {\n                    ok = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    ok = false;\n                    break;\n                }\n            }\n            if (ok) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmphvmvl6s7.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp2_suqubq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                int digit = Character.getNumericValue(s.charAt(j));\n                if (digit == 0) {\n                    flag = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpma8yg7gg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = String.valueOf(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmpac8gh6kg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (i % Character.getNumericValue(s.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmplq9hdj49.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            String s = Long.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp39093jcx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                res.add(i);\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122544,
      "stdout": "",
      "stderr": "/tmp/tmp30pysb6d.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> divisible = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisibleByAll = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    divisibleByAll = false;\n                    break;\n                }\n            }\n            if (divisibleByAll) {\n                divisible.add(i);\n            }\n        }\n        return divisible;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmp38npv7c5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpa6vz_2hm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpfycjv66t.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmp4rfvky41.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            String s = Long.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpkbuhxo6y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long current = i;\n            while (current > 0) {\n                long digit = current % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                current /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpnszujsy3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag)\n                result.add(i);\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpc2p344zd.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpq3gvxq26.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                int digit = Character.getNumericValue(s.charAt(j));\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmppgllk5cz.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (i % Character.getNumericValue(s.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpww8syuzx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpux8_lt32.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    if (i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpkwswcjv2.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpgs2z_swl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String str = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < str.length(); j++) {\n                if (i % Character.getNumericValue(str.charAt(j)) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpx5dj7eaq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpsfdx1mrn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            String s = Long.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmp_cxzulr5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpdj5d8r_z.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmp4tu98uc3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                int digit = Integer.parseInt(s.substring(j, j + 1));\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp2axo_ans.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpux8_lt32.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                res.add(i);\n            } else {\n                long num = i;\n                boolean flag = true;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (flag) {\n                    res.add(i);\n                }\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp2ib8adoq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    if (i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmprigbqv3n.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = String.valueOf(i);\n            for (int j = 0; j < num.length(); j++) {\n                int digit = Integer.parseInt(num.substring(j, j + 1));\n                if (digit != 0 && i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmp618pu39b.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpxsz5lj0k.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpl6492zm9.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpc6ufl46e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num = num / 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpg_4eg1ok.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpe3yyfbp3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpyet426q4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp_2poilvv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            String s = Long.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpkbuhxo6y.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqwbc4xeh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> list = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                list.add(i);\n            }\n        }\n        return list;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpzzdlqjwi.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp7fqzkgvu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp0lslumqb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                res.add(i);\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpahq39zfv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp0dpgulya.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmptcgd4gcg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp3zgjak5e.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpy6v6rewh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpy6v6rewh.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (long j = i; j > 0; j /= 10) {\n                if (i % (j % 10) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) ans.add(i);\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpo452x29w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String numStr = String.valueOf(i);\n            for (int j = 0; j < numStr.length(); j++) {\n                int digit = Character.getNumericValue(numStr.charAt(j));\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp6p_hdukl.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpblgbtd7w.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) continue;\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    divisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) ret.add(i);\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp65mm32pu.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            for (char c : Long.toString(i).toCharArray()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmphps1lx_c.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            String num = Long.toString(i);\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) != '0' && i % Character.getNumericValue(num.charAt(j)) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp6kby1699.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> out = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0' || i % (c - '0') != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                out.add(i);\n            }\n        }\n        return out;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpyepsezcj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122545,
      "stdout": "",
      "stderr": "/tmp/tmpsfdx1mrn.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpshz2s3bv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp9ze2t1ci.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpshz2s3bv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqwbc4xeh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpwybqt20_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgn4kfnup.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ans = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                ans.add(i);\n            }\n        }\n        return ans;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpe_qd24nx.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpe_qd24nx.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            for (char c : String.valueOf(i).toCharArray()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (c - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpxb4954na.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpzc3l5v1v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqwbc4xeh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmp_pij2r_a.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String s = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (s.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpshz2s3bv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpjjxtvclq.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            long n = i;\n            while (n > 0) {\n                long d = n % 10;\n                if (d == 0 || i % d != 0) {\n                    flag = false;\n                    break;\n                }\n                n /= 10;\n            }\n            if (flag) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmp1b4zxbcy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpy6v6rewh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpy6v6rewh.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for (char c : Long.toString(i).toCharArray()) {\n                if (c == '0' || i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmp9z63n0eb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp != 0) {\n                long digit = temp % 10;\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpkdtufxvm.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean flag = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (flag) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpb5losjl1.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp_2poilvv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (isDivisibleByDigits(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpgjnlzw6_.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n/tmp/tmpgjnlzw6_.java:13: error: cannot find symbol\n            if (isDivisibleByDigits(i)) {\n                ^\n  symbol:   method isDivisibleByDigits(long)\n  location: class Problem\n2 errors\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqwbc4xeh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                ret.add(i);\n            } else {\n                boolean flag = true;\n                long temp = i;\n                while (temp != 0) {\n                    long digit = temp % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (flag) {\n                    ret.add(i);\n                }\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpmlqv1xzv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num = num / 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpg_4eg1ok.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmp_2poilvv.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean flag = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (flag) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmprx4g3_4j.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmp0lslumqb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean isDivisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0 || i % digit != 0) {\n                        isDivisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (isDivisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpqwbc4xeh.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpdfmwzdj5.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean divisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpycm2drns.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            String str = Long.toString(i);\n            boolean flag = true;\n            for (int j = 0; j < str.length(); j++) {\n                if (str.charAt(j) == '0') {\n                    flag = false;\n                    break;\n                }\n                if (i % (str.charAt(j) - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpkmopvpm4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpzc3l5v1v.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122543,
      "stdout": "",
      "stderr": "/tmp/tmpneaclk45.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean flag = true;\n            for (int j = 0; j < num.length(); j++) {\n                int digit = Integer.parseInt(num.substring(j, j + 1));\n                if (digit != 0 && i % digit != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpb6moh8g0.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> res = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                res.add(i);\n            } else {\n                boolean flag = true;\n                long temp = i;\n                while (temp > 0) {\n                    long digit = temp % 10;\n                    if (digit == 0) {\n                        flag = false;\n                        break;\n                    }\n                    if (i % digit != 0) {\n                        flag = false;\n                        break;\n                    }\n                    temp /= 10;\n                }\n                if (flag) {\n                    res.add(i);\n                }\n            }\n        }\n        return res;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmptkibiylj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            String num = String.valueOf(i);\n            boolean isDivisible = true;\n            for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j) == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % (num.charAt(j) - '0') != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpsxzlfou3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122546,
      "stdout": "",
      "stderr": "/tmp/tmpyet426q4.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for(long i = startnum; i <= endnum; i++) {\n            boolean flag = true;\n            for(char c : Long.toString(i).toCharArray()) {\n                if(c != '0' && i % (c - '0') != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if(flag) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpzggryzyb.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            long temp = i;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    divisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (divisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122542,
      "stdout": "",
      "stderr": "/tmp/tmpe3yyfbp3.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            long num = i;\n            boolean isDivisible = true;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0) {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpvek3diaj.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean divisible = true;\n            for (char c : Long.toString(i).toCharArray()) {\n                if (c == '0') {\n                    divisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(c) != 0) {\n                    divisible = false;\n                    break;\n                }\n            }\n            if (divisible) {\n                ret.add(i);\n            }\n        }\n        return ret;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpvw2rdwdp.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i < 10) {\n                result.add(i);\n            } else {\n                boolean divisible = true;\n                long num = i;\n                while (num > 0) {\n                    long digit = num % 10;\n                    if (digit == 0) {\n                        divisible = false;\n                        break;\n                    }\n                    if (i % digit != 0) {\n                        divisible = false;\n                        break;\n                    }\n                    num /= 10;\n                }\n                if (divisible) {\n                    result.add(i);\n                }\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmphbfw_6dg.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            for (char c : Long.toString(i).toCharArray()) {\n                if (c == '0') {\n                    isDivisible = false;\n                    break;\n                }\n                if (i % Character.getNumericValue(c) != 0) {\n                    isDivisible = false;\n                    break;\n                }\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmpnxiytvzy.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<Long>();\n        for (long i = startnum; i <= endnum; i++) {\n            if (i % 10 == 0) {\n                continue;\n            }\n            long temp = i;\n            boolean isDivisible = true;\n            while (temp > 0) {\n                long digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                temp /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1666122547,
      "stdout": "",
      "stderr": "/tmp/tmp_5qe8nka.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/python-exercises/lambda/python-lambda-exercise-24.php\n    public static ArrayList<Long> divisibleByDigits(long startnum, long endnum) {\n        ArrayList<Long> result = new ArrayList<>();\n        for (long i = startnum; i <= endnum; i++) {\n            boolean isDivisible = true;\n            long num = i;\n            while (num > 0) {\n                long digit = num % 10;\n                if (digit == 0 || i % digit != 0) {\n                    isDivisible = false;\n                    break;\n                }\n                num /= 10;\n            }\n            if (isDivisible) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n    public static void main(String[] args) {\n    assert(divisibleByDigits((1l), (22l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l, (long)22l)))));\n    assert(divisibleByDigits((1l), (15l)).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l, (long)4l, (long)5l, (long)6l, (long)7l, (long)8l, (long)9l, (long)11l, (long)12l, (long)15l)))));\n    assert(divisibleByDigits((20l), (25l)).equals((new ArrayList<Long>(Arrays.asList((long)22l, (long)24l)))));\n    }\n\n}\n",
      "timestamp": 1665509876,
      "stdout": "",
      "stderr": "/tmp/tmpxw2kqv68.java:3: error: package org.javatuples does not exist\nimport org.javatuples.*;\n^\n1 error\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "mbpp_460_Extract",
  "language": "java",
  "prompt": "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\nimport java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\nclass Problem {\n    // Write a python function to get the first element of each sublist.\n    public static ArrayList<Long> Extract(ArrayList<ArrayList<Long>> lst) {\n",
  "doctests": "keep",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_460_Extract.py",
  "prompt_terminology": "verbatim",
  "tests": "    }\n    public static void main(String[] args) {\n    assert(Extract((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)3l, (long)4l, (long)5l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)6l, (long)7l, (long)8l, (long)9l)))))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)3l, (long)6l)))));\n    assert(Extract((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l, (long)3l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)4l, (long)5l)))))).equals((new ArrayList<Long>(Arrays.asList((long)1l, (long)4l)))));\n    assert(Extract((new ArrayList<ArrayList<Long>>(Arrays.asList((ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)9l, (long)8l, (long)1l)), (ArrayList<Long>)new ArrayList<Long>(Arrays.asList((long)1l, (long)2l)))))).equals((new ArrayList<Long>(Arrays.asList((long)9l, (long)1l)))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        ArrayList<Long> result = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            res.add(sublist.get(0));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<>();\n        for (ArrayList<Long> l : lst) {\n            res.add(l.get(0));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> res = new ArrayList<>();\n        for (ArrayList<Long> sublst : lst) {\n            res.add(sublst.get(0));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> ret = new ArrayList<Long>();\n        for (ArrayList<Long> sublist: lst) {\n            ret.add(sublist.get(0));\n        }\n        return ret;",
    "        ArrayList<Long> res = new ArrayList<>();\n        for (ArrayList<Long> sublist : lst) {\n            res.add(sublist.get(0));\n        }\n        return res;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;",
    "        ArrayList<Long> result = new ArrayList<Long>();\n        for (ArrayList<Long> sublist : lst) {\n            result.add(sublist.get(0));\n        }\n        return result;"
  ]
}